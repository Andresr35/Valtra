{"version":3,"file":"static/js/main.ed390f28.js","mappings":"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","sources":["../node_modules/axios/index.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/utils.js","../node_modules/classnames/index.js","../node_modules/invariant/browser.js","../node_modules/prop-types-extra/lib/all.js","../node_modules/prop-types-extra/lib/utils/createChainableTypeChecker.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-csv/index.js","../node_modules/react-csv/lib/components/Download.js","../node_modules/react-csv/lib/components/Link.js","../node_modules/react-csv/lib/core.js","../node_modules/react-csv/lib/index.js","../node_modules/react-csv/lib/metaProps.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/warning/warning.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/react-bootstrap/esm/Container.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/structure/Version.jsx","api/ProductFinder.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","context/ProductsContext.js","components/DBAddProduct.jsx","components/structure/Header.jsx","../node_modules/@restart/ui/esm/SelectableContext.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/uncontrollable/lib/esm/utils.js","../node_modules/uncontrollable/lib/esm/hook.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/NavbarBrand.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/dom-helpers/esm/getComputedStyle.js","../node_modules/dom-helpers/esm/ownerWindow.js","../node_modules/dom-helpers/esm/hyphenate.js","../node_modules/dom-helpers/esm/hyphenateStyle.js","../node_modules/dom-helpers/esm/isTransform.js","../node_modules/dom-helpers/esm/css.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/transitionEnd.js","../node_modules/dom-helpers/esm/triggerEvent.js","../node_modules/react-bootstrap/esm/transitionEndListener.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/triggerBrowserReflow.js","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/react-bootstrap/esm/TransitionWrapper.js","../node_modules/react-bootstrap/esm/safeFindDOMNode.js","../node_modules/react-bootstrap/esm/Collapse.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/react-bootstrap/esm/NavbarCollapse.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/react-bootstrap/esm/NavbarToggle.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/hooks/esm/useMediaQuery.js","../node_modules/@restart/hooks/esm/useBreakpoint.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/OffcanvasBody.js","../node_modules/react-bootstrap/esm/OffcanvasToggling.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/OffcanvasHeader.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/OffcanvasTitle.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/Offcanvas.js","../node_modules/react-bootstrap/esm/NavbarOffcanvas.js","../node_modules/react-bootstrap/esm/Navbar.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/@restart/ui/esm/TabContext.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/@restart/ui/esm/NavItem.js","../node_modules/@restart/ui/esm/Nav.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/NavItem.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/react-bootstrap/esm/NavLink.js","../node_modules/react-bootstrap/esm/Nav.js","../node_modules/@azure/msal-common/src/utils/Constants.ts","../node_modules/@azure/msal-browser/src/utils/BrowserConstants.ts","../node_modules/@azure/msal-common/src/error/AuthError.ts","../node_modules/@azure/msal-browser/src/error/BrowserConfigurationAuthError.ts","../node_modules/@azure/msal-browser/src/app/IPublicClientApplication.ts","../node_modules/@azure/msal-common/src/logger/Logger.ts","../node_modules/@azure/msal-common/src/error/ClientAuthError.ts","../node_modules/@azure/msal-common/src/utils/StringUtils.ts","../node_modules/@azure/msal-browser/src/event/EventType.ts","../node_modules/@azure/msal-common/src/authority/AuthorityType.ts","../node_modules/@azure/msal-browser/src/event/EventMessage.ts","../node_modules/@azure/msal-common/src/account/ClientInfo.ts","../node_modules/@azure/msal-common/src/cache/entities/AccountEntity.ts","../node_modules/@azure/msal-common/src/error/InteractionRequiredAuthError.ts","../node_modules/@azure/msal-react/src/MsalContext.ts","../node_modules/@azure/msal-react/src/utils/utilities.ts","../node_modules/@azure/msal-react/src/packageMetadata.ts","../node_modules/@azure/msal-react/src/MsalProvider.tsx","../node_modules/@azure/msal-react/src/hooks/useMsal.ts","../node_modules/@azure/msal-react/src/hooks/useIsAuthenticated.ts","../node_modules/@azure/msal-react/src/components/AuthenticatedTemplate.tsx","../node_modules/@azure/msal-react/src/components/UnauthenticatedTemplate.tsx","../node_modules/@azure/msal-react/src/hooks/useAccount.ts","../node_modules/@azure/msal-react/src/error/ReactAuthError.ts","../node_modules/@azure/msal-react/src/components/MsalAuthenticationTemplate.tsx","../node_modules/@azure/msal-react/src/hooks/useMsalAuthentication.ts","../node_modules/@azure/msal-react/src/components/withMsal.tsx","authentication/authConfig.js","../node_modules/react-bootstrap/esm/Button.js","components/SignInButton.jsx","components/SignOutButton.jsx","components/structure/NavBar.jsx","../../packages/react-router/lib/context.ts","../../packages/react-router/lib/router.ts","../../packages/react-router/lib/hooks.tsx","../../packages/react-router/lib/components.tsx","components/DBProducts.jsx","routes/Home.jsx","components/UpdateProduct.jsx","routes/UpdateProducts.jsx","../../packages/react-router-dom/index.tsx","api/ShopifyRequest.js","context/OrdersContext.js","fetch.js","components/ShopifyOrders.jsx","routes/OrderPage.jsx","../node_modules/react-bootstrap/esm/Alert.js","components/Fulfill.jsx","routes/FulfillingOrders.jsx","context/VariantsContext.js","assets/images/logo.svg","../node_modules/dom-helpers/esm/scrollbarSize.js","routes/SignInPage.jsx","../node_modules/react-bootstrap/esm/Table.js","components/ShopProducts.jsx","routes/ShopifyProducts.jsx","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","components/ShopifyVariants.jsx","routes/Variants.jsx","assets/images/valtra_logo.svg","../node_modules/@azure/msal-common/src/telemetry/performance/PerformanceEvent.ts","routes/SignOut.jsx","routes/Downloads.jsx","routes/Documentation.jsx","routes/DocumentationRestricted.jsx","routes/Updates.jsx","components/DataDisplay.jsx","routes/Hello.jsx","App.jsx","authentication/reportWebVitals.js","../node_modules/@azure/msal-browser/src/crypto/CryptoOps.ts","../node_modules/@azure/msal-common/src/error/JoseHeaderError.ts","../node_modules/@azure/msal-common/src/crypto/JoseHeader.ts","../node_modules/@azure/msal-browser/src/utils/MathUtils.ts","../node_modules/@azure/msal-browser/src/crypto/GuidGenerator.ts","../node_modules/@azure/msal-browser/src/utils/BrowserStringUtils.ts","../node_modules/@azure/msal-browser/src/encode/Base64Encode.ts","../node_modules/@azure/msal-browser/src/encode/Base64Decode.ts","../node_modules/@azure/msal-browser/src/error/BrowserAuthError.ts","../node_modules/@azure/msal-browser/src/crypto/PkceGenerator.ts","../node_modules/@azure/msal-browser/src/crypto/BrowserCrypto.ts","../node_modules/@azure/msal-browser/src/cache/DatabaseStorage.ts","../node_modules/@azure/msal-browser/src/cache/MemoryStorage.ts","../node_modules/@azure/msal-browser/src/cache/AsyncMemoryStorage.ts","../node_modules/@azure/msal-common/src/account/CcsCredential.ts","../node_modules/@azure/msal-common/src/telemetry/performance/PerformanceClient.ts","../node_modules/@azure/msal-common/src/telemetry/performance/StubPerformanceClient.ts","../node_modules/@azure/msal-common/src/crypto/ICrypto.ts","../node_modules/@azure/msal-common/src/error/ServerError.ts","../node_modules/@azure/msal-common/src/cache/entities/CredentialEntity.ts","../node_modules/@azure/msal-common/src/error/ClientConfigurationError.ts","../node_modules/@azure/msal-common/src/request/ScopeSet.ts","../node_modules/@azure/msal-common/src/account/AuthToken.ts","../node_modules/@azure/msal-common/src/cache/CacheManager.ts","../node_modules/@azure/msal-common/src/cache/entities/IdTokenEntity.ts","../node_modules/@azure/msal-common/src/utils/TimeUtils.ts","../node_modules/@azure/msal-common/src/cache/entities/AccessTokenEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/RefreshTokenEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/AppMetadataEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/ServerTelemetryEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/AuthorityMetadataEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/ThrottlingEntity.ts","../node_modules/@azure/msal-common/src/utils/ProtocolUtils.ts","../node_modules/@azure/msal-common/src/authority/ProtocolMode.ts","../node_modules/@azure/msal-common/src/authority/AuthorityOptions.ts","../node_modules/@azure/msal-browser/src/cache/BrowserStorage.ts","../node_modules/@azure/msal-common/src/url/UrlString.ts","../node_modules/@azure/msal-browser/src/utils/BrowserProtocolUtils.ts","../node_modules/@azure/msal-browser/src/cache/BrowserCacheManager.ts","../node_modules/@azure/msal-common/src/packageMetadata.ts","../node_modules/@azure/msal-common/src/config/ClientConfiguration.ts","../node_modules/@azure/msal-common/src/network/INetworkModule.ts","../node_modules/@azure/msal-browser/src/network/FetchClient.ts","../node_modules/@azure/msal-browser/src/network/XhrClient.ts","../node_modules/@azure/msal-browser/src/utils/BrowserUtils.ts","../node_modules/@azure/msal-browser/src/navigation/NavigationClient.ts","../node_modules/@azure/msal-browser/src/config/Configuration.ts","../node_modules/@azure/msal-common/src/crypto/PopTokenGenerator.ts","../node_modules/@azure/msal-browser/src/packageMetadata.ts","../node_modules/@azure/msal-browser/src/event/EventHandler.ts","../node_modules/@azure/msal-common/src/network/ThrottlingUtils.ts","../node_modules/@azure/msal-common/src/network/NetworkManager.ts","../node_modules/@azure/msal-common/src/client/BaseClient.ts","../node_modules/@azure/msal-common/src/request/RequestValidator.ts","../node_modules/@azure/msal-common/src/request/RequestParameterBuilder.ts","../node_modules/@azure/msal-common/src/cache/entities/CacheRecord.ts","../node_modules/@azure/msal-common/src/cache/persistence/TokenCacheContext.ts","../node_modules/@azure/msal-common/src/response/ResponseHandler.ts","../node_modules/@azure/msal-common/src/client/AuthorizationCodeClient.ts","../node_modules/@azure/msal-common/src/authority/OpenIdConfigResponse.ts","../node_modules/@azure/msal-common/src/authority/AuthorityMetadata.ts","../node_modules/@azure/msal-browser/src/error/NativeAuthError.ts","../node_modules/@azure/msal-common/src/authority/RegionDiscovery.ts","../node_modules/@azure/msal-common/src/authority/Authority.ts","../node_modules/@azure/msal-common/src/authority/CloudInstanceDiscoveryResponse.ts","../node_modules/@azure/msal-common/src/authority/AuthorityFactory.ts","../node_modules/@azure/msal-common/src/telemetry/server/ServerTelemetryManager.ts","../node_modules/@azure/msal-browser/src/interaction_client/BaseInteractionClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/StandardInteractionClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/NativeInteractionClient.ts","../node_modules/@azure/msal-browser/src/broker/nativeBroker/NativeMessageHandler.ts","../node_modules/@azure/msal-browser/src/interaction_handler/InteractionHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/PopupClient.ts","../node_modules/@azure/msal-browser/src/interaction_handler/RedirectHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/RedirectClient.ts","../node_modules/@azure/msal-browser/src/interaction_handler/SilentHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentIframeClient.ts","../node_modules/@azure/msal-common/src/client/RefreshTokenClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentRefreshClient.ts","../node_modules/@azure/msal-browser/src/cache/TokenCache.ts","../node_modules/@azure/msal-common/src/client/SilentFlowClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentCacheClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/HybridSpaAuthorizationCodeClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentAuthCodeClient.ts","../node_modules/@azure/msal-browser/src/telemetry/BrowserPerformanceMeasurement.ts","../node_modules/@azure/msal-browser/src/telemetry/BrowserPerformanceClient.ts","../node_modules/@azure/msal-browser/src/app/ClientApplication.ts","../node_modules/@azure/msal-browser/src/app/PublicClientApplication.ts","index.js"],"sourcesContent":["module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\nvar parseProtocol = require('../helpers/parseProtocol');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData');\n\n// Expose AxiosError class\naxios.AxiosError = require('../lib/core/AxiosError');\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar CanceledError = require('./CanceledError');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new CanceledError(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar buildFullPath = require('./buildFullPath');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  var fullPath = buildFullPath(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method: method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url: url,\n        data: data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nvar prototype = AxiosError.prototype;\nvar descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED'\n// eslint-disable-next-line func-names\n].forEach(function(code) {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = function(error, code, config, request, response, customProps) {\n  var axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nmodule.exports = AxiosError;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar CanceledError = require('../cancel/CanceledError');\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar AxiosError = require('./AxiosError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar AxiosError = require('../core/AxiosError');\nvar transitionalDefaults = require('./transitional');\nvar toFormData = require('../helpers/toFormData');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: require('./env/FormData')\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","module.exports = {\n  \"version\": \"0.27.2\"\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","// eslint-disable-next-line strict\nmodule.exports = null;\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nmodule.exports = function parseProtocol(url) {\n  var match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n","'use strict';\n\nvar VERSION = require('../env/data').version;\nvar AxiosError = require('../core/AxiosError');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function} [filter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object\n * @param {*} [thing]\n * @returns {Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = all;\n\nvar _createChainableTypeChecker = require('./utils/createChainableTypeChecker');\n\nvar _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction all() {\n  for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {\n    validators[_key] = arguments[_key];\n  }\n\n  function allPropTypes() {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var error = null;\n\n    validators.forEach(function (validator) {\n      if (error != null) {\n        return;\n      }\n\n      var result = validator.apply(undefined, args);\n      if (result != null) {\n        error = result;\n      }\n    });\n\n    return error;\n  }\n\n  return (0, _createChainableTypeChecker2.default)(allPropTypes);\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createChainableTypeChecker;\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Mostly taken from ReactPropTypes.\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      if (isRequired) {\n        return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));\n      }\n\n      return null;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      args[_key - 6] = arguments[_key];\n    }\n\n    return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\nmodule.exports = exports['default'];","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = require('./lib/index.js');\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('../core');\n\nvar _metaProps = require('../metaProps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaultProps = {\n  target: '_blank'\n};\n\nvar CSVDownload = function (_React$Component) {\n  _inherits(CSVDownload, _React$Component);\n\n  function CSVDownload(props) {\n    _classCallCheck(this, CSVDownload);\n\n    var _this = _possibleConstructorReturn(this, (CSVDownload.__proto__ || Object.getPrototypeOf(CSVDownload)).call(this, props));\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CSVDownload, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          data = _props.data,\n          headers = _props.headers,\n          separator = _props.separator,\n          enclosingCharacter = _props.enclosingCharacter,\n          uFEFF = _props.uFEFF,\n          target = _props.target,\n          specs = _props.specs,\n          replace = _props.replace;\n\n      this.state.page = window.open(this.buildURI(data, uFEFF, headers, separator, enclosingCharacter), target, specs, replace);\n    }\n  }, {\n    key: 'getWindow',\n    value: function getWindow() {\n      return this.state.page;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return CSVDownload;\n}(_react2.default.Component);\n\nCSVDownload.defaultProps = Object.assign(_metaProps.defaultProps, defaultProps);\nCSVDownload.propTypes = _metaProps.propTypes;\nexports.default = CSVDownload;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('../core');\n\nvar _metaProps = require('../metaProps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CSVLink = function (_React$Component) {\n  _inherits(CSVLink, _React$Component);\n\n  function CSVLink(props) {\n    _classCallCheck(this, CSVLink);\n\n    var _this = _possibleConstructorReturn(this, (CSVLink.__proto__ || Object.getPrototypeOf(CSVLink)).call(this, props));\n\n    _this.buildURI = _this.buildURI.bind(_this);\n    return _this;\n  }\n\n  _createClass(CSVLink, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'handleLegacy',\n    value: function handleLegacy(event) {\n      var isAsync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        event.preventDefault();\n\n        var _props = this.props,\n            data = _props.data,\n            headers = _props.headers,\n            separator = _props.separator,\n            filename = _props.filename,\n            enclosingCharacter = _props.enclosingCharacter,\n            uFEFF = _props.uFEFF;\n\n\n        var csvData = isAsync && typeof data === 'function' ? data() : data;\n\n        var blob = new Blob([uFEFF ? '\\uFEFF' : '', (0, _core.toCSV)(csvData, headers, separator, enclosingCharacter)]);\n        window.navigator.msSaveBlob(blob, filename);\n\n        return false;\n      }\n    }\n  }, {\n    key: 'handleAsyncClick',\n    value: function handleAsyncClick(event) {\n      var _this2 = this;\n\n      var done = function done(proceed) {\n        if (proceed === false) {\n          event.preventDefault();\n          return;\n        }\n        _this2.handleLegacy(event, true);\n      };\n\n      this.props.onClick(event, done);\n    }\n  }, {\n    key: 'handleSyncClick',\n    value: function handleSyncClick(event) {\n      var stopEvent = this.props.onClick(event) === false;\n      if (stopEvent) {\n        event.preventDefault();\n        return;\n      }\n      this.handleLegacy(event);\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick() {\n      var _this3 = this;\n\n      return function (event) {\n        if (typeof _this3.props.onClick === 'function') {\n          return _this3.props.asyncOnClick ? _this3.handleAsyncClick(event) : _this3.handleSyncClick(event);\n        }\n        _this3.handleLegacy(event);\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props2 = this.props,\n          data = _props2.data,\n          headers = _props2.headers,\n          separator = _props2.separator,\n          filename = _props2.filename,\n          uFEFF = _props2.uFEFF,\n          children = _props2.children,\n          onClick = _props2.onClick,\n          asyncOnClick = _props2.asyncOnClick,\n          enclosingCharacter = _props2.enclosingCharacter,\n          rest = _objectWithoutProperties(_props2, ['data', 'headers', 'separator', 'filename', 'uFEFF', 'children', 'onClick', 'asyncOnClick', 'enclosingCharacter']);\n\n      var isNodeEnvironment = typeof window === 'undefined';\n      var href = isNodeEnvironment ? '' : this.buildURI(data, uFEFF, headers, separator, enclosingCharacter);\n\n      return _react2.default.createElement(\n        'a',\n        _extends({\n          download: filename\n        }, rest, {\n          ref: function ref(link) {\n            return _this4.link = link;\n          },\n          target: '_self',\n          href: href,\n          onClick: this.handleClick()\n        }),\n        children\n      );\n    }\n  }]);\n\n  return CSVLink;\n}(_react2.default.Component);\n\nCSVLink.defaultProps = _metaProps.defaultProps;\nCSVLink.propTypes = _metaProps.propTypes;\nexports.default = CSVLink;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar isSafari = exports.isSafari = function isSafari() {\n  return (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n  );\n};\n\nvar isJsons = exports.isJsons = function isJsons(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return (typeof row === \"undefined\" ? \"undefined\" : _typeof(row)) === 'object' && !(row instanceof Array);\n  });\n};\n\nvar isArrays = exports.isArrays = function isArrays(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return Array.isArray(row);\n  });\n};\n\nvar jsonsHeaders = exports.jsonsHeaders = function jsonsHeaders(array) {\n  return Array.from(array.map(function (json) {\n    return Object.keys(json);\n  }).reduce(function (a, b) {\n    return new Set([].concat(_toConsumableArray(a), _toConsumableArray(b)));\n  }, []));\n};\n\nvar jsons2arrays = exports.jsons2arrays = function jsons2arrays(jsons, headers) {\n  headers = headers || jsonsHeaders(jsons);\n\n  var headerLabels = headers;\n  var headerKeys = headers;\n  if (isJsons(headers)) {\n    headerLabels = headers.map(function (header) {\n      return header.label;\n    });\n    headerKeys = headers.map(function (header) {\n      return header.key;\n    });\n  }\n\n  var data = jsons.map(function (object) {\n    return headerKeys.map(function (header) {\n      return getHeaderValue(header, object);\n    });\n  });\n  return [headerLabels].concat(_toConsumableArray(data));\n};\n\nvar getHeaderValue = exports.getHeaderValue = function getHeaderValue(property, obj) {\n  var foundValue = property.replace(/\\[([^\\]]+)]/g, \".$1\").split(\".\").reduce(function (o, p, i, arr) {\n    var value = o[p];\n    if (value === undefined || value === null) {\n      arr.splice(1);\n    } else {\n      return value;\n    }\n  }, obj);\n\n  return foundValue === undefined ? property in obj ? obj[property] : '' : foundValue;\n};\n\nvar elementOrEmpty = exports.elementOrEmpty = function elementOrEmpty(element) {\n  return typeof element === 'undefined' || element === null ? '' : element;\n};\n\nvar joiner = exports.joiner = function joiner(data) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n  var enclosingCharacter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '\"';\n\n  return data.filter(function (e) {\n    return e;\n  }).map(function (row) {\n    return row.map(function (element) {\n      return elementOrEmpty(element);\n    }).map(function (column) {\n      return \"\" + enclosingCharacter + column + enclosingCharacter;\n    }).join(separator);\n  }).join(\"\\n\");\n};\n\nvar arrays2csv = exports.arrays2csv = function arrays2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(headers ? [headers].concat(_toConsumableArray(data)) : data, separator, enclosingCharacter);\n};\n\nvar jsons2csv = exports.jsons2csv = function jsons2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(jsons2arrays(data, headers), separator, enclosingCharacter);\n};\n\nvar string2csv = exports.string2csv = function string2csv(data, headers, separator, enclosingCharacter) {\n  return headers ? headers.join(separator) + \"\\n\" + data : data.replace(/\"/g, '\"\"');\n};\n\nvar toCSV = exports.toCSV = function toCSV(data, headers, separator, enclosingCharacter) {\n  if (isJsons(data)) return jsons2csv(data, headers, separator, enclosingCharacter);\n  if (isArrays(data)) return arrays2csv(data, headers, separator, enclosingCharacter);\n  if (typeof data === 'string') return string2csv(data, headers, separator);\n  throw new TypeError(\"Data should be a \\\"String\\\", \\\"Array of arrays\\\" OR \\\"Array of objects\\\" \");\n};\n\nvar buildURI = exports.buildURI = function buildURI(data, uFEFF, headers, separator, enclosingCharacter) {\n  var csv = toCSV(data, headers, separator, enclosingCharacter);\n  var type = isSafari() ? 'application/csv' : 'text/csv';\n  var blob = new Blob([uFEFF ? \"\\uFEFF\" : '', csv], { type: type });\n  var dataURI = \"data:\" + type + \";charset=utf-8,\" + (uFEFF ? \"\\uFEFF\" : '') + csv;\n\n  var URL = window.URL || window.webkitURL;\n\n  return typeof URL.createObjectURL === 'undefined' ? dataURI : URL.createObjectURL(blob);\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CSVLink = exports.CSVDownload = undefined;\n\nvar _Download = require('./components/Download');\n\nvar _Download2 = _interopRequireDefault(_Download);\n\nvar _Link = require('./components/Link');\n\nvar _Link2 = _interopRequireDefault(_Link);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CSVDownload = exports.CSVDownload = _Download2.default;\nvar CSVLink = exports.CSVLink = _Link2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PropsNotForwarded = exports.defaultProps = exports.propTypes = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propTypes = exports.propTypes = {\n  data: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.array, _propTypes.func]).isRequired,\n  headers: _propTypes.array,\n  target: _propTypes.string,\n  separator: _propTypes.string,\n  filename: _propTypes.string,\n  uFEFF: _propTypes.bool,\n  onClick: _propTypes.func,\n  asyncOnClick: _propTypes.bool,\n  enclosingCharacter: _propTypes.string\n};\n\nvar defaultProps = exports.defaultProps = {\n  separator: ',',\n  filename: 'generatedBy_react-csv.csv',\n  uFEFF: true,\n  asyncOnClick: false,\n  enclosingCharacter: '\"'\n};\n\nvar PropsNotForwarded = exports.PropsNotForwarded = ['data', 'headers'];","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"349b0e60\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"ui:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkui\"] = self[\"webpackChunkui\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\n\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: { ...prefixes\n    },\n    breakpoints,\n    dir\n  }), [prefixes, breakpoints, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({ ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, { ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/* ---------Verions---------------------------\r\nChange certain settings on this page \r\n*set const version to the version you would like to let appear \r\n*set isLocal to true when testing on localhost, false when deploying on azure \r\n*\r\n*/\r\nimport React from \"react\";\r\nexport const Version = () => {\r\n  //change when version '=' to for change\r\n  const version = \"1.1.0\";\r\n  return <>Version {version}</>;\r\n};\r\n//true for local host testing and false for azure deploy\r\nexport const isLocal = false;\r\n\r\n//turn true to signify operational and up to production\r\nexport const isproduction = true;\r\n","import axios from \"axios\"; \r\n\r\nimport { isLocal } from \"../components/structure/Version\";   \r\nlet Purl = \"\";  \r\n//Web urls associated\r\nconst webPUrl = \"https://backend-valtra-automation.azurewebsites.net/api/products\"; \r\nconst localPUrl = \"http://localhost:3006/api/products\"; \r\n//Algorithm that changes the urls \r\nif (isLocal === false) { \r\n  Purl = webPUrl; \r\n} else { \r\n  Purl = localPUrl;\r\n}\r\n\r\nexport default axios.create({\r\n\r\n    baseURL: Purl\r\n\r\n});\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, createContext } from \"react\";\r\n\r\nexport const ProductsContext = createContext();\r\n\r\nexport const ProductsContextProvider = (props) => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const addProduct = (product) => {\r\n    setProducts([...products, product]);\r\n  };\r\n  return (\r\n    <ProductsContext.Provider value={{ products, setProducts, addProduct }}>\r\n      {props.children}\r\n    </ProductsContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport ProductFinder from \"../api/ProductFinder\";\r\nimport { ProductsContext } from \"../context/ProductsContext\";\r\n\r\nconst AddProduct = () => {\r\n  const { addProduct } = useContext(ProductsContext);\r\n  const [id, setId] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await ProductFinder.post(\"/\", {\r\n        //backend name first\r\n        id: id,\r\n        description: description,\r\n      });\r\n      addProduct(response.data.data.product);\r\n      console.log(response);\r\n    } catch {}\r\n  };\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <form action=\"\">\r\n        <div className=\"form-row\">\r\n          <div className=\"col\">\r\n            <input\r\n              type={id}\r\n              onChange={(e) => setId(e.target.value)}\r\n              className=\"form-control\"\r\n              placeholder=\"ID\"\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <input\r\n              className=\"form-control\"\r\n              type={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              placeholder=\"description\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            onClick={handleSubmit}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Add\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"font-weight-light display-1 text-center\">\r\n        Product Finder\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","import invariant from 'invariant';\n\nvar noop = function noop() {};\n\nfunction readOnlyPropType(handler, name) {\n  return function (props, propName) {\n    if (props[propName] !== undefined) {\n      if (!props[handler]) {\n        return new Error(\"You have provided a `\" + propName + \"` prop to `\" + name + \"` \" + (\"without an `\" + handler + \"` handler prop. This will render a read-only field. \") + (\"If the field should be mutable use `\" + defaultKey(propName) + \"`. \") + (\"Otherwise, set `\" + handler + \"`.\"));\n      }\n    }\n  };\n}\n\nexport function uncontrolledPropTypes(controlledValues, displayName) {\n  var propTypes = {};\n  Object.keys(controlledValues).forEach(function (prop) {\n    // add default propTypes for folks that use runtime checks\n    propTypes[defaultKey(prop)] = noop;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var handler = controlledValues[prop];\n      !(typeof handler === 'string' && handler.trim().length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop) : invariant(false) : void 0;\n      propTypes[prop] = readOnlyPropType(handler, displayName);\n    }\n  });\n  return propTypes;\n}\nexport function isProp(props, prop) {\n  return props[prop] !== undefined;\n}\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexport function canAcceptRef(component) {\n  return !!component && (typeof component !== 'function' || component.prototype && component.prototype.isReactComponent);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport { useCallback, useRef, useState } from 'react';\nimport * as Utils from './utils';\n\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  var wasPropRef = useRef(propValue !== undefined);\n\n  var _useState = useState(defaultValue),\n      stateValue = _useState[0],\n      setState = _useState[1];\n\n  var isProp = propValue !== undefined;\n  var wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n\n  return [isProp ? propValue : stateValue, useCallback(function (value) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (handler) handler.apply(void 0, [value].concat(args));\n    setState(value);\n  }, [handler])];\n}\n\nexport { useUncontrolledProp };\nexport default function useUncontrolled(props, config) {\n  return Object.keys(config).reduce(function (result, fieldName) {\n    var _extends2;\n\n    var _ref = result,\n        defaultValue = _ref[Utils.defaultKey(fieldName)],\n        propsValue = _ref[fieldName],\n        rest = _objectWithoutPropertiesLoose(_ref, [Utils.defaultKey(fieldName), fieldName].map(_toPropertyKey));\n\n    var handlerName = config[fieldName];\n\n    var _useUncontrolledProp = useUncontrolledProp(propsValue, defaultValue, props[handlerName]),\n        value = _useUncontrolledProp[0],\n        handler = _useUncontrolledProp[1];\n\n    return _extends({}, rest, (_extends2 = {}, _extends2[fieldName] = value, _extends2[handlerName] = handler, _extends2));\n  }, props);\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarBrand = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-brand');\n  const Component = as || (props.href ? 'a' : 'span');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  });\n});\nNavbarBrand.displayName = 'NavbarBrand';\nexport default NavbarBrand;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import ownerWindow from './ownerWindow';\n/**\n * Returns one or all computed style properties of an element.\n * \n * @param node the element\n * @param psuedoElement the style property\n */\n\nexport default function getComputedStyle(node, psuedoElement) {\n  return ownerWindow(node).getComputedStyle(node, psuedoElement);\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the owner window of a given element.\n * \n * @param node the element\n */\n\nexport default function ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc && doc.defaultView || window;\n}","var rUpper = /([A-Z])/g;\nexport default function hyphenate(string) {\n  return string.replace(rUpper, '-$1').toLowerCase();\n}","/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js\n */\nimport hyphenate from './hyphenate';\nvar msPattern = /^ms-/;\nexport default function hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}","var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;\nexport default function isTransform(value) {\n  return !!(value && supportedTransforms.test(value));\n}","import getComputedStyle from './getComputedStyle';\nimport hyphenate from './hyphenateStyle';\nimport isTransform from './isTransform';\n\nfunction style(node, property) {\n  var css = '';\n  var transforms = '';\n\n  if (typeof property === 'string') {\n    return node.style.getPropertyValue(hyphenate(property)) || getComputedStyle(node).getPropertyValue(hyphenate(property));\n  }\n\n  Object.keys(property).forEach(function (key) {\n    var value = property[key];\n\n    if (!value && value !== 0) {\n      node.style.removeProperty(hyphenate(key));\n    } else if (isTransform(key)) {\n      transforms += key + \"(\" + value + \") \";\n    } else {\n      css += hyphenate(key) + \": \" + value + \";\";\n    }\n  });\n\n  if (transforms) {\n    css += \"transform: \" + transforms + \";\";\n  }\n\n  node.style.cssText += \";\" + css;\n}\n\nexport default style;","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","import css from './css';\nimport listen from './listen';\nimport triggerEvent from './triggerEvent';\n\nfunction parseDuration(node) {\n  var str = css(node, 'transitionDuration') || '';\n  var mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nfunction emulateTransitionEnd(element, duration, padding) {\n  if (padding === void 0) {\n    padding = 5;\n  }\n\n  var called = false;\n  var handle = setTimeout(function () {\n    if (!called) triggerEvent(element, 'transitionend', true);\n  }, duration + padding);\n  var remove = listen(element, 'transitionend', function () {\n    called = true;\n  }, {\n    once: true\n  });\n  return function () {\n    clearTimeout(handle);\n    remove();\n  };\n}\n\nexport default function transitionEnd(element, handler, duration, padding) {\n  if (duration == null) duration = parseDuration(element) || 0;\n  var removeEmulate = emulateTransitionEnd(element, duration, padding);\n  var remove = listen(element, 'transitionend', handler);\n  return function () {\n    removeEmulate();\n    remove();\n  };\n}","/**\n * Triggers an event on a given element.\n * \n * @param node the element\n * @param eventName the event name to trigger\n * @param bubbles whether the event should bubble up\n * @param cancelable whether the event should be cancelable\n */\nexport default function triggerEvent(node, eventName, bubbles, cancelable) {\n  if (bubbles === void 0) {\n    bubbles = false;\n  }\n\n  if (cancelable === void 0) {\n    cancelable = true;\n  }\n\n  if (node) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, bubbles, cancelable);\n    node.dispatchEvent(event);\n  }\n}","import css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\n\nfunction parseDuration(node, property) {\n  const str = css(node, property) || '';\n  const mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nexport default function transitionEndListener(element, handler) {\n  const duration = parseDuration(element, 'transitionDuration');\n  const delay = parseDuration(element, 'transitionDelay');\n  const remove = transitionEnd(element, e => {\n    if (e.target === element) {\n      remove();\n      handler(e);\n    }\n  }, duration + delay);\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","// reading a dimension prop will cause the browser to recalculate,\n// which will let our animations work\nexport default function triggerBrowserReflow(node) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  node.offsetHeight;\n}","import { useMemo } from 'react';\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\n\nfunction useMergedRefs(refA, refB) {\n  return useMemo(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nexport default useMergedRefs;","import React, { useCallback, useRef } from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst TransitionWrapper = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  addEndListener,\n  children,\n  childRef,\n  ...props\n}, ref) => {\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, childRef);\n\n  const attachRef = r => {\n    mergedRef(safeFindDOMNode(r));\n  };\n\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return /*#__PURE__*/_jsx(Transition, {\n    ref: ref,\n    ...props,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    nodeRef: nodeRef,\n    children: typeof children === 'function' ? (status, innerProps) => children(status, { ...innerProps,\n      ref: attachRef\n    }) : /*#__PURE__*/React.cloneElement(children, {\n      ref: attachRef\n    })\n  });\n});\nexport default TransitionWrapper;","import ReactDOM from 'react-dom';\nexport default function safeFindDOMNode(componentOrElement) {\n  if (componentOrElement && 'setState' in componentOrElement) {\n    return ReactDOM.findDOMNode(componentOrElement);\n  }\n\n  return componentOrElement != null ? componentOrElement : null;\n}","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import * as React from 'react'; // TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","import * as React from 'react';\nimport { useContext } from 'react';\nimport Collapse from './Collapse';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarCollapse = /*#__PURE__*/React.forwardRef(({\n  children,\n  bsPrefix,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-collapse');\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Collapse, {\n    in: !!(context && context.expanded),\n    ...props,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: ref,\n      className: bsPrefix,\n      children: children\n    })\n  });\n});\nNavbarCollapse.displayName = 'NavbarCollapse';\nexport default NavbarCollapse;","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'Toggle navigation'\n};\nconst NavbarToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n  const {\n    onToggle,\n    expanded\n  } = useContext(NavbarContext) || {};\n  const handleClick = useEventCallback(e => {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed'),\n    children: children || /*#__PURE__*/_jsx(\"span\", {\n      className: `${bsPrefix}-icon`\n    })\n  });\n});\nNavbarToggle.displayName = 'NavbarToggle';\nNavbarToggle.defaultProps = defaultProps;\nexport default NavbarToggle;","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import useEffect from './useIsomorphicEffect';\nimport { useState } from 'react';\nvar matchersByWindow = new WeakMap();\n\nvar getMatcher = function getMatcher(query, targetWindow) {\n  if (!query || !targetWindow) return undefined;\n  var matchers = matchersByWindow.get(targetWindow) || new Map();\n  matchersByWindow.set(targetWindow, matchers);\n  var mql = matchers.get(query);\n\n  if (!mql) {\n    mql = targetWindow.matchMedia(query);\n    mql.refCount = 0;\n    matchers.set(mql.media, mql);\n  }\n\n  return mql;\n};\n/**\n * Match a media query and get updates as the match changes. The media string is\n * passed directly to `window.matchMedia` and run as a Layout Effect, so initial\n * matches are returned before the browser has a chance to paint.\n *\n * ```tsx\n * function Page() {\n *   const isWide = useMediaQuery('min-width: 1000px')\n *\n *   return isWide ? \"very wide\" : 'not so wide'\n * }\n * ```\n *\n * Media query lists are also reused globally, hook calls for the same query\n * will only create a matcher once under the hood.\n *\n * @param query A media query\n * @param targetWindow The window to match against, uses the globally available one as a default.\n */\n\n\nexport default function useMediaQuery(query, targetWindow) {\n  if (targetWindow === void 0) {\n    targetWindow = typeof window === 'undefined' ? undefined : window;\n  }\n\n  var mql = getMatcher(query, targetWindow);\n\n  var _useState = useState(function () {\n    return mql ? mql.matches : false;\n  }),\n      matches = _useState[0],\n      setMatches = _useState[1];\n\n  useEffect(function () {\n    var mql = getMatcher(query, targetWindow);\n\n    if (!mql) {\n      return setMatches(false);\n    }\n\n    var matchers = matchersByWindow.get(targetWindow);\n\n    var handleChange = function handleChange() {\n      setMatches(mql.matches);\n    };\n\n    mql.refCount++;\n    mql.addListener(handleChange);\n    handleChange();\n    return function () {\n      mql.removeListener(handleChange);\n      mql.refCount--;\n\n      if (mql.refCount <= 0) {\n        matchers == null ? void 0 : matchers.delete(mql.media);\n      }\n\n      mql = undefined;\n    };\n  }, [query]);\n  return matches;\n}","import useMediaQuery from './useMediaQuery';\nimport { useMemo } from 'react';\n\n/**\n * Create a responsive hook we a set of breakpoint names and widths.\n * You can use any valid css units as well as a numbers (for pixels).\n *\n * **NOTE:** The object key order is important! it's assumed to be in order from smallest to largest\n *\n * ```ts\n * const useBreakpoint = createBreakpointHook({\n *  xs: 0,\n *  sm: 576,\n *  md: 768,\n *  lg: 992,\n *  xl: 1200,\n * })\n * ```\n *\n * **Watch out!** using string values will sometimes construct media queries using css `calc()` which\n * is NOT supported in media queries by all browsers at the moment. use numbers for\n * the widest range of browser support.\n *\n * @param breakpointValues A object hash of names to breakpoint dimensions\n */\nexport function createBreakpointHook(breakpointValues) {\n  var names = Object.keys(breakpointValues);\n\n  function and(query, next) {\n    if (query === next) {\n      return next;\n    }\n\n    return query ? query + \" and \" + next : next;\n  }\n\n  function getNext(breakpoint) {\n    return names[Math.min(names.indexOf(breakpoint) + 1, names.length - 1)];\n  }\n\n  function getMaxQuery(breakpoint) {\n    var next = getNext(breakpoint);\n    var value = breakpointValues[next];\n    if (typeof value === 'number') value = value - 0.2 + \"px\";else value = \"calc(\" + value + \" - 0.2px)\";\n    return \"(max-width: \" + value + \")\";\n  }\n\n  function getMinQuery(breakpoint) {\n    var value = breakpointValues[breakpoint];\n\n    if (typeof value === 'number') {\n      value = value + \"px\";\n    }\n\n    return \"(min-width: \" + value + \")\";\n  }\n  /**\n   * Match a set of breakpoints\n   *\n   * ```tsx\n   * const MidSizeOnly = () => {\n   *   const isMid = useBreakpoint({ lg: 'down', sm: 'up' });\n   *\n   *   if (isMid) return <div>On a Reasonable sized Screen!</div>\n   *   return null;\n   * }\n   * ```\n   * @param breakpointMap An object map of breakpoints and directions, queries are constructed using \"and\" to join\n   * breakpoints together\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n\n  function useBreakpoint(breakpointOrMap, direction, window) {\n    var breakpointMap;\n\n    if (typeof breakpointOrMap === 'object') {\n      breakpointMap = breakpointOrMap;\n      window = direction;\n      direction = true;\n    } else {\n      var _breakpointMap;\n\n      direction = direction || true;\n      breakpointMap = (_breakpointMap = {}, _breakpointMap[breakpointOrMap] = direction, _breakpointMap);\n    }\n\n    var query = useMemo(function () {\n      return Object.entries(breakpointMap).reduce(function (query, _ref) {\n        var key = _ref[0],\n            direction = _ref[1];\n\n        if (direction === 'up' || direction === true) {\n          query = and(query, getMinQuery(key));\n        }\n\n        if (direction === 'down' || direction === true) {\n          query = and(query, getMaxQuery(key));\n        }\n\n        return query;\n      }, '');\n    }, [JSON.stringify(breakpointMap)]);\n    return useMediaQuery(query, window);\n  }\n\n  return useBreakpoint;\n}\nvar useBreakpoint = createBreakpointHook({\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n});\nexport default useBreakpoint;","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  var _ref;\n\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  ...props\n}, ref) => {\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    props.onEnter == null ? void 0 : props.onEnter(node, isAppearing);\n  }, [props]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('offcanvas-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.defaultProps = defaultProps;\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst OffcanvasHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nOffcanvasHeader.displayName = 'OffcanvasHeader';\nOffcanvasHeader.defaultProps = defaultProps;\nexport default OffcanvasHeader;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH5 = divWithClassName('h5');\nexport default createWithBsPrefix('offcanvas-title', {\n  Component: DivStyledAsH5\n});","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import classNames from 'classnames';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useContext, useMemo, useRef } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport NavbarContext from './NavbarContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  scroll: false,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  placement: 'start'\n};\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, { ...props\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props\n  });\n}\n\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement,\n\n  /* BaseModal props */\n  show,\n  backdrop,\n  keyboard,\n  scroll,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const {\n    onToggle\n  } = useContext(NavbarContext) || {};\n  const handleHide = useEventCallback(() => {\n    onToggle == null ? void 0 : onToggle();\n    onHide == null ? void 0 : onHide();\n  });\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n\n    return getSharedManager();\n  }\n\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null ? void 0 : onEnter(node, ...args);\n  };\n\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    ...props,\n    className: classNames(className, bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: ref,\n      backdrop: backdrop,\n      container: container,\n      keyboard: keyboard,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus && !scroll,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: onEscapeKeyDown,\n      onShow: onShow,\n      onHide: handleHide,\n      onEnter: handleEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: DialogTransition,\n      backdropTransition: BackdropTransition,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nOffcanvas.defaultProps = defaultProps;\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});","import * as React from 'react';\nimport { useContext } from 'react';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Offcanvas from './Offcanvas';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarOffcanvas = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  backdrop,\n  backdropClassName,\n  keyboard,\n  scroll,\n  placement,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onShow,\n  onHide,\n  onEscapeKeyDown,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  const context = useContext(NavbarContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const hasExpandProp = typeof (context == null ? void 0 : context.expand) === 'string';\n  const shouldExpand = useBreakpoint(hasExpandProp ? context.expand : 'xs', 'up');\n  return hasExpandProp && shouldExpand ? /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix, `${bsPrefix}-${placement}`)\n  }) : /*#__PURE__*/_jsx(Offcanvas, {\n    ref: ref,\n    show: !!(context != null && context.expanded),\n    bsPrefix: bsPrefix,\n    backdrop: backdrop,\n    backdropClassName: backdropClassName,\n    keyboard: keyboard,\n    scroll: scroll,\n    placement: placement,\n    autoFocus: autoFocus,\n    enforceFocus: enforceFocus,\n    restoreFocus: restoreFocus,\n    restoreFocusOptions: restoreFocusOptions,\n    onShow: onShow,\n    onHide: onHide,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    ...props\n  });\n});\nNavbarOffcanvas.displayName = 'NavbarOffcanvas';\nexport default NavbarOffcanvas;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport { useUncontrolled } from 'uncontrollable';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport NavbarOffcanvas from './NavbarOffcanvas';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarText = createWithBsPrefix('navbar-text', {\n  Component: 'span'\n});\nconst defaultProps = {\n  expand: true,\n  variant: 'light',\n  collapseOnSelect: false\n};\nconst Navbar = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    bsPrefix: initialBsPrefix,\n    expand,\n    variant,\n    bg,\n    fixed,\n    sticky,\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'nav',\n    expanded,\n    onToggle,\n    onSelect,\n    collapseOnSelect,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    expanded: 'onToggle'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  const handleCollapse = useCallback((...args) => {\n    onSelect == null ? void 0 : onSelect(...args);\n\n    if (collapseOnSelect && expanded) {\n      onToggle == null ? void 0 : onToggle(false);\n    }\n  }, [onSelect, collapseOnSelect, expanded, onToggle]); // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n\n  let expandClass = `${bsPrefix}-expand`;\n  if (typeof expand === 'string') expandClass = `${expandClass}-${expand}`;\n  const navbarContext = useMemo(() => ({\n    onToggle: () => onToggle == null ? void 0 : onToggle(!expanded),\n    bsPrefix,\n    expanded: !!expanded,\n    expand\n  }), [bsPrefix, expanded, expand, onToggle]);\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\n    value: navbarContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleCollapse,\n      children: /*#__PURE__*/_jsx(Component, {\n        ref: ref,\n        ...controlledProps,\n        className: classNames(className, bsPrefix, expand && expandClass, variant && `${bsPrefix}-${variant}`, bg && `bg-${bg}`, sticky && `sticky-${sticky}`, fixed && `fixed-${fixed}`)\n      })\n    })\n  });\n});\nNavbar.defaultProps = defaultProps;\nNavbar.displayName = 'Navbar';\nexport default Object.assign(Navbar, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Offcanvas: NavbarOffcanvas,\n  Text: NavbarText,\n  Toggle: NavbarToggle\n});","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import * as React from 'react';\nconst TabContext = /*#__PURE__*/React.createContext(null);\nexport default TabContext;","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n\n    if (disabled) {\n      href = undefined;\n    }\n  }\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","const _excluded = [\"as\", \"active\", \"eventKey\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport TabContext from './TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useNavItem({\n  key,\n  onClick,\n  active,\n  id,\n  role,\n  disabled\n}) {\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const tabContext = useContext(TabContext);\n  let isActive = active;\n  const props = {\n    role\n  };\n\n  if (navContext) {\n    if (!role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(key != null ? key : null);\n    const contextControlledId = navContext.getControlledId(key != null ? key : null); // @ts-ignore\n\n    props[dataAttr('event-key')] = key;\n    props.id = contextControllerId || id;\n    isActive = active == null && key != null ? navContext.activeKey === key : active;\n    /**\n     * Simplified scenario for `mountOnEnter`.\n     *\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\n     * once, it would also complicate the code quite a bit, for very little gain.\n     * The following implementation is probably good enough.\n     *\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\n     */\n\n    if (isActive || !(tabContext != null && tabContext.unmountOnExit) && !(tabContext != null && tabContext.mountOnEnter)) props['aria-controls'] = contextControlledId;\n  }\n\n  if (props.role === 'tab') {\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n\n    if (isActive) {\n      props['aria-selected'] = isActive;\n    } else {\n      props.tabIndex = -1;\n    }\n  }\n\n  props.onClick = useEventCallback(e => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(e);\n\n    if (key == null) {\n      return;\n    }\n\n    if (parentOnSelect && !e.isPropagationStopped()) {\n      parentOnSelect(key, e);\n    }\n  });\n  return [props, {\n    isActive\n  }];\n}\nconst NavItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: Component = Button,\n    active,\n    eventKey\n  } = _ref,\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [props, meta] = useNavItem(Object.assign({\n    key: makeEventKey(eventKey, options.href),\n    active\n  }, options)); // @ts-ignore\n\n  props[dataAttr('active')] = meta.isActive;\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, options, props, {\n    ref: ref\n  }));\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","const _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { dataAttr, dataProp } from './DataKey';\nimport NavItem from './NavItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\n\nconst EVENT_KEY_ATTR = dataAttr('event-key');\nconst Nav = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    onSelect,\n    activeKey,\n    role,\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey; // TODO: do we need to duplicate these?\n\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n\n  const listNode = useRef(null);\n\n  const getNextActiveTab = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n    const activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n\n    if (!tabContext) {\n      return;\n    }\n\n    let nextActiveChild;\n\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n\n      default:\n        return;\n    }\n\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem\n});","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('nav-item');","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  disabled: false\n};\nconst NavLink = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as: Component = Anchor,\n  active,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-link');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...navItemProps,\n    ref: ref,\n    className: classNames(className, bsPrefix, props.disabled && 'disabled', meta.isActive && 'active')\n  });\n});\nNavLink.displayName = 'NavLink';\nNavLink.defaultProps = defaultProps;\nexport default NavLink;","import classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport CardHeaderContext from './CardHeaderContext';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  justify: false,\n  fill: false\n};\nconst Nav = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    as = 'div',\n    bsPrefix: initialBsPrefix,\n    variant,\n    fill,\n    justify,\n    navbar,\n    navbarScroll,\n    className,\n    activeKey,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'nav');\n  let navbarBsPrefix;\n  let cardHeaderBsPrefix;\n  let isNavbar = false;\n  const navbarContext = useContext(NavbarContext);\n  const cardHeaderContext = useContext(CardHeaderContext);\n\n  if (navbarContext) {\n    navbarBsPrefix = navbarContext.bsPrefix;\n    isNavbar = navbar == null ? true : navbar;\n  } else if (cardHeaderContext) {\n    ({\n      cardHeaderBsPrefix\n    } = cardHeaderContext);\n  }\n\n  return /*#__PURE__*/_jsx(BaseNav, {\n    as: as,\n    ref: ref,\n    activeKey: activeKey,\n    className: classNames(className, {\n      [bsPrefix]: !isNavbar,\n      [`${navbarBsPrefix}-nav`]: isNavbar,\n      [`${navbarBsPrefix}-nav-scroll`]: isNavbar && navbarScroll,\n      [`${cardHeaderBsPrefix}-${variant}`]: !!cardHeaderBsPrefix,\n      [`${bsPrefix}-${variant}`]: !!variant,\n      [`${bsPrefix}-fill`]: fill,\n      [`${bsPrefix}-justified`]: justify\n    }),\n    ...props\n  });\n});\nNav.displayName = 'Nav';\nNav.defaultProps = defaultProps;\nexport default Object.assign(Nav, {\n  Item: NavItem,\n  Link: NavLink\n});","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const Constants = {\n    LIBRARY_NAME: \"MSAL.JS\",\n    SKU: \"msal.js.common\",\n    // Prefix for all library cache entries\n    CACHE_PREFIX: \"msal\",\n    // default authority\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\n    DEFAULT_COMMON_TENANT: \"common\",\n    // ADFS String\n    ADFS: \"adfs\",\n    // Default AAD Instance Discovery Endpoint\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\n    // Resource delimiter - used for certain cache entries\n    RESOURCE_DELIM: \"|\",\n    // Placeholder for non-existent account ids/objects\n    NO_ACCOUNT: \"NO_ACCOUNT\",\n    // Claims\n    CLAIMS: \"claims\",\n    // Consumer UTID\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\n    // Default scopes\n    OPENID_SCOPE: \"openid\",\n    PROFILE_SCOPE: \"profile\",\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\n    EMAIL_SCOPE: \"email\",\n    // Default response type for authorization code flow\n    CODE_RESPONSE_TYPE: \"code\",\n    CODE_GRANT_TYPE: \"authorization_code\",\n    RT_GRANT_TYPE: \"refresh_token\",\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\n    AUTHORIZATION_PENDING: \"authorization_pending\",\n    NOT_DEFINED: \"not_defined\",\n    EMPTY_STRING: \"\",\n    FORWARD_SLASH: \"/\",\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\n    IMDS_VERSION: \"2020-06-01\",\n    IMDS_TIMEOUT: 2000,\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\n    KNOWN_PUBLIC_CLOUDS: [\"login.microsoftonline.com\", \"login.windows.net\", \"login.microsoft.com\", \"sts.windows.net\"],\n    TOKEN_RESPONSE_TYPE: \"token\",\n    ID_TOKEN_RESPONSE_TYPE: \"id_token\"\n};\n\nexport const OIDC_DEFAULT_SCOPES = [\n    Constants.OPENID_SCOPE,\n    Constants.PROFILE_SCOPE,\n    Constants.OFFLINE_ACCESS_SCOPE\n];\n\nexport const OIDC_SCOPES = [\n    ...OIDC_DEFAULT_SCOPES,\n    Constants.EMAIL_SCOPE\n];\n\n/**\n * Request header names\n */\nexport enum HeaderNames {\n    CONTENT_TYPE = \"Content-Type\",\n    RETRY_AFTER = \"Retry-After\",\n    CCS_HEADER = \"X-AnchorMailbox\",\n    WWWAuthenticate = \"WWW-Authenticate\",\n    AuthenticationInfo = \"Authentication-Info\"\n}\n\n/**\n * Persistent cache keys MSAL which stay while user is logged in.\n */\nexport enum PersistentCacheKeys {\n    ID_TOKEN = \"idtoken\",\n    CLIENT_INFO = \"client.info\",\n    ADAL_ID_TOKEN = \"adal.idtoken\",\n    ERROR = \"error\",\n    ERROR_DESC = \"error.description\",\n    ACTIVE_ACCOUNT = \"active-account\"\n}\n\n/**\n * String constants related to AAD Authority\n */\nexport enum AADAuthorityConstants {\n    COMMON = \"common\",\n    ORGANIZATIONS = \"organizations\",\n    CONSUMERS = \"consumers\"\n}\n\n/**\n * Keys in the hashParams sent by AAD Server\n */\nexport enum AADServerParamKeys {\n    CLIENT_ID = \"client_id\",\n    REDIRECT_URI = \"redirect_uri\",\n    RESPONSE_TYPE = \"response_type\",\n    RESPONSE_MODE = \"response_mode\",\n    GRANT_TYPE = \"grant_type\",\n    CLAIMS = \"claims\",\n    SCOPE = \"scope\",\n    ERROR = \"error\",\n    ERROR_DESCRIPTION = \"error_description\",\n    ACCESS_TOKEN = \"access_token\",\n    ID_TOKEN = \"id_token\",\n    REFRESH_TOKEN = \"refresh_token\",\n    EXPIRES_IN = \"expires_in\",\n    STATE = \"state\",\n    NONCE = \"nonce\",\n    PROMPT = \"prompt\",\n    SESSION_STATE = \"session_state\",\n    CLIENT_INFO = \"client_info\",\n    CODE = \"code\",\n    CODE_CHALLENGE = \"code_challenge\",\n    CODE_CHALLENGE_METHOD = \"code_challenge_method\",\n    CODE_VERIFIER = \"code_verifier\",\n    CLIENT_REQUEST_ID = \"client-request-id\",\n    X_CLIENT_SKU = \"x-client-SKU\",\n    X_CLIENT_VER = \"x-client-VER\",\n    X_CLIENT_OS = \"x-client-OS\",\n    X_CLIENT_CPU = \"x-client-CPU\",\n    X_CLIENT_CURR_TELEM = \"x-client-current-telemetry\",\n    X_CLIENT_LAST_TELEM = \"x-client-last-telemetry\",\n    X_MS_LIB_CAPABILITY = \"x-ms-lib-capability\",\n    X_APP_NAME = \"x-app-name\",\n    X_APP_VER = \"x-app-ver\",\n    POST_LOGOUT_URI = \"post_logout_redirect_uri\",\n    ID_TOKEN_HINT= \"id_token_hint\",\n    DEVICE_CODE = \"device_code\",\n    CLIENT_SECRET = \"client_secret\",\n    CLIENT_ASSERTION = \"client_assertion\",\n    CLIENT_ASSERTION_TYPE = \"client_assertion_type\",\n    TOKEN_TYPE = \"token_type\",\n    REQ_CNF = \"req_cnf\",\n    OBO_ASSERTION = \"assertion\",\n    REQUESTED_TOKEN_USE = \"requested_token_use\",\n    ON_BEHALF_OF = \"on_behalf_of\",\n    FOCI = \"foci\",\n    CCS_HEADER = \"X-AnchorMailbox\",\n    RETURN_SPA_CODE = \"return_spa_code\",\n    NATIVE_BROKER = \"nativebroker\",\n    LOGOUT_HINT = \"logout_hint\"\n}\n\n/**\n * Claims request keys\n */\nexport enum ClaimsRequestKeys {\n    ACCESS_TOKEN = \"access_token\",\n    XMS_CC = \"xms_cc\"\n}\n\n/**\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\n */\nexport const PromptValue = {\n    LOGIN: \"login\",\n    SELECT_ACCOUNT: \"select_account\",\n    CONSENT: \"consent\",\n    NONE: \"none\",\n    CREATE: \"create\"\n};\n\n/**\n * SSO Types - generated to populate hints\n */\nexport enum SSOTypes {\n    ACCOUNT = \"account\",\n    SID = \"sid\",\n    LOGIN_HINT = \"login_hint\",\n    ID_TOKEN = \"id_token\",\n    DOMAIN_HINT = \"domain_hint\",\n    ORGANIZATIONS = \"organizations\",\n    CONSUMERS = \"consumers\",\n    ACCOUNT_ID = \"accountIdentifier\",\n    HOMEACCOUNT_ID = \"homeAccountIdentifier\"\n}\n\n/**\n * Disallowed extra query parameters.\n */\nexport const BlacklistedEQParams = [\n    SSOTypes.SID,\n    SSOTypes.LOGIN_HINT\n];\n\n/**\n * allowed values for codeVerifier\n */\nexport const CodeChallengeMethodValues = {\n    PLAIN: \"plain\",\n    S256: \"S256\"\n};\n\n/**\n * The method used to encode the code verifier for the code challenge parameter. can be one\n * of plain or s256. if excluded, code challenge is assumed to be plaintext. for more\n * information, see the pkce rcf: https://tools.ietf.org/html/rfc7636\n */\nexport const CodeChallengeMethodValuesArray: string[] = [\n    CodeChallengeMethodValues.PLAIN,\n    CodeChallengeMethodValues.S256\n];\n\n/**\n * allowed values for response_mode\n */\nexport enum ResponseMode {\n    QUERY = \"query\",\n    FRAGMENT = \"fragment\",\n    FORM_POST = \"form_post\"\n}\n\n/**\n * allowed grant_type\n */\nexport enum GrantType {\n    IMPLICIT_GRANT = \"implicit\",\n    AUTHORIZATION_CODE_GRANT = \"authorization_code\",\n    CLIENT_CREDENTIALS_GRANT = \"client_credentials\",\n    RESOURCE_OWNER_PASSWORD_GRANT = \"password\",\n    REFRESH_TOKEN_GRANT = \"refresh_token\",\n    DEVICE_CODE_GRANT = \"device_code\",\n    JWT_BEARER = \"urn:ietf:params:oauth:grant-type:jwt-bearer\"\n}\n\n/**\n * Account types in Cache\n */\nexport enum CacheAccountType {\n    MSSTS_ACCOUNT_TYPE = \"MSSTS\",\n    ADFS_ACCOUNT_TYPE = \"ADFS\",\n    MSAV1_ACCOUNT_TYPE = \"MSA\",\n    GENERIC_ACCOUNT_TYPE = \"Generic\" // NTLM, Kerberos, FBA, Basic etc\n}\n\n/**\n * Separators used in cache\n */\nexport enum Separators {\n    CACHE_KEY_SEPARATOR = \"-\",\n    CLIENT_INFO_SEPARATOR = \".\"\n}\n\n/**\n * Credential Type stored in the cache\n */\nexport enum CredentialType {\n    ID_TOKEN = \"IdToken\",\n    ACCESS_TOKEN = \"AccessToken\",\n    ACCESS_TOKEN_WITH_AUTH_SCHEME = \"AccessToken_With_AuthScheme\",\n    REFRESH_TOKEN = \"RefreshToken\",\n}\n\n/**\n * Credential Type stored in the cache\n */\nexport enum CacheSchemaType {\n    ACCOUNT = \"Account\",\n    CREDENTIAL = \"Credential\",\n    ID_TOKEN = \"IdToken\",\n    ACCESS_TOKEN = \"AccessToken\",\n    REFRESH_TOKEN = \"RefreshToken\",\n    APP_METADATA = \"AppMetadata\",\n    TEMPORARY = \"TempCache\",\n    TELEMETRY = \"Telemetry\",\n    UNDEFINED = \"Undefined\",\n    THROTTLING = \"Throttling\"\n}\n\n/**\n * Combine all cache types\n */\nexport enum CacheType {\n    ADFS = 1001,\n    MSA = 1002,\n    MSSTS = 1003,\n    GENERIC = 1004,\n    ACCESS_TOKEN = 2001,\n    REFRESH_TOKEN = 2002,\n    ID_TOKEN = 2003,\n    APP_METADATA = 3001,\n    UNDEFINED = 9999\n}\n\n/**\n * More Cache related constants\n */\nexport const APP_METADATA = \"appmetadata\";\nexport const CLIENT_INFO = \"client_info\";\nexport const THE_FAMILY_ID = \"1\";\n\nexport const AUTHORITY_METADATA_CONSTANTS = {\n    CACHE_KEY: \"authority-metadata\",\n    REFRESH_TIME_SECONDS: 3600 * 24 // 24 Hours\n};\n\nexport enum AuthorityMetadataSource {\n    CONFIG = \"config\",\n    CACHE = \"cache\",\n    NETWORK = \"network\",\n    HARDCODED_VALUES= \"hardcoded_values\",\n}\n\nexport const SERVER_TELEM_CONSTANTS = {\n    SCHEMA_VERSION: 5,\n    MAX_CUR_HEADER_BYTES: 80, // ESTS limit is 100B, set to 80 to provide a 20B buffer\n    MAX_LAST_HEADER_BYTES: 330, // ESTS limit is 350B, set to 330 to provide a 20B buffer,\n    MAX_CACHED_ERRORS: 50, // Limit the number of errors that can be stored to prevent uncontrolled size gains\n    CACHE_KEY: \"server-telemetry\",\n    CATEGORY_SEPARATOR: \"|\",\n    VALUE_SEPARATOR: \",\",\n    OVERFLOW_TRUE: \"1\",\n    OVERFLOW_FALSE: \"0\",\n    UNKNOWN_ERROR: \"unknown_error\"\n};\n\n/**\n * Type of the authentication request\n */\nexport enum AuthenticationScheme {\n    BEARER = \"Bearer\",\n    POP = \"pop\",\n    SSH = \"ssh-cert\"\n}\n\n/**\n * Constants related to throttling\n */\nexport const ThrottlingConstants = {\n    // Default time to throttle RequestThumbprint in seconds\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\n    // Default maximum time to throttle in seconds, overrides what the server sends back\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\n    // Prefix for storing throttling entries\n    THROTTLING_PREFIX: \"throttling\",\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\"\n};\n\nexport const Errors = {\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\n};\n\n/**\n * Password grant parameters\n */\nexport enum PasswordGrantConstants {\n    username = \"username\",\n    password = \"password\"\n}\n\n/**\n * Response codes\n */\nexport enum  ResponseCodes {\n    httpSuccess = 200,\n    httpBadRequest = 400\n}\n\n/**\n * Region Discovery Sources\n */\nexport enum RegionDiscoverySources {\n    FAILED_AUTO_DETECTION = \"1\",\n    INTERNAL_CACHE = \"2\",\n    ENVIRONMENT_VARIABLE = \"3\",\n    IMDS = \"4\",\n}\n\n/**\n * Region Discovery Outcomes\n */\nexport enum RegionDiscoveryOutcomes {\n    CONFIGURED_MATCHES_DETECTED = \"1\",\n    CONFIGURED_NO_AUTO_DETECTION = \"2\",\n    CONFIGURED_NOT_DETECTED = \"3\",\n    AUTO_DETECTION_REQUESTED_SUCCESSFUL = \"4\",\n    AUTO_DETECTION_REQUESTED_FAILED = \"5\"\n}\n\nexport enum CacheOutcome {\n    NO_CACHE_HIT = \"0\",\n    FORCE_REFRESH = \"1\",\n    NO_CACHED_ACCESS_TOKEN = \"2\",\n    CACHED_ACCESS_TOKEN_EXPIRED = \"3\",\n    REFRESH_CACHED_ACCESS_TOKEN = \"4\"\n}\n\nexport enum JsonTypes {\n    Jwt = \"JWT\",\n    Jwk = \"JWK\"\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { OIDC_DEFAULT_SCOPES } from \"@azure/msal-common\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\n\n/**\n * Constants\n */\nexport const BrowserConstants = {\n    /**\n     * Interaction in progress cache value\n     */\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\n    /**\n     * Invalid grant error code\n     */\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    /**\n     * Default popup window width\n     */\n    POPUP_WIDTH: 483,\n    /**\n     * Default popup window height\n     */\n    POPUP_HEIGHT: 600,\n    /**\n     * Name of the popup window starts with\n     */\n    POPUP_NAME_PREFIX: \"msal\",\n    /**\n     * Default popup monitor poll interval in milliseconds\n     */\n    POLL_INTERVAL_MS: 50,\n    /**\n     * Msal-browser SKU\n     */\n    MSAL_SKU: \"msal.js.browser\",\n};\n\nexport const NativeConstants = {\n    CHANNEL_ID: \"53ee284d-920a-4b59-9d30-a60315b26836\",\n    PREFERRED_EXTENSION_ID: \"ppnbnpeolgkicgegkbkbjmhlideopiji\",\n    MATS_TELEMETRY: \"MATS\"\n};\n\nexport enum NativeExtensionMethod {\n    HandshakeRequest = \"Handshake\",\n    HandshakeResponse = \"HandshakeResponse\",\n    GetToken = \"GetToken\",\n    Response = \"Response\"\n}\n\nexport enum BrowserCacheLocation {\n    LocalStorage = \"localStorage\",\n    SessionStorage = \"sessionStorage\",\n    MemoryStorage = \"memoryStorage\"\n}\n\n/**\n * HTTP Request types supported by MSAL.\n */\nexport enum HTTP_REQUEST_TYPE {\n    GET = \"GET\",\n    POST = \"POST\"\n}\n\n/**\n * Temporary cache keys for MSAL, deleted after any request.\n */\nexport enum TemporaryCacheKeys {\n    AUTHORITY = \"authority\",\n    ACQUIRE_TOKEN_ACCOUNT = \"acquireToken.account\",\n    SESSION_STATE = \"session.state\",\n    REQUEST_STATE = \"request.state\",\n    NONCE_IDTOKEN = \"nonce.id_token\",\n    ORIGIN_URI = \"request.origin\",\n    RENEW_STATUS = \"token.renew.status\",\n    URL_HASH = \"urlHash\",\n    REQUEST_PARAMS = \"request.params\",\n    SCOPES = \"scopes\",\n    INTERACTION_STATUS_KEY = \"interaction.status\",\n    CCS_CREDENTIAL = \"ccs.credential\",\n    CORRELATION_ID = \"request.correlationId\",\n    NATIVE_REQUEST = \"request.native\"\n}\n\n/**\n * Cache keys stored in-memory\n */\nexport enum InMemoryCacheKeys {\n    WRAPPER_SKU = \"wrapper.sku\",\n    WRAPPER_VER = \"wrapper.version\"\n}\n\n/**\n * API Codes for Telemetry purposes. \n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\n * 0-99 Silent Flow\n * 800-899 Auth Code Flow\n */\nexport enum ApiId {\n    acquireTokenRedirect = 861,\n    acquireTokenPopup = 862,\n    ssoSilent = 863,\n    acquireTokenSilent_authCode = 864,\n    handleRedirectPromise = 865,\n    acquireTokenByCode = 866,\n    acquireTokenSilent_silentFlow = 61,\n    logout = 961,\n    logoutPopup = 962\n}\n\n/*\n * Interaction type of the API - used for state and telemetry\n */\nexport enum InteractionType {\n    Redirect = \"redirect\",\n    Popup = \"popup\",\n    Silent = \"silent\",\n    None = \"none\"\n}\n\n/**\n * Types of interaction currently in progress.\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\n */\nexport enum InteractionStatus {\n    /**\n     * Initial status before interaction occurs\n     */\n    Startup = \"startup\",\n    /**\n     * Status set when all login calls occuring\n     */\n    Login = \"login\",\n    /**\n     * Status set when logout call occuring\n     */ \n    Logout = \"logout\",\n    /**\n     * Status set for acquireToken calls\n     */\n    AcquireToken = \"acquireToken\",\n    /**\n     * Status set for ssoSilent calls\n     */\n    SsoSilent = \"ssoSilent\",\n    /**\n     * Status set when handleRedirect in progress\n     */\n    HandleRedirect = \"handleRedirect\",\n    /**\n     * Status set when interaction is complete\n     */\n    None = \"none\"\n}\n\nexport const DEFAULT_REQUEST: RedirectRequest|PopupRequest = {\n    scopes: OIDC_DEFAULT_SCOPES\n};\n\n/**\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\n */\nexport const KEY_FORMAT_JWK = \"jwk\";\n\n// Supported wrapper SKUs\nexport enum WrapperSKU {\n    React = \"@azure/msal-react\",\n    Angular = \"@azure/msal-angular\"\n}\n\n// DatabaseStorage Constants\nexport const DB_NAME = \"msal.db\";\nexport const DB_VERSION = 1;\nexport const DB_TABLE_NAME = `${DB_NAME}.keys`;\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"../utils/Constants\";\n\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const AuthErrorMessage = {\n    unexpectedError: {\n        code: \"unexpected_error\",\n        desc: \"Unexpected error in authentication.\"\n    }\n};\n\n/**\n * General error class thrown by the MSAL.js library.\n */\nexport class AuthError extends Error {\n\n    /**\n     * Short string denoting error\n     */\n    errorCode: string;\n\n    /**\n     * Detailed description of error\n     */\n    errorMessage: string;\n\n    /**\n     * Describes the subclass of an error\n     */\n    subError: string;\n\n    /**\n     * CorrelationId associated with the error\n     */\n    correlationId: string;\n\n    constructor(errorCode?: string, errorMessage?: string, suberror?: string) {\n        const errorString = errorMessage ? `${errorCode}: ${errorMessage}` : errorCode;\n        super(errorString);\n        Object.setPrototypeOf(this, AuthError.prototype);\n\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\n        this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n        this.subError = suberror || Constants.EMPTY_STRING;\n        this.name = \"AuthError\";\n    }\n\n    setCorrelationId(correlationId: string): void {\n        this.correlationId = correlationId;\n    }\n\n    /**\n     * Creates an error that is thrown when something unexpected happens in the library.\n     * @param errDesc\n     */\n    static createUnexpectedError(errDesc: string): AuthError {\n        return new AuthError(AuthErrorMessage.unexpectedError.code, `${AuthErrorMessage.unexpectedError.desc}: ${errDesc}`);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-common\";\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const BrowserConfigurationAuthErrorMessage = {\n    redirectUriNotSet: {\n        code: \"redirect_uri_empty\",\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\n    },\n    postLogoutUriNotSet: {\n        code: \"post_logout_uri_empty\",\n        desc: \"A post logout redirect has not been set.\"\n    },\n    storageNotSupportedError: {\n        code: \"storage_not_supported\",\n        desc: \"Given storage configuration option was not supported.\"\n    },\n    noRedirectCallbacksSet: {\n        code: \"no_redirect_callbacks\",\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n    },\n    invalidCallbackObject: {\n        code: \"invalid_callback_object\",\n        desc: \"The object passed for the callback was invalid. \" +\n          \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n    },\n    stubPcaInstanceCalled: {\n        code: \"stubbed_public_client_application_called\",\n        desc: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\"\n    },\n    inMemRedirectUnavailable: {\n        code: \"in_mem_redirect_unavailable\",\n        desc: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\"\n    }\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserConfigurationAuthError extends AuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"BrowserConfigurationAuthError\";\n\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n    }\n\n    /**\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\n     */\n    static createRedirectUriEmptyError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code,\n            BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\n    }\n\n    /**\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\n     */\n    static createPostLogoutRedirectUriEmptyError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code,\n            BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\n    }\n\n    /**\n     * Creates error thrown when given storage location is not supported.\n     * @param givenStorageLocation \n     */\n    static createStorageNotSupportedError(givenStorageLocation: string): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, `${BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc} Given Location: ${givenStorageLocation}`);\n    }\n\n    /**\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\n     */\n    static createRedirectCallbacksNotSetError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, \n            BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\n    }\n\n    /**\n     * Creates error thrown when the stub instance of PublicClientApplication is called.\n     */\n    static createStubPcaInstanceCalledError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.code,\n            BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.desc);\n    }\n\n    /*\n     * Create an error thrown when in-memory storage is used and storeAuthStateInCookie=false.\n     */\n    static createInMemoryRedirectUnavailableError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.code, BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, AccountInfo, Logger, PerformanceCallbackFunction } from \"@azure/msal-common\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\nimport { WrapperSKU } from \"../utils/BrowserConstants\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { ITokenCache } from \"../cache/ITokenCache\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\n\nexport interface IPublicClientApplication {\n    initialize(): Promise<void>;\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult>;\n    acquireTokenRedirect(request: RedirectRequest): Promise<void>;\n    acquireTokenSilent(silentRequest: SilentRequest): Promise<AuthenticationResult>;\n    acquireTokenByCode(request: AuthorizationCodeRequest): Promise<AuthenticationResult>;\n    addEventCallback(callback: Function): string | null;\n    removeEventCallback(callbackId: string): void;\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string;\n    removePerformanceCallback(callbackId: string): boolean;\n    enableAccountStorageEvents(): void;\n    disableAccountStorageEvents(): void;\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null;\n    getAccountByLocalId(localId: string): AccountInfo | null;\n    getAccountByUsername(userName: string): AccountInfo | null;\n    getAllAccounts(): AccountInfo[];\n    handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null>;\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult>;\n    loginRedirect(request?: RedirectRequest): Promise<void>;\n    logout(logoutRequest?: EndSessionRequest): Promise<void>;\n    logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void>;\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void>;\n    ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult>;\n    getTokenCache(): ITokenCache;\n    getLogger(): Logger;\n    setLogger(logger: Logger): void;\n    setActiveAccount(account: AccountInfo | null): void;\n    getActiveAccount(): AccountInfo | null;\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void;\n    setNavigationClient(navigationClient: INavigationClient): void;\n    getConfiguration(): BrowserConfiguration;\n}\n\nexport const stubbedPublicClientApplication: IPublicClientApplication = {\n    initialize: () => {\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    acquireTokenPopup: () => {\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    acquireTokenRedirect: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\t\n    acquireTokenSilent: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\n    acquireTokenByCode: () => {\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    getAllAccounts: () => {\n        return [];\t\n    },\t\n    getAccountByHomeId: () => {\n        return null;\n    },\n    getAccountByUsername: () => {\t\n        return null;\t\n    },\t\n    getAccountByLocalId: () => {\n        return null;\n    },\n    handleRedirectPromise: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\t\n    loginPopup: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\t\n    loginRedirect: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\t\n    logout: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\t\n    logoutRedirect: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\n    logoutPopup: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\n    ssoSilent: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\n    addEventCallback: () => {\n        return null;\n    },\n    removeEventCallback: () => {\n        return;\n    },\n    addPerformanceCallback: () => {\n        return \"\";\n    },\n    removePerformanceCallback: () => {\n        return false;\n    },\n    enableAccountStorageEvents: () => {\n        return;\n    },\n    disableAccountStorageEvents: () => {\n        return;\n    },\n    getTokenCache: () => {\n        throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\n    },\n    getLogger: () => {\n        throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\n    },\n    setLogger: () => {\n        return;\n    },\n    setActiveAccount: () => {\n        return;\n    },\n    getActiveAccount: () => {\n        return null;\n    },\n    initializeWrapperLibrary: () => {\n        return;\n    },\n    setNavigationClient: () => {\n        return;\n    },\n    getConfiguration: () => {\n        throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\n    }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { LoggerOptions } from \"../config/ClientConfiguration\";\nimport { Constants } from \"../utils/Constants\";\n\n/**\n * Options for logger messages.\n */\nexport type LoggerMessageOptions = {\n    logLevel: LogLevel,\n    containsPii?: boolean,\n    context?: string,\n    correlationId?: string\n};\n\n/**\n * Log message level.\n */\nexport enum LogLevel {\n    Error,\n    Warning,\n    Info,\n    Verbose,\n    Trace\n}\n\n/**\n * Callback to send the messages to.\n */\nexport interface ILoggerCallback {\n    (level: LogLevel, message: string, containsPii: boolean): void;\n}\n\n/**\n * Class which facilitates logging of messages to a specific place.\n */\nexport class Logger {\n\n    // Correlation ID for request, usually set by user.\n    private correlationId: string;\n\n    // Current log level, defaults to info.\n    private level: LogLevel = LogLevel.Info;\n\n    // Boolean describing whether PII logging is allowed.\n    private piiLoggingEnabled: boolean;\n\n    // Callback to send messages to.\n    private localCallback: ILoggerCallback;\n\n    // Package name implementing this logger\n    private packageName: string;\n\n    // Package version implementing this logger\n    private packageVersion: string;\n\n    constructor(loggerOptions: LoggerOptions, packageName?: string, packageVersion?: string) {\n        const defaultLoggerCallback = () => {\n            return;\n        };\n        this.localCallback = loggerOptions.loggerCallback || defaultLoggerCallback;\n        this.piiLoggingEnabled = loggerOptions.piiLoggingEnabled || false;\n        this.level = typeof(loggerOptions.logLevel) === \"number\" ? loggerOptions.logLevel : LogLevel.Info;\n        this.correlationId = loggerOptions.correlationId || Constants.EMPTY_STRING;\n\n        this.packageName = packageName || Constants.EMPTY_STRING;\n        this.packageVersion = packageVersion || Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Create new Logger with existing configurations.\n     */\n    public clone(packageName: string, packageVersion: string, correlationId?: string): Logger {\n        return new Logger({loggerCallback: this.localCallback, piiLoggingEnabled: this.piiLoggingEnabled, logLevel: this.level, correlationId: correlationId || this.correlationId}, packageName, packageVersion);\n    }\n\n    /**\n     * Log message with required options.\n     */\n    private logMessage(logMessage: string, options: LoggerMessageOptions): void {\n        if ((options.logLevel > this.level) || (!this.piiLoggingEnabled && options.containsPii)) {\n            return;\n        }\n        const timestamp = new Date().toUTCString();\n\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\n        let logHeader: string;\n        if (!StringUtils.isEmpty(options.correlationId)) {\n            logHeader = `[${timestamp}] : [${options.correlationId}]`;\n        } else if (!StringUtils.isEmpty(this.correlationId)) {\n            logHeader = `[${timestamp}] : [${this.correlationId}]`;\n        } else {\n            logHeader = `[${timestamp}]`;\n        }\n\n        const log = `${logHeader} : ${this.packageName}@${this.packageVersion} : ${LogLevel[options.logLevel]} - ${logMessage}`;\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\n        this.executeCallback(options.logLevel, log, options.containsPii || false);\n    }\n\n    /**\n     * Execute callback with message.\n     */\n    executeCallback(level: LogLevel, message: string, containsPii: boolean): void {\n        if (this.localCallback) {\n            this.localCallback(level, message, containsPii);\n        }\n    }\n\n    /**\n     * Logs error messages.\n     */\n    error(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs error messages with PII.\n     */\n    errorPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs warning messages.\n     */\n    warning(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs warning messages with PII.\n     */\n    warningPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs info messages.\n     */\n    info(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs info messages with PII.\n     */\n    infoPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs verbose messages.\n     */\n    verbose(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs verbose messages with PII.\n     */\n    verbosePii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs trace messages.\n     */\n    trace(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs trace messages with PII.\n     */\n    tracePii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Returns whether PII Logging is enabled or not.\n     */\n    isPiiLoggingEnabled(): boolean {\n        return this.piiLoggingEnabled || false;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\n\n/**\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const ClientAuthErrorMessage = {\n    clientInfoDecodingError: {\n        code: \"client_info_decoding_error\",\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\n    },\n    clientInfoEmptyError: {\n        code: \"client_info_empty_error\",\n        desc: \"The client info was empty. Please review the trace to determine the root cause.\"\n    },\n    tokenParsingError: {\n        code: \"token_parsing_error\",\n        desc: \"Token cannot be parsed. Please review stack trace to determine root cause.\"\n    },\n    nullOrEmptyToken: {\n        code: \"null_or_empty_token\",\n        desc: \"The token is null or empty. Please review the trace to determine the root cause.\"\n    },\n    endpointResolutionError: {\n        code: \"endpoints_resolution_error\",\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\n    },\n    networkError: {\n        code: \"network_error\",\n        desc: \"Network request failed. Please check network trace to determine root cause.\"\n    },\n    unableToGetOpenidConfigError: {\n        code: \"openid_config_error\",\n        desc: \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\"\n    },\n    hashNotDeserialized: {\n        code: \"hash_not_deserialized\",\n        desc: \"The hash parameters could not be deserialized. Please review the trace to determine the root cause.\"\n    },\n    blankGuidGenerated: {\n        code: \"blank_guid_generated\",\n        desc: \"The guid generated was blank. Please review the trace to determine the root cause.\"\n    },\n    invalidStateError: {\n        code: \"invalid_state\",\n        desc: \"State was not the expected format. Please check the logs to determine whether the request was sent using ProtocolUtils.setRequestState().\"\n    },\n    stateMismatchError: {\n        code: \"state_mismatch\",\n        desc: \"State mismatch error. Please check your network. Continued requests may cause cache overflow.\"\n    },\n    stateNotFoundError: {\n        code: \"state_not_found\",\n        desc: \"State not found\"\n    },\n    nonceMismatchError: {\n        code: \"nonce_mismatch\",\n        desc: \"Nonce mismatch error. This may be caused by a race condition in concurrent requests.\"\n    },\n    nonceNotFoundError: {\n        code: \"nonce_not_found\",\n        desc: \"nonce not found\"\n    },\n    noTokensFoundError: {\n        code: \"no_tokens_found\",\n        desc: \"No tokens were found for the given scopes, and no authorization code was passed to acquireToken. You must retrieve an authorization code before making a call to acquireToken().\"\n    },\n    multipleMatchingTokens: {\n        code: \"multiple_matching_tokens\",\n        desc: \"The cache contains multiple tokens satisfying the requirements. \" +\n            \"Call AcquireToken again providing more requirements such as authority or account.\"\n    },\n    multipleMatchingAccounts: {\n        code: \"multiple_matching_accounts\",\n        desc: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\"\n    },\n    multipleMatchingAppMetadata: {\n        code: \"multiple_matching_appMetadata\",\n        desc: \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\"\n    },\n    tokenRequestCannotBeMade: {\n        code: \"request_cannot_be_made\",\n        desc: \"Token request cannot be made without authorization code or refresh token.\"\n    },\n    appendEmptyScopeError: {\n        code: \"cannot_append_empty_scope\",\n        desc: \"Cannot append null or empty scope to ScopeSet. Please check the stack trace for more info.\"\n    },\n    removeEmptyScopeError: {\n        code: \"cannot_remove_empty_scope\",\n        desc: \"Cannot remove null or empty scope from ScopeSet. Please check the stack trace for more info.\"\n    },\n    appendScopeSetError: {\n        code: \"cannot_append_scopeset\",\n        desc: \"Cannot append ScopeSet due to error.\"\n    },\n    emptyInputScopeSetError: {\n        code: \"empty_input_scopeset\",\n        desc: \"Empty input ScopeSet cannot be processed.\"\n    },\n    DeviceCodePollingCancelled: {\n        code: \"device_code_polling_cancelled\",\n        desc: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\"\n    },\n    DeviceCodeExpired: {\n        code: \"device_code_expired\",\n        desc: \"Device code is expired.\"\n    },\n    DeviceCodeUnknownError: {\n        code: \"device_code_unknown_error\",\n        desc: \"Device code stopped polling for unknown reasons.\"\n    },\n    NoAccountInSilentRequest: {\n        code: \"no_account_in_silent_request\",\n        desc: \"Please pass an account object, silent flow is not supported without account information\"\n    },\n    invalidCacheRecord: {\n        code: \"invalid_cache_record\",\n        desc: \"Cache record object was null or undefined.\"\n    },\n    invalidCacheEnvironment: {\n        code: \"invalid_cache_environment\",\n        desc: \"Invalid environment when attempting to create cache entry\"\n    },\n    noAccountFound: {\n        code: \"no_account_found\",\n        desc: \"No account found in cache for given key.\"\n    },\n    CachePluginError: {\n        code: \"no cache plugin set on CacheManager\",\n        desc: \"ICachePlugin needs to be set before using readFromStorage or writeFromStorage\"\n    },\n    noCryptoObj: {\n        code: \"no_crypto_object\",\n        desc: \"No crypto object detected. This is required for the following operation: \"\n    },\n    invalidCacheType: {\n        code: \"invalid_cache_type\",\n        desc: \"Invalid cache type\"\n    },\n    unexpectedAccountType: {\n        code: \"unexpected_account_type\",\n        desc: \"Unexpected account type.\"\n    },\n    unexpectedCredentialType: {\n        code: \"unexpected_credential_type\",\n        desc: \"Unexpected credential type.\"\n    },\n    invalidAssertion: {\n        code: \"invalid_assertion\",\n        desc: \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\"\n    },\n    invalidClientCredential: {\n        code: \"invalid_client_credential\",\n        desc: \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\"\n    },\n    tokenRefreshRequired: {\n        code: \"token_refresh_required\",\n        desc: \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\"\n    },\n    userTimeoutReached: {\n        code: \"user_timeout_reached\",\n        desc: \"User defined timeout for device code polling reached\",\n    },\n    tokenClaimsRequired: {\n        code: \"token_claims_cnf_required_for_signedjwt\",\n        desc: \"Cannot generate a POP jwt if the token_claims are not populated\"\n    },\n    noAuthorizationCodeFromServer: {\n        code: \"authorization_code_missing_from_server_response\",\n        desc: \"Server response does not contain an authorization code to proceed\"\n    },\n    noAzureRegionDetected: {\n        code: \"no_azure_region_detected\",\n        desc: \"No azure region was detected and no fallback was made available\"\n    },\n    accessTokenEntityNullError: {\n        code: \"access_token_entity_null\",\n        desc: \"Access token entity is null, please check logs and cache to ensure a valid access token is present.\"\n    },\n    bindingKeyNotRemovedError: {\n        code: \"binding_key_not_removed\",\n        desc: \"Could not remove the credential's binding key from storage.\"\n    },\n    logoutNotSupported: {\n        code: \"end_session_endpoint_not_supported\",\n        desc: \"Provided authority does not support logout.\"\n    },\n    keyIdMissing: {\n        code: \"key_id_missing\",\n        desc: \"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.\"\n    }\n};\n\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nexport class ClientAuthError extends AuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"ClientAuthError\";\n\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\n    }\n\n    /**\n     * Creates an error thrown when client info object doesn't decode correctly.\n     * @param caughtError\n     */\n    static createClientInfoDecodingError(caughtError: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code,\n            `${ClientAuthErrorMessage.clientInfoDecodingError.desc} Failed with error: ${caughtError}`);\n    }\n\n    /**\n     * Creates an error thrown if the client info is empty.\n     * @param rawClientInfo\n     */\n    static createClientInfoEmptyError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoEmptyError.code,\n            `${ClientAuthErrorMessage.clientInfoEmptyError.desc}`);\n    }\n\n    /**\n     * Creates an error thrown when the id token extraction errors out.\n     * @param err\n     */\n    static createTokenParsingError(caughtExtractionError: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenParsingError.code,\n            `${ClientAuthErrorMessage.tokenParsingError.desc} Failed with error: ${caughtExtractionError}`);\n    }\n\n    /**\n     * Creates an error thrown when the id token string is null or empty.\n     * @param invalidRawTokenString\n     */\n    static createTokenNullOrEmptyError(invalidRawTokenString: string) : ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyToken.code,\n            `${ClientAuthErrorMessage.nullOrEmptyToken.desc} Raw Token Value: ${invalidRawTokenString}`);\n    }\n\n    /**\n     * Creates an error thrown when the endpoint discovery doesn't complete correctly.\n     */\n    static createEndpointDiscoveryIncompleteError(errDetail: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code,\n            `${ClientAuthErrorMessage.endpointResolutionError.desc} Detail: ${errDetail}`);\n    }\n\n    /**\n     * Creates an error thrown when the fetch client throws\n     */\n    static createNetworkError(endpoint: string, errDetail: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.networkError.code,\n            `${ClientAuthErrorMessage.networkError.desc} | Fetch client threw: ${errDetail} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n\n    /**\n     * Creates an error thrown when the openid-configuration endpoint cannot be reached or does not contain the required data\n     */\n    static createUnableToGetOpenidConfigError(errDetail: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.unableToGetOpenidConfigError.code,\n            `${ClientAuthErrorMessage.unableToGetOpenidConfigError.desc} Attempted to retrieve endpoints from: ${errDetail}`);\n    }\n\n    /**\n     * Creates an error thrown when the hash cannot be deserialized.\n     * @param hashParamObj\n     */\n    static createHashNotDeserializedError(hashParamObj: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.hashNotDeserialized.code,\n            `${ClientAuthErrorMessage.hashNotDeserialized.desc} Given Object: ${hashParamObj}`);\n    }\n\n    /**\n     * Creates an error thrown when the state cannot be parsed.\n     * @param invalidState\n     */\n    static createInvalidStateError(invalidState: string, errorString?: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code,\n            `${ClientAuthErrorMessage.invalidStateError.desc} Invalid State: ${invalidState}, Root Err: ${errorString}`);\n    }\n\n    /**\n     * Creates an error thrown when two states do not match.\n     */\n    static createStateMismatchError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.stateMismatchError.code,\n            ClientAuthErrorMessage.stateMismatchError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the state is not present\n     * @param missingState\n     */\n    static createStateNotFoundError(missingState: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.stateNotFoundError.code,\n            `${ClientAuthErrorMessage.stateNotFoundError.desc}:  ${missingState}`);\n    }\n\n    /**\n     * Creates an error thrown when the nonce does not match.\n     */\n    static createNonceMismatchError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code,\n            ClientAuthErrorMessage.nonceMismatchError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the mnonce is not present\n     * @param missingNonce\n     */\n    static createNonceNotFoundError(missingNonce: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.nonceNotFoundError.code,\n            `${ClientAuthErrorMessage.nonceNotFoundError.desc}:  ${missingNonce}`);\n    }\n\n    /**\n     * Throws error when multiple tokens are in cache.\n     */\n    static createMultipleMatchingTokensInCacheError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingTokens.code,\n            `${ClientAuthErrorMessage.multipleMatchingTokens.desc}.`);\n    }\n\n    /**\n     * Throws error when multiple accounts are in cache for the given params\n     */\n    static createMultipleMatchingAccountsInCacheError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAccounts.code,\n            ClientAuthErrorMessage.multipleMatchingAccounts.desc);\n    }\n\n    /**\n     * Throws error when multiple appMetada are in cache for the given clientId.\n     */\n    static createMultipleMatchingAppMetadataInCacheError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAppMetadata.code,\n            ClientAuthErrorMessage.multipleMatchingAppMetadata.desc);\n    }\n\n    /**\n     * Throws error when no auth code or refresh token is given to ServerTokenRequestParameters.\n     */\n    static createTokenRequestCannotBeMadeError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCannotBeMade.code, ClientAuthErrorMessage.tokenRequestCannotBeMade.desc);\n    }\n\n    /**\n     * Throws error when attempting to append a null, undefined or empty scope to a set\n     * @param givenScope\n     */\n    static createAppendEmptyScopeToSetError(givenScope: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.appendEmptyScopeError.code, `${ClientAuthErrorMessage.appendEmptyScopeError.desc} Given Scope: ${givenScope}`);\n    }\n\n    /**\n     * Throws error when attempting to append a null, undefined or empty scope to a set\n     * @param givenScope\n     */\n    static createRemoveEmptyScopeFromSetError(givenScope: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.removeEmptyScopeError.code, `${ClientAuthErrorMessage.removeEmptyScopeError.desc} Given Scope: ${givenScope}`);\n    }\n\n    /**\n     * Throws error when attempting to append null or empty ScopeSet.\n     * @param appendError\n     */\n    static createAppendScopeSetError(appendError: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.appendScopeSetError.code, `${ClientAuthErrorMessage.appendScopeSetError.desc} Detail Error: ${appendError}`);\n    }\n\n    /**\n     * Throws error if ScopeSet is null or undefined.\n     * @param givenScopeSet\n     */\n    static createEmptyInputScopeSetError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.emptyInputScopeSetError.code, `${ClientAuthErrorMessage.emptyInputScopeSetError.desc}`);\n    }\n\n    /**\n     * Throws error if user sets CancellationToken.cancel = true during polling of token endpoint during device code flow\n     */\n    static createDeviceCodeCancelledError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodePollingCancelled.code, `${ClientAuthErrorMessage.DeviceCodePollingCancelled.desc}`);\n    }\n\n    /**\n     * Throws error if device code is expired\n     */\n    static createDeviceCodeExpiredError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeExpired.code, `${ClientAuthErrorMessage.DeviceCodeExpired.desc}`);\n    }\n\n    /**\n     * Throws error if device code is expired\n     */\n    static createDeviceCodeUnknownError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeUnknownError.code, `${ClientAuthErrorMessage.DeviceCodeUnknownError.desc}`);\n    }\n\n    /**\n     * Throws error when silent requests are made without an account object\n     */\n    static createNoAccountInSilentRequestError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.NoAccountInSilentRequest.code, `${ClientAuthErrorMessage.NoAccountInSilentRequest.desc}`);\n    }\n\n    /**\n     * Throws error when cache record is null or undefined.\n     */\n    static createNullOrUndefinedCacheRecord(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheRecord.code, ClientAuthErrorMessage.invalidCacheRecord.desc);\n    }\n\n    /**\n     * Throws error when provided environment is not part of the CloudDiscoveryMetadata object\n     */\n    static createInvalidCacheEnvironmentError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheEnvironment.code, ClientAuthErrorMessage.invalidCacheEnvironment.desc);\n    }\n\n    /**\n     * Throws error when account is not found in cache.\n     */\n    static createNoAccountFoundError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.noAccountFound.code, ClientAuthErrorMessage.noAccountFound.desc);\n    }\n\n    /**\n     * Throws error if ICachePlugin not set on CacheManager.\n     */\n    static createCachePluginError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.CachePluginError.code, `${ClientAuthErrorMessage.CachePluginError.desc}`);\n    }\n\n    /**\n     * Throws error if crypto object not found.\n     * @param operationName\n     */\n    static createNoCryptoObjectError(operationName: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.noCryptoObj.code, `${ClientAuthErrorMessage.noCryptoObj.desc}${operationName}`);\n    }\n\n    /**\n     * Throws error if cache type is invalid.\n     */\n    static createInvalidCacheTypeError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheType.code, `${ClientAuthErrorMessage.invalidCacheType.desc}`);\n    }\n\n    /**\n     * Throws error if unexpected account type.\n     */\n    static createUnexpectedAccountTypeError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedAccountType.code, `${ClientAuthErrorMessage.unexpectedAccountType.desc}`);\n    }\n\n    /**\n     * Throws error if unexpected credential type.\n     */\n    static createUnexpectedCredentialTypeError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedCredentialType.code, `${ClientAuthErrorMessage.unexpectedCredentialType.desc}`);\n    }\n\n    /**\n     * Throws error if client assertion is not valid.\n     */\n    static createInvalidAssertionError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidAssertion.code, `${ClientAuthErrorMessage.invalidAssertion.desc}`);\n    }\n\n    /**\n     * Throws error if client assertion is not valid.\n     */\n    static createInvalidCredentialError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidClientCredential.code, `${ClientAuthErrorMessage.invalidClientCredential.desc}`);\n    }\n\n    /**\n     * Throws error if token cannot be retrieved from cache due to refresh being required.\n     */\n    static createRefreshRequiredError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRefreshRequired.code, ClientAuthErrorMessage.tokenRefreshRequired.desc);\n    }\n\n    /**\n     * Throws error if the user defined timeout is reached.\n     */\n    static createUserTimeoutReachedError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.userTimeoutReached.code, ClientAuthErrorMessage.userTimeoutReached.desc);\n    }\n\n    /*\n     * Throws error if token claims are not populated for a signed jwt generation\n     */\n    static createTokenClaimsRequiredError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenClaimsRequired.code, ClientAuthErrorMessage.tokenClaimsRequired.desc);\n    }\n\n    /**\n     * Throws error when the authorization code is missing from the server response\n     */\n    static createNoAuthCodeInServerResponseError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.noAuthorizationCodeFromServer.code, ClientAuthErrorMessage.noAuthorizationCodeFromServer.desc);\n    }\n\n    static createBindingKeyNotRemovedError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.bindingKeyNotRemovedError.code, ClientAuthErrorMessage.bindingKeyNotRemovedError.desc);\n    }\n\n    /**\n     * Thrown when logout is attempted for an authority that doesnt have an end_session_endpoint\n     */\n    static createLogoutNotSupportedError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.logoutNotSupported.code, ClientAuthErrorMessage.logoutNotSupported.desc);\n    }\n\n    /**\n     * Create an error when kid attribute is missing from a PoP token's cache record\n     */\n    static createKeyIdMissingError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.keyIdMissing.code, ClientAuthErrorMessage.keyIdMissing.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { DecodedAuthToken } from \"../account/DecodedAuthToken\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\n\n/**\n * @hidden\n */\nexport class StringUtils {\n\n    /**\n     * decode a JWT\n     *\n     * @param authToken\n     */\n    static decodeAuthToken(authToken: string): DecodedAuthToken {\n        if (StringUtils.isEmpty(authToken)) {\n            throw ClientAuthError.createTokenNullOrEmptyError(authToken);\n        }\n        const tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\n        const matches = tokenPartsRegex.exec(authToken);\n        if (!matches || matches.length < 4) {\n            throw ClientAuthError.createTokenParsingError(`Given token is malformed: ${JSON.stringify(authToken)}`);\n        }\n        const crackedToken: DecodedAuthToken = {\n            header: matches[1],\n            JWSPayload: matches[2],\n            JWSSig: matches[3]\n        };\n        return crackedToken;\n    }\n\n    /**\n     * Check if a string is empty.\n     *\n     * @param str\n     */\n    static isEmpty(str?: string): boolean {\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\n    }\n\n    /**\n     * Check if stringified object is empty\n     * @param strObj \n     */\n    static isEmptyObj(strObj?: string): boolean {\n        if (strObj && !StringUtils.isEmpty(strObj)) {\n            try {\n                const obj = JSON.parse(strObj);\n                return Object.keys(obj).length === 0;\n            } catch (e) {}\n        }\n        return true;\n    }\n\n    static startsWith(str: string, search: string): boolean {\n        return str.indexOf(search) === 0;\n    }\n\n    static endsWith(str: string, search: string): boolean {\n        return (str.length >= search.length) && (str.lastIndexOf(search) === (str.length - search.length));\n    }\n\n    /**\n     * Parses string into an object.\n     *\n     * @param query\n     */\n    static queryStringToObject<T>(query: string): T {\n        const obj: {} = {};\n        const params = query.split(\"&\");\n        const decode = (s: string) => decodeURIComponent(s.replace(/\\+/g, \" \"));\n        params.forEach((pair) => {\n            if (pair.trim()) {\n                const [key, value] = pair.split(/=(.+)/g, 2); // Split on the first occurence of the '=' character\n                if (key && value) {\n                    obj[decode(key)] = decode(value);\n                }\n            }\n        });\n        return obj as T;\n    }\n\n    /**\n     * Trims entries in an array.\n     *\n     * @param arr\n     */\n    static trimArrayEntries(arr: Array<string>): Array<string> {\n        return arr.map(entry => entry.trim());\n    }\n\n    /**\n     * Removes empty strings from array\n     * @param arr\n     */\n    static removeEmptyStringsFromArray(arr: Array<string>): Array<string> {\n        return arr.filter(entry => {\n            return !StringUtils.isEmpty(entry);\n        });\n    }\n\n    /**\n     * Attempts to parse a string into JSON\n     * @param str\n     */\n    static jsonParseHelper<T>(str: string): T | null {\n        try {\n            return JSON.parse(str) as T;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    /**\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\n     * @param input String to match against\n     */\n    static matchPattern(pattern: string, input: string): boolean {\n        /**\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\n         */\n        const regex: RegExp = new RegExp(pattern.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\*/g, \"[^ ]*\").replace(/\\?/g, \"\\\\\\?\")); // eslint-disable-line security/detect-non-literal-regexp\n\n        return regex.test(input);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport enum EventType {\n    INITIALIZE_START = \"msal:initializeStart\",\n    INITIALIZE_END = \"msal:initializeEnd\",\n    ACCOUNT_ADDED = \"msal:accountAdded\",\n    ACCOUNT_REMOVED = \"msal:accountRemoved\",\n    LOGIN_START = \"msal:loginStart\",\n    LOGIN_SUCCESS = \"msal:loginSuccess\",\n    LOGIN_FAILURE = \"msal:loginFailure\",\n    ACQUIRE_TOKEN_START = \"msal:acquireTokenStart\",\n    ACQUIRE_TOKEN_SUCCESS = \"msal:acquireTokenSuccess\",\n    ACQUIRE_TOKEN_FAILURE = \"msal:acquireTokenFailure\",\n    ACQUIRE_TOKEN_NETWORK_START = \"msal:acquireTokenFromNetworkStart\",\n    SSO_SILENT_START = \"msal:ssoSilentStart\",\n    SSO_SILENT_SUCCESS = \"msal:ssoSilentSuccess\",\n    SSO_SILENT_FAILURE = \"msal:ssoSilentFailure\",\n    ACQUIRE_TOKEN_BY_CODE_START = \"msal:acquireTokenByCodeStart\",\n    ACQUIRE_TOKEN_BY_CODE_SUCCESS = \"msal:acquireTokenByCodeSuccess\",\n    ACQUIRE_TOKEN_BY_CODE_FAILURE = \"msal:acquireTokenByCodeFailure\",\n    HANDLE_REDIRECT_START = \"msal:handleRedirectStart\",\n    HANDLE_REDIRECT_END = \"msal:handleRedirectEnd\",\n    POPUP_OPENED = \"msal:popupOpened\",\n    LOGOUT_START = \"msal:logoutStart\",\n    LOGOUT_SUCCESS = \"msal:logoutSuccess\",\n    LOGOUT_FAILURE = \"msal:logoutFailure\",\n    LOGOUT_END = \"msal:logoutEnd\"\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Authority types supported by MSAL.\n */\nexport enum AuthorityType {\n    Default,\n    Adfs\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, AuthError, AccountInfo } from \"@azure/msal-common\";\nimport { EventType } from \"./EventType\";\nimport { InteractionStatus, InteractionType } from \"../utils/BrowserConstants\";\nimport { PopupRequest, RedirectRequest, SilentRequest, SsoSilentRequest, EndSessionRequest } from \"..\";\n\nexport type EventMessage = {\n    eventType: EventType;\n    interactionType: InteractionType | null;\n    payload: EventPayload;\n    error: EventError;\n    timestamp: number;\n};\n\nexport type PopupEvent = {\n    popupWindow: Window;\n};\n\nexport type EventPayload = AccountInfo | PopupRequest | RedirectRequest | SilentRequest | SsoSilentRequest | EndSessionRequest | AuthenticationResult | PopupEvent | null;\n\nexport type EventError = AuthError | Error | null;\n\nexport type EventCallbackFunction = (message: EventMessage) => void;\n\nexport class EventMessageUtils {\n\n    /**\n     * Gets interaction status from event message\n     * @param message\n     * @param currentStatus\n     */\n    static getInteractionStatusFromEvent(message: EventMessage, currentStatus?: InteractionStatus): InteractionStatus|null {\n        switch (message.eventType) {\n            case EventType.LOGIN_START:\n                return InteractionStatus.Login;\n            case EventType.SSO_SILENT_START:\n                return InteractionStatus.SsoSilent;\n            case EventType.ACQUIRE_TOKEN_START:\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n                    return InteractionStatus.AcquireToken;\n                }\n                break;\n            case EventType.HANDLE_REDIRECT_START:\n                return InteractionStatus.HandleRedirect;\n            case EventType.LOGOUT_START:\n                return InteractionStatus.Logout;\n            case EventType.SSO_SILENT_SUCCESS:\n            case EventType.SSO_SILENT_FAILURE:\n                if (currentStatus && currentStatus !== InteractionStatus.SsoSilent) {\n                    // Prevent this event from clearing any status other than ssoSilent\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.LOGOUT_END:\n                if (currentStatus && currentStatus !== InteractionStatus.Logout) {\n                    // Prevent this event from clearing any status other than logout\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.HANDLE_REDIRECT_END:\n                if (currentStatus && currentStatus !== InteractionStatus.HandleRedirect) {\n                    // Prevent this event from clearing any status other than handleRedirect\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.LOGIN_SUCCESS:\n            case EventType.LOGIN_FAILURE:\n            case EventType.ACQUIRE_TOKEN_SUCCESS:\n            case EventType.ACQUIRE_TOKEN_FAILURE:\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n                    if (currentStatus && currentStatus !== InteractionStatus.Login && currentStatus !== InteractionStatus.AcquireToken) {\n                        // Prevent this event from clearing any status other than login or acquireToken\n                        break;\n                    }\n                    return InteractionStatus.None;\n                }\n                break;\n            default:\n                break;\n        }\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { Separators, Constants } from \"../utils/Constants\";\n\n/**\n * Client info object which consists of two IDs. Need to add more info here.\n */\nexport type ClientInfo = {\n    uid: string,\n    utid: string\n};\n\n/**\n * Function to build a client info object from server clientInfo string\n * @param rawClientInfo\n * @param crypto\n */\nexport function buildClientInfo(rawClientInfo: string, crypto: ICrypto): ClientInfo {\n    if (StringUtils.isEmpty(rawClientInfo)) {\n        throw ClientAuthError.createClientInfoEmptyError();\n    }\n\n    try {\n        const decodedClientInfo: string = crypto.base64Decode(rawClientInfo);\n        return JSON.parse(decodedClientInfo) as ClientInfo;\n    } catch (e) {\n        throw ClientAuthError.createClientInfoDecodingError(e);\n    }\n}\n\n/**\n * Function to build a client info object from cached homeAccountId string\n * @param homeAccountId \n */\nexport function buildClientInfoFromHomeAccountId(homeAccountId: string): ClientInfo {\n    if (StringUtils.isEmpty(homeAccountId)) {\n        throw ClientAuthError.createClientInfoDecodingError(\"Home account ID was empty.\");\n    }\n    const clientInfoParts: string[] = homeAccountId.split(Separators.CLIENT_INFO_SEPARATOR, 2);\n    return {\n        uid: clientInfoParts[0],\n        utid: clientInfoParts.length < 2 ? Constants.EMPTY_STRING : clientInfoParts[1]\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Separators,\n    CacheAccountType,\n    CacheType,\n    Constants,\n} from \"../../utils/Constants\";\nimport { Authority } from \"../../authority/Authority\";\nimport { AuthToken } from \"../../account/AuthToken\";\nimport { ICrypto } from \"../../crypto/ICrypto\";\nimport { buildClientInfo } from \"../../account/ClientInfo\";\nimport { StringUtils } from \"../../utils/StringUtils\";\nimport { AccountInfo } from \"../../account/AccountInfo\";\nimport { ClientAuthError } from \"../../error/ClientAuthError\";\nimport { AuthorityType } from \"../../authority/AuthorityType\";\nimport { Logger } from \"../../logger/Logger\";\nimport { TokenClaims } from \"../../account/TokenClaims\";\n\n/**\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\n *\n * Key : Value Schema\n *\n * Key: <home_account_id>-<environment>-<realm*>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\n *      authorityType: Accounts authority type as a string\n *      name: Full name for the account, including given name and family name,\n *      clientInfo: Full base64 encoded client info received from ESTS\n *      lastModificationTime: last time this entity was modified in the cache\n *      lastModificationApp:\n *      idTokenClaims: Object containing claims parsed from ID token\n *      nativeAccountId: Account identifier on the native device\n * }\n */\nexport class AccountEntity {\n    homeAccountId: string;\n    environment: string;\n    realm: string;\n    localAccountId: string;\n    username: string;\n    authorityType: string;\n    name?: string;\n    clientInfo?: string;\n    lastModificationTime?: string;\n    lastModificationApp?: string;\n    cloudGraphHostName?: string;\n    msGraphHost?: string;\n    idTokenClaims?: TokenClaims;\n    nativeAccountId?: string;\n\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId(): string {\n        const accountId: Array<string> = [this.homeAccountId, this.environment];\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\n     */\n    generateAccountKey(): string {\n        return AccountEntity.generateAccountCacheKey({\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId\n        });\n    }\n\n    /**\n     * returns the type of the cache (in this case account)\n     */\n    generateType(): number {\n        switch (this.authorityType) {\n            case CacheAccountType.ADFS_ACCOUNT_TYPE:\n                return CacheType.ADFS;\n            case CacheAccountType.MSAV1_ACCOUNT_TYPE:\n                return CacheType.MSA;\n            case CacheAccountType.MSSTS_ACCOUNT_TYPE:\n                return CacheType.MSSTS;\n            case CacheAccountType.GENERIC_ACCOUNT_TYPE:\n                return CacheType.GENERIC;\n            default: {\n                throw ClientAuthError.createUnexpectedAccountTypeError();\n            }\n        }\n    }\n\n    /**\n     * Returns the AccountInfo interface for this account.\n     */\n    getAccountInfo(): AccountInfo {\n        return {\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n            name: this.name,\n            idTokenClaims: this.idTokenClaims,\n            nativeAccountId: this.nativeAccountId\n        };\n    }\n\n    /**\n     * Generates account key from interface\n     * @param accountInterface\n     */\n    static generateAccountCacheKey(accountInterface: AccountInfo): string {\n        const accountKey = [\n            accountInterface.homeAccountId,\n            accountInterface.environment || Constants.EMPTY_STRING,\n            accountInterface.tenantId || Constants.EMPTY_STRING,\n        ];\n\n        return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\n     * @param clientInfo\n     * @param authority\n     * @param idToken\n     * @param policy\n     */\n    static createAccount(\n        clientInfo: string,\n        homeAccountId: string,\n        idToken: AuthToken,\n        authority?: Authority,\n        cloudGraphHostName?: string,\n        msGraphHost?: string,\n        environment?: string,\n        nativeAccountId?: string\n    ): AccountEntity {\n        const account: AccountEntity = new AccountEntity();\n\n        account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\n        account.clientInfo = clientInfo;\n        account.homeAccountId = homeAccountId;\n        account.nativeAccountId = nativeAccountId;\n\n        const env = environment || (authority && authority.getPreferredCache());\n\n        if (!env) {\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\n        }\n\n        account.environment = env;\n        // non AAD scenarios can have empty realm\n        account.realm = idToken?.claims?.tid || Constants.EMPTY_STRING;\n\n        if (idToken) {\n            account.idTokenClaims = idToken.claims;\n\n            // How do you account for MSA CID here?\n            account.localAccountId = idToken?.claims?.oid || idToken?.claims?.sub || Constants.EMPTY_STRING;\n\n            /*\n             * In B2C scenarios the emails claim is used instead of preferred_username and it is an array. In most cases it will contain a single email.\n             * This field should not be relied upon if a custom policy is configured to return more than 1 email.\n             */\n            account.username = idToken?.claims?.preferred_username || (idToken?.claims?.emails? idToken.claims.emails[0]: Constants.EMPTY_STRING);\n            account.name = idToken?.claims?.name;\n        }\n\n        account.cloudGraphHostName = cloudGraphHostName;\n        account.msGraphHost = msGraphHost;\n\n        return account;\n    }\n\n    /**\n     * Builds non-AAD/ADFS account.\n     * @param authority\n     * @param idToken\n     */\n    static createGenericAccount(\n        homeAccountId: string,\n        idToken: AuthToken,\n        authority?: Authority,\n        cloudGraphHostName?: string,\n        msGraphHost?: string,\n        environment?: string\n    ): AccountEntity {\n        const account: AccountEntity = new AccountEntity();\n\n        account.authorityType = (authority && authority.authorityType === AuthorityType.Adfs) ? CacheAccountType.ADFS_ACCOUNT_TYPE : CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        account.homeAccountId = homeAccountId;\n        // non AAD scenarios can have empty realm\n        account.realm = Constants.EMPTY_STRING;\n\n        const env = environment || authority && authority.getPreferredCache();\n\n        if (!env) {\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\n        }\n\n        if (idToken) {\n            // How do you account for MSA CID here?\n            account.localAccountId = idToken?.claims?.oid || idToken?.claims?.sub || Constants.EMPTY_STRING;\n            // upn claim for most ADFS scenarios\n            account.username = idToken?.claims?.upn || Constants.EMPTY_STRING;\n            account.name = idToken?.claims?.name || Constants.EMPTY_STRING;\n            account.idTokenClaims = idToken?.claims;\n        }\n\n        account.environment = env;\n\n        account.cloudGraphHostName = cloudGraphHostName;\n        account.msGraphHost = msGraphHost;\n\n        /*\n         * add uniqueName to claims\n         * account.name = idToken.claims.uniqueName;\n         */\n\n        return account;\n    }\n\n    /**\n     * Generate HomeAccountId from server response\n     * @param serverClientInfo\n     * @param authType\n     */\n    static generateHomeAccountId(serverClientInfo: string, authType: AuthorityType, logger: Logger, cryptoObj: ICrypto, idToken?: AuthToken): string {\n\n        const accountId = idToken?.claims?.sub ? idToken.claims.sub : Constants.EMPTY_STRING;\n\n        // since ADFS does not have tid and does not set client_info\n        if (authType === AuthorityType.Adfs) {\n            return accountId;\n        }\n\n        // for cases where there is clientInfo\n        if (serverClientInfo) {\n            try {\n                const clientInfo = buildClientInfo(serverClientInfo, cryptoObj);\n                if (!StringUtils.isEmpty(clientInfo.uid) && !StringUtils.isEmpty(clientInfo.utid)) {\n                    return `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`;\n                }\n            } catch (e) {}\n        }\n\n        // default to \"sub\" claim\n        logger.verbose(\"No client info in response\");\n        return accountId;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccountEntity(entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"localAccountId\") &&\n            entity.hasOwnProperty(\"username\") &&\n            entity.hasOwnProperty(\"authorityType\")\n        );\n    }\n\n    /**\n     * Helper function to determine whether 2 accountInfo objects represent the same account\n     * @param accountA\n     * @param accountB\n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\n     */\n    static accountInfoIsEqual(accountA: AccountInfo | null, accountB: AccountInfo | null, compareClaims?: boolean): boolean {\n        if (!accountA || !accountB) {\n            return false;\n        }\n\n        let claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\n        if (compareClaims) {\n            const accountAClaims = (accountA.idTokenClaims || {}) as TokenClaims;\n            const accountBClaims = (accountB.idTokenClaims || {}) as TokenClaims;\n\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\n            claimsMatch = (accountAClaims.iat === accountBClaims.iat) &&\n            (accountAClaims.nonce === accountBClaims.nonce);\n        }\n\n        return (accountA.homeAccountId === accountB.homeAccountId) &&\n            (accountA.localAccountId === accountB.localAccountId) &&\n            (accountA.username === accountB.username) &&\n            (accountA.tenantId === accountB.tenantId) &&\n            (accountA.environment === accountB.environment) &&\n            (accountA.nativeAccountId === accountB.nativeAccountId) &&\n            claimsMatch;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\n\n/**\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\n */\nexport const InteractionRequiredServerErrorMessage = [\n    \"interaction_required\",\n    \"consent_required\",\n    \"login_required\"\n];\n\nexport const InteractionRequiredAuthSubErrorMessage = [\n    \"message_only\",\n    \"additional_action\",\n    \"basic_action\",\n    \"user_password_expired\",\n    \"consent_required\"\n];\n\n/**\n * Interaction required errors defined by the SDK\n */\nexport const InteractionRequiredAuthErrorMessage = {\n    noTokensFoundError: {\n        code: \"no_tokens_found\",\n        desc: \"No refresh token found in the cache. Please sign-in.\"\n    },\n    native_account_unavailable: {\n        code: \"native_account_unavailable\",\n        desc: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\"\n    }\n};\n\n/**\n * Error thrown when user interaction is required.\n */\nexport class InteractionRequiredAuthError extends AuthError {\n\n    constructor(errorCode?: string, errorMessage?: string, subError?: string) {\n        super(errorCode, errorMessage, subError);\n        this.name = \"InteractionRequiredAuthError\";\n\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\n    }\n\n    /**\n     * Helper function used to determine if an error thrown by the server requires interaction to resolve\n     * @param errorCode \n     * @param errorString \n     * @param subError \n     */\n    static isInteractionRequiredError(errorCode?: string, errorString?: string, subError?: string) : boolean {\n        const isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n        const isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n        const isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredServerErrorMessage.some((irErrorCode) => {\n            return errorString.indexOf(irErrorCode) > -1;\n        });\n\n        return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\n    }\n\n    /**\n     * Creates an error thrown when the authorization code required for a token request is null or empty.\n     */\n    static createNoTokensFoundError(): InteractionRequiredAuthError {\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.noTokensFoundError.code, InteractionRequiredAuthErrorMessage.noTokensFoundError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the native broker returns ACCOUNT_UNAVAILABLE status, indicating that the account was removed and interactive sign-in is required\n     * @returns \n     */\n    static createNativeAccountUnavailableError(): InteractionRequiredAuthError {\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.native_account_unavailable.code, InteractionRequiredAuthErrorMessage.native_account_unavailable.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as React from \"react\";\nimport { IPublicClientApplication, stubbedPublicClientApplication, Logger, InteractionStatus, AccountInfo } from \"@azure/msal-browser\";\n\nexport interface IMsalContext {\n    instance: IPublicClientApplication;\n    inProgress: InteractionStatus;\n    accounts: AccountInfo[];\n    logger: Logger;\n}\n\n/*\n * Stubbed context implementation\n * Only used when there is no provider, which is an unsupported scenario\n */\nconst defaultMsalContext: IMsalContext = {\n    instance: stubbedPublicClientApplication,\n    inProgress: InteractionStatus.None,\n    accounts: [],\n    logger: new Logger({})\n};\n\nexport const MsalContext = React.createContext<IMsalContext>(\n    defaultMsalContext\n);\nexport const MsalConsumer = MsalContext.Consumer;\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\nimport { AccountInfo } from \"@azure/msal-browser\";\n\ntype FaaCFunction = <T>(args: T) => React.ReactNode;\n\nexport function getChildrenOrFunction<T>(\n    children: React.ReactNode | FaaCFunction,\n    args: T\n): React.ReactNode {\n    if (typeof children === \"function\") {\n        return children(args);\n    }\n    return children;\n}\n\n/*\n * Utility types\n * Reference: https://github.com/piotrwitek/utility-types\n */\ntype SetDifference<A, B> = A extends B ? never : A;\ntype SetComplement<A, A1 extends A> = SetDifference<A, A1>;\nexport type Subtract<T extends T1, T1 extends object> = Pick<T,SetComplement<keyof T, keyof T1>>;\n\n/**\n * Helper function to determine whether 2 arrays are equal\n * Used to avoid unnecessary state updates\n * @param arrayA \n * @param arrayB \n */\nexport function accountArraysAreEqual(arrayA: Array<AccountIdentifiers>, arrayB: Array<AccountIdentifiers>): boolean {\n    if (arrayA.length !== arrayB.length) {\n        return false;\n    }\n\n    const comparisonArray = [...arrayB];\n\n    return arrayA.every((elementA) => {\n        const elementB = comparisonArray.shift();\n        if (!elementA || !elementB) {\n            return false;\n        }\n\n        return (elementA.homeAccountId === elementB.homeAccountId) && \n               (elementA.localAccountId === elementB.localAccountId) &&\n               (elementA.username === elementB.username);\n    });\n}\n\nexport function getAccountByIdentifiers(allAccounts: AccountInfo[], accountIdentifiers: AccountIdentifiers): AccountInfo | null {\n    if (allAccounts.length > 0 && (accountIdentifiers.homeAccountId || accountIdentifiers.localAccountId || accountIdentifiers.username)) {\n        const matchedAccounts = allAccounts.filter(accountObj => {\n            if (accountIdentifiers.username && accountIdentifiers.username.toLowerCase() !== accountObj.username.toLowerCase()) {\n                return false;\n            }\n            if (accountIdentifiers.homeAccountId && accountIdentifiers.homeAccountId.toLowerCase() !== accountObj.homeAccountId.toLowerCase()) {\n                return false;\n            }\n            if (accountIdentifiers.localAccountId && accountIdentifiers.localAccountId.toLowerCase() !== accountObj.localAccountId.toLowerCase()) {\n                return false;\n            }\n\n            return true;\n        });\n\n        return matchedAccounts[0] || null;\n    } else {\n        return null;\n    }\n}\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-react\";\nexport const version = \"1.4.3\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React, { useEffect, useReducer, PropsWithChildren, useMemo} from \"react\";\nimport {\n    IPublicClientApplication,\n    EventMessage,\n    EventMessageUtils,\n    InteractionStatus,\n    Logger,\n    WrapperSKU,\n    AccountInfo\n} from \"@azure/msal-browser\";\nimport { MsalContext, IMsalContext } from \"./MsalContext\";\nimport { accountArraysAreEqual } from \"./utils/utilities\";\nimport { name as SKU, version } from \"./packageMetadata\";\n\nexport type MsalProviderProps = PropsWithChildren<{\n    instance: IPublicClientApplication;\n}>;\n\ntype MsalState = {\n    inProgress: InteractionStatus;\n    accounts: AccountInfo[];\n};\n\nenum MsalProviderActionType {\n    UNBLOCK_INPROGRESS = \"UNBLOCK_INPROGRESS\",\n    EVENT = \"EVENT\"\n}\n\ntype MsalProviderReducerAction = {\n    type: MsalProviderActionType,\n    payload: {\n        logger: Logger;\n        instance: IPublicClientApplication;\n        message?: EventMessage;\n    };\n};\n\n/**\n * Returns the next inProgress and accounts state based on event message\n * @param previousState \n * @param action \n */\nconst reducer = (previousState: MsalState, action: MsalProviderReducerAction): MsalState => {\n    const { type, payload } = action;\n    let newInProgress = previousState.inProgress;\n\n    switch (type) {\n        case MsalProviderActionType.UNBLOCK_INPROGRESS:\n            if (previousState.inProgress === InteractionStatus.Startup){\n                newInProgress = InteractionStatus.None;\n                payload.logger.info(\"MsalProvider - handleRedirectPromise resolved, setting inProgress to 'none'\");\n            }\n            break;\n        case MsalProviderActionType.EVENT:\n            const message = payload.message as EventMessage;\n            const status = EventMessageUtils.getInteractionStatusFromEvent(message, previousState.inProgress);\n            if (status) {\n                payload.logger.info(`MsalProvider - ${message.eventType} results in setting inProgress from ${previousState.inProgress} to ${status}`);\n                newInProgress = status;\n            }\n            break;\n        default:\n            throw new Error(`Unknown action type: ${type}`);\n    }\n    \n    const currentAccounts = payload.instance.getAllAccounts();\n    if (newInProgress !== previousState.inProgress && \n        !accountArraysAreEqual(currentAccounts, previousState.accounts)) {\n        // Both inProgress and accounts changed\n        return {\n            ...previousState,\n            inProgress: newInProgress,\n            accounts: currentAccounts\n        };\n    } else if (newInProgress !== previousState.inProgress) {\n        // Only only inProgress changed\n        return {\n            ...previousState,\n            inProgress: newInProgress\n        };\n    } else if (!accountArraysAreEqual(currentAccounts, previousState.accounts)) {\n        // Only accounts changed\n        return {\n            ...previousState,\n            accounts: currentAccounts\n        };\n    } else {\n        // Nothing changed\n        return previousState;\n    }\n};\n\n/**\n * MSAL context provider component. This must be rendered above any other components that use MSAL.\n */\nexport function MsalProvider({instance, children}: MsalProviderProps): React.ReactElement {\n    useEffect(() => {\n        instance.initializeWrapperLibrary(WrapperSKU.React, version);\n    }, [instance]);\n    // Create a logger instance for msal-react with the same options as PublicClientApplication\n    const logger = useMemo(() => {\n        return instance.getLogger().clone(SKU, version);\n    }, [instance]);\n\n    const [state, updateState] = useReducer(reducer, undefined, () => {\n        // Lazy initialization of the initial state\n        return {\n            inProgress: InteractionStatus.Startup,\n            accounts: instance.getAllAccounts()\n        };\n    });\n    \n    useEffect(() => {\n        const callbackId = instance.addEventCallback((message: EventMessage) => {\n            updateState({\n                payload: {\n                    instance,\n                    logger,\n                    message\n                }, \n                type: MsalProviderActionType.EVENT\n            });\n        });\n        logger.verbose(`MsalProvider - Registered event callback with id: ${callbackId}`);\n\n        instance.initialize().then(() => {\n            instance.handleRedirectPromise().catch(() => {\n                // Errors should be handled by listening to the LOGIN_FAILURE event\n                return;\n            }).finally(() => {\n                /*\n                 * If handleRedirectPromise returns a cached promise the necessary events may not be fired\n                 * This is a fallback to prevent inProgress from getting stuck in 'startup'\n                 */\n                updateState({\n                    payload: {\n                        instance,\n                        logger\n                    },\n                    type: MsalProviderActionType.UNBLOCK_INPROGRESS \n                });\n            });\n        });\n\n        return () => {\n            // Remove callback when component unmounts or accounts change\n            if (callbackId) {\n                logger.verbose(`MsalProvider - Removing event callback ${callbackId}`);\n                instance.removeEventCallback(callbackId);\n            }\n        };\n    }, [instance, logger]);\n\n    const contextValue: IMsalContext = {\n        instance,\n        inProgress: state.inProgress,\n        accounts: state.accounts,\n        logger\n    };\n\n    return (\n        <MsalContext.Provider value={contextValue}>\n            {children}\n        </MsalContext.Provider>\n    );\n}\n\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { useContext } from \"react\";\nimport { IMsalContext, MsalContext } from \"../MsalContext\";\n\n/**\n * Returns Msal Context values\n */\nexport const useMsal = (): IMsalContext => useContext(MsalContext);\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { useState, useEffect } from \"react\";\nimport { useMsal } from \"./useMsal\";\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\nimport { AccountInfo } from \"@azure/msal-browser\";\nimport { getAccountByIdentifiers } from \"../utils/utilities\";\n\nfunction isAuthenticated(allAccounts: AccountInfo[], matchAccount?: AccountIdentifiers): boolean {\n    if(matchAccount && (matchAccount.username || matchAccount.homeAccountId || matchAccount.localAccountId)) {\n        return !!getAccountByIdentifiers(allAccounts, matchAccount);\n    }   \n\n    return allAccounts.length > 0;\n}\n\n/**\n * Returns whether or not a user is currently signed-in. Optionally provide 1 or more accountIdentifiers to determine if a specific user is signed-in\n * @param matchAccount \n */\nexport function useIsAuthenticated(matchAccount?: AccountIdentifiers): boolean {\n    const { accounts: allAccounts } = useMsal();\n\n    const [hasAuthenticated, setHasAuthenticated] = useState<boolean>(() => isAuthenticated(allAccounts, matchAccount));\n\n    useEffect(() => {\n        setHasAuthenticated(isAuthenticated(allAccounts, matchAccount));\n    }, [allAccounts, matchAccount]);\n\n    return hasAuthenticated;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React, { PropsWithChildren, useMemo } from \"react\";\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\nimport { getChildrenOrFunction } from \"../utils/utilities\";\nimport { useMsal } from \"../hooks/useMsal\";\nimport { useIsAuthenticated } from \"../hooks/useIsAuthenticated\";\nimport { InteractionStatus } from \"@azure/msal-browser\";\n\nexport type AuthenticatedTemplateProps = PropsWithChildren<AccountIdentifiers>;\n\n/**\n * Renders child components if user is authenticated\n * @param props \n */\nexport function AuthenticatedTemplate({ username, homeAccountId, localAccountId, children }: AuthenticatedTemplateProps): React.ReactElement|null {\n    const context = useMsal();\n    const accountIdentifier: AccountIdentifiers = useMemo(() => {\n        return {\n            username,\n            homeAccountId,\n            localAccountId\n        };\n    }, [username, homeAccountId, localAccountId]);\n    const isAuthenticated = useIsAuthenticated(accountIdentifier);\n\n    if (isAuthenticated && context.inProgress !== InteractionStatus.Startup) {\n        return (\n            <React.Fragment>\n                {getChildrenOrFunction(children, context)}\n            </React.Fragment>\n        );\n    }\n    return null;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React, { PropsWithChildren, useMemo } from \"react\";\nimport { useMsal } from \"../hooks/useMsal\";\nimport { useIsAuthenticated } from \"../hooks/useIsAuthenticated\";\nimport { getChildrenOrFunction } from \"../utils/utilities\";\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\nimport { InteractionStatus } from \"@azure/msal-browser\";\n\nexport type UnauthenticatedTemplateProps = PropsWithChildren<AccountIdentifiers>;\n\n/**\n * Renders child components if user is unauthenticated\n * @param props \n */\nexport function UnauthenticatedTemplate({ username, homeAccountId, localAccountId, children }: UnauthenticatedTemplateProps): React.ReactElement|null {\n    const context = useMsal();\n    const accountIdentifier: AccountIdentifiers = useMemo(() => {\n        return {\n            username,\n            homeAccountId,\n            localAccountId\n        };\n    }, [username, homeAccountId, localAccountId]);\n    const isAuthenticated = useIsAuthenticated(accountIdentifier);\n\n    if (!isAuthenticated && context.inProgress !== InteractionStatus.Startup && context.inProgress !== InteractionStatus.HandleRedirect) {\n        return (\n            <React.Fragment>\n                {getChildrenOrFunction(children, context)}\n            </React.Fragment>\n        );\n    }\n    return null;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { useState, useEffect } from \"react\";\nimport { AccountInfo, IPublicClientApplication, AccountEntity } from \"@azure/msal-browser\";\nimport { useMsal } from \"./useMsal\";\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\nimport { getAccountByIdentifiers } from \"../utils/utilities\";\n\nfunction getAccount(instance: IPublicClientApplication, accountIdentifiers?: AccountIdentifiers): AccountInfo | null {\n    if (!accountIdentifiers || (!accountIdentifiers.homeAccountId && !accountIdentifiers.localAccountId && !accountIdentifiers.username)) {\n        // If no account identifiers are provided, return active account\n        return instance.getActiveAccount();\n    }\n\n    return getAccountByIdentifiers(instance.getAllAccounts(), accountIdentifiers);\n}\n\n/**\n * Given 1 or more accountIdentifiers, returns the Account object if the user is signed-in\n * @param accountIdentifiers \n */\nexport function useAccount(accountIdentifiers?: AccountIdentifiers): AccountInfo | null {\n    const { instance, inProgress, logger } = useMsal();\n\n    const [account, setAccount] = useState<AccountInfo|null>(() => getAccount(instance, accountIdentifiers));\n\n    useEffect(() => {\n        setAccount((currentAccount: AccountInfo | null) => {\n            const nextAccount = getAccount(instance, accountIdentifiers);\n            if (!AccountEntity.accountInfoIsEqual(currentAccount, nextAccount, true)) {\n                logger.info(\"useAccount - Updating account\");\n                return nextAccount;\n            }\n\n            return currentAccount;\n        });\n    }, [inProgress, accountIdentifiers, instance, logger]);\n\n    return account;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-browser\";\n\nexport const ReactAuthErrorMessage = {\n    invalidInteractionType: {\n        code: \"invalid_interaction_type\",\n        desc: \"The provided interaction type is invalid.\"\n    },\n    unableToFallbackToInteraction: {\n        code: \"unable_to_fallback_to_interaction\",\n        desc: \"Interaction is required but another interaction is already in progress. Please try again when the current interaction is complete.\"\n    }\n};\n\nexport class ReactAuthError extends AuthError {\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n\n        Object.setPrototypeOf(this, ReactAuthError.prototype);\n        this.name = \"ReactAuthError\";\n    }\n\n    static createInvalidInteractionTypeError(): ReactAuthError {\n        return new ReactAuthError(ReactAuthErrorMessage.invalidInteractionType.code, ReactAuthErrorMessage.invalidInteractionType.desc);\n    }\n\n    static createUnableToFallbackToInteractionError(): ReactAuthError {\n        return new ReactAuthError(ReactAuthErrorMessage.unableToFallbackToInteraction.code, ReactAuthErrorMessage.unableToFallbackToInteraction.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React, { PropsWithChildren, useMemo } from \"react\";\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\nimport { getChildrenOrFunction } from \"../utils/utilities\";\nimport { useMsal } from \"../hooks/useMsal\";\nimport { MsalAuthenticationResult, useMsalAuthentication } from \"../hooks/useMsalAuthentication\";\nimport { useIsAuthenticated } from \"../hooks/useIsAuthenticated\";\nimport { InteractionType, PopupRequest, RedirectRequest, SsoSilentRequest, InteractionStatus } from \"@azure/msal-browser\";\nimport { IMsalContext } from \"../MsalContext\";\n\nexport type MsalAuthenticationProps = PropsWithChildren<AccountIdentifiers & {\n    interactionType: InteractionType;\n    authenticationRequest?: PopupRequest|RedirectRequest|SsoSilentRequest;\n    loadingComponent?: React.ElementType<IMsalContext>;\n    errorComponent?: React.ElementType<MsalAuthenticationResult>;\n}>;\n\n/**\n * Attempts to authenticate user if not already authenticated, then renders child components\n * @param props\n */\nexport function MsalAuthenticationTemplate({ \n    interactionType, \n    username, \n    homeAccountId, \n    localAccountId,\n    authenticationRequest, \n    loadingComponent: LoadingComponent,\n    errorComponent: ErrorComponent,\n    children \n}: MsalAuthenticationProps): React.ReactElement|null {\n    const accountIdentifier: AccountIdentifiers = useMemo(() => {\n        return {\n            username,\n            homeAccountId,\n            localAccountId\n        };\n    }, [username, homeAccountId, localAccountId]);\n    const context = useMsal();\n    const msalAuthResult = useMsalAuthentication(interactionType, authenticationRequest, accountIdentifier);\n    const isAuthenticated = useIsAuthenticated(accountIdentifier);\n\n    if (msalAuthResult.error && context.inProgress === InteractionStatus.None) {\n        if (!!ErrorComponent) {\n            return <ErrorComponent {...msalAuthResult} />;\n        }\n\n        throw msalAuthResult.error;\n    }\n    \n    if (isAuthenticated) {\n        return (\n            <React.Fragment>\n                {getChildrenOrFunction(children, msalAuthResult)}\n            </React.Fragment>\n        );\n    } \n    \n    if (!!LoadingComponent && context.inProgress !== InteractionStatus.None) {\n        return <LoadingComponent {...context} />;\n    }\n\n    return null;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { useCallback, useEffect, useState, useRef } from \"react\";\nimport { PopupRequest, RedirectRequest, SsoSilentRequest, InteractionType, AuthenticationResult, AuthError, EventMessage, EventType, InteractionStatus, SilentRequest, InteractionRequiredAuthError, OIDC_DEFAULT_SCOPES } from \"@azure/msal-browser\";\nimport { useIsAuthenticated } from \"./useIsAuthenticated\";\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\nimport { useMsal } from \"./useMsal\";\nimport { useAccount } from \"./useAccount\";\nimport { ReactAuthError } from \"../error/ReactAuthError\";\n\nexport type MsalAuthenticationResult = {\n    login: (callbackInteractionType?: InteractionType | undefined, callbackRequest?: PopupRequest | RedirectRequest | SilentRequest) => Promise<AuthenticationResult | null>; \n    acquireToken: (callbackInteractionType?: InteractionType | undefined, callbackRequest?: SilentRequest | undefined) => Promise<AuthenticationResult | null>;\n    result: AuthenticationResult|null;\n    error: AuthError|null;\n};\n\n/**\n * If a user is not currently signed in this hook invokes a login. Failed logins can be retried using the login callback returned.\n * If a user is currently signed in this hook attempts to acquire a token. Subsequent token requests can use the acquireToken callback returned.\n * Optionally provide a request object to be used in the login/acquireToken call.\n * Optionally provide a specific user that should be logged in.\n * @param interactionType \n * @param authenticationRequest \n * @param accountIdentifiers \n */\nexport function useMsalAuthentication(\n    interactionType: InteractionType, \n    authenticationRequest?: PopupRequest|RedirectRequest|SsoSilentRequest, \n    accountIdentifiers?: AccountIdentifiers\n): MsalAuthenticationResult {\n    const { instance, inProgress, logger } = useMsal();\n    const isAuthenticated = useIsAuthenticated(accountIdentifiers);\n    const account = useAccount(accountIdentifiers);\n    const [[result, error], setResponse] = useState<[AuthenticationResult|null, AuthError|null]>([null, null]);\n\n    // Boolean used to check if interaction is in progress in acquireTokenSilent fallback. Use Ref instead of state to prevent acquireToken function from being regenerated on each change to interactionInProgress value\n    const interactionInProgress = useRef(inProgress !== InteractionStatus.None);\n    useEffect(() => {\n        interactionInProgress.current = inProgress !== InteractionStatus.None;\n    }, [inProgress]);\n\n    // Flag used to control when the hook calls login/acquireToken\n    const shouldAcquireToken = useRef(true);\n    useEffect(() => {\n        if (!!error) {\n            // Errors should be handled by consuming component\n            shouldAcquireToken.current = false;\n            return;\n        }\n\n        if (!!result) {\n            // Token has already been acquired, consuming component/application is responsible for renewing\n            shouldAcquireToken.current = false;\n            return;\n        }\n    }, [error, result]);\n\n    const login = useCallback(async (callbackInteractionType?: InteractionType, callbackRequest?: PopupRequest|RedirectRequest|SsoSilentRequest): Promise<AuthenticationResult|null> => {\n        const loginType = callbackInteractionType || interactionType;\n        const loginRequest = callbackRequest || authenticationRequest;\n        switch (loginType) {\n            case InteractionType.Popup:\n                logger.verbose(\"useMsalAuthentication - Calling loginPopup\");\n                return instance.loginPopup(loginRequest as PopupRequest);\n            case InteractionType.Redirect:\n                // This promise is not expected to resolve due to full frame redirect\n                logger.verbose(\"useMsalAuthentication - Calling loginRedirect\");\n                return instance.loginRedirect(loginRequest as RedirectRequest).then(null);\n            case InteractionType.Silent:\n                logger.verbose(\"useMsalAuthentication - Calling ssoSilent\");\n                return instance.ssoSilent(loginRequest as SsoSilentRequest);\n            default:\n                throw ReactAuthError.createInvalidInteractionTypeError();\n        }\n    }, [instance, interactionType, authenticationRequest, logger]);\n\n    const acquireToken = useCallback(async (callbackInteractionType?: InteractionType, callbackRequest?: SilentRequest): Promise<AuthenticationResult|null> => {\n        const fallbackInteractionType = callbackInteractionType || interactionType;\n\n        let tokenRequest: SilentRequest;\n\n        if (callbackRequest) {\n            logger.trace(\"useMsalAuthentication - acquireToken - Using request provided in the callback\");\n            tokenRequest = {\n                ...callbackRequest\n            };\n        } else if (authenticationRequest) {\n            logger.trace(\"useMsalAuthentication - acquireToken - Using request provided in the hook\");\n            tokenRequest = {\n                ...authenticationRequest,\n                scopes: authenticationRequest.scopes || OIDC_DEFAULT_SCOPES\n            };\n        } else {\n            logger.trace(\"useMsalAuthentication - acquireToken - No request object provided, using default request.\");\n            tokenRequest = {\n                scopes: OIDC_DEFAULT_SCOPES\n            };\n        }\n        \n        if (!tokenRequest.account && account) {\n            logger.trace(\"useMsalAuthentication - acquireToken - Attaching account to request\");\n            tokenRequest.account = account;\n        }\n\n        const getToken = async (): Promise<AuthenticationResult|null> => {\n            logger.verbose(\"useMsalAuthentication - Calling acquireTokenSilent\");\n            return instance.acquireTokenSilent(tokenRequest).catch(async (e: AuthError) => {\n                if (e instanceof InteractionRequiredAuthError) {\n                    if (!interactionInProgress.current) {\n                        logger.error(\"useMsalAuthentication - Interaction required, falling back to interaction\");\n                        return login(fallbackInteractionType, tokenRequest);\n                    } else {\n                        logger.error(\"useMsalAuthentication - Interaction required but is already in progress. Please try again, if needed, after interaction completes.\");\n                        throw ReactAuthError.createUnableToFallbackToInteractionError();\n                    }\n                }\n\n                throw e;\n            });\n        };\n\n        return getToken().then((response: AuthenticationResult|null) => {\n            setResponse([response, null]);\n            return response;\n        }).catch((e: AuthError) => {\n            setResponse([null, e]);\n            throw e;\n        });\n    }, [instance, interactionType, authenticationRequest, logger, account, login]);\n\n    useEffect(() => {\n        const callbackId = instance.addEventCallback((message: EventMessage) => {\n            switch(message.eventType) {\n                case EventType.LOGIN_SUCCESS:\n                case EventType.SSO_SILENT_SUCCESS:\n                    if (message.payload) {\n                        setResponse([message.payload as AuthenticationResult, null]);\n                    }\n                    break;\n                case EventType.LOGIN_FAILURE:\n                case EventType.SSO_SILENT_FAILURE:\n                    if (message.error) {\n                        setResponse([null, message.error as AuthError]);\n                    }\n                    break;\n            }\n        });\n        logger.verbose(`useMsalAuthentication - Registered event callback with id: ${callbackId}`);\n\n        return () => {\n            if (callbackId) {\n                logger.verbose(`useMsalAuthentication - Removing event callback ${callbackId}`);\n                instance.removeEventCallback(callbackId);\n            }\n        };\n    }, [instance, logger]);\n\n    useEffect(() => {\n        if (shouldAcquireToken.current && inProgress === InteractionStatus.None) {\n            shouldAcquireToken.current = false;\n            if (!isAuthenticated) {\n                logger.info(\"useMsalAuthentication - No user is authenticated, attempting to login\");\n                login().catch(() => {\n                    // Errors are saved in state above\n                    return;\n                });\n            } else if (account) {\n                logger.info(\"useMsalAuthentication - User is authenticated, attempting to acquire token\");\n                acquireToken().catch(() => {\n                    // Errors are saved in state above\n                    return;\n                });\n            }\n        }\n    }, [isAuthenticated, account, inProgress, login, acquireToken, logger]);\n\n    return { \n        login, \n        acquireToken, \n        result, \n        error\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React from \"react\";\nimport { IMsalContext } from \"../MsalContext\";\nimport { useMsal } from \"../hooks/useMsal\";\nimport { Subtract } from \"../utils/utilities\";\n\nexport type WithMsalProps = {\n    msalContext: IMsalContext;\n};\n\n/**\n * Higher order component wraps provided component with msal by injecting msal context values into the component's props \n * @param Component \n */\nexport const withMsal = <P extends WithMsalProps>(Component: React.ComponentType<P>): React.FunctionComponent<Subtract<P,WithMsalProps>> => {\n    const ComponentWithMsal: React.FunctionComponent<Subtract<P,WithMsalProps>> = props => {\n        const msal = useMsal();\n        return <Component {...(props as P)} msalContext={msal} />;\n    };\n\n    const componentName =\n        Component.displayName || Component.name || \"Component\";\n    ComponentWithMsal.displayName = `withMsal(${componentName})`;\n\n    return ComponentWithMsal;\n};\n","import {isLocal } from '../components/structure/Version'; \r\n//change const var local to chage from localhost deployment and the azure site deployment\r\nlet url = \"\";  \r\n//Web urls associated\r\nconst webUrl = \"https://valtra-automation.azurewebsites.net\"; \r\nconst localUrl = \"http://localhost:3005\"; \r\n//Algorithm that changes the urls \r\nif (isLocal === false) { \r\n  url = webUrl; \r\n} else { \r\n  url = localUrl;\r\n} \r\n// TODO: make this a secret instead of an app enviroment type of thing... client id maybe\r\n\r\nexport const msalConfig = {\r\n  auth: {\r\n    clientId: \"b3efa5e9-61b3-43ea-84f7-dfc321dcae68\", \r\n    authority: \"https://login.microsoftonline.com/0abd75ee-31bd-4491-8c4c-7a1ff64b4f0f\", // This is a URL (e.g. https://login.microsoftonline.com/{your tenant ID})0abd75ee-31bd-4491-8c4c-7a1ff64b4f0f,,https://login.microsoftonline.com/stronghandtools.com/\r\n    redirectUri: url \r\n  },\r\n  cache: {\r\n    cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\r\n    storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\r\n  }\r\n};\r\n\r\n// Add scopes here for ID token to be used at Microsoft identity platform endpoints.\r\nexport const loginRequest = {\r\n scopes: [\"User.Read\"]\r\n};\r\n\r\n// Add the endpoints here for Microsoft Graph API services you'd like to use. can i add more endpints here?\r\nexport const graphConfig = {\r\n    graphMeEndpoint: \"https://graph.microsoft.com\",\r\n   \r\n};\r\nexport const protectedResources = {\r\n  graphMe: {\r\n      endpoint: \"https://graph.microsoft.com/v1.0/me\",\r\n      scopes: [\"User.Read\"],\r\n  },\r\n  apiHello: {\r\n      endpoint: \"http://localhost:3006/hello\",\r\n      scopes: [\"api://f2be1c04-63b0-4f81-bc6d-3fe120ac6712/access_as_user\"], // e.g. api://xxxxxx/access_as_user\r\n  },\r\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import React from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from \"../authentication/authConfig\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction handleLogin(instance) {\r\n    instance.loginPopup(loginRequest).catch(e => {\r\n        console.error(e);\r\n    });\r\n}\r\n\r\n/**\r\n * Renders a button which, when selected, will open a popup for login\r\n */\r\nexport const SignInButton = () => {\r\n    const { instance } = useMsal();\r\n\r\n    return ( \r\n        <div>\r\n        <Button variant=\"secondary\" className=\"ml-auto\" onClick={() => handleLogin(instance)}>Sign in</Button>\r\n        </div>\r\n    );\r\n} \r\n\r\n","import React from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction handleLogout(instance) {\r\n    instance.logoutPopup().catch(e => {\r\n        console.error(e);\r\n    });\r\n}\r\n\r\n/**\r\n * Renders a button which, when selected, will open a popup for logout\r\n */\r\nexport const SignOutButton = () => {\r\n    const { instance } = useMsal();\r\n\r\n    return ( \r\n        <Button variant=\"light\" className=\"ml-auto\" onClick={() => handleLogout(instance)}>Sign out</Button>\r\n    );\r\n} ","//react and otehr plugins\r\nimport React from 'react'\r\n//bootstrap\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Container from \"react-bootstrap/Container\";   \r\nimport Nav from \"react-bootstrap/Nav\"; \r\n//Azure Auth \r\nimport { useIsAuthenticated } from \"@azure/msal-react\";\r\n//components\r\nimport { SignInButton } from \"../SignInButton\";\r\nimport { SignOutButton } from \"../SignOutButton\"; \r\nimport { isproduction, Version } from \"./Version\"; \r\nimport { useMsal } from \"@azure/msal-react\";  \r\n// import { loginRequest, protectedResources } from \"../../authentication/authConfig\";\r\n\r\n\r\nconst NavBar = () => { \r\n    const isAuthenticated = useIsAuthenticated(); \r\n    const { accounts } = useMsal(); \r\n    // const {instance} = useMsal();\r\n    // instance.acquireTokenSilent({\r\n    //     scopes: protectedResources.apiHello.scopes,\r\n    //     account: accounts[0]\r\n    // }).then((res)=>{console.log(res)}).catch((err)=>{console.log(err)})\r\n    // // console.log(instance)\r\n    let name = accounts[0] && accounts[0].name;  \r\n    if (name === 'Andres Ruiz') { \r\n        name = 'Bozo'; \r\n    } else if (name === 'Angel Arellano' || name === 'Ramon Martinez') { \r\n        name = 'Please wait: Downloading Free Ram ...'\r\n    } \r\n    //Changes NavBar brand to VatraAuto Dev or ValtraAuto\r\n    let DevTitle = \"\"; \r\n    if (isproduction === true) { \r\n        DevTitle = \"Valtra-Automation\"; \r\n    } else { \r\n        DevTitle = \"ValtraAuto DEV\"; \r\n    }\r\n  return (  \r\n    <div>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <Navbar.Brand href=\"/\">{DevTitle}</Navbar.Brand>\r\n                    <Nav className=\"me-auto\">\r\n                    <Nav.Link href=\"/\">Home</Nav.Link>\r\n                    <Nav.Link href=\"/orders\">Orders</Nav.Link>\r\n                    <Nav.Link href=\"/fulfill\">Fulfill Orders</Nav.Link>\r\n                    <Nav.Link href=\"/products\">Shopify Products </Nav.Link> \r\n                    <Nav.Link href=\"/downloads\">Downloads</Nav.Link>\r\n                    <Nav.Link href=\"/documentation\">Documentation</Nav.Link> \r\n                    <Nav.Link href=\"/updates\">Updates</Nav.Link>\r\n                </Nav> \r\n                {isAuthenticated ? <SignOutButton /> : <SignInButton />} \r\n            </Container> \r\n        </Navbar>  \r\n        <p className=\"card-title\" style={{marginLeft: '.7rem'}}>Welcome {name}</p> \r\n        <p style={{marginLeft: '.7rem'}}><Version/></p> \r\n    </div>\r\n  )\r\n}\r\n/*\r\n<div>\r\n<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">DEV</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\"> \r\n                    <NavLink to='/' aria-current=\"page\" className={({isActive})=>isActive ? 'nav-link active ' : 'nav-link'}>Home</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\"> \r\n                    <NavLink to='/orders' aria-current=\"page\" className={({isActive})=>isActive ? 'nav-link active ' : 'nav-link'}>Orders</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\"> \r\n                    <NavLink to='/fulfill' aria-current=\"page\" className={({isActive})=>isActive ? 'nav-link active ' : 'nav-link'}>Fulfill Orders</NavLink>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>\r\n</div>*/\r\n\r\nexport default NavBar;\r\n","import * as React from \"react\";\nimport type { History, Location } from \"history\";\nimport { Action as NavigationType } from \"history\";\n\nimport type { RouteMatch } from \"./router\";\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport type Navigator = Pick<History, \"go\" | \"push\" | \"replace\" | \"createHref\">;\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\ninterface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n","import type { Location, Path, To } from \"history\";\nimport { parsePath } from \"history\";\n\nexport function invariant(cond: any, message: string): asserts cond {\n  if (!cond) throw new Error(message);\n}\n\nexport function warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\nexport function warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\ntype ParamParseFailed = { failed: true };\n\ntype ParamParseSegment<Segment extends string> =\n  // Check here if there exists a forward slash in the string.\n  Segment extends `${infer LeftSegment}/${infer RightSegment}`\n    ? // If there is a forward slash, then attempt to parse each side of the\n      // forward slash.\n      ParamParseSegment<LeftSegment> extends infer LeftResult\n      ? ParamParseSegment<RightSegment> extends infer RightResult\n        ? LeftResult extends string\n          ? // If the left side is successfully parsed as a param, then check if\n            // the right side can be successfully parsed as well. If both sides\n            // can be parsed, then the result is a union of the two sides\n            // (read: \"foo\" | \"bar\").\n            RightResult extends string\n            ? LeftResult | RightResult\n            : LeftResult\n          : // If the left side is not successfully parsed as a param, then check\n          // if only the right side can be successfully parse as a param. If it\n          // can, then the result is just right, else it's a failure.\n          RightResult extends string\n          ? RightResult\n          : ParamParseFailed\n        : ParamParseFailed\n      : // If the left side didn't parse into a param, then just check the right\n      // side.\n      ParamParseSegment<RightSegment> extends infer RightResult\n      ? RightResult extends string\n        ? RightResult\n        : ParamParseFailed\n      : ParamParseFailed\n    : // If there's no forward slash, then check if this segment starts with a\n    // colon. If it does, then this is a dynamic segment, so the result is\n    // just the remainder of the string. Otherwise, it's a failure.\n    Segment extends `:${infer Remaining}`\n    ? Remaining\n    : ParamParseFailed;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  ParamParseSegment<Segment> extends string\n    ? ParamParseSegment<Segment>\n    : string;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport interface RouteObject {\n  caseSensitive?: boolean;\n  children?: RouteObject[];\n  element?: React.ReactNode;\n  index?: boolean;\n  path?: string;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nexport function generatePath(path: string, params: Params = {}): string {\n  return path\n    .replace(/:(\\w+)/g, (_, key) => {\n      invariant(params[key] != null, `Missing \":${key}\" param`);\n      return params[key]!;\n    })\n    .replace(/\\/*\\*$/, (_) =>\n      params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\")\n    );\n}\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface RouteMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObject;\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nexport function matchRoutes(\n  routes: RouteObject[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): RouteMatch[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\ninterface RouteMeta {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObject;\n}\n\ninterface RouteBranch {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta[];\n}\n\nfunction flattenRoutes(\n  routes: RouteObject[],\n  branches: RouteBranch[] = [],\n  parentsMeta: RouteMeta[] = [],\n  parentPath = \"\"\n): RouteBranch[] {\n  routes.forEach((route, index) => {\n    let meta: RouteMeta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({ path, score: computeScore(path, route.index), routesMeta });\n  });\n\n  return branches;\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<ParamKey extends string = string>(\n  branch: RouteBranch,\n  pathname: string\n): RouteMatch<ParamKey>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: RouteMatch[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end\n      ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n      : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n        // parent routes to matching only their own words and nothing more, e.g. parent\n        // route \"/home\" should not match \"/home2\".\n        // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n        // but do not consume the character in the matched path so they can match against\n        // nested paths.\n        \"(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string\n): Path {\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  let toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname;\n\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  let from: string;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original to value had one.\n  if (\n    toPathname &&\n    toPathname !== \"/\" &&\n    toPathname.endsWith(\"/\") &&\n    !path.pathname.endsWith(\"/\")\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  let nextChar = pathname.charAt(basename.length);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(basename.length) || \"/\";\n}\n\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\nconst normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\nconst normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n","import * as React from \"react\";\nimport type { Location, Path, To } from \"history\";\nimport { Action as NavigationType, parsePath } from \"history\";\n\nimport { LocationContext, NavigationContext, RouteContext } from \"./context\";\nimport type {\n  ParamParseKey,\n  Params,\n  PathMatch,\n  PathPattern,\n  RouteMatch,\n  RouteObject,\n} from \"./router\";\nimport {\n  getToPathname,\n  invariant,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  resolveTo,\n  warning,\n  warningOnce,\n} from \"./router\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\nexport function useHref(to: To): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to);\n\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname =\n      pathname === \"/\"\n        ? basename + (endsWithSlash ? \"/\" : \"\")\n        : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname\n      );\n\n      if (basename !== \"/\") {\n        path.pathname = joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\nexport function useResolvedPath(to: To): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname),\n    [to, routePathnamesJson, locationPathname]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  return _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([parentPathnameBase, match.pathname]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([parentPathnameBase, match.pathnameBase]),\n        })\n      ),\n    parentMatches\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = []\n): React.ReactElement | null {\n  if (matches == null) return null;\n\n  return matches.reduceRight((outlet, match, index) => {\n    return (\n      <RouteContext.Provider\n        children={\n          match.route.element !== undefined ? match.route.element : outlet\n        }\n        value={{\n          outlet,\n          matches: parentMatches.concat(matches.slice(0, index + 1)),\n        }}\n      />\n    );\n  }, null as React.ReactElement | null);\n}\n","import * as React from \"react\";\nimport type { InitialEntry, Location, MemoryHistory, To } from \"history\";\nimport {\n  Action as NavigationType,\n  createMemoryHistory,\n  parsePath,\n} from \"history\";\n\nimport { LocationContext, NavigationContext, Navigator } from \"./context\";\nimport {\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\nimport type { RouteMatch, RouteObject } from \"./router\";\nimport { invariant, normalizePathname, stripBasename, warning } from \"./router\";\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nexport function Navigate({ to, replace, state }: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    navigate(to, { replace, state });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface RouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: boolean;\n  path?: string;\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: false;\n  path: string;\n}\n\nexport interface LayoutRouteProps {\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n}\n\nexport interface IndexRouteProps {\n  element?: React.ReactNode | null;\n  index: true;\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nexport function Route(\n  _props: PathRouteProps | LayoutRouteProps | IndexRouteProps\n): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  let basename = normalizePathname(basenameProp);\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    let route: RouteObject = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import React, { useEffect, useContext } from \"react\";\r\n\r\nimport ProductFinder from \"../api/ProductFinder\";\r\nimport { ProductsContext } from \"../context/ProductsContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n/**\r\n * Lists all the products from the localhost database... this is a test \r\n * for the later actual products on the database. This will get replaced by the \r\n * shopify products page right now\r\n */\r\nconst ProductList = (props) => {\r\n  const { products, setProducts } = useContext(ProductsContext);\r\n  let navigate = useNavigate();\r\n\r\n  // GETs the data from backend and puts them in the products context\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await ProductFinder.get(\"/\");\r\n        setProducts(response.data.data.products);\r\n        console.log(response);\r\n      } catch (err) {}\r\n    };\r\n    fetchData();\r\n  }, [setProducts]);\r\n\r\n\r\n\r\n\r\n// Event handler for delete products on tablee\r\n    const handleDelete= async(id)=>{\r\n        try{\r\n            await ProductFinder.delete(`/${id}`);\r\n            setProducts(products.filter(product=>{\r\n                return product.id !== id;\r\n            }))\r\n        }catch(err){console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n// Event handler for updating products on table\r\n\r\n  // Event handler for updating products on table\r\n  const handleUpdate = (id) => {\r\n    navigate(`/products/${id}/update`);\r\n  };\r\n\r\n  //actual html of the product table\r\n  return (\r\n    <div className=\"list-group\">\r\n      <table className=\"table table-hover table-bordered \">\r\n        <thead className=\"table-dark\">\r\n          <tr>\r\n            <th scope=\"col\">id</th>\r\n            <th scope=\"col\">description</th>\r\n            <th scope=\"col\">edit</th>\r\n            <th scope=\"col\">delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products &&\r\n            products.map((product) => {\r\n              return (\r\n                <tr key={product.id}>\r\n                  <td>{product.id}</td>\r\n                  <td>{product.description}</td>\r\n                  <td>\r\n                    <button\r\n                      onClick={() => handleUpdate(product.id)}\r\n                      className=\"btn btn-warning\"\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      onClick={() => handleDelete(product.id)}\r\n                      className=\"btn btn-danger\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React from 'react'\r\nimport Container from 'react-bootstrap/esm/Container'\r\nimport AddProduct from '../components/DBAddProduct'\r\nimport Header from '../components/structure/Header'\r\nimport NavBar from '../components/structure/NavBar'\r\nimport ProductList from '../components/DBProducts'  \r\n\r\nconst Home = () => { \r\n  return ( \r\n    <div>\r\n      <NavBar/> \r\n      <Container>\r\n        <Header/>\r\n        <AddProduct/>\r\n        <ProductList/> \r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","\r\nimport React from 'react'\r\n//import { useContext } from 'react';\r\nimport { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom' \r\nimport Container from \"react-bootstrap/Container\"; \r\n//import { ProductsContext } from '../context/ProductsContext';\r\nimport { useEffect } from \"react\";\r\nimport ProductFinder from \"../api/ProductFinder\";\r\n\r\nconst UpdateProduct = (props) => {\r\n    let navigate = useNavigate();\r\n   //const {products} = useContext(ProductsContext)\r\n   const {id} = useParams();\r\n   const[ids,setID] = useState(\"\");\r\n   const[description,setDescription] = useState(\"\"); \r\n\r\n   useEffect( () => {\r\n    const fetchData = async() => {\r\n        try{\r\n            const response = await ProductFinder.get(`/${id}`);\r\n            setID(response.data.data.products.id);\r\n            setDescription(response.data.data.products.description); \r\n        }catch(err){}\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await ProductFinder.put(`/${id}`, {\r\n      ids,\r\n      description,\r\n    });\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>  \r\n      <Container>\r\n      <form action=\"\">\r\n          {/* This is the form part for changing the id */}\r\n          <div className=\"form-group\">\r\n              <label style={{marginLeft: '.7rem', marginRight: '.7rem'}} htmlFor=\"id\">ID</label>\r\n              <input style={{marginLeft: '.7rem', marginRight: '.7rem'}} value = {ids} onChange = {e => setID(e.target.value)} type=\"text\" className=\"form-control\" id = \"id\" />\r\n          </div>\r\n        {/* this is the form part for the description */} \r\n        \r\n          <div className=\"form-group\">\r\n              <label style={{marginLeft: '.7rem', marginRight: '.7rem'}} htmlFor=\"description\">Description</label>\r\n              <input style={{marginLeft: '.7rem', marginRight: '.7rem'}} value = {description} onChange = {e => setDescription(e.target.value)} type=\"text\" className=\"form-control\" id = \"description\" />\r\n          </div>\r\n          <button style={{marginLeft: '.7rem', marginRight: '.7rem'}} type='submit' onClick={handleSubmit} className=\"btn btn-primary\">Update</button>\r\n      </form> \r\n      </Container>\r\n    </div> \r\n  )\r\n} \r\n\r\n\r\nexport default UpdateProduct \r\n","import React from \"react\";\r\nimport NavBar from '../components/structure/NavBar'\r\nimport UpdateProduct from \"../components/UpdateProduct\";\r\n\r\nconst UpdateProducts = () => {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <h1 className=\"text-center\">Update Product</h1>\r\n      <UpdateProduct />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateProducts;\r\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type { BrowserHistory, HashHistory, History } from \"history\";\nimport { createBrowserHistory, createHashHistory } from \"history\";\nimport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  resolvePath,\n  renderMatches,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n} from \"react-router\";\nimport type { To } from \"react-router\";\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RE-EXPORTS\n////////////////////////////////////////////////////////////////////////////////\n\n// Note: Keep in sync with react-router exports!\nexport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  renderMatches,\n  resolvePath,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n};\n\nexport { NavigationType } from \"react-router\";\nexport type {\n  Hash,\n  Location,\n  Path,\n  To,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigator,\n  OutletProps,\n  Params,\n  PathMatch,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  Pathname,\n  Search,\n  RoutesProps,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n} from \"react-router\";\n\n////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    { onClick, reloadDocument, replace = false, state, target, to, ...rest },\n    ref\n  ) {\n    let href = useHref(to);\n    let internalOnClick = useLinkClickHandler(to, { replace, state, target });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented && !reloadDocument) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: { isActive: boolean }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: { isActive: boolean }) => React.CSSProperties);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let location = useLocation();\n    let path = useResolvedPath(to);\n\n    let locationPathname = location.pathname;\n    let toPathname = path.pathname;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp({ isActive }) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\" ? children({ isActive }) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to);\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (\n        event.button === 0 && // Ignore everything but left clicks\n        (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n        !isModifiedEvent(event) // Ignore clicks with modifier keys\n      ) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here.\n        let replace =\n          !!replaceProp || createPath(location) === createPath(path);\n\n        navigate(to, { replace, state });\n      }\n    },\n    [location, navigate, path, replaceProp, state, target, to]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(defaultInit?: URLSearchParamsInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(() => {\n    let searchParams = createSearchParams(location.search);\n\n    for (let key of defaultSearchParamsRef.current.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParamsRef.current.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n\n    return searchParams;\n  }, [location.search]);\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback(\n    (\n      nextInit: URLSearchParamsInit,\n      navigateOptions?: { replace?: boolean; state?: any }\n    ) => {\n      navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n    },\n    [navigate]\n  );\n\n  return [searchParams, setSearchParams] as const;\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n","import axios from \"axios\";\r\nimport { isLocal } from \"../components/structure/Version\";\r\n\r\nlet Shopurl = \"\";\r\n//Web urls associated\r\nconst webBUrl =\r\n  \"https://backend-valtra-automation.azurewebsites.net/api/shopify\";\r\nconst localBUrl = \"http://localhost:3006/api/shopify\";\r\n//Algorithm that changes the urls\r\nif (isLocal === false) {\r\n  Shopurl = webBUrl;\r\n} else {\r\n  Shopurl = localBUrl;\r\n}\r\n/**\r\n * Allows you to do requests to backend url\r\n *\r\n * @return  {AxiosInstance}  object to do http requests like .get()\r\n */\r\nexport default axios.create({\r\n  baseURL: Shopurl,\r\n  // headers:{'Authorization':\"key\"}\r\n});\r\n","import React, {useState,createContext} from 'react';\r\n\r\n\r\nexport const OrdersContext = createContext();\r\n\r\nexport const OrdersContextProvider = props => {\r\n\r\n    const [orders,setOrders] = useState([]);\r\n\r\n    const addOrder = (order) =>{\r\n        setOrders([...orders,order]);\r\n    };\r\n    return(\r\n        <OrdersContext.Provider value = {{orders,setOrders,addOrder}}>\r\n            {props.children}\r\n        </OrdersContext.Provider>\r\n    )\r\n\r\n}\r\n","\r\nexport const callApiWithToken = async(accessToken, apiEndpoint,method,body) => {\r\n    const headers = new Headers();\r\n    const bearer = `Bearer ${accessToken}`;\r\n\r\n    headers.append(\"Authorization\", bearer);\r\n    const options = {\r\n        method: method,\r\n        headers: headers,\r\n        body:body\r\n    };\r\n\r\n    return fetch(apiEndpoint, options)\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error));\r\n}","import React, { useContext, useEffect } from \"react\";\r\nimport ShopifyRequest from \"../api/ShopifyRequest\";\r\n//import PDFFinder from '../api/PDFFinder';\r\nimport { OrdersContext } from \"../context/OrdersContext\";\r\nimport { useMsal, useAccount } from \"@azure/msal-react\";\r\n//import { writeFile } from 'fs';\r\nimport { InteractionRequiredAuthError } from \"@azure/msal-browser\";\r\nimport { protectedResources } from \"../authentication/authConfig\";\r\nimport { callApiWithToken } from \"../fetch\";\r\n\r\nconst OrderList = (props) => {\r\n  const { orders, setOrders } = useContext(OrdersContext);\r\n  const { instance, accounts, inProgress } = useMsal();\r\n  const account = useAccount(accounts[0] || {});\r\n\r\n  // let name = accounts[0] && accounts[0].name;\r\n  //get data from backed\r\n\r\n  useEffect(() => {\r\n    // console.log(accounts)\r\n    const fetchData = () => {\r\n      if (account && inProgress === \"none\") {\r\n        instance\r\n          .acquireTokenSilent({\r\n            scopes: protectedResources.apiHello.scopes,\r\n            account: account,\r\n          })\r\n          .then((response) => {\r\n            console.log(response)\r\n            callApiWithToken(\r\n              response.accessToken,\r\n              ShopifyRequest.getUri() + \"/orders\",\r\n              \"GET\"\r\n            ).then((response) => {\r\n               setOrders(response.result);\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            if (error instanceof InteractionRequiredAuthError) {\r\n              if (account && inProgress === \"none\") {\r\n                instance\r\n                  .acquireTokenPopup({\r\n                    scopes: protectedResources.apiHello.scopes,\r\n                  })\r\n                  .then((response) => {\r\n                    callApiWithToken(\r\n                      response.accessToken,\r\n                      ShopifyRequest.getUri() + \"/orders\",\r\n                      \"GET\"\r\n                    ).then((response) => setOrders(response.data.result));\r\n                  })\r\n                  .catch((error) => console.log(error));\r\n              }\r\n            }\r\n          });\r\n      }\r\n              // Call your API with the access token and return the data you need to save in state\r\n        // ShopifyRequest.get(\r\n        //   \"/orders\"\r\n        //   // data:,\r\n        // ).then((response) => {\r\n        //   setOrders(response.data.result);\r\n        // });\r\n        // })\r\n    };\r\n    fetchData();\r\n  }, [setOrders, accounts, instance,inProgress,account]);\r\n\r\n  //send request to server to give pdf???\r\n\r\n  return (\r\n    <div className=\"list-group\">\r\n      <table className=\"table table-hover table-bordered \">\r\n        <thead className=\"table-dark\">\r\n          <tr>\r\n            <th scope=\"col\">api id</th>\r\n            <th scope=\"col\">order number</th>\r\n            <th scope=\"col\">created at</th>\r\n            <th scope=\"col\">subtotal</th>\r\n            <th scope=\"col\">tax</th>\r\n            <th scope=\"col\">total</th>\r\n            <th scope=\"col\">financial status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orders &&\r\n            orders.map((order) => {\r\n              return (\r\n                <tr key={order.id}>\r\n                  <td>{order.id}</td>\r\n                  <td>{order.name}</td>\r\n                  <td>{order.created_at}</td>\r\n                  <td>${order.current_subtotal_price}</td>\r\n                  <td>${order.current_total_tax}</td>\r\n                  <td>${order.current_total_price}</td>\r\n                  <td>{order.financial_status}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n","import React from 'react'\r\nimport NavBar from '../components/structure/NavBar'\r\nimport OrderList from '../components/ShopifyOrders' \r\nimport Container from 'react-bootstrap/esm/Container'\r\n\r\nconst OrderPage = () => {\r\n  return (\r\n    <div> \r\n      <NavBar/> \r\n      <Container>\r\n        <OrderList/> \r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderPage\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","import React, { useState } from \"react\";\r\nimport ShopifyRequest from \"../api/ShopifyRequest\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Container from \"react-bootstrap/esm/Container\";\r\nimport { useMsal, useAccount } from \"@azure/msal-react\";\r\nimport { protectedResources } from \"../authentication/authConfig\";\r\nimport { callApiWithToken } from \"../fetch\";\r\nimport { InteractionRequiredAuthError } from \"@azure/msal-browser\";\r\n\r\nconst Fulfill = () => {\r\n  const [running, setRunning] = useState(false);\r\n  const [done, setDone] = useState(false);\r\n  const [alert, setAlert] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const [data, setData] = useState([]);\r\n  const fileReader = new FileReader();\r\n  const { instance, accounts, inProgress } = useMsal();\r\n  const account = useAccount(accounts[0] || {});\r\n\r\n  const handleOnChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  //just the setup of the array\r\n  const csvFileToArray = (string) => {\r\n    const csvHeader = string.slice(0, string.indexOf(\"\\n\")).split(\",\");\r\n    csvHeader.push(\"Status\");\r\n    const csvRows = string.slice(string.indexOf(\"\\n\") + 1).split(\"\\n\");\r\n    const array = csvRows.map((i) => {\r\n      const values = i.split(\",\");\r\n      const obj = csvHeader.reduce((object, header, index) => {\r\n        object[header] = values[index];\r\n        return object;\r\n      }, {});\r\n      return obj;\r\n    });\r\n    for (const obj in array) {\r\n      if (!array[obj][Object.keys(array[obj])[0]]) {\r\n        array.splice(obj, 1);\r\n      }\r\n    }\r\n    setData(array);\r\n    sendData(array);\r\n  };\r\n\r\n  /**\r\n   * function to do stuff when a csv gets imported...changes the text in the file input field\r\n   * @param {String} e\r\n   */\r\n  const handleOnSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (file) {\r\n      fileReader.onload = function (event) {\r\n        const text = event.target.result;\r\n        csvFileToArray(text);\r\n      };\r\n      fileReader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  const headerKeys = Object.keys(Object.assign({}, ...data));\r\n\r\n  //this runs when the button is pressed.\r\n  const sendData = (array) => {\r\n    try {\r\n      //array.pop();\r\n      for (const obj in array) {\r\n        array[obj][\"Tracking\"] = array[obj][Object.keys(array[obj])[1]];\r\n        delete array[obj][Object.keys(array[obj])[1]];\r\n        var value = array[obj][\"Tracking\"].replace(/(\\r\\n|\\n|\\r)/gm, \"\");\r\n        array[obj][\"Tracking\"] = value;\r\n      }\r\n      setRunning(true);\r\n\r\n      if (account && inProgress === \"none\") {\r\n        instance\r\n          .acquireTokenSilent({\r\n            scopes: protectedResources.apiHello.scopes,\r\n            account: account,\r\n          })\r\n          .then((response) => {\r\n            callApiWithToken(\r\n              response.accessToken,\r\n              ShopifyRequest.getUri() + \"/fulfill\",\r\n              \"PUT\",\r\n              {\r\n                sent: \"success\",\r\n                data: array,\r\n              }\r\n            ).then((response) => {\r\n              console.log(response)\r\n              updateStatus(response.data, array);\r\n              setDone(true);\r\n            }).catch(err=>console.log(err));\r\n          })\r\n          .catch((error) => {\r\n            if (error instanceof InteractionRequiredAuthError) {\r\n              if (account && inProgress === \"none\") {\r\n                instance\r\n                  .acquireTokenPopup({\r\n                    scopes: protectedResources.apiHello.scopes,\r\n                  })\r\n                  .then((response) => {\r\n                    callApiWithToken(\r\n                      response.accessToken,\r\n                      ShopifyRequest.getUri() + \"/orders\",\r\n                      \"PUT\"\r\n                    ).then((response) => {\r\n                      updateStatus(response.data, array);\r\n                      setDone(true);\r\n                    });\r\n                  })\r\n                  .catch((error) => console.log(error));\r\n              }\r\n            }\r\n          });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      setAlert(true);\r\n    }\r\n  };\r\n\r\n  const updateStatus = (response, prevArray) => {\r\n    for (const obj in prevArray) {\r\n      for (const order in response.orders) {\r\n        if (\r\n          prevArray[obj].Name === response.orders[order].name.replace(\"#\", \"\")\r\n        ) {\r\n          prevArray[obj].Status = response.orders[order].Status;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    const newArray = [...prevArray];\r\n    setData(newArray);\r\n  };\r\n\r\n  const headers = [\r\n    { label: \"Name\", key: \"Name\" },\r\n    { label: \"Status\", key: \"Status\" },\r\n    { label: \"Tracking\", key: \"Tracking\" },\r\n  ];\r\n\r\n  const csvReport = {\r\n    filename: \"report.csv\",\r\n    headers: headers,\r\n    data: data,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1 style={{ textAlign: \"center\" }}>Import CSV to Fulfill Orders</h1>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <form>\r\n            <div className=\"col\">\r\n              <p></p>\r\n              <input\r\n                type={\"file\"}\r\n                className=\"form-control\"\r\n                id={\"csvFileInput\"}\r\n                onChange={handleOnChange}\r\n                accept={\".csv\"}\r\n              />\r\n            </div>\r\n          </form>\r\n          <Container>\r\n            <div className=\"col\">\r\n              <center>\r\n                <button\r\n                  type=\"button\"\r\n                  style={{\r\n                    marginLeft: \".5rem\",\r\n                    marginRight: \".7rem\",\r\n                    marginTop: \".5rem\",\r\n                  }}\r\n                  className=\"btn btn-outline-secondary\"\r\n                  onClick={(e) => {\r\n                    handleOnSubmit(e);\r\n                  }}\r\n                >\r\n                  Import CSV\r\n                </button>\r\n                <CSVLink\r\n                  className=\"btn btn-primary\"\r\n                  {...csvReport}\r\n                  style={{\r\n                    marginLeft: \".7rem\",\r\n                    marginRight: \".5rem\",\r\n                    marginTop: \".5rem\",\r\n                  }}\r\n                >\r\n                  Export\r\n                </CSVLink>\r\n              </center>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n      {/* This is where the alert is for whether a csv is done or not */}\r\n\r\n      <Alert\r\n        show={running}\r\n        variant=\"success\"\r\n        onClose={() => setRunning(false)}\r\n        dismissible\r\n      >\r\n        Fufilling Orders...\r\n        {/* <div className=\"d-flex justify-content-end\">\r\n          <Button onClick={() => setRunning(false)} variant=\"outline-success\">\r\n            Close me y'all!\r\n          </Button>\r\n        </div> */}\r\n      </Alert>\r\n      <Alert\r\n        show={done}\r\n        variant=\"primary\"\r\n        onClose={() => setDone(false)}\r\n        dismissible\r\n      >\r\n        Finished!\r\n        {/* <div className=\"d-flex justify-content-end\">\r\n          <Button onClick={() => setRunning(false)} variant=\"outline-success\">\r\n            Close me y'all!\r\n          </Button>\r\n        </div> */}\r\n      </Alert>\r\n      <Alert\r\n        show={alert}\r\n        variant=\"primary\"\r\n        onClose={() => setAlert(false)}\r\n        dismissible\r\n      >\r\n        Try again, timed out...\r\n        {/* <div className=\"d-flex justify-content-end\">\r\n          <Button onClick={() => setRunning(false)} variant=\"outline-success\">\r\n            Close me y'all!\r\n          </Button>\r\n        </div> */}\r\n      </Alert>\r\n      <table className=\"table table-hover table-bordered \">\r\n        <thead className=\"table-dark\">\r\n          <tr>\r\n            {headerKeys.map((key, index) => (\r\n              <th key={index} scope=\"col\">\r\n                {key}\r\n              </th>\r\n            ))}\r\n            {/* <th key=\"status\" scope=\"col\">Status</th> */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((item, index) => (\r\n            <tr key={index}>\r\n              {Object.values(item) &&\r\n                Object.values(item).map((val, index) => (\r\n                  <td key={index}>{val}</td>\r\n                ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fulfill;\r\n","import React from 'react'\r\nimport Fulfill from '../components/Fulfill'\r\nimport NavBar from '../components/structure/NavBar'\r\nimport Container from 'react-bootstrap/esm/Container'\r\n\r\nconst FulfillingOrders = () => {\r\n  return (\r\n    <div> \r\n      <NavBar/> \r\n      <Container>\r\n        <Fulfill/> \r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FulfillingOrders\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const VariantsContext = createContext();\r\n\r\nexport const VariantsContextProvider = (props) => {\r\n  const [variants, setVariants] = useState([]);\r\n\r\n  const addOrder = (variant) => {\r\n    setVariants([...variants, variant]);\r\n  };\r\n  return (\r\n    <VariantsContext.Provider value={{ variants, setVariants, addOrder }}>\r\n      {props.children}\r\n    </VariantsContext.Provider>\r\n  );\r\n};\r\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#61DAFB\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 420.9,\n    cy: 296.5,\n    r: 45.7\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.5 78.1z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.6ce24c58023cc2f8fd88fe9d219db6c6.svg\";\nexport { ForwardRef as ReactComponent };","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","//React\r\nimport React from 'react';  \r\n//Other Files\r\nimport '../assets/css/App.css';   \r\nimport logo from '../assets/images/logo.svg' \r\nimport '../App.jsx';  \r\n//Bootstrap   \r\nimport Navbar from \"react-bootstrap/Navbar\";  \r\n\r\n//components\r\nimport { SignInButton } from '../components/SignInButton';\r\nimport { SignOutButton } from '../components/SignOutButton'; \r\nimport { Version } from \"../components/structure/Version\";\r\n\r\n//Azure auth\r\nimport { useIsAuthenticated } from \"@azure/msal-react\";\r\n\r\nconst SignInPage = (props) => {  \r\n    const isAuthenticated = useIsAuthenticated();\r\n        return (  \r\n\r\n            <>\r\n                <Navbar bg=\"primary\" variant=\"dark\">  \r\n                    <a style={{marginLeft: '.7rem', marginRight: '.5rem'}}\r\n                    className=\"navbar-brand\" href=\"/\">Welome to Valtra Automation!</a>  \r\n                    {isAuthenticated ? <SignOutButton /> : <SignInButton />}    \r\n\r\n                </Navbar> \r\n\r\n                <div className='App'>\r\n                    <header className=\"App-header\">\r\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" width={450} height={450} />  \r\n                        <p>Please Sign in</p> \r\n                        <p></p>\r\n                        <Version/>\r\n                    </header>\r\n                </div> \r\n            </> \r\n        ); \r\n      }  \r\n    \r\n    export default SignInPage; ","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport ShopifyRequest from \"../api/ShopifyRequest\";\r\nimport Container from \"react-bootstrap/esm/Container\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { VariantsContext } from \"../context/VariantsContext\"; \r\n// import { SignOutButton } from \"./SignOutButton\";\r\n\r\nconst ShopProducts = (props) => {\r\n\r\n  let navigate = useNavigate();\r\n  const {variants, setVariants} = useContext(VariantsContext);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await ShopifyRequest.get(\"/products\");\r\n        console.log({ first: response.data.body });\r\n        console.log({ products: response.data.body.data.products.nodes });\r\n        setVariants(response.data.body.data.products.nodes);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [setVariants]);\r\n  const handleVariants = (id) => {\r\n    navigate(`/product/${id}`);\r\n  };\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Table hover bordered>\r\n          <thead>\r\n            <tr>\r\n              <th>Featured Image</th>\r\n              <th>Title</th>\r\n              <th>Description</th>\r\n              <th>Variants</th> \r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {variants.map((product, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  <img\r\n                    src={product.featuredImage ? product.featuredImage.url : \"\"}\r\n                    alt=\"NA\"\r\n                  />\r\n                </td>\r\n                <td>{product.handle}</td>\r\n                <td>{product.description}</td>\r\n                <td>\r\n                  <Button\r\n                    variant=\"outline-secondary\"\r\n                    onClick={() => handleVariants(product.id)}\r\n                  >\r\n                    More info\r\n                  </Button>\r\n                </td> \r\n              </tr> \r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopProducts;\r\n","import React from 'react'\r\nimport NavBar from '../components/structure/NavBar';\r\nimport ShopProducts  from \"../components/ShopProducts\"\r\n// import { VariantsContextProvider } from '../context/VariantsContext'\r\n\r\nconst ShopifyProducts = () => {\r\n  return (\r\n    <div>\r\n\r\n      <NavBar/>\r\n      <ShopProducts/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShopifyProducts\r\n","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n\n  baseModalStyle.display = 'block';\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\n\n\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\n\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport {  useParams } from \"react-router-dom\";\r\nimport ShopifyRequest from \"../api/ShopifyRequest\";\r\nimport Container from \"react-bootstrap/esm/Container\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\"; \r\nimport \"../assets/css/Image.css\"\r\n\r\n/**\r\n * This page shows one product from shopify and should be able to edit at least the featured\r\n * image and the variants image at fisrt TODO: also i need to make a way of knowing which image is being changed with states..like make\r\n * a new object for them or keep the product state\r\n *\r\n */\r\nconst ShopifyVariants = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleTitleChange = (e) => setTitle(e.target.value);  \r\n  const handlePriceChange = (e, iden) => setPrice([e.target.value, iden]);  \r\n  const handleSkuChange = (e, iden) => setSku([e.target.value, iden]); \r\n  // const handlePicChange = (e, iden) => setSku([e.target.value, iden]);\r\n\r\n  const [ setImageHover] = useState(false);\r\n  const [setUrl] = useState(\"\");\r\n  const [image, setImage] = useState([]);\r\n  const [product, setProduct] = useState({});\r\n  const { id } = useParams(); \r\n  const [ setTitle] = useState(\"\");  \r\n  const [price, setPrice] = useState([]); \r\n  const [sku, setSku] = useState([]);  \r\n  const [pic] = useState([]); \r\n\r\n  useEffect(() => {\r\n    try {\r\n      const fetchData = async (id) => {\r\n        var response = await ShopifyRequest.get(`/products/${id}`);\r\n        setProduct(response.data.body.data.product); \r\n      };\r\n      fetchData(id);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, [setProduct, id]);\r\n  // console.log(product);\r\n\r\n  const handleOnChange = (e) => setUrl(e.target.value);\r\n  const handleImageChange = (e) => {\r\n    e.preventDefault(); \r\n    // console.log(e.target.files[0])\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  const sendImage = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      const imageData = new FormData();\r\n      imageData.append(\"image\", image);\r\n      const response = await ShopifyRequest.put(`/productVariant`, imageData, {\r\n        headers: {\r\n          \"Content-Type\": `multipart/form-data`,\r\n        },\r\n      });\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }; \r\n\r\n  // const sendTitle = async(e) => { \r\n  //   try {\r\n  //     const response = await ShopifyRequest.put( \r\n  //       '/productTitle',  \r\n  //       {status: 'success', data: title} \r\n  //     )\r\n  //   } catch (error) {\r\n  //     console.log(error)\r\n  //   }\r\n  // };  \r\n  \r\n  function noDolllarSign(string) { \r\n    let rstring = string.replace(\"$\", \"\"); \r\n    return rstring;\r\n  }\r\n\r\n  const sendPrice = async(e) => { \r\n    try {  \r\n      price[0] = noDolllarSign(price[0]); \r\n      const response = await ShopifyRequest.put( \r\n        '/productUpdatePrice',  \r\n        {status: 'success', data: price} \r\n      )\r\n      console.log(response)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  };    \r\n\r\n  const sendSku = async(e) => { \r\n    try { \r\n      const response = await ShopifyRequest.put( \r\n        '/productUpdateSku', \r\n        {status: 'success', data: sku} \r\n      )\r\n      console.log(response)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  };  \r\n  \r\n  const sendPic = async(e) => { \r\n    try { \r\n      const response = await ShopifyRequest.put( \r\n        '/productUpdatePicture', \r\n        {status: 'success', data: pic} \r\n      )\r\n      console.log(response)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }; \r\n  \r\n  const send = (e) => { \r\n    //sendTitle(e); \r\n    sendImage(e);  \r\n    sendPic(e);\r\n    sendPrice(e); \r\n    sendSku(e);\r\n  };\r\n\r\n  //TODO:  Get a page up for the featured image and the variants image....\r\n  // how should the fornt end look like??? Try to copy as much from shopify's setup\r\n  return (\r\n    <div>\r\n      <Container fluid=\"md\">\r\n        <div className=\"title\">\r\n          <div className=\"box\">\r\n            <h2 style={{ textAlign: \"center\" }}>{product.title}</h2>\r\n            <p style={{ textAlign: \"center\" }}>\r\n              Description: {product.description}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"box\" id=\"featured\">\r\n          <h3 style={{ textAlign: \"center\" }}>Featured Image</h3>\r\n          <img\r\n            className=\"image\"\r\n            style={{ width: \"initial\", height: \"initial\" }}\r\n            src={product.featuredImage ? product.featuredImage.url : \"\"}\r\n            alt=\"no work\"\r\n          />\r\n        </div>\r\n        <div className=\"box\" id=\"media\">\r\n          <div>\r\n            <h3 style={{ textAlign: \"center\" }}>Media</h3>\r\n          </div>\r\n          <div>\r\n            {product.media &&\r\n              product.media.nodes.map((media, index) => (\r\n                <span key={index}>\r\n                  <img\r\n                    className=\"image\"\r\n                    src={media.preview.image.url}\r\n                    alt=\"Not found\"\r\n                  />\r\n                </span>\r\n              ))}\r\n            <span>\r\n              <button\r\n                className=\"image\"\r\n                onClick={() => {\r\n                  handleShow();\r\n                }}\r\n              >\r\n                Add Image\r\n              </button>\r\n              <div>\r\n                <Modal show={show} onHide={() => handleClose()}>\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>Add Image</Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    <Form>\r\n                      <Form.Group\r\n                        className=\"mb-3\"\r\n                        controlId=\"exampleForm.ControlTextarea1\"\r\n                      >\r\n                        <Form.Label>Enter Image URL</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          onChange={() => handleOnChange()}\r\n                          as=\"textarea\"\r\n                          rows={1}\r\n                        />\r\n                      </Form.Group>\r\n                    </Form>\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => handleClose()}>\r\n                      Close\r\n                    </Button>\r\n                    <Button variant=\"primary\">Add</Button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n              </div>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"box\" id=\"options\">\r\n          <h3 style={{ padding: \"10px\" }}>Options</h3>\r\n          {product.options &&\r\n            product.options.map((option, index) => (\r\n              <div key={index} className=\"options\">\r\n                <h4>{option.name}</h4>\r\n                {option.values &&\r\n                  option.values.map((value, index) => (\r\n                    <span key={index} className=\"option\">\r\n                      {value}\r\n                    </span>\r\n                  ))}\r\n              </div>\r\n            ))}\r\n          {/* begin mapping variants */}\r\n        </div>\r\n        <div className=\"box\" id=\"options\">\r\n          <h3 style={{ padding: \"10px\" }}>Variants</h3>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Featured Image</th>\r\n                <th scope=\"col\">Variant</th>\r\n                <th scope=\"col\">Price</th>\r\n                <th scope=\"col\">SKU</th>\r\n                <th scope=\"col\">Save Edits</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {product.variants &&\r\n                product.variants.nodes.map((variant, index) => (\r\n                  // TODO: make this look nicer \r\n                  <tr key={index}>\r\n                    <td>\r\n                      <div className=\"container\">\r\n                        <button\r\n                          style={{ all: \"unset\", cursor: \"pointer\" }}\r\n                          onMouseEnter={() => setImageHover(true)}\r\n                          onMouseLeave={() => setImageHover(false)}>\r\n                          <div className=\"brightness\"> \r\n                            <div className=\"image-upload\">\r\n                              <label htmlFor=\"file-input\"> \r\n                                <form action=\"/upload\" encType=\"multipart/form-data\"> \r\n                                  <input id=\"file-input\" type=\"file\" \r\n                                  name=\"image\" \r\n                                  style={{ all: \"unset\", cursor: \"pointer\" }}\r\n                                  onChange={(e) => handleImageChange(e)}/>\r\n                                </form>\r\n                                <img \r\n                                  className= \"thumbnail image\"\r\n                                  src={variant.image && variant.image.url}\r\n                                  alt=\"Add one?\" />\r\n                              </label>\r\n                            </div> \r\n                          </div>\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <input \r\n                        type=\"text\" size=\"14\" defaultValue={variant.title} \r\n                        style={{ marginRight: '.1rem', }} \r\n                        onChange = {(e) => handleTitleChange(e)} >\r\n                      </input> \r\n                    </td> \r\n\r\n                    <td>\r\n                      <input \r\n                        type=\"text\" size=\"6\" defaultValue={'$' + variant.price} \r\n                        style={{ marginLeft: '.1rem', }} \r\n                        onChange = {(e) => handlePriceChange(e, variant.id)}>\r\n                      </input>\r\n                    </td>\r\n                    <td> \r\n                      <input\r\n                        type=\"text\" size=\"1\" defaultValue={variant.sku} \r\n                        style={{ marginLeft: '.1rem', }} \r\n                        onChange = {(e) => handleSkuChange(e, variant.id)}>\r\n                      </input>\r\n                    </td>\r\n                    <td>\r\n                      <Button onClick= {(e) => send(e)}>Save</Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopifyVariants;\r\n","import React from 'react'\r\nimport ShopifyVariants from '../components/ShopifyVariants'\r\nimport NavBar from '../components/structure/NavBar'\r\n\r\n/**\r\n * Edit products \r\n * \r\n */\r\nconst Variants = () => {\r\n  return (\r\n    <div className=\"main\">\r\n      <NavBar/>\r\n      <ShopifyVariants/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Variants\r\n","var _g;var _excluded=[\"title\",\"titleId\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from\"react\";function SvgValtraLogo(_ref,svgRef){var title=_ref.title,titleId=_ref.titleId,props=_objectWithoutProperties(_ref,_excluded);return/*#__PURE__*/React.createElement(\"svg\",_extends({id:\"svg\",xmlns:\"http://www.w3.org/2000/svg\",xmlnsXlink:\"http://www.w3.org/1999/xlink\",width:400,height:176.74418604651163,viewBox:\"0, 0, 400,176.74418604651163\",ref:svgRef,\"aria-labelledby\":titleId},props),title?/*#__PURE__*/React.createElement(\"title\",{id:titleId},title):null,_g||(_g=/*#__PURE__*/React.createElement(\"g\",{id:\"svgg\"},/*#__PURE__*/React.createElement(\"path\",{id:\"path0\",d:\"M47.663 20.822 C 47.731 21.587,47.658 22.179,47.386 23.058 C 47.183 23.715,47.017 24.601,47.017 25.026 C 47.017 25.957,46.662 26.253,45.338 26.423 C 43.330 26.681,43.460 26.579,43.501 27.855 L 43.538 28.988 45.631 28.988 L 47.724 28.988 47.724 27.848 L 47.724 26.707 48.829 26.654 L 49.934 26.602 49.934 23.243 L 49.934 19.885 48.752 19.833 L 47.570 19.781 47.663 20.822 M1.237 25.564 L 1.237 28.988 4.021 28.988 L 6.805 28.989 6.743 27.884 C 6.678 26.727,6.545 26.521,5.860 26.516 C 4.759 26.509,3.714 25.030,3.709 23.471 C 3.705 22.177,3.614 22.087,2.331 22.116 L 1.237 22.141 1.237 25.564 M92.103 23.678 C 91.665 23.948,91.428 25.385,91.671 26.293 C 91.765 26.642,91.893 26.690,92.715 26.690 C 94.204 26.690,94.211 26.682,94.211 25.015 L 94.211 23.554 93.241 23.564 C 92.707 23.570,92.195 23.621,92.103 23.678 M57.069 26.690 C 56.875 28.982,56.880 28.988,58.749 28.988 L 60.186 28.988 60.186 27.936 C 60.186 27.358,60.106 26.807,60.009 26.712 C 59.691 26.402,57.095 26.383,57.069 26.690 M12.638 28.737 C 12.541 28.763,12.004 28.836,11.446 28.899 L 10.431 29.013 10.451 30.017 C 10.476 31.325,10.610 31.463,11.852 31.463 L 12.878 31.463 13.078 30.446 C 13.188 29.887,13.305 29.345,13.338 29.241 C 13.406 29.026,12.906 28.666,12.638 28.737 M64.553 28.857 L 63.971 29.043 64.023 30.209 L 64.074 31.374 65.205 31.428 C 66.561 31.491,66.623 31.441,66.802 30.123 C 67.001 28.649,66.349 28.282,64.553 28.857 M84.664 29.651 C 84.660 30.586,84.475 30.781,83.495 30.886 C 82.403 31.003,82.260 31.124,82.138 32.034 C 82.024 32.885,81.655 33.230,80.860 33.230 C 79.984 33.230,79.644 33.738,79.776 34.849 C 79.916 36.035,79.984 36.087,81.326 36.023 L 82.457 35.970 82.509 34.873 L 82.562 33.777 83.658 33.725 L 84.755 33.672 84.807 32.567 L 84.860 31.463 86.000 31.463 L 87.141 31.463 87.141 30.225 L 87.141 28.988 85.904 28.988 L 84.666 28.988 84.664 29.651 M97.172 29.117 L 96.509 29.186 96.509 30.943 L 96.509 32.700 97.737 32.700 C 99.375 32.700,99.990 32.042,99.898 30.389 C 99.851 29.555,99.899 29.340,100.164 29.186 C 100.492 28.995,98.725 28.954,97.172 29.117 M136.765 29.114 L 136.103 29.186 136.103 31.011 L 136.103 32.836 137.296 32.915 C 137.952 32.958,138.518 32.920,138.553 32.830 C 138.589 32.740,139.133 32.436,139.763 32.153 L 140.908 31.639 157.020 31.659 C 165.882 31.669,174.227 31.729,175.564 31.791 L 177.994 31.905 177.994 30.642 C 177.994 29.615,177.936 29.351,177.684 29.228 C 177.383 29.080,138.085 28.971,136.765 29.114 M187.848 29.117 L 187.185 29.186 187.185 31.164 L 187.184 33.142 188.466 33.083 C 189.350 33.043,189.858 32.931,190.102 32.724 C 190.296 32.558,190.784 32.247,191.186 32.031 L 191.917 31.639 224.380 31.639 C 253.198 31.639,256.993 31.671,258.186 31.917 C 258.926 32.070,259.976 32.165,260.521 32.128 L 261.511 32.062 261.562 30.639 L 261.613 29.217 260.520 29.102 C 259.373 28.982,188.998 28.997,187.848 29.117 M264.870 29.117 C 264.101 29.226,264.004 29.393,263.946 30.714 L 263.894 31.905 265.796 31.819 C 269.163 31.666,306.013 31.722,307.217 31.882 C 308.127 32.002,308.597 31.972,309.382 31.744 L 310.384 31.453 310.384 30.333 L 310.384 29.214 309.456 29.103 C 308.441 28.981,265.730 28.994,264.870 29.117 M368.495 29.113 C 368.715 29.155,369.033 29.154,369.202 29.110 C 369.371 29.065,369.191 29.031,368.802 29.033 C 368.414 29.035,368.275 29.071,368.495 29.113 M375.122 29.110 C 375.292 29.154,375.570 29.154,375.740 29.110 C 375.910 29.065,375.771 29.029,375.431 29.029 C 375.091 29.029,374.951 29.065,375.122 29.110 M107.957 31.949 C 107.680 32.591,107.688 35.445,107.968 36.260 C 108.211 36.964,108.604 37.114,109.766 36.944 L 110.384 36.854 110.433 34.158 L 110.482 31.463 109.324 31.463 C 108.230 31.463,108.155 31.489,107.957 31.949 M315.982 31.580 C 315.917 31.645,315.864 32.183,315.864 32.775 L 315.864 33.851 316.568 34.071 C 317.449 34.346,318.189 34.350,319.078 34.083 L 319.769 33.876 319.734 32.669 L 319.699 31.463 317.899 31.463 C 316.909 31.463,316.047 31.516,315.982 31.580 M364.019 31.692 C 363.968 31.826,363.949 32.565,363.978 33.334 L 364.030 34.733 365.278 34.784 C 366.823 34.847,366.991 34.641,366.911 32.783 L 366.858 31.551 365.486 31.499 C 364.445 31.460,364.090 31.507,364.019 31.692 M64.007 35.440 L 63.962 37.119 65.216 37.119 C 66.707 37.119,66.925 36.841,66.736 35.186 C 66.588 33.887,66.447 33.760,65.146 33.760 L 64.052 33.760 64.007 35.440 M94.234 35.212 L 94.187 36.589 95.426 36.589 C 96.860 36.589,96.943 36.514,96.885 35.272 C 96.815 33.732,96.814 33.732,95.468 33.787 L 94.281 33.835 94.234 35.212 M261.682 34.003 C 261.645 34.113,261.631 35.117,261.651 36.235 L 261.688 38.268 263.146 38.319 L 264.605 38.370 264.591 36.993 C 264.583 36.165,264.453 35.264,264.266 34.733 L 263.955 33.849 262.852 33.826 C 262.172 33.812,261.723 33.880,261.682 34.003 M321.154 33.805 C 321.125 33.905,321.115 35.297,321.140 35.741 C 321.174 36.352,321.946 36.734,323.288 36.803 L 324.260 36.854 324.314 37.693 C 324.367 38.525,324.373 38.533,324.988 38.533 C 326.046 38.533,326.292 38.774,326.298 39.821 C 326.306 41.118,326.512 41.315,327.935 41.388 L 329.121 41.449 329.121 40.080 C 329.121 39.233,329.049 38.710,328.933 38.710 C 328.830 38.710,328.799 38.624,328.864 38.519 C 328.935 38.404,328.850 38.341,328.654 38.362 C 328.473 38.381,327.987 38.388,327.574 38.377 L 326.823 38.356 326.820 37.428 C 326.817 36.249,326.729 36.140,325.762 36.116 C 324.236 36.078,324.348 36.175,324.348 34.909 L 324.348 33.760 322.757 33.760 C 321.882 33.760,321.161 33.780,321.154 33.805 M361.725 36.214 C 361.687 36.251,361.733 36.425,361.827 36.601 C 361.939 36.810,361.937 36.959,361.821 37.030 C 361.724 37.090,361.644 37.413,361.644 37.748 L 361.644 38.356 360.602 38.356 C 359.347 38.356,359.346 38.358,359.346 40.492 L 359.346 42.068 360.575 42.068 C 362.018 42.068,362.260 41.778,362.397 39.887 C 362.479 38.747,362.655 38.540,363.544 38.536 L 364.118 38.533 364.116 37.517 C 364.112 36.134,364.023 36.037,362.809 36.097 C 362.251 36.124,361.763 36.177,361.725 36.214 M33.865 37.747 C 33.462 38.150,33.265 42.920,33.588 44.474 L 33.789 45.443 34.879 45.390 L 35.970 45.338 36.020 41.803 C 36.083 37.372,36.129 37.566,34.994 37.540 C 34.467 37.528,33.998 37.614,33.865 37.747 M170.393 38.046 C 169.919 38.294,169.720 39.023,169.838 40.080 L 169.902 40.654 171.562 40.654 L 173.221 40.654 173.221 39.527 C 173.221 38.839,173.135 38.329,173.000 38.218 C 172.618 37.904,170.883 37.790,170.393 38.046 M271.542 38.200 C 270.970 38.366,270.968 38.371,270.968 39.510 L 270.968 40.654 272.191 40.654 C 273.559 40.654,273.801 40.247,273.637 38.224 C 273.616 37.963,272.411 37.950,271.542 38.200 M209.651 38.339 C 209.499 38.437,209.390 38.853,209.369 39.408 C 209.327 40.552,209.493 40.654,211.389 40.654 L 212.815 40.654 212.829 41.405 C 212.836 41.818,212.877 42.075,212.918 41.976 C 212.965 41.865,213.433 41.832,214.131 41.890 L 215.267 41.986 215.411 41.364 C 215.490 41.022,215.515 40.186,215.466 39.505 L 215.378 38.268 212.638 38.224 C 211.131 38.200,209.787 38.252,209.651 38.339 M235.911 38.297 C 235.765 38.443,235.761 39.719,235.905 40.256 C 236.028 40.718,239.166 40.884,239.438 40.442 C 239.636 40.123,239.504 38.465,239.269 38.316 C 239.012 38.153,236.072 38.136,235.911 38.297 M296.101 38.331 C 295.860 38.484,295.761 40.125,295.972 40.467 C 296.105 40.682,301.357 40.735,301.392 40.521 C 301.404 40.449,301.435 39.941,301.462 39.393 L 301.511 38.397 300.866 38.290 C 299.908 38.132,296.368 38.162,296.101 38.331 M61.790 38.789 C 61.737 38.988,61.692 39.490,61.690 39.903 L 61.688 40.654 60.848 40.674 C 60.387 40.686,59.890 40.705,59.744 40.719 C 59.532 40.738,59.468 41.087,59.428 42.466 L 59.377 44.189 60.489 44.184 C 62.053 44.176,62.572 43.679,62.572 42.189 C 62.572 41.356,62.768 41.193,63.772 41.187 C 64.164 41.184,64.176 41.139,64.126 39.814 L 64.074 38.445 62.981 38.435 C 62.024 38.427,61.876 38.471,61.790 38.789 M184.989 38.533 C 184.966 38.582,184.928 39.258,184.904 40.036 L 184.860 41.451 185.978 41.405 C 187.630 41.336,187.605 41.359,187.470 40.034 C 187.296 38.342,187.312 38.361,186.091 38.406 C 185.508 38.427,185.012 38.484,184.989 38.533 M377.734 39.131 C 377.107 41.371,377.650 43.979,378.727 43.901 C 379.004 43.881,379.452 43.858,379.722 43.850 L 380.212 43.836 380.164 41.140 L 380.115 38.445 379.037 38.388 L 377.959 38.330 377.734 39.131 M304.850 40.141 C 303.575 40.441,303.491 40.544,303.491 41.809 L 303.491 42.952 304.640 42.952 L 305.789 42.952 305.789 44.082 C 305.789 45.379,305.841 45.426,307.284 45.426 C 309.150 45.426,309.596 42.939,307.928 41.836 C 307.529 41.572,307.203 41.241,307.203 41.100 C 307.203 40.832,306.016 39.934,305.704 39.965 C 305.605 39.974,305.221 40.054,304.850 40.141 M145.294 41.220 C 145.294 42.166,145.468 42.501,145.736 42.068 C 145.796 41.971,146.274 41.891,146.799 41.891 L 147.752 41.891 147.871 41.259 C 148.025 40.436,147.907 40.351,146.487 40.266 L 145.294 40.195 145.294 41.220 M200.619 40.288 C 200.473 40.378,200.214 40.495,200.044 40.547 C 199.791 40.626,199.735 40.852,199.735 41.797 L 199.735 42.952 201.591 42.952 L 203.447 42.952 203.447 41.799 C 203.447 40.705,203.421 40.635,202.961 40.451 C 202.291 40.183,200.940 40.089,200.619 40.288 M245.904 40.602 L 245.321 40.678 245.358 41.682 C 245.402 42.865,245.488 42.946,246.708 42.949 C 247.632 42.952,247.636 42.954,247.656 43.526 C 247.720 45.408,247.734 45.426,249.041 45.426 C 250.199 45.426,250.220 45.404,250.459 43.929 C 250.626 42.893,250.401 42.613,249.393 42.604 C 248.500 42.596,248.192 42.292,248.130 41.361 L 248.078 40.566 247.282 40.546 C 246.845 40.535,246.225 40.560,245.904 40.602 M89.719 40.786 C 89.662 40.843,89.616 41.553,89.616 42.363 L 89.616 43.836 90.847 43.836 C 92.459 43.836,92.906 42.986,92.191 41.276 C 91.949 40.696,90.163 40.342,89.719 40.786 M233.750 41.838 C 233.425 42.163,233.373 43.212,233.604 44.764 L 233.703 45.426 234.837 45.426 L 235.970 45.426 235.970 43.517 L 235.970 41.608 234.987 41.596 C 234.353 41.588,233.915 41.674,233.750 41.838 M73.024 42.736 C 72.771 43.020,72.649 43.438,72.611 44.149 L 72.559 45.159 71.719 45.312 L 70.879 45.465 70.879 46.579 L 70.879 47.693 72.045 47.685 C 72.758 47.680,73.118 47.619,72.973 47.527 C 72.796 47.415,72.792 47.375,72.956 47.373 C 73.106 47.372,73.177 47.059,73.177 46.407 L 73.177 45.443 74.370 45.390 L 75.563 45.338 75.615 43.880 C 75.653 42.790,75.609 42.415,75.438 42.397 C 74.091 42.254,73.363 42.356,73.024 42.736 M196.322 42.860 C 195.982 43.109,195.916 44.238,196.198 44.981 C 196.367 45.424,196.423 45.441,197.568 45.390 L 198.763 45.338 198.815 44.150 C 198.864 43.034,198.843 42.958,198.461 42.880 C 197.410 42.665,196.599 42.658,196.322 42.860 M271.506 43.120 C 271.365 43.209,271.184 43.241,271.103 43.191 C 271.022 43.141,270.979 44.042,271.006 45.192 L 271.056 47.282 272.244 47.335 C 273.649 47.396,273.726 47.280,273.682 45.161 C 273.640 43.161,272.755 42.331,271.506 43.120 M328.859 43.879 C 328.516 45.033,328.520 45.771,328.875 47.036 L 329.159 48.049 330.295 48.108 L 331.431 48.166 331.409 45.656 L 331.386 43.145 330.651 43.063 C 329.156 42.894,329.151 42.897,328.859 43.879 M357.587 43.111 C 357.446 43.205,357.265 43.242,357.185 43.192 C 357.105 43.143,357.051 43.168,357.065 43.248 C 357.079 43.328,357.081 43.851,357.069 44.410 L 357.048 45.426 355.924 45.426 L 354.800 45.426 354.688 46.354 C 354.515 47.796,354.561 49.844,354.756 49.359 C 354.897 49.009,355.042 48.962,355.973 48.962 C 357.311 48.962,357.932 48.328,357.932 46.963 C 357.932 46.071,358.212 45.780,359.069 45.780 C 359.533 45.780,359.805 43.501,359.373 43.234 C 359.049 43.033,357.829 42.949,357.587 43.111 M167.471 43.269 C 165.052 43.386,164.968 47.724,167.385 47.724 C 168.692 47.724,168.651 47.808,168.587 45.239 L 168.537 43.217 167.471 43.269 M110.190 46.432 C 109.631 48.356,110.133 51.069,111.056 51.105 C 111.367 51.117,111.821 51.137,112.064 51.149 C 112.730 51.182,112.765 51.031,112.768 48.122 L 112.771 45.426 111.627 45.426 L 110.483 45.426 110.190 46.432 M182.589 47.600 L 182.589 49.774 183.822 49.817 C 185.039 49.859,185.055 49.853,185.163 49.366 C 185.223 49.095,185.353 48.610,185.450 48.289 C 185.622 47.726,185.602 47.528,185.224 46.089 L 185.050 45.426 183.820 45.426 L 182.589 45.426 182.589 47.600 M250.086 46.929 C 250.069 47.221,250.034 47.698,250.007 47.989 C 249.981 48.281,249.998 48.858,250.046 49.271 L 250.132 50.022 251.255 50.022 L 252.378 50.022 252.627 48.917 C 252.943 47.516,252.703 46.851,251.873 46.823 C 251.584 46.813,251.129 46.799,250.862 46.791 C 250.594 46.784,250.317 46.692,250.246 46.588 C 250.174 46.484,250.102 46.637,250.086 46.929 M291.832 47.081 C 291.622 47.291,291.598 48.015,291.761 49.202 L 291.873 50.022 292.998 50.022 L 294.123 50.022 294.123 48.422 L 294.123 46.822 293.069 46.860 C 292.489 46.881,291.932 46.981,291.832 47.081 M10.528 47.860 C 10.365 48.023,10.423 57.492,10.589 57.691 C 10.779 57.920,12.688 57.911,12.911 57.680 C 12.989 57.600,13.098 56.262,13.153 54.706 C 13.208 53.151,13.301 51.342,13.358 50.687 C 13.436 49.813,13.384 49.259,13.166 48.602 L 12.869 47.707 11.739 47.743 C 11.117 47.763,10.573 47.816,10.528 47.860 M54.937 47.841 C 54.764 47.888,54.643 48.087,54.652 48.310 C 54.661 48.522,54.657 48.991,54.643 49.351 L 54.618 50.005 53.513 50.058 L 52.408 50.110 52.358 51.834 L 52.307 53.557 53.539 53.557 C 54.921 53.557,55.318 53.249,55.588 51.966 C 55.738 51.252,56.140 50.731,56.545 50.725 C 57.348 50.714,57.647 50.159,57.498 48.955 L 57.357 47.813 56.297 47.785 C 55.714 47.770,55.101 47.795,54.937 47.841 M84.943 47.885 C 84.761 48.188,84.864 50.633,85.064 50.760 C 85.537 51.060,87.247 50.923,87.577 50.559 C 87.966 50.129,87.896 48.154,87.482 47.885 C 87.212 47.710,85.049 47.709,84.943 47.885 M143.324 47.839 C 143.080 47.907,143.030 48.219,143.009 49.788 C 142.984 51.653,142.985 51.657,143.388 51.549 C 143.610 51.490,144.157 51.440,144.604 51.439 C 145.754 51.435,146.072 50.687,145.658 48.962 L 145.382 47.813 144.498 47.785 C 144.012 47.770,143.484 47.794,143.324 47.839 M210.532 49.271 L 210.500 50.817 211.738 50.759 C 213.165 50.692,213.283 50.552,213.087 49.165 C 212.880 47.691,212.912 47.724,211.677 47.724 L 210.563 47.724 210.532 49.271 M191.854 49.654 C 191.814 49.694,191.781 50.317,191.781 51.038 L 191.781 52.348 192.974 52.290 L 194.167 52.232 194.219 50.950 C 194.248 50.245,194.208 49.663,194.131 49.655 C 193.503 49.596,191.913 49.595,191.854 49.654 M352.557 50.224 C 352.608 50.308,352.581 50.376,352.496 50.376 C 352.412 50.376,352.333 50.917,352.322 51.579 L 352.301 52.783 353.570 52.773 L 354.839 52.762 354.897 52.148 C 354.929 51.810,354.904 51.191,354.841 50.772 L 354.727 50.011 353.595 50.042 C 352.973 50.059,352.505 50.141,352.557 50.224 M231.196 51.264 C 230.971 51.807,231.024 54.016,231.271 54.417 C 231.343 54.533,231.874 54.618,232.534 54.618 L 233.672 54.618 233.672 52.953 C 233.672 50.727,233.673 50.729,232.437 50.729 C 231.468 50.729,231.406 50.756,231.196 51.264 M166.187 51.531 C 166.167 51.632,165.773 51.716,165.310 51.717 C 163.974 51.720,163.853 51.818,163.856 52.889 C 163.860 54.537,163.919 54.618,165.117 54.618 C 166.362 54.618,166.364 54.614,166.283 52.746 C 166.250 51.977,166.206 51.430,166.187 51.531 M66.116 51.958 C 65.853 52.220,65.753 52.552,65.751 53.160 C 65.747 54.250,65.602 54.448,64.718 54.566 L 63.986 54.664 63.986 55.799 L 63.986 56.934 65.128 56.897 C 66.050 56.867,66.266 56.806,66.249 56.579 C 66.237 56.424,66.240 55.919,66.256 55.457 L 66.284 54.618 67.414 54.618 L 68.544 54.618 68.519 53.160 L 68.493 51.701 67.485 51.649 C 66.661 51.605,66.412 51.662,66.116 51.958 M330.240 51.920 L 329.150 51.983 328.905 53.344 C 328.717 54.388,328.703 54.954,328.846 55.767 L 329.034 56.827 330.226 56.879 L 331.418 56.932 331.418 54.361 C 331.418 52.947,331.399 51.805,331.374 51.824 C 331.350 51.842,330.840 51.886,330.240 51.920 M268.761 52.641 C 268.643 52.949,268.642 55.047,268.760 55.355 C 268.820 55.512,269.128 55.579,269.688 55.557 C 270.149 55.539,270.665 55.519,270.835 55.513 C 271.160 55.501,271.288 53.668,271.031 52.708 C 270.902 52.228,268.942 52.171,268.761 52.641 M380.101 52.804 C 380.041 53.072,379.913 53.603,379.817 53.984 C 379.702 54.444,379.705 55.036,379.827 55.751 C 379.928 56.343,380.057 57.125,380.115 57.490 C 380.178 57.894,380.320 58.158,380.476 58.166 C 380.618 58.174,381.052 58.180,381.441 58.180 C 381.829 58.180,382.227 58.174,382.324 58.166 C 382.434 58.158,382.501 57.061,382.501 55.259 L 382.501 52.365 381.356 52.341 C 380.242 52.317,380.208 52.329,380.101 52.804 M252.428 55.696 L 252.452 56.865 253.738 56.899 L 255.024 56.933 254.997 55.731 L 254.971 54.529 253.688 54.528 L 252.404 54.526 252.428 55.696 M80.315 54.873 C 80.270 54.992,80.256 55.759,80.284 56.577 L 80.336 58.065 81.568 58.065 C 82.705 58.065,82.817 58.030,83.024 57.623 C 83.348 56.982,83.318 55.239,82.977 54.898 C 82.634 54.555,80.445 54.534,80.315 54.873 M93.843 55.268 C 93.617 55.639,93.375 55.968,93.306 55.997 C 93.238 56.027,92.972 56.245,92.715 56.483 C 92.459 56.721,92.173 56.916,92.081 56.916 C 91.989 56.916,91.913 57.472,91.913 58.153 L 91.913 59.390 93.056 59.390 C 94.338 59.390,94.370 59.362,94.721 57.922 C 94.881 57.268,94.879 56.822,94.714 55.978 C 94.434 54.543,94.335 54.462,93.843 55.268 M208.344 54.728 C 208.276 54.797,208.219 55.934,208.219 57.254 L 208.219 59.655 209.412 59.655 C 210.592 59.655,210.607 59.649,210.731 59.125 C 211.269 56.856,211.268 56.864,210.924 55.767 L 210.592 54.706 209.531 54.654 C 208.947 54.626,208.413 54.659,208.344 54.728 M305.854 54.880 C 305.810 54.995,305.797 55.759,305.825 56.577 L 305.877 58.065 306.992 58.039 C 308.816 57.997,309.194 57.224,308.362 55.234 L 308.100 54.607 307.017 54.639 C 306.375 54.658,305.901 54.757,305.854 54.880 M289.850 55.104 C 289.234 55.238,288.933 57.586,289.370 58.841 C 289.566 59.403,289.574 59.406,290.652 59.354 L 291.737 59.302 291.787 57.283 C 291.846 54.904,291.672 54.708,289.850 55.104 M47.945 57.039 C 47.800 57.093,47.724 57.511,47.724 58.256 L 47.724 59.390 46.575 59.390 L 45.426 59.390 45.426 61.032 L 45.426 62.674 46.592 62.714 C 47.979 62.762,48.457 62.355,48.608 60.996 C 48.694 60.226,48.721 60.195,49.461 60.016 C 50.414 59.785,50.517 59.580,50.389 58.164 L 50.287 57.026 49.227 56.991 C 48.643 56.971,48.067 56.993,47.945 57.039 M140.963 57.094 C 140.726 57.195,140.697 57.249,140.875 57.259 C 141.033 57.268,141.068 57.327,140.963 57.404 C 140.865 57.476,140.771 58.051,140.754 58.683 C 140.737 59.315,140.763 59.737,140.811 59.621 C 140.859 59.505,141.003 59.450,141.131 59.499 C 141.259 59.549,141.771 59.604,142.268 59.622 L 143.173 59.655 143.170 58.595 C 143.166 57.123,142.292 56.528,140.963 57.094 M348.034 57.094 C 348.034 57.202,347.964 57.247,347.880 57.195 C 347.796 57.143,347.712 57.802,347.695 58.660 L 347.663 60.220 348.880 60.255 C 349.792 60.282,350.154 60.223,350.323 60.019 C 350.614 59.669,350.503 57.308,350.186 57.112 C 349.823 56.888,348.034 56.872,348.034 57.094 M359.287 59.155 C 359.139 59.302,359.137 60.755,359.284 61.304 C 359.387 61.689,359.468 61.712,360.515 61.658 L 361.635 61.600 361.684 63.897 L 361.732 66.195 362.902 66.247 L 364.073 66.299 364.272 65.506 C 364.610 64.165,364.462 61.089,364.040 60.667 C 363.776 60.403,361.997 60.460,361.997 60.733 C 361.997 60.881,361.918 60.953,361.821 60.893 C 361.723 60.833,361.644 60.390,361.644 59.910 L 361.644 59.037 360.524 59.037 C 359.909 59.037,359.352 59.090,359.287 59.155 M77.950 60.750 L 77.950 62.057 79.229 62.005 C 80.695 61.946,80.715 61.920,80.516 60.330 L 80.397 59.372 79.173 59.408 L 77.950 59.444 77.950 60.750 M112.562 59.876 C 112.064 61.088,112.462 65.024,113.087 65.067 C 115.136 65.207,115.068 65.308,115.068 62.119 L 115.068 59.390 113.915 59.390 C 112.823 59.390,112.751 59.416,112.562 59.876 M266.310 60.318 C 266.188 61.334,266.201 65.465,266.324 64.605 C 266.431 63.852,266.583 63.758,267.682 63.765 L 268.659 63.772 269.030 62.779 C 269.762 60.821,269.135 59.390,267.543 59.390 L 266.421 59.390 266.310 60.318 M303.491 60.539 L 303.491 61.688 302.382 61.688 L 301.273 61.688 301.223 62.820 C 301.165 64.111,301.173 64.120,302.547 64.344 C 303.765 64.542,304.021 64.386,304.021 63.444 C 304.021 62.649,304.493 62.218,305.365 62.218 C 306.165 62.218,306.388 61.861,306.247 60.801 C 306.058 59.378,306.072 59.390,304.709 59.390 L 303.491 59.390 303.491 60.539 M229.494 59.699 C 228.647 59.842,228.298 62.154,228.919 63.516 C 229.129 63.977,229.193 63.999,230.213 63.949 L 231.286 63.897 231.338 62.130 C 231.414 59.524,231.313 59.392,229.494 59.699 M162.789 60.060 L 161.637 60.112 161.420 60.809 C 161.150 61.672,161.149 61.960,161.409 63.089 L 161.616 63.986 162.740 63.986 C 164.092 63.986,164.058 64.045,163.992 61.764 L 163.942 60.009 162.789 60.060 M59.177 61.018 C 58.791 61.310,58.506 62.080,58.506 62.828 C 58.506 63.440,58.232 63.624,57.313 63.630 C 56.920 63.632,56.876 63.739,56.876 64.693 C 56.876 64.887,56.885 65.331,56.896 65.679 L 56.916 66.312 58.109 66.254 L 59.302 66.195 59.354 65.099 L 59.407 64.002 60.503 63.950 L 61.600 63.897 61.600 62.395 L 61.600 60.893 60.539 60.841 C 59.871 60.809,59.366 60.874,59.177 61.018 M89.413 61.379 C 89.173 61.825,89.204 63.193,89.465 63.682 C 89.608 63.948,89.822 63.993,90.731 63.950 L 91.825 63.897 91.876 62.439 L 91.928 60.981 90.778 60.981 C 89.767 60.981,89.602 61.029,89.413 61.379 M345.408 63.006 L 345.358 64.339 346.613 64.339 C 348.091 64.339,348.162 64.255,347.927 62.775 L 347.768 61.776 346.613 61.725 L 345.458 61.674 345.408 63.006 M324.787 63.301 C 324.033 63.422,323.464 63.979,323.464 64.594 C 323.464 64.997,323.334 65.090,321.842 65.743 C 320.913 66.149,320.777 66.411,320.836 67.689 L 320.876 68.582 322.612 68.582 L 324.348 68.582 324.348 67.433 L 324.348 66.284 325.320 66.262 C 325.855 66.249,326.392 66.230,326.513 66.217 C 326.667 66.202,326.750 65.725,326.786 64.644 L 326.837 63.093 326.152 63.141 C 325.776 63.168,325.161 63.240,324.787 63.301 M356.755 63.539 C 356.448 63.894,356.393 64.125,356.471 64.734 C 356.668 66.257,356.720 66.306,358.063 66.248 L 359.258 66.195 359.258 64.693 L 359.258 63.190 358.197 63.144 C 357.257 63.104,357.093 63.148,356.755 63.539 M287.583 63.435 C 287.144 63.560,287.141 63.575,287.132 65.673 C 287.127 66.835,287.058 68.004,286.980 68.271 C 286.801 68.881,287.098 69.021,288.213 68.854 L 289.015 68.734 288.977 67.686 C 288.955 67.078,288.858 66.634,288.747 66.630 C 288.641 66.626,288.774 66.504,289.041 66.359 C 289.460 66.132,289.854 63.537,289.483 63.445 C 289.084 63.345,287.920 63.340,287.583 63.435 M32.412 63.597 C 31.302 63.661,31.290 63.706,31.290 67.521 C 31.291 70.888,31.288 70.879,32.353 70.879 C 33.811 70.879,33.732 71.076,33.752 67.371 C 33.773 63.529,33.770 63.518,32.412 63.597 M138.416 66.234 L 138.378 68.405 139.614 68.405 L 140.850 68.405 141.054 67.421 C 141.262 66.421,141.158 64.884,140.843 64.284 C 140.702 64.018,140.487 63.972,139.564 64.014 L 138.454 64.064 138.416 66.234 M205.942 64.207 C 205.734 65.396,205.813 69.099,206.033 68.493 C 206.069 68.394,206.544 68.342,207.118 68.374 L 208.139 68.432 208.466 67.525 C 208.797 66.604,208.782 66.044,208.389 64.649 L 208.203 63.986 207.091 63.986 C 206.341 63.986,205.968 64.058,205.942 64.207 M296.597 65.205 L 296.597 66.435 297.614 66.731 C 298.549 67.003,298.701 67.005,299.522 66.746 L 300.413 66.465 300.374 65.270 L 300.335 64.074 298.466 64.024 L 296.597 63.974 296.597 65.205 M88.377 65.009 C 87.000 65.071,86.611 65.513,86.611 67.017 C 86.611 68.429,86.767 68.582,88.213 68.582 C 89.683 68.582,89.647 68.636,89.578 66.536 L 89.527 64.958 88.377 65.009 M40.936 66.488 C 40.987 66.570,40.950 66.637,40.854 66.637 C 40.757 66.637,40.683 66.856,40.689 67.123 C 40.719 68.613,40.760 68.560,39.549 68.617 L 38.445 68.670 38.391 70.217 L 38.337 71.763 39.507 71.763 C 41.092 71.763,41.293 71.627,41.440 70.455 C 41.577 69.353,41.737 69.164,42.599 69.082 C 43.276 69.018,43.485 68.268,43.219 66.853 L 43.109 66.266 41.977 66.302 C 41.354 66.322,40.886 66.406,40.936 66.488 M73.289 67.237 C 73.229 67.733,73.180 68.756,73.179 69.510 L 73.177 70.879 72.514 70.900 C 72.150 70.912,71.746 70.907,71.617 70.890 C 71.089 70.818,70.921 71.244,70.896 72.717 L 70.871 74.193 72.100 74.218 C 73.823 74.254,74.410 73.190,73.605 71.493 C 73.076 70.379,73.275 70.094,74.584 70.089 L 75.726 70.084 76.136 69.377 C 76.483 68.780,76.529 68.519,76.436 67.698 C 76.281 66.344,76.176 66.261,74.673 66.300 L 73.397 66.334 73.289 67.237 M382.248 67.557 C 381.953 68.763,381.951 68.925,382.217 70.051 C 382.373 70.713,382.501 71.454,382.501 71.699 C 382.501 72.122,382.544 72.140,383.440 72.099 C 383.957 72.075,384.474 72.114,384.589 72.185 C 384.748 72.283,384.799 71.585,384.799 69.327 L 384.799 66.339 383.682 66.303 L 382.564 66.267 382.248 67.557 M354.310 67.823 C 354.126 68.192,353.930 68.970,353.876 69.554 L 353.778 70.614 353.027 70.772 L 352.276 70.930 352.276 72.056 L 352.276 73.181 353.425 73.157 L 354.574 73.132 354.574 72.014 L 354.574 70.896 355.767 70.843 L 356.960 70.791 356.960 69.023 L 356.960 67.256 355.803 67.204 L 354.646 67.153 354.310 67.823 M94.227 70.747 L 94.263 73.177 95.459 73.177 L 96.656 73.177 96.782 71.831 C 96.894 70.631,96.813 68.649,96.644 68.481 C 96.609 68.446,96.043 68.394,95.386 68.367 L 94.191 68.316 94.227 70.747 M159.197 68.714 C 158.778 70.240,158.692 71.362,158.930 72.205 L 159.180 73.089 160.368 73.141 L 161.555 73.193 161.555 70.799 L 161.555 68.405 160.418 68.405 C 159.486 68.405,159.266 68.460,159.197 68.714 M226.533 69.224 C 226.196 70.211,226.163 71.767,226.461 72.590 C 226.673 73.177,226.673 73.177,227.880 73.177 L 229.087 73.177 229.037 70.835 L 228.988 68.493 227.903 68.441 L 226.817 68.389 226.533 69.224 M317.181 68.596 C 317.116 68.701,317.051 69.262,317.038 69.841 L 317.013 70.896 318.383 70.863 L 319.753 70.830 319.753 69.724 C 319.753 68.880,319.687 68.594,319.473 68.512 C 319.001 68.331,317.306 68.393,317.181 68.596 M264.009 68.929 C 263.752 69.998,263.891 72.687,264.196 72.561 C 264.372 72.488,264.925 72.442,265.425 72.458 L 266.333 72.487 266.587 71.727 C 266.808 71.065,266.808 70.814,266.581 69.772 L 266.322 68.577 265.198 68.617 C 264.357 68.648,264.057 68.727,264.009 68.929 M340.786 70.419 L 340.786 72.205 341.934 72.146 C 343.343 72.073,343.791 71.652,343.791 70.402 C 343.791 68.924,343.418 68.572,341.891 68.607 L 340.787 68.633 340.786 70.419 M52.015 70.471 C 51.842 70.733,51.622 71.262,51.525 71.647 C 51.344 72.363,51.275 72.429,50.198 72.903 C 49.553 73.188,49.449 73.763,49.769 75.262 C 49.870 75.731,52.207 75.807,52.254 75.342 C 52.266 75.221,52.286 74.684,52.298 74.149 L 52.320 73.177 53.469 73.177 L 54.618 73.177 54.618 71.586 L 54.618 69.996 53.473 69.996 C 52.426 69.996,52.301 70.036,52.015 70.471 M311.843 70.713 C 311.272 70.888,311.268 70.897,311.268 72.033 L 311.268 73.177 309.810 73.188 C 308.757 73.196,308.462 73.244,308.749 73.359 C 309.116 73.507,309.250 74.207,309.138 75.398 C 309.116 75.626,310.462 76.536,310.820 76.536 C 311.263 76.536,311.975 77.216,311.975 77.638 C 311.975 78.447,312.856 79.033,313.988 78.976 L 315.068 78.922 315.068 77.331 L 315.068 75.740 313.972 75.688 L 312.875 75.635 312.823 74.539 L 312.771 73.442 312.152 73.333 C 311.782 73.268,312.262 73.214,313.345 73.200 L 315.157 73.177 315.157 72.047 C 315.157 71.137,315.097 70.894,314.850 70.799 C 314.294 70.586,312.428 70.532,311.843 70.713 M305.215 72.972 C 304.596 73.346,304.602 73.382,305.347 73.784 C 306.050 74.162,307.785 73.934,307.976 73.438 C 308.193 72.872,305.994 72.502,305.215 72.972 M82.486 73.118 C 82.337 73.267,82.334 74.374,82.481 75.107 L 82.593 75.667 83.674 75.615 L 84.755 75.563 84.807 74.282 L 84.859 73.000 83.731 73.000 C 83.111 73.000,82.551 73.053,82.486 73.118 M137.495 73.258 C 137.451 73.302,137.120 73.358,136.759 73.382 L 136.103 73.426 136.103 74.893 L 136.103 76.359 137.340 76.359 L 138.577 76.359 138.575 75.166 C 138.571 73.414,138.126 72.627,137.495 73.258 M204.242 73.335 L 203.535 73.442 203.481 74.937 C 203.398 77.214,203.414 77.243,204.749 77.243 L 205.868 77.243 206.183 76.543 C 206.530 75.773,206.477 74.942,206.010 73.823 C 205.722 73.135,205.664 73.119,204.242 73.335 M339.284 73.308 C 338.448 73.430,338.324 73.631,338.396 74.738 C 338.431 75.289,338.467 75.859,338.475 76.005 C 338.486 76.206,338.766 76.284,339.626 76.325 C 341.156 76.400,341.431 75.905,340.942 73.962 C 340.730 73.120,340.686 73.103,339.284 73.308 M349.812 75.278 C 349.576 75.720,349.570 76.899,349.801 77.506 C 350.100 78.293,349.205 79.540,348.166 79.786 C 347.495 79.944,347.549 80.384,348.255 80.514 C 348.570 80.572,352.580 80.595,357.164 80.566 L 365.499 80.513 365.981 79.992 C 366.499 79.432,366.792 77.596,366.444 77.085 C 365.976 76.399,363.942 76.760,363.942 77.529 L 363.942 77.950 358.065 77.950 L 352.187 77.950 352.187 76.492 L 352.187 75.033 351.093 74.981 C 350.153 74.936,349.973 74.978,349.812 75.278 M284.668 75.649 C 284.571 75.806,284.638 76.486,284.857 77.552 C 284.939 77.956,289.267 78.169,290.875 77.848 C 291.678 77.688,291.552 75.747,290.728 75.583 C 289.834 75.404,284.786 75.459,284.668 75.649 M33.900 75.787 C 34.074 75.845,34.080 75.922,33.926 76.107 C 33.815 76.241,33.753 76.710,33.788 77.150 L 33.851 77.950 32.657 77.950 L 31.463 77.950 31.463 79.054 C 31.463 79.772,31.346 80.407,31.129 80.866 C 30.378 82.455,30.368 82.996,31.077 83.562 C 31.522 83.917,32.346 83.024,32.346 82.186 C 32.346 81.472,32.768 80.954,33.349 80.954 C 33.952 80.954,34.266 80.413,34.325 79.272 L 34.379 78.215 35.315 78.161 L 36.251 78.107 36.199 76.924 L 36.147 75.740 34.909 75.725 C 34.229 75.717,33.775 75.745,33.900 75.787 M68.935 75.797 C 68.747 75.882,68.653 76.260,68.614 77.090 L 68.557 78.263 69.848 78.239 C 71.328 78.211,71.347 78.187,71.149 76.601 L 71.031 75.652 70.115 75.664 C 69.612 75.671,69.081 75.731,68.935 75.797 M115.004 76.472 C 114.861 77.515,114.861 78.460,115.004 79.175 L 115.117 79.738 116.242 79.687 L 117.366 79.637 117.366 77.644 L 117.366 75.652 116.241 75.652 L 115.117 75.652 115.004 76.472 M261.724 75.784 C 261.619 75.976,261.557 80.389,261.658 80.552 C 261.704 80.628,262.261 80.663,262.896 80.631 L 264.051 80.572 264.328 79.760 C 265.130 77.405,264.522 75.652,262.903 75.652 C 262.295 75.652,261.764 75.711,261.724 75.784 M156.819 77.216 C 156.554 77.778,156.549 78.450,156.804 79.462 L 157.002 80.247 158.022 80.247 C 159.232 80.247,159.259 80.207,159.255 78.421 C 159.251 76.813,159.200 76.745,158.012 76.756 C 157.139 76.763,157.009 76.814,156.819 77.216 M80.010 77.389 C 79.597 77.845,79.586 80.336,79.997 80.494 C 80.151 80.553,84.019 80.601,88.594 80.601 L 96.911 80.601 96.820 79.471 C 96.770 78.849,96.675 78.252,96.609 78.145 C 96.524 78.008,94.413 77.950,89.517 77.950 L 82.545 77.950 82.545 77.508 C 82.545 76.922,80.518 76.827,80.010 77.389 M224.403 77.367 C 224.270 77.714,224.278 79.010,224.417 79.708 L 224.530 80.273 225.610 80.216 L 226.690 80.159 226.690 78.657 L 226.690 77.154 225.596 77.131 C 224.784 77.114,224.477 77.175,224.403 77.367 M8.450 78.070 C 8.177 78.141,8.149 78.612,8.136 83.263 L 8.122 88.378 9.345 88.378 C 10.843 88.378,10.782 88.500,10.782 85.487 C 10.782 84.204,10.866 82.486,10.969 81.668 C 11.357 78.568,10.610 77.500,8.450 78.070 M336.153 78.082 C 336.120 78.155,336.096 78.652,336.099 79.187 L 336.105 80.159 334.955 80.247 L 333.805 80.336 333.755 82.195 L 333.705 84.055 334.932 84.105 C 335.793 84.140,336.202 84.087,336.306 83.925 C 336.637 83.407,336.893 82.408,336.895 81.624 C 336.898 80.712,337.174 80.424,338.043 80.424 C 338.500 80.424,338.504 80.413,338.453 79.231 L 338.400 78.038 337.782 78.021 C 337.441 78.012,337.071 78.076,336.958 78.163 C 336.834 78.258,336.707 78.247,336.638 78.135 C 336.505 77.919,336.238 77.890,336.153 78.082 M294.273 79.540 C 294.148 80.822,294.172 82.192,294.320 82.192 C 294.417 82.192,294.448 82.271,294.388 82.369 C 294.319 82.479,294.706 82.545,295.426 82.545 L 296.572 82.545 296.850 81.590 C 297.202 80.381,297.198 80.206,296.813 79.762 C 296.403 79.290,294.315 79.107,294.273 79.540 M284.793 79.850 C 284.768 79.998,284.405 80.071,283.699 80.071 L 282.644 80.071 282.261 81.333 C 281.864 82.638,281.954 83.972,282.483 84.609 C 282.746 84.926,284.733 84.930,284.854 84.613 C 284.903 84.487,284.917 83.314,284.887 82.006 C 284.857 80.699,284.815 79.728,284.793 79.850 M133.819 82.581 C 133.826 83.874,133.866 84.852,133.907 84.755 C 133.948 84.655,134.461 84.602,135.086 84.634 L 136.191 84.690 136.522 83.641 C 136.847 82.613,136.847 82.568,136.518 81.464 L 136.182 80.336 134.993 80.284 L 133.805 80.231 133.819 82.581 M315.001 80.900 C 314.728 81.953,314.719 82.583,314.967 83.252 L 315.196 83.871 316.281 83.783 L 317.366 83.694 317.366 82.015 L 317.366 80.336 316.271 80.281 L 315.176 80.226 315.001 80.900 M43.950 81.799 C 42.897 81.873,42.497 82.217,42.265 83.251 C 42.075 84.097,41.700 84.490,41.084 84.490 C 40.473 84.490,40.277 84.892,40.335 86.021 L 40.389 87.053 41.670 87.105 L 42.952 87.156 42.952 86.008 L 42.952 84.859 44.145 84.807 L 45.338 84.755 45.389 83.246 C 45.445 81.558,45.572 81.686,43.950 81.799 M64.104 82.663 C 64.039 82.728,63.986 83.523,63.986 84.431 L 63.986 86.080 65.219 86.080 C 66.637 86.080,66.991 85.728,66.991 84.313 C 66.991 82.937,66.624 82.545,65.336 82.545 C 64.723 82.545,64.169 82.598,64.104 82.663 M201.259 82.693 C 201.094 82.974,201.150 85.957,201.324 86.167 C 201.518 86.401,203.415 86.352,203.644 86.108 C 204.019 85.706,204.078 84.868,203.806 83.783 L 203.517 82.634 202.423 82.604 C 201.821 82.588,201.297 82.628,201.259 82.693 M384.799 84.587 C 384.799 86.076,384.857 86.617,385.020 86.634 C 387.179 86.859,387.245 86.798,387.258 84.578 C 387.270 82.620,387.262 82.607,385.904 82.583 L 384.799 82.564 384.799 84.587 M259.655 85.030 C 259.655 85.133,259.576 85.168,259.479 85.108 C 259.365 85.038,259.302 85.686,259.302 86.924 L 259.302 88.848 260.525 88.862 C 262.139 88.879,262.662 87.438,261.806 85.329 C 261.599 84.821,259.655 84.551,259.655 85.030 M331.522 84.975 C 331.465 85.032,331.419 85.762,331.419 86.596 L 331.419 88.113 332.646 88.167 C 333.836 88.219,333.882 88.206,334.130 87.725 C 334.411 87.179,334.261 85.551,333.887 85.101 C 333.689 84.862,331.739 84.758,331.522 84.975 M155.080 85.319 C 154.281 85.475,153.946 87.160,154.406 88.708 L 154.681 89.632 155.776 89.580 L 156.871 89.527 156.923 87.760 C 157.001 85.091,156.903 84.961,155.080 85.319 M222.198 85.900 C 222.121 85.951,222.018 86.191,221.968 86.434 C 221.919 86.677,221.853 86.955,221.823 87.053 C 221.792 87.150,221.831 87.770,221.908 88.430 L 222.049 89.631 223.221 89.579 L 224.392 89.527 224.445 88.025 C 224.521 85.814,224.506 85.784,223.325 85.797 C 222.781 85.803,222.274 85.850,222.198 85.900 M62.079 87.263 C 61.692 87.341,61.676 87.406,61.725 88.783 L 61.776 90.222 62.959 90.287 L 64.141 90.352 64.263 89.704 C 64.329 89.348,64.314 88.651,64.229 88.156 L 64.074 87.257 63.279 87.219 C 62.841 87.198,62.301 87.218,62.079 87.263 M75.239 87.259 C 75.175 87.324,75.122 87.550,75.122 87.762 C 75.122 88.313,74.575 88.732,73.854 88.732 C 72.897 88.732,72.574 89.713,73.031 91.237 L 73.238 91.928 74.400 91.877 L 75.563 91.825 75.616 90.720 L 75.669 89.616 86.428 89.616 C 98.818 89.616,97.746 89.743,97.746 88.271 L 97.746 87.141 86.552 87.141 C 80.395 87.141,75.304 87.194,75.239 87.259 M343.768 87.362 C 343.648 88.517,343.728 89.363,343.967 89.471 C 344.113 89.537,349.218 89.596,355.310 89.603 L 366.387 89.616 366.578 88.723 C 366.959 86.947,368.343 87.141,355.281 87.141 C 346.219 87.141,343.787 87.188,343.768 87.362 M282.493 88.511 C 282.469 88.661,282.090 88.732,281.308 88.732 L 280.159 88.732 280.159 90.325 L 280.159 91.918 281.322 91.892 C 282.699 91.863,282.666 91.916,282.589 89.867 C 282.556 88.999,282.513 88.389,282.493 88.511 M117.267 90.801 C 117.164 91.546,117.164 92.354,117.266 92.929 L 117.431 93.856 118.552 93.825 C 119.893 93.788,119.879 93.815,119.804 91.383 L 119.753 89.704 118.593 89.652 L 117.434 89.601 117.267 90.801 M131.642 89.837 C 131.356 90.058,131.352 90.146,131.497 92.886 C 131.518 93.274,131.571 93.506,131.614 93.400 C 131.664 93.279,131.970 93.249,132.440 93.318 C 133.993 93.546,134.445 92.825,134.012 90.809 L 133.755 89.616 132.842 89.616 C 132.339 89.616,131.799 89.715,131.642 89.837 M329.121 90.933 L 329.121 92.267 330.363 92.267 C 331.828 92.267,331.900 92.180,331.665 90.702 L 331.507 89.704 330.314 89.652 L 329.121 89.599 329.121 90.933 M194.178 91.331 C 194.045 91.677,194.052 92.973,194.191 93.667 L 194.303 94.227 195.384 94.175 L 196.465 94.123 196.465 92.620 L 196.465 91.118 195.371 91.095 C 194.559 91.078,194.251 91.139,194.178 91.331 M340.465 91.472 C 340.201 92.051,340.201 92.659,340.463 93.535 L 340.670 94.226 341.833 94.174 L 342.996 94.123 342.996 92.620 L 342.996 91.118 341.835 91.066 C 340.734 91.018,340.662 91.039,340.465 91.472 M59.419 92.068 C 59.426 92.129,59.423 92.636,59.411 93.195 L 59.390 94.211 58.253 94.211 C 57.320 94.211,57.101 94.267,57.033 94.521 C 56.905 94.998,56.893 96.334,57.010 97.224 L 57.115 98.026 58.172 98.068 C 59.658 98.127,60.097 97.614,60.097 95.820 C 60.097 94.659,60.313 94.388,61.235 94.388 C 61.677 94.388,61.688 94.359,61.688 93.177 L 61.688 91.967 60.547 91.962 C 59.919 91.960,59.411 92.008,59.419 92.068 M199.160 92.031 C 198.902 92.102,198.851 92.327,198.851 93.393 C 198.851 94.947,198.977 95.095,200.297 95.095 C 201.518 95.095,201.625 94.900,201.387 93.116 L 201.237 92.002 200.354 91.974 C 199.867 91.959,199.331 91.985,199.160 92.031 M366.336 93.392 C 366.202 94.611,366.271 96.156,366.460 96.156 C 366.545 96.156,366.572 96.223,366.522 96.305 C 366.471 96.387,366.935 96.470,367.553 96.490 L 368.676 96.527 368.801 95.289 C 368.940 93.901,368.788 92.631,368.478 92.600 C 368.365 92.589,367.859 92.558,367.354 92.532 L 366.437 92.485 366.336 93.392 M71.275 93.117 C 70.665 93.207,70.286 94.096,70.410 95.145 C 70.555 96.369,70.723 96.509,72.050 96.509 L 73.177 96.509 73.177 94.830 C 73.177 93.906,73.118 93.145,73.045 93.137 C 72.462 93.078,71.606 93.069,71.275 93.117 M33.451 93.623 C 33.198 93.800,33.053 94.082,33.053 94.401 C 33.053 95.181,32.705 95.759,32.103 95.981 C 31.799 96.093,31.432 96.246,31.286 96.321 C 30.980 96.477,30.855 97.366,31.017 98.228 L 31.128 98.822 32.400 98.770 L 33.672 98.719 33.725 97.622 L 33.777 96.526 34.873 96.473 L 35.970 96.421 36.021 94.874 L 36.072 93.327 34.960 93.337 C 34.250 93.343,33.705 93.446,33.451 93.623 M152.156 94.690 C 151.630 96.191,151.602 96.716,151.993 97.827 L 152.356 98.859 152.006 99.923 C 151.397 101.779,151.753 102.342,153.537 102.342 L 154.683 102.342 154.651 100.707 C 154.633 99.808,154.539 98.973,154.442 98.851 C 154.321 98.700,154.328 98.630,154.464 98.630 C 154.689 98.630,154.748 94.424,154.527 94.123 C 154.455 94.026,153.959 93.923,153.425 93.894 L 152.452 93.843 152.156 94.690 M257.145 94.521 C 257.102 94.691,257.073 95.421,257.080 96.143 L 257.092 97.456 258.240 97.410 C 258.871 97.385,259.451 97.271,259.530 97.158 C 259.675 96.948,259.554 94.968,259.367 94.479 C 259.207 94.063,257.250 94.100,257.145 94.521 M387.021 94.826 C 386.532 95.997,386.512 96.597,386.915 97.956 L 387.299 99.249 388.354 99.249 C 389.637 99.249,389.604 99.328,389.534 96.421 L 389.483 94.300 388.384 94.247 L 387.285 94.195 387.021 94.826 M219.572 95.498 C 219.301 96.661,219.301 97.009,219.568 98.009 L 219.782 98.807 220.894 98.807 L 222.006 98.807 222.006 96.686 L 222.006 94.565 220.897 94.565 L 219.789 94.565 219.572 95.498 M338.353 95.840 C 338.308 96.014,338.200 96.156,338.115 96.156 C 337.902 96.156,337.919 97.333,338.145 98.144 L 338.329 98.807 339.469 98.807 L 340.610 98.807 340.610 97.123 L 340.610 95.439 339.523 95.482 C 338.650 95.517,338.419 95.587,338.353 95.840 M129.132 96.670 C 129.098 96.727,129.058 97.742,129.043 98.924 C 129.013 101.372,128.981 101.316,130.455 101.400 L 131.459 101.457 131.748 100.701 C 132.118 99.733,132.118 98.133,131.749 97.211 L 131.462 96.492 130.328 96.529 C 129.705 96.549,129.167 96.612,129.132 96.670 M324.464 97.172 C 324.142 99.476,324.304 99.826,325.714 99.884 C 327.316 99.949,327.964 98.911,327.342 97.275 C 327.085 96.598,326.899 96.515,325.645 96.512 L 324.556 96.509 324.464 97.172 M277.984 97.119 C 277.651 97.451,277.451 98.813,277.596 99.750 C 277.812 101.142,277.773 101.105,279.022 101.105 L 280.159 101.105 280.159 98.984 L 280.159 96.863 279.200 96.863 C 278.597 96.863,278.145 96.958,277.984 97.119 M68.415 98.080 C 68.181 98.519,68.172 100.050,68.400 100.651 C 68.561 101.074,68.650 101.105,69.733 101.105 L 70.893 101.105 70.842 99.470 L 70.791 97.835 69.697 97.782 C 68.756 97.737,68.576 97.779,68.415 98.080 M54.828 99.095 C 54.701 99.232,54.611 99.482,54.628 99.650 C 54.763 100.990,54.648 101.249,53.955 101.178 C 52.536 101.032,52.368 101.163,52.341 102.432 C 52.312 103.737,52.396 103.823,53.842 103.986 C 54.902 104.105,55.148 103.936,55.148 103.090 C 55.148 102.105,55.408 101.812,56.282 101.812 C 57.481 101.812,57.777 101.067,57.247 99.386 C 57.045 98.742,55.345 98.538,54.828 99.095 M119.538 99.470 C 119.145 100.383,119.163 101.740,119.581 102.652 L 119.925 103.403 120.899 103.359 C 122.135 103.302,122.133 103.307,122.136 101.163 C 122.140 98.784,122.152 98.807,120.874 98.807 C 119.828 98.807,119.822 98.810,119.538 99.470 M196.632 98.964 C 196.499 99.097,196.550 102.242,196.689 102.430 C 196.760 102.528,197.313 102.625,197.917 102.647 L 199.016 102.687 199.212 101.960 C 199.413 101.214,199.299 99.683,199.001 99.115 C 198.849 98.826,196.895 98.701,196.632 98.964 M191.619 100.407 C 191.436 101.122,191.433 101.525,191.607 102.446 L 191.824 103.594 192.995 103.543 L 194.167 103.491 194.219 101.900 C 194.295 99.569,194.303 99.583,192.968 99.547 L 191.847 99.516 191.619 100.407 M98.886 100.652 C 98.709 101.595,98.960 103.381,99.222 103.044 C 99.365 102.861,99.693 102.799,100.330 102.837 C 101.219 102.888,101.236 102.880,101.346 102.328 C 101.659 100.762,101.365 100.249,100.189 100.312 C 99.769 100.334,99.331 100.277,99.215 100.185 C 99.063 100.065,98.971 100.195,98.886 100.652 M336.677 101.068 L 336.014 101.126 336.014 102.331 L 336.014 103.535 336.567 103.646 C 336.870 103.706,337.308 103.756,337.539 103.756 C 337.833 103.756,337.965 103.862,337.981 104.110 C 337.993 104.304,338.023 104.543,338.047 104.640 C 338.071 104.737,338.101 105.095,338.113 105.435 L 338.135 106.054 339.093 106.054 C 340.560 106.054,340.610 106.010,340.610 104.709 L 340.610 103.579 339.461 103.579 L 338.312 103.579 338.312 102.342 C 338.312 101.477,338.245 101.101,338.091 101.091 C 337.970 101.084,337.751 101.062,337.605 101.044 C 337.459 101.025,337.042 101.036,336.677 101.068 M173.575 101.281 C 173.389 101.396,173.307 101.762,173.300 102.498 L 173.290 103.550 174.509 103.673 C 175.969 103.819,176.004 103.791,176.079 102.386 C 176.136 101.313,176.125 101.280,175.696 101.264 C 175.453 101.254,174.936 101.217,174.547 101.182 C 174.158 101.146,173.721 101.191,173.575 101.281 M255.140 101.294 C 255.082 101.388,254.974 101.426,254.899 101.380 C 254.825 101.334,254.746 101.788,254.724 102.390 C 254.677 103.702,254.826 103.550,253.537 103.597 L 252.464 103.635 252.426 104.695 C 252.380 105.968,252.469 106.048,253.946 106.051 L 255.042 106.054 255.095 105.038 L 255.148 104.021 256.164 103.968 L 257.181 103.915 257.181 102.697 C 257.181 101.931,257.101 101.430,256.965 101.346 C 256.635 101.142,255.259 101.103,255.140 101.294 M47.724 104.744 C 47.724 105.792,47.757 105.885,48.210 106.117 C 49.063 106.553,50.130 106.644,50.752 106.334 C 51.061 106.180,51.425 106.054,51.561 106.054 C 51.753 106.054,51.800 105.775,51.772 104.809 L 51.736 103.564 49.730 103.591 L 47.724 103.619 47.724 104.744 M69.434 104.775 L 69.491 105.972 70.252 106.287 C 70.983 106.589,71.056 106.589,72.095 106.283 L 73.177 105.966 73.177 104.772 L 73.177 103.579 71.277 103.579 L 69.377 103.579 69.434 104.775 M96.530 104.721 L 96.505 105.862 97.180 106.044 C 99.255 106.603,99.514 106.496,99.514 105.075 C 99.514 103.597,99.495 103.579,97.927 103.579 L 96.555 103.579 96.530 104.721 M121.539 103.859 C 120.869 105.606,121.659 106.606,123.369 106.172 C 124.401 105.910,124.520 105.914,125.621 106.254 C 127.414 106.808,127.972 106.458,127.972 104.776 L 127.972 103.579 124.809 103.579 C 122.088 103.579,121.631 103.618,121.539 103.859 M159.788 103.692 C 159.997 103.749,160.041 104.006,159.994 104.909 L 159.934 106.054 163.588 106.054 L 167.242 106.054 167.183 104.905 C 167.149 104.247,167.199 103.724,167.300 103.681 C 167.397 103.641,165.687 103.610,163.500 103.614 C 161.312 103.617,159.642 103.653,159.788 103.692 M219.471 104.065 C 218.514 105.957,219.207 106.904,221.102 106.292 L 222.006 106.000 222.006 104.790 L 222.006 103.579 220.862 103.579 C 219.791 103.579,219.702 103.611,219.471 104.065 M277.794 103.889 C 277.654 104.364,277.607 105.963,277.728 106.158 C 277.798 106.271,278.237 106.271,278.997 106.156 L 280.159 105.981 280.159 104.780 L 280.159 103.579 279.022 103.579 C 278.092 103.579,277.868 103.636,277.794 103.889 M24.103 105.303 C 23.922 105.570,23.648 106.147,23.495 106.584 C 23.284 107.186,23.091 107.422,22.699 107.556 C 21.872 107.840,21.741 107.984,21.741 108.616 C 21.741 109.778,21.498 110.093,20.556 110.153 L 19.708 110.208 19.708 111.445 L 19.708 112.682 20.857 112.682 L 22.006 112.682 22.059 111.586 L 22.111 110.489 23.208 110.437 L 24.304 110.384 24.356 109.288 L 24.409 108.191 25.505 108.139 L 26.602 108.087 26.653 106.452 L 26.704 104.817 25.568 104.817 C 24.528 104.817,24.406 104.857,24.103 105.303 M245.456 106.010 C 245.246 106.361,245.331 110.078,245.551 110.155 C 247.280 110.754,248.333 109.770,248.475 107.424 L 248.569 105.877 247.052 105.877 C 246.218 105.877,245.500 105.937,245.456 106.010 M286.546 107.429 C 286.615 108.282,286.806 109.319,286.972 109.734 L 287.274 110.489 288.356 110.436 L 289.439 110.384 289.488 108.131 L 289.538 105.877 287.980 105.877 L 286.422 105.877 286.546 107.429 M344.498 106.526 C 344.498 109.327,345.099 110.504,346.496 110.437 L 347.592 110.384 347.641 108.131 L 347.691 105.877 346.095 105.877 L 344.498 105.877 344.498 106.526 M43.144 108.396 C 43.031 108.964,42.942 113.985,43.036 114.486 L 43.142 115.053 50.029 115.064 L 56.916 115.076 56.916 113.942 C 56.916 112.504,57.173 112.571,51.697 112.587 L 47.412 112.600 46.791 111.979 C 46.284 111.472,46.133 111.146,45.969 110.203 C 45.633 108.273,45.551 108.175,44.279 108.175 C 43.547 108.175,43.173 108.248,43.144 108.396 M357.064 111.579 L 357.038 115.072 365.130 115.026 L 373.221 114.980 373.274 113.884 L 373.326 112.789 372.567 112.571 C 372.149 112.451,371.449 112.367,371.012 112.382 C 370.574 112.398,368.176 112.458,365.682 112.516 L 361.147 112.620 360.335 111.842 C 359.611 111.148,359.523 110.979,359.521 110.282 C 359.516 108.324,358.735 107.616,357.454 108.408 C 357.345 108.475,357.218 108.431,357.172 108.309 C 357.127 108.187,357.078 109.658,357.064 111.579 M229.491 108.838 C 229.056 108.911,228.965 109.181,228.796 110.915 C 228.617 112.749,229.296 112.601,221.143 112.591 C 217.194 112.586,213.701 112.636,213.379 112.701 L 212.794 112.819 212.845 113.944 L 212.895 115.068 220.706 115.068 C 229.759 115.068,229.076 115.171,229.076 113.812 L 229.076 112.771 229.946 112.771 C 231.366 112.771,231.375 112.761,231.372 111.028 C 231.368 108.684,231.246 108.542,229.491 108.838 M298.895 111.180 L 298.895 112.771 300.574 112.771 L 302.254 112.771 302.254 111.530 C 302.254 110.377,302.222 110.274,301.812 110.087 C 301.569 109.976,301.370 109.819,301.370 109.737 C 301.370 109.656,300.813 109.589,300.133 109.589 L 298.895 109.589 298.895 111.180 M5.909 110.633 C 5.867 110.674,5.833 112.207,5.833 114.037 L 5.833 117.366 11.666 117.366 L 17.499 117.366 17.499 116.236 C 17.499 114.818,17.710 114.892,13.640 114.891 C 9.370 114.890,8.883 114.647,8.479 112.315 C 8.128 110.286,8.253 110.445,7.051 110.504 C 6.464 110.534,5.950 110.591,5.909 110.633 M75.426 111.178 C 75.284 111.380,74.859 111.780,74.482 112.067 L 73.796 112.587 69.355 112.582 C 63.686 112.574,63.951 112.507,64.016 113.941 L 64.066 115.068 70.787 115.066 C 74.483 115.064,77.610 114.998,77.735 114.919 C 77.903 114.812,77.949 114.270,77.912 112.845 L 77.861 110.915 76.772 110.862 C 75.835 110.818,75.647 110.862,75.426 111.178 M245.371 112.903 L 245.426 114.980 253.521 115.026 L 261.616 115.072 261.564 113.891 L 261.511 112.709 260.451 112.468 C 259.613 112.277,259.149 112.268,258.241 112.425 C 257.542 112.546,255.569 112.601,253.204 112.565 C 248.950 112.500,248.602 112.412,247.980 111.250 C 247.774 110.866,247.639 110.826,246.535 110.826 L 245.316 110.826 245.371 112.903 M393.548 112.337 C 392.453 112.647,384.934 112.695,383.564 112.401 C 382.898 112.258,382.426 112.262,381.743 112.417 C 380.065 112.796,380.184 112.679,380.241 113.889 L 380.292 114.980 388.385 115.026 L 396.479 115.072 396.428 113.612 L 396.376 112.152 395.404 112.120 C 394.870 112.102,394.034 112.200,393.548 112.337 M322.708 112.505 C 321.232 112.772,321.263 112.740,321.254 114.024 L 321.248 115.077 323.991 115.029 L 326.734 114.980 326.787 113.881 C 326.838 112.804,326.829 112.779,326.345 112.673 C 326.073 112.613,325.620 112.492,325.338 112.403 C 324.716 112.206,324.264 112.223,322.708 112.505 M333.098 112.354 C 332.903 112.404,332.443 112.521,332.076 112.616 L 331.407 112.787 331.438 113.928 L 331.470 115.068 338.146 115.068 C 346.014 115.068,345.382 115.192,345.382 113.649 L 345.382 112.445 340.300 112.475 C 337.506 112.492,334.821 112.451,334.335 112.385 C 333.849 112.319,333.292 112.305,333.098 112.354 M89.616 113.787 L 89.616 115.068 96.509 115.068 L 103.403 115.068 103.403 113.928 L 103.403 112.787 102.828 112.683 C 102.512 112.626,99.410 112.562,95.935 112.542 L 89.616 112.506 89.616 113.787 M114.715 112.552 C 114.472 112.578,113.931 112.643,113.513 112.697 L 112.753 112.795 112.791 113.841 C 112.839 115.191,111.915 115.091,123.818 115.031 L 133.716 114.980 133.769 113.887 L 133.821 112.795 133.062 112.686 C 132.325 112.581,115.603 112.459,114.715 112.552 M155.899 112.555 C 154.653 112.695,154.662 112.684,154.662 113.923 L 154.662 115.068 177.905 115.068 L 201.149 115.068 201.149 113.928 L 201.149 112.787 200.574 112.687 C 200.004 112.588,156.744 112.460,155.899 112.555 M272.735 112.551 C 272.395 112.577,271.858 112.640,271.542 112.692 L 270.968 112.787 270.968 113.928 L 270.968 115.068 278.819 115.068 C 287.991 115.068,287.229 115.195,287.229 113.670 L 287.229 112.487 280.292 112.496 C 276.476 112.501,273.076 112.526,272.735 112.551 M305.082 112.552 C 303.479 112.646,303.484 112.642,303.511 113.901 L 303.536 115.024 305.192 115.055 L 306.849 115.086 306.849 113.946 C 306.849 112.638,306.626 112.462,305.082 112.552 M13.257 131.463 C 12.746 131.650,12.484 133.634,12.933 133.912 C 13.017 133.963,13.263 134.329,13.480 134.724 C 13.698 135.120,13.970 135.607,14.085 135.806 C 14.389 136.332,14.086 136.763,13.255 136.987 C 12.377 137.223,12.019 137.850,12.019 139.153 C 12.019 140.567,12.206 140.726,13.791 140.663 L 15.113 140.610 15.165 139.505 L 15.218 138.400 16.314 138.386 C 16.917 138.379,18.377 138.384,19.558 138.399 C 20.739 138.413,21.745 138.360,21.793 138.280 C 22.089 137.795,22.080 131.506,21.783 131.494 C 19.792 131.412,13.458 131.389,13.257 131.463 M73.676 131.521 C 73.500 131.620,73.357 132.058,73.280 132.740 L 73.160 133.805 72.329 133.807 C 71.006 133.812,70.969 133.873,70.956 136.096 C 70.950 137.169,71.014 138.047,71.099 138.047 C 71.184 138.047,71.205 138.126,71.144 138.224 C 71.076 138.334,71.460 138.400,72.173 138.400 L 73.311 138.400 73.509 137.067 C 73.618 136.334,73.707 135.515,73.707 135.247 C 73.707 134.139,76.608 134.002,77.871 135.050 C 78.084 135.227,79.554 135.249,80.027 135.082 C 80.183 135.027,80.247 134.498,80.247 133.271 L 80.247 131.538 79.585 131.437 C 78.568 131.282,73.986 131.347,73.676 131.521 M82.943 131.458 C 82.472 131.545,82.308 134.966,82.766 135.134 C 83.488 135.399,84.950 135.356,85.285 135.060 C 85.849 134.563,87.696 134.099,88.718 134.197 L 89.616 134.283 89.616 133.005 C 89.616 131.773,89.598 131.720,89.129 131.540 C 88.669 131.364,83.798 131.299,82.943 131.458 M192.280 131.453 C 192.058 131.509,191.953 131.815,191.862 132.666 L 191.740 133.805 190.832 133.807 C 189.498 133.811,189.487 133.829,189.505 135.934 C 189.527 138.491,189.482 138.400,190.732 138.400 L 191.781 138.400 191.781 140.675 L 191.781 142.949 191.059 143.046 C 190.131 143.171,190.211 142.954,190.179 145.423 C 190.153 147.468,190.133 147.576,189.773 147.646 C 189.565 147.687,189.932 147.731,190.588 147.744 L 191.781 147.768 191.804 152.232 C 191.817 154.686,191.877 156.416,191.937 156.076 L 192.046 155.457 193.149 155.405 C 194.523 155.339,194.482 155.463,194.403 151.577 C 194.336 148.262,194.337 148.264,193.019 148.333 C 192.130 148.380,191.936 148.109,192.334 147.380 C 192.457 147.156,192.601 146.379,192.655 145.653 C 192.761 144.232,192.673 144.352,194.079 143.700 C 194.292 143.601,194.354 143.096,194.395 141.121 C 194.455 138.199,194.398 137.870,193.832 137.870 C 192.253 137.870,192.610 135.072,194.226 134.783 C 194.583 134.720,195.295 134.513,195.809 134.325 C 196.345 134.128,197.193 133.981,197.797 133.981 L 198.851 133.981 198.851 132.828 C 198.851 131.794,198.810 131.659,198.453 131.525 C 198.054 131.374,192.834 131.313,192.280 131.453 M264.357 131.597 C 264.001 131.775,263.735 133.805,264.068 133.805 C 264.306 133.805,266.195 135.710,266.196 135.951 C 266.196 136.083,266.335 135.913,266.505 135.572 C 266.918 134.746,267.850 134.316,269.526 134.180 L 270.879 134.070 270.933 132.939 C 270.962 132.317,270.909 131.731,270.815 131.637 C 270.584 131.406,264.813 131.370,264.357 131.597 M275.961 131.461 C 275.344 131.571,275.375 133.407,276.007 134.088 C 276.464 134.582,276.977 136.008,276.977 136.786 C 276.977 137.719,277.681 138.416,278.568 138.361 L 279.364 138.312 279.452 136.986 C 279.606 134.677,280.090 134.477,284.445 134.930 L 284.932 134.981 284.932 133.328 C 284.932 131.732,284.916 131.669,284.494 131.509 C 284.081 131.351,276.807 131.310,275.961 131.461 M324.662 131.723 C 324.371 132.014,324.326 132.223,324.413 132.860 C 324.534 133.742,324.514 133.759,323.227 133.870 C 322.242 133.955,321.889 134.193,322.198 134.565 C 322.309 134.699,322.345 134.865,322.277 134.934 C 322.004 135.206,322.117 138.047,322.401 138.050 C 322.591 138.051,322.607 138.091,322.458 138.186 C 322.342 138.260,322.759 138.335,323.386 138.353 L 324.525 138.385 324.528 136.581 C 324.529 135.589,324.594 134.676,324.672 134.554 C 325.024 133.999,327.805 134.273,328.895 134.970 C 329.147 135.131,329.674 135.207,330.360 135.181 L 331.431 135.141 331.405 133.336 L 331.379 131.531 330.736 131.434 C 328.989 131.168,325.028 131.357,324.662 131.723 M350.376 131.456 C 350.012 131.525,349.978 131.629,349.978 132.668 L 349.978 133.805 348.818 133.805 L 347.659 133.805 347.714 136.058 C 347.754 137.699,347.829 138.318,347.989 138.334 C 348.111 138.346,348.608 138.366,349.094 138.378 L 349.978 138.400 349.978 147.680 L 349.978 156.960 349.138 156.960 L 348.299 156.960 348.299 159.258 L 348.299 161.555 350.630 161.555 L 352.960 161.555 353.016 160.981 C 353.046 160.665,353.004 159.890,352.923 159.258 C 352.841 158.626,352.741 153.734,352.701 148.387 C 352.618 137.496,352.645 137.870,351.947 137.870 C 351.138 137.870,350.683 136.144,351.283 135.353 C 351.622 134.906,354.277 134.124,355.767 134.033 L 357.048 133.954 357.048 132.832 C 357.048 131.720,357.043 131.710,356.474 131.539 C 355.914 131.371,351.168 131.307,350.376 131.456 M371.410 131.523 C 371.058 131.655,371.012 131.795,371.012 132.738 L 371.012 133.805 370.084 133.807 C 368.711 133.811,368.649 133.890,368.611 135.693 C 368.592 136.550,368.617 137.510,368.665 137.826 L 368.753 138.400 369.863 138.400 L 370.973 138.400 371.076 137.826 C 371.132 137.510,371.232 136.695,371.296 136.014 C 371.360 135.334,371.492 134.677,371.588 134.556 C 371.949 134.099,374.816 134.458,375.529 135.050 C 375.652 135.152,376.218 135.209,376.785 135.177 L 377.817 135.117 377.845 133.325 L 377.873 131.532 377.226 131.434 C 376.255 131.285,371.865 131.353,371.410 131.523 M8.150 135.045 C 8.120 136.486,8.292 136.637,9.954 136.627 C 11.281 136.619,11.489 136.395,11.489 134.978 L 11.489 133.805 9.832 133.805 L 8.176 133.805 8.150 135.045 M25.248 134.969 C 25.321 136.384,25.662 136.817,26.809 136.946 C 27.635 137.039,28.281 137.610,28.281 138.246 C 28.281 139.039,28.970 139.461,30.264 139.461 L 31.476 139.461 31.425 137.826 L 31.374 136.191 30.181 136.139 L 28.988 136.086 28.988 134.946 L 28.988 133.805 27.088 133.804 L 25.188 133.804 25.248 134.969 M129.119 134.026 C 129.076 134.147,129.058 135.161,129.080 136.279 L 129.121 138.312 130.932 138.362 C 132.563 138.408,132.747 138.381,132.775 138.097 C 132.793 137.924,132.816 136.887,132.828 135.793 L 132.849 133.805 131.024 133.805 C 129.723 133.805,129.175 133.868,129.119 134.026 M140.345 135.097 C 140.345 136.828,140.502 137.021,141.852 136.952 L 142.908 136.898 142.959 135.351 L 143.010 133.805 141.677 133.805 L 140.345 133.805 140.345 135.097 M152.504 133.934 C 152.674 133.995,152.682 134.076,152.536 134.253 C 152.375 134.447,152.372 135.147,152.528 136.281 C 152.535 136.331,153.058 136.374,153.690 136.376 L 154.839 136.380 154.839 135.111 L 154.839 133.842 153.557 133.847 C 152.852 133.850,152.378 133.889,152.504 133.934 M161.909 136.053 L 161.997 138.312 164.118 138.312 L 166.240 138.312 166.240 136.103 L 166.240 133.893 164.030 133.844 L 161.821 133.794 161.909 136.053 M271.245 134.001 C 271.312 134.110,271.357 134.637,271.344 135.174 C 271.316 136.386,271.699 136.810,272.823 136.810 C 273.886 136.810,274.149 136.447,274.149 134.984 L 274.149 133.805 272.636 133.805 C 271.570 133.805,271.160 133.863,271.245 134.001 M82.577 138.798 L 82.634 140.610 86.080 140.610 L 89.527 140.610 89.579 139.226 L 89.631 137.842 89.137 137.875 C 87.342 137.994,86.291 137.859,85.655 137.428 C 85.114 137.061,84.796 136.986,83.762 136.986 L 82.520 136.986 82.577 138.798 M263.932 137.730 C 263.393 138.268,263.729 144.410,264.296 144.410 C 265.020 144.410,264.942 145.824,264.176 146.590 L 263.721 147.045 263.721 152.264 L 263.721 157.482 264.170 157.776 C 264.856 158.226,265.002 158.660,264.975 160.169 L 264.949 161.555 266.854 161.556 L 268.758 161.556 268.700 160.028 C 268.658 158.900,268.704 158.461,268.877 158.351 C 269.054 158.239,269.057 158.202,268.891 158.200 C 268.769 158.198,268.670 158.045,268.670 157.858 C 268.670 157.071,268.503 156.960,267.325 156.960 L 266.195 156.960 266.195 152.364 L 266.195 147.768 267.388 147.749 C 268.045 147.738,269.111 147.745,269.758 147.764 C 271.178 147.806,271.203 147.765,271.203 145.382 C 271.203 143.050,271.167 142.986,269.895 143.034 C 269.120 143.063,268.847 143.140,268.847 143.327 C 268.847 143.530,268.778 143.519,268.508 143.275 C 268.322 143.106,268.024 142.984,267.845 143.003 C 267.667 143.021,267.223 143.028,266.858 143.016 L 266.195 142.996 266.195 140.294 L 266.195 137.592 265.169 137.556 C 264.562 137.534,264.056 137.605,263.932 137.730 M3.535 140.118 L 3.535 141.759 4.766 141.759 C 6.243 141.759,6.365 141.621,6.361 139.959 C 6.357 138.419,6.302 138.365,4.798 138.426 L 3.535 138.478 3.535 140.118 M142.797 138.880 C 142.433 139.802,142.410 140.805,142.734 141.653 L 143.044 142.466 144.169 142.466 L 145.294 142.466 145.294 140.459 L 145.294 138.452 144.143 138.420 C 143.036 138.390,142.984 138.407,142.797 138.880 M150.105 140.253 L 150.155 142.024 151.480 142.112 L 152.806 142.201 153.142 142.908 C 154.521 145.809,154.656 145.894,155.111 144.145 C 155.447 142.855,155.138 141.801,154.317 141.437 C 153.944 141.272,153.752 141.007,153.577 140.416 C 153.125 138.885,152.507 138.371,151.188 138.430 L 150.055 138.481 150.105 140.253 M236.180 138.646 C 236.166 138.754,236.102 139.777,236.038 140.919 L 235.921 142.996 234.904 142.996 C 233.664 142.996,233.708 142.900,233.685 145.629 C 233.666 147.755,233.671 147.782,234.031 147.589 C 235.003 147.069,236.582 147.679,236.784 148.652 C 236.834 148.895,236.984 149.343,237.117 149.648 C 237.684 150.947,236.530 151.493,234.983 150.657 C 234.118 150.190,233.683 150.066,232.911 150.066 C 231.362 150.066,231.412 149.991,231.387 152.332 L 231.365 154.397 233.358 154.469 C 234.454 154.509,236.027 154.548,236.854 154.557 L 238.356 154.574 238.409 153.469 L 238.461 152.364 240.751 152.364 L 243.040 152.364 243.040 154.662 L 243.040 156.960 242.289 156.981 C 241.876 156.992,241.427 156.986,241.291 156.967 C 240.849 156.905,240.748 157.371,240.745 159.479 L 240.742 161.555 242.930 161.555 L 245.119 161.555 245.132 159.313 C 245.143 157.554,245.200 157.040,245.401 156.928 C 246.027 156.578,246.156 154.569,245.645 153.115 C 245.440 152.529,243.537 152.198,243.364 152.719 C 243.332 152.816,243.305 151.564,243.305 149.935 L 243.305 146.973 242.105 146.921 C 241.037 146.874,240.883 146.822,240.712 146.447 C 240.538 146.065,240.417 146.028,239.367 146.040 C 238.107 146.055,237.814 145.864,237.616 144.894 C 237.561 144.626,237.203 144.084,236.821 143.690 C 236.264 143.117,236.137 142.864,236.181 142.423 L 236.235 141.871 237.384 141.914 C 239.044 141.975,239.340 141.489,238.764 139.646 L 238.372 138.390 237.289 138.420 C 236.649 138.438,236.195 138.530,236.180 138.646 M245.338 139.764 L 245.338 141.064 245.824 140.984 C 246.091 140.940,246.611 140.897,246.978 140.889 L 247.647 140.875 247.615 139.814 C 247.576 138.537,247.410 138.369,246.237 138.423 L 245.338 138.464 245.338 139.764 M133.819 148.186 C 133.826 152.379,133.867 155.728,133.910 155.626 C 133.952 155.524,134.244 155.462,134.559 155.489 C 134.873 155.516,135.866 155.563,136.765 155.595 L 138.400 155.653 138.400 153.965 L 138.400 152.276 139.591 152.276 L 140.782 152.276 140.932 151.334 C 141.195 149.693,141.080 149.536,139.619 149.536 L 138.369 149.536 138.446 148.520 C 138.489 147.961,138.628 147.061,138.756 146.520 C 139.043 145.312,138.779 144.496,138.054 144.347 C 137.107 144.153,136.279 142.659,136.279 141.145 L 136.279 140.523 135.042 140.541 L 133.805 140.560 133.819 148.186 M31.283 141.058 C 30.907 141.759,30.855 143.297,31.182 144.023 C 31.521 144.773,33.423 145.074,33.681 144.418 C 33.858 143.967,33.775 141.145,33.583 141.081 C 33.485 141.048,33.442 140.962,33.487 140.889 C 33.532 140.815,33.100 140.739,32.527 140.718 C 31.622 140.685,31.458 140.730,31.283 141.058 M91.991 141.122 C 91.939 141.327,91.921 142.170,91.950 142.996 L 92.002 144.498 93.151 144.440 C 93.783 144.408,94.372 144.312,94.460 144.227 C 94.696 143.999,94.622 141.245,94.372 140.944 C 94.011 140.509,92.108 140.652,91.991 141.122 M40.477 149.174 C 40.477 152.557,40.528 155.580,40.591 155.892 L 40.704 156.458 41.740 156.400 C 42.321 156.367,42.808 156.419,42.850 156.518 C 42.891 156.615,42.936 154.507,42.950 151.834 C 42.969 148.197,43.024 147.073,43.168 147.371 C 43.334 147.716,43.496 147.768,44.389 147.768 C 45.850 147.768,46.045 147.437,46.045 144.949 L 46.045 143.084 44.672 143.033 C 43.383 142.984,43.290 143.005,43.151 143.383 C 43.007 143.772,42.998 143.774,42.889 143.429 C 42.791 143.122,42.612 143.068,41.626 143.048 L 40.477 143.024 40.477 149.174 M65.703 143.105 C 65.509 143.299,65.553 144.820,65.771 145.444 L 65.965 146.001 67.280 146.001 L 68.596 146.001 68.544 144.544 L 68.493 143.087 67.161 143.033 C 66.429 143.003,65.773 143.036,65.703 143.105 M80.332 143.179 C 80.278 143.267,80.245 144.290,80.259 145.453 C 80.287 147.831,80.249 147.768,81.676 147.768 L 82.545 147.768 82.545 152.364 L 82.545 156.960 81.424 156.960 C 79.827 156.960,79.364 157.757,79.364 160.504 L 79.364 161.555 81.573 161.555 L 83.783 161.555 83.785 160.097 C 83.788 158.482,83.805 158.438,84.622 157.867 L 85.197 157.466 85.197 152.543 C 85.197 147.579,85.156 147.061,84.770 147.061 C 84.082 147.061,83.872 146.585,83.783 144.823 L 83.694 143.084 82.062 143.052 C 81.165 143.035,80.386 143.092,80.332 143.179 M98.743 143.812 C 98.600 144.858,98.600 145.905,98.743 146.948 L 98.855 147.768 101.217 147.768 L 103.579 147.768 103.579 148.638 C 103.579 149.989,103.646 150.066,104.823 150.066 L 105.852 150.066 106.065 149.113 C 106.350 147.840,106.195 147.302,105.454 146.992 C 104.639 146.652,104.570 146.491,104.466 144.675 L 104.375 143.084 101.615 143.036 L 98.856 142.987 98.743 143.812 M110.223 143.148 C 110.173 143.230,110.139 143.805,110.148 144.428 C 110.157 145.050,110.104 146.120,110.031 146.806 C 109.846 148.544,110.112 148.782,112.108 148.662 L 112.771 148.622 112.771 149.397 C 112.771 149.823,112.694 150.249,112.600 150.343 C 112.309 150.634,112.189 152.404,112.407 153.211 C 112.626 154.022,113.042 154.308,114.000 154.308 C 114.572 154.308,115.068 155.244,115.068 156.321 L 115.068 156.913 116.199 156.898 L 117.329 156.884 117.338 155.110 C 117.345 153.949,117.294 153.458,117.193 153.690 L 117.038 154.043 117.023 153.690 C 117.010 153.396,116.979 153.381,116.836 153.601 C 116.723 153.776,116.664 153.792,116.662 153.647 C 116.660 153.497,116.393 153.441,115.820 153.470 L 114.980 153.513 114.980 152.806 L 114.980 152.099 115.864 152.186 C 116.350 152.234,117.424 152.274,118.250 152.275 L 119.753 152.276 119.805 150.773 C 119.884 148.486,119.923 148.543,118.299 148.539 C 116.462 148.535,115.095 147.955,115.513 147.357 C 115.708 147.080,115.776 146.465,115.776 144.983 L 115.776 142.982 114.365 143.012 C 113.590 143.029,112.987 143.095,113.027 143.158 C 113.066 143.222,112.951 143.274,112.771 143.274 C 112.591 143.274,112.470 143.231,112.502 143.178 C 112.535 143.125,112.056 143.064,111.438 143.041 C 110.820 143.018,110.273 143.066,110.223 143.148 M119.848 143.168 C 119.709 143.254,119.703 144.264,119.825 147.379 C 119.840 147.764,119.900 147.783,120.946 147.733 L 122.050 147.680 122.077 145.780 C 122.095 144.453,122.042 143.879,121.900 143.877 C 121.788 143.876,121.816 143.799,121.961 143.708 C 122.176 143.571,122.182 143.499,121.996 143.313 C 121.767 143.084,120.160 142.976,119.848 143.168 M147.875 143.143 C 147.825 143.224,147.730 143.821,147.664 144.470 C 147.575 145.337,147.488 145.605,147.337 145.479 C 147.136 145.313,145.560 145.323,145.391 145.492 C 145.236 145.647,145.070 147.556,145.175 147.975 C 145.269 148.352,145.373 148.387,146.391 148.387 L 147.503 148.387 147.553 150.443 L 147.603 152.499 148.103 152.599 C 148.764 152.731,149.612 153.461,149.893 154.141 C 150.116 154.678,150.139 154.687,151.198 154.631 L 152.276 154.574 152.329 153.428 C 152.419 151.490,152.442 151.516,150.611 151.511 C 148.193 151.504,147.768 151.170,147.768 149.273 C 147.768 147.467,147.762 147.476,149.056 147.522 C 150.034 147.557,150.194 147.615,150.508 148.053 C 150.703 148.324,151.173 148.891,151.554 149.313 L 152.246 150.081 153.410 150.030 L 154.574 149.978 154.626 148.654 C 154.710 146.559,154.693 146.532,153.289 146.528 C 151.792 146.525,151.739 146.487,151.290 145.108 C 150.750 143.446,150.258 142.996,148.983 142.996 C 148.424 142.996,147.925 143.062,147.875 143.143 M164.126 143.306 C 163.994 143.649,164.004 149.440,164.137 149.787 C 164.196 149.940,164.400 150.066,164.590 150.066 C 164.819 150.066,164.890 149.992,164.802 149.845 C 164.698 149.672,164.726 149.670,164.930 149.835 C 165.074 149.951,165.347 150.023,165.538 149.994 C 166.040 149.918,166.712 150.256,166.528 150.492 C 166.445 150.598,166.366 151.053,166.352 151.504 C 166.323 152.447,166.467 152.534,168.051 152.538 L 168.979 152.541 168.979 151.290 L 168.979 150.039 167.912 150.118 C 167.326 150.161,166.884 150.158,166.932 150.111 C 166.979 150.063,166.911 149.917,166.780 149.786 C 166.623 149.629,166.576 149.321,166.642 148.879 C 166.697 148.511,166.748 147.057,166.756 145.647 L 166.770 143.084 165.496 143.070 C 164.552 143.060,164.197 143.121,164.126 143.306 M182.677 143.144 C 182.629 143.192,182.589 143.696,182.589 144.263 L 182.589 145.294 182.015 145.315 C 181.699 145.326,181.366 145.321,181.275 145.304 C 180.869 145.226,180.284 145.492,180.410 145.697 C 180.483 145.815,180.333 145.775,180.076 145.607 C 179.616 145.306,178.461 145.270,178.018 145.544 C 177.874 145.633,177.817 147.350,177.817 151.576 L 177.817 157.483 178.303 157.589 C 179.407 157.828,179.584 158.017,179.601 158.978 C 179.609 159.472,179.629 160.254,179.644 160.716 L 179.672 161.555 182.943 161.556 L 186.213 161.556 186.197 160.380 C 186.178 159.060,186.033 158.865,184.802 158.515 C 183.872 158.249,183.713 158.115,183.588 157.487 C 183.530 157.198,183.321 156.628,183.124 156.221 C 182.927 155.813,182.766 155.379,182.766 155.255 C 182.766 155.102,182.391 155.015,181.573 154.979 L 180.380 154.927 180.331 152.351 L 180.283 149.776 181.480 149.839 L 182.678 149.903 182.987 148.880 C 183.156 148.317,183.382 147.439,183.487 146.929 C 183.678 146.008,183.684 146.001,184.344 146.001 C 185.344 146.001,185.624 145.588,185.559 144.209 L 185.506 143.084 184.136 143.070 C 183.382 143.062,182.726 143.095,182.677 143.144 M203.657 143.251 C 203.539 143.432,203.508 143.697,203.466 144.884 C 203.447 145.437,203.433 145.446,202.696 145.378 C 201.259 145.247,201.189 145.317,201.215 146.854 L 201.237 148.210 202.429 148.299 C 203.769 148.398,203.782 148.388,203.914 147.061 C 204.031 145.881,204.029 145.883,205.297 145.781 C 205.943 145.729,206.515 145.643,206.569 145.589 C 206.751 145.407,206.732 143.332,206.547 143.179 C 206.287 142.963,203.805 143.025,203.657 143.251 M209.695 143.268 C 209.637 143.417,209.627 143.978,209.671 144.515 C 209.758 145.557,209.342 146.178,208.556 146.178 C 207.495 146.178,207.301 147.375,207.862 150.457 C 208.166 152.130,208.176 152.406,207.952 152.838 C 207.014 154.647,207.603 155.899,209.392 155.899 L 210.540 155.899 210.485 154.131 L 210.429 152.363 212.034 152.364 C 213.994 152.364,213.821 152.593,213.666 150.209 C 213.515 147.899,213.286 146.940,212.855 146.823 C 212.687 146.778,212.332 146.692,212.067 146.633 C 211.407 146.487,211.086 145.778,211.088 144.471 C 211.088 143.873,211.035 143.296,210.969 143.190 C 210.787 142.894,209.815 142.954,209.695 143.268 M215.135 143.136 C 215.015 143.176,214.936 143.652,214.936 144.336 L 214.936 145.471 215.521 145.471 C 216.689 145.471,217.221 147.386,216.527 149.094 C 216.409 149.386,216.261 150.218,216.198 150.943 C 216.093 152.162,216.052 152.268,215.643 152.364 C 215.238 152.459,215.197 152.558,215.148 153.565 L 215.096 154.662 214.265 154.682 C 213.808 154.694,213.314 154.713,213.168 154.727 C 212.192 154.814,213.315 158.692,214.441 159.125 C 214.599 159.185,214.668 159.581,214.662 160.384 L 214.654 161.555 215.991 161.555 L 217.329 161.555 217.349 160.893 C 217.403 159.084,217.275 159.258,218.559 159.258 L 219.708 159.258 219.708 152.367 L 219.708 145.477 219.299 145.375 C 219.074 145.318,218.816 145.286,218.725 145.304 C 218.634 145.321,218.301 145.326,217.985 145.315 L 217.411 145.294 217.411 144.244 C 217.411 143.111,217.259 142.875,216.718 143.165 C 216.492 143.286,216.334 143.290,216.264 143.176 C 216.162 143.011,215.572 142.990,215.135 143.136 M247.560 143.292 C 246.838 145.173,247.287 146.306,248.783 146.383 L 249.934 146.443 249.931 144.940 C 249.930 144.114,249.870 143.349,249.798 143.240 C 249.577 142.902,247.693 142.946,247.560 143.292 M254.791 143.394 C 254.736 143.612,254.715 144.666,254.743 145.736 L 254.795 147.680 257.043 147.730 L 259.292 147.779 259.427 147.288 C 259.602 146.655,259.602 144.113,259.429 143.482 L 259.295 142.996 257.092 142.996 C 254.955 142.996,254.887 143.008,254.791 143.394 M277.792 143.325 C 277.433 144.604,277.401 145.990,277.703 147.123 C 278.016 148.298,277.939 156.903,277.611 157.404 C 277.217 158.004,276.956 159.340,276.998 160.528 L 277.035 161.555 278.575 161.555 L 280.114 161.555 280.201 159.567 C 280.251 158.427,280.214 157.435,280.114 157.242 C 279.974 156.970,279.994 156.927,280.222 157.014 C 280.972 157.302,281.302 155.239,280.810 153.336 C 280.669 152.790,280.632 152.183,280.714 151.745 C 280.960 150.428,280.885 148.941,280.539 148.262 C 280.284 147.762,280.204 147.167,280.178 145.568 C 280.159 144.439,280.105 143.415,280.058 143.292 C 279.919 142.929,277.894 142.958,277.792 143.325 M288.102 143.164 C 287.877 143.299,287.835 143.637,287.873 144.975 C 287.930 146.950,287.834 147.545,287.439 147.649 C 287.275 147.692,287.678 147.737,288.334 147.748 L 289.527 147.768 289.527 148.839 C 289.527 149.508,289.594 149.869,289.704 149.801 C 289.801 149.741,289.881 149.776,289.881 149.879 C 289.881 150.243,291.967 150.108,292.169 149.731 C 292.873 148.416,292.519 146.637,291.500 146.362 C 290.536 146.103,290.336 145.782,290.234 144.340 L 290.146 143.084 289.262 143.041 C 288.776 143.017,288.254 143.073,288.102 143.164 M294.101 143.186 C 294.005 143.246,293.943 143.784,293.965 144.383 L 294.004 145.471 294.933 145.471 C 296.172 145.471,296.421 145.588,296.421 146.174 C 296.421 146.444,296.471 146.916,296.533 147.225 L 296.645 147.786 297.974 147.751 C 299.056 147.722,299.250 147.676,299.014 147.503 C 298.854 147.387,298.769 147.247,298.824 147.192 C 298.879 147.137,298.830 146.916,298.715 146.702 C 298.575 146.439,298.570 146.351,298.701 146.432 C 298.821 146.506,298.895 146.395,298.895 146.143 C 298.895 145.624,297.965 145.142,297.580 145.462 C 297.421 145.594,297.298 145.603,297.226 145.487 C 297.166 145.389,297.000 145.354,296.857 145.409 C 296.646 145.490,296.597 145.304,296.597 144.419 C 296.597 143.737,296.531 143.370,296.421 143.438 C 296.323 143.498,296.244 143.423,296.244 143.272 C 296.244 143.120,296.160 142.996,296.057 142.996 C 295.954 142.996,295.915 143.070,295.971 143.161 C 296.027 143.251,295.992 143.375,295.893 143.436 C 295.794 143.497,295.714 143.442,295.714 143.312 C 295.714 143.069,294.450 142.970,294.101 143.186 M312.326 144.278 C 312.322 146.325,311.536 147.238,309.779 147.238 C 308.742 147.238,308.010 147.633,308.138 148.123 C 308.289 148.699,307.975 148.906,306.940 148.913 C 305.598 148.922,305.618 148.853,305.615 153.459 C 305.612 157.330,305.625 157.479,305.982 157.729 C 306.734 158.256,306.893 158.691,306.866 160.157 L 306.841 161.555 308.618 161.555 L 310.395 161.555 310.346 159.302 C 310.290 156.770,310.467 157.034,308.794 156.982 L 308.087 156.960 308.087 153.301 C 308.087 150.455,308.134 149.689,308.299 149.854 C 308.441 149.996,309.215 150.065,310.641 150.063 L 312.771 150.059 313.364 149.097 C 313.690 148.567,314.068 148.042,314.204 147.930 C 314.339 147.817,314.450 147.437,314.451 147.084 C 314.451 146.731,314.602 146.195,314.787 145.892 C 315.106 145.369,315.398 143.110,315.125 143.280 C 315.059 143.322,314.960 143.283,314.906 143.195 C 314.851 143.107,314.249 143.026,313.568 143.016 L 312.329 142.997 312.326 144.278 M321.616 143.161 C 321.559 143.252,321.525 143.900,321.540 144.601 C 321.568 145.955,321.236 146.517,320.404 146.527 C 319.398 146.540,318.902 147.495,319.219 148.814 C 319.493 149.957,319.688 150.096,320.931 150.031 L 321.962 149.978 322.015 148.873 L 322.067 147.768 323.252 147.763 C 324.165 147.759,324.363 147.715,324.118 147.572 C 323.837 147.409,323.803 147.145,323.830 145.334 C 323.858 143.476,323.829 143.268,323.530 143.151 C 323.048 142.961,321.735 142.969,321.616 143.161 M344.675 144.038 C 344.675 145.866,344.791 146.001,346.350 146.001 L 347.680 146.001 347.680 144.799 C 347.680 144.082,347.591 143.501,347.459 143.359 C 347.280 143.166,347.286 143.148,347.486 143.263 C 347.641 143.350,347.692 143.336,347.623 143.223 C 347.562 143.124,346.873 143.029,346.093 143.013 L 344.675 142.982 344.675 144.038 M356.956 144.808 C 356.573 149.654,356.676 150.101,358.158 150.030 L 359.258 149.978 359.310 148.873 L 359.363 147.768 359.995 147.768 C 360.520 147.768,360.592 147.726,360.418 147.518 C 360.281 147.352,360.221 146.590,360.242 145.288 C 360.279 142.952,360.319 143.003,358.444 142.999 L 357.100 142.996 356.956 144.808 M365.179 144.293 C 365.179 145.948,365.307 146.068,367.158 146.152 L 368.552 146.216 368.500 144.650 L 368.449 143.084 366.814 143.034 L 365.179 142.983 365.179 144.293 M380.283 143.238 C 380.244 143.348,380.191 143.874,380.164 144.407 L 380.115 145.377 379.368 145.322 C 377.904 145.215,377.905 145.213,377.906 147.648 L 377.907 149.801 379.099 149.848 C 380.482 149.903,380.487 149.897,380.975 147.684 C 381.285 146.278,381.550 146.001,382.584 146.001 C 383.887 146.001,384.589 144.406,383.828 143.175 C 383.665 142.911,380.377 142.969,380.283 143.238 M61.484 144.569 C 61.560 146.251,61.269 146.708,60.121 146.708 C 58.935 146.708,58.531 147.196,58.470 148.703 L 58.418 149.978 56.916 150.022 C 54.888 150.082,54.587 150.164,54.626 150.647 C 54.643 150.862,54.648 151.333,54.637 151.693 L 54.618 152.347 53.513 152.400 L 52.408 152.452 52.291 155.104 C 52.226 156.562,52.117 158.610,52.047 159.655 L 51.920 161.555 53.269 161.555 C 54.222 161.555,54.622 161.491,54.633 161.335 C 54.642 161.213,54.636 160.731,54.620 160.264 C 54.604 159.797,54.689 159.297,54.809 159.152 C 54.985 158.939,55.197 156.782,55.315 153.999 C 55.331 153.628,56.007 153.071,56.442 153.071 C 56.667 153.071,57.251 152.952,57.740 152.807 L 58.629 152.543 58.605 151.526 C 58.570 150.036,58.539 150.066,60.106 150.066 C 60.867 150.066,61.526 150.007,61.569 149.934 C 61.805 149.534,61.892 143.173,61.662 143.173 C 61.473 143.173,61.434 143.476,61.484 144.569 M170.874 146.340 C 170.955 148.913,170.927 149.586,170.728 149.831 C 170.592 149.998,170.572 150.080,170.682 150.014 C 170.943 149.858,172.201 152.231,172.056 152.607 C 171.998 152.759,171.641 153.020,171.262 153.187 C 170.416 153.561,170.232 154.234,170.574 155.705 C 170.719 156.328,170.788 157.596,170.761 159.125 L 170.717 161.555 172.985 161.555 L 175.254 161.555 175.283 160.406 C 175.304 159.600,175.248 159.258,175.096 159.258 C 174.517 159.258,173.901 158.240,173.743 157.024 C 173.657 156.357,173.511 155.556,173.418 155.245 C 173.299 154.840,173.323 154.438,173.505 153.835 C 173.847 152.698,173.910 149.293,173.605 148.431 C 173.385 147.810,173.325 147.768,172.633 147.766 C 171.492 147.762,171.471 147.720,171.416 145.378 C 171.373 143.569,171.323 143.257,171.070 143.209 C 170.800 143.157,170.783 143.424,170.874 146.340 M305.789 144.589 C 305.789 145.628,305.848 146.011,306.000 145.960 C 306.515 145.788,306.595 143.302,306.089 143.205 C 305.826 143.154,305.789 143.328,305.789 144.589 M340.562 144.563 C 340.678 146.258,340.388 146.708,339.182 146.708 C 338.175 146.708,337.388 147.483,337.432 148.431 C 337.449 148.796,337.455 149.310,337.445 149.574 L 337.428 150.054 335.616 150.104 L 333.805 150.155 333.748 151.213 C 333.680 152.484,333.843 152.327,332.522 152.393 L 331.418 152.447 331.418 154.681 C 331.418 156.215,331.335 157.151,331.153 157.667 C 330.994 158.119,330.888 159.045,330.888 159.994 L 330.888 161.570 332.337 161.518 L 333.786 161.467 333.738 160.441 C 333.711 159.876,333.766 159.319,333.858 159.203 C 333.951 159.087,334.119 157.841,334.232 156.433 C 334.458 153.595,334.649 153.071,335.456 153.071 C 335.728 153.071,336.344 152.954,336.826 152.811 L 337.702 152.551 337.693 151.309 L 337.685 150.066 339.122 150.066 L 340.560 150.066 340.677 148.520 C 341.012 144.097,341.023 143.173,340.739 143.173 C 340.509 143.173,340.481 143.387,340.562 144.563 M386.907 143.217 C 386.899 143.241,386.880 143.909,386.863 144.701 C 386.825 146.431,386.543 146.885,385.501 146.885 C 384.654 146.885,384.622 147.089,384.774 151.569 L 384.887 154.927 385.593 155.015 L 386.299 155.104 386.477 156.274 C 386.677 157.591,386.945 158.020,387.566 158.020 C 388.053 158.020,389.243 157.559,389.397 157.310 C 389.453 157.219,389.960 157.580,390.524 158.112 C 392.224 159.721,393.854 159.552,393.973 157.755 C 394.033 156.837,394.067 156.812,395.316 156.749 L 396.376 156.695 396.421 151.083 C 396.457 146.687,396.418 145.466,396.245 145.448 C 394.090 145.226,394.020 145.284,393.879 147.415 C 393.802 148.585,393.668 149.261,393.437 149.645 C 393.218 150.011,393.106 150.533,393.106 151.196 C 393.106 152.195,392.593 152.791,392.031 152.443 C 391.939 152.387,391.869 152.846,391.869 153.503 L 391.869 154.662 390.710 154.662 C 389.834 154.662,389.581 154.716,389.675 154.883 C 389.775 155.060,389.752 155.060,389.562 154.883 C 389.430 154.760,388.878 154.662,388.319 154.662 C 387.195 154.662,387.017 154.406,387.230 153.094 C 387.289 152.729,387.261 152.528,387.160 152.590 C 387.067 152.647,386.876 152.617,386.735 152.522 C 386.513 152.373,386.514 152.353,386.743 152.378 C 386.889 152.393,387.851 152.397,388.882 152.385 L 390.755 152.364 390.704 151.194 C 390.664 150.274,390.570 149.934,390.262 149.607 C 390.047 149.378,389.822 148.890,389.763 148.524 C 389.675 147.979,389.575 147.848,389.215 147.809 C 388.974 147.783,388.517 147.720,388.202 147.669 L 387.627 147.576 387.627 145.374 C 387.627 143.291,387.608 143.173,387.274 143.173 C 387.079 143.173,386.914 143.193,386.907 143.217 M24.509 144.353 C 24.445 144.417,24.392 145.887,24.392 147.621 L 24.392 150.773 25.611 150.773 C 27.112 150.773,27.044 150.921,27.044 147.654 C 27.044 144.581,27.004 144.475,25.864 144.510 C 25.395 144.524,24.924 144.469,24.818 144.386 C 24.712 144.304,24.573 144.289,24.509 144.353 M91.892 151.983 C 91.881 154.963,91.884 157.471,91.899 157.555 C 91.915 157.639,91.934 158.060,91.943 158.490 L 91.959 159.273 93.122 159.221 C 94.615 159.155,94.526 159.559,94.544 152.718 C 94.561 146.353,94.643 146.693,93.086 146.619 L 91.913 146.564 91.892 151.983 M249.736 148.246 C 249.379 149.149,249.343 150.174,249.647 150.784 C 249.805 151.100,249.934 151.458,249.934 151.581 C 249.934 151.735,250.324 151.823,251.177 151.864 L 252.420 151.922 252.370 149.890 L 252.320 147.857 251.126 147.805 C 249.962 147.754,249.926 147.765,249.736 148.246 M368.452 148.600 C 368.382 149.066,368.340 150.084,368.358 150.862 C 368.377 151.639,368.393 152.355,368.395 152.452 C 368.396 152.550,368.297 153.186,368.174 153.867 C 367.907 155.347,368.046 156.262,368.634 156.897 C 368.872 157.154,369.068 157.270,369.068 157.155 C 369.068 157.012,369.352 156.964,369.957 157.006 C 371.090 157.085,371.035 157.350,370.973 152.099 L 370.924 147.857 369.752 147.805 L 368.580 147.753 368.452 148.600 M187.539 148.452 C 186.872 148.643,186.576 149.695,186.837 150.950 C 187.073 152.083,187.080 152.377,186.913 154.059 C 186.733 155.870,186.898 156.107,188.300 156.040 L 189.395 155.988 189.395 152.187 L 189.395 148.387 188.688 148.356 C 188.299 148.340,187.782 148.383,187.539 148.452 M284.867 150.434 C 284.722 151.157,284.723 152.868,284.868 153.594 C 284.981 154.158,284.988 154.161,285.929 154.102 C 286.456 154.070,286.905 154.122,286.941 154.220 C 287.080 154.599,287.248 152.734,287.196 151.392 L 287.141 149.978 286.060 149.926 L 284.979 149.874 284.867 150.434 M361.644 151.772 C 361.644 152.874,361.714 153.601,361.821 153.601 C 361.918 153.601,361.997 153.721,361.997 153.867 C 361.997 154.483,364.058 154.213,364.185 153.579 C 364.328 152.865,364.327 151.151,364.183 150.433 L 364.071 149.872 362.857 149.908 L 361.644 149.943 361.644 151.772 M10.371 150.199 C 9.980 150.858,9.872 152.370,10.155 153.223 L 10.457 154.132 11.592 154.132 L 12.726 154.132 12.726 152.099 L 12.726 150.066 11.588 150.066 C 10.962 150.066,10.414 150.126,10.371 150.199 M31.137 151.171 C 30.642 152.282,30.662 153.893,31.177 154.463 C 31.476 154.793,31.474 154.811,31.127 154.921 C 30.120 155.241,28.988 156.965,28.988 158.178 C 28.988 159.135,29.025 159.276,29.209 159.030 C 29.390 158.788,29.813 158.726,31.551 158.687 L 33.672 158.639 33.719 154.839 C 33.778 150.003,33.838 150.243,32.564 150.243 L 31.551 150.244 31.137 151.171 M105.909 153.329 C 105.991 154.625,106.095 154.816,106.525 154.466 C 106.726 154.303,106.784 154.295,106.696 154.441 C 106.598 154.604,106.767 154.662,107.346 154.662 C 108.197 154.662,108.344 154.382,108.350 152.762 L 108.352 152.187 107.094 152.187 L 105.836 152.187 105.909 153.329 M22.212 152.482 C 22.148 152.547,22.095 153.084,22.095 153.675 L 22.095 154.750 20.081 154.696 L 18.067 154.641 18.104 155.806 C 18.154 157.398,18.348 157.567,20.124 157.574 C 21.733 157.579,22.095 157.381,22.095 156.496 L 22.095 155.899 23.418 155.899 L 24.741 155.899 25.004 155.269 C 25.280 154.610,25.109 153.089,24.704 152.585 C 24.517 152.353,22.427 152.267,22.212 152.482 M3.535 155.300 L 3.535 156.960 4.684 156.960 L 5.833 156.960 5.861 157.888 C 5.876 158.398,5.885 158.915,5.880 159.037 C 5.875 159.191,6.212 159.258,7.002 159.258 L 8.131 159.258 8.151 160.097 C 8.162 160.559,8.157 161.076,8.140 161.246 C 8.112 161.522,8.298 161.555,9.872 161.555 L 11.636 161.555 11.695 160.390 L 11.754 159.225 11.158 158.976 C 10.830 158.839,10.409 158.727,10.222 158.727 C 9.490 158.727,8.858 158.221,8.732 157.534 C 8.593 156.776,8.416 156.613,7.733 156.609 C 7.088 156.605,6.540 156.032,6.540 155.360 C 6.540 154.733,6.098 153.791,5.784 153.750 C 5.665 153.735,5.110 153.704,4.551 153.681 L 3.535 153.641 3.535 155.300 M98.743 154.971 C 98.109 157.207,98.304 158.412,99.335 158.639 C 100.164 158.821,100.309 159.079,100.309 160.375 L 100.309 161.555 102.607 161.579 C 103.871 161.592,104.627 161.651,104.286 161.711 L 103.668 161.821 103.618 163.609 L 103.567 165.398 104.855 165.352 C 105.563 165.328,106.779 165.254,107.556 165.189 C 109.549 165.023,109.784 165.225,109.825 167.135 L 109.854 168.537 111.268 168.537 L 112.682 168.537 112.736 167.035 C 112.826 164.514,112.764 164.369,111.605 164.407 C 110.583 164.440,110.065 164.190,110.421 163.834 C 110.564 163.691,110.942 163.695,111.826 163.850 C 112.492 163.966,113.473 164.034,114.008 164.001 L 114.980 163.942 114.980 162.262 L 114.980 160.583 113.808 160.531 C 112.403 160.469,111.931 160.037,110.916 157.888 C 110.648 157.320,110.630 157.313,109.410 157.313 L 108.175 157.313 108.175 159.434 L 108.175 161.555 107.026 161.555 L 105.877 161.555 105.877 158.388 C 105.877 156.646,105.832 155.104,105.778 154.962 C 105.641 154.606,101.919 154.530,101.502 154.874 C 101.282 155.056,101.208 155.058,101.150 154.883 C 101.023 154.507,98.852 154.587,98.743 154.971 M152.476 155.060 C 152.417 155.278,152.368 155.795,152.367 156.209 L 152.364 156.960 151.613 156.984 C 151.200 156.997,150.721 157.008,150.550 157.007 C 150.079 157.005,149.997 157.506,150.041 160.097 L 150.066 161.555 151.657 161.555 L 153.248 161.555 153.248 160.418 C 153.248 158.899,153.456 158.394,154.141 158.257 C 154.958 158.094,155.253 157.518,155.099 156.390 C 154.872 154.729,154.815 154.662,153.626 154.662 C 152.693 154.662,152.571 154.704,152.476 155.060 M198.613 155.411 C 198.128 156.681,198.223 157.688,198.911 158.590 C 199.440 159.283,199.500 159.477,199.486 160.456 L 199.470 161.549 203.270 161.548 L 207.070 161.547 207.070 160.404 L 207.070 159.261 206.404 158.994 C 206.037 158.847,205.555 158.727,205.332 158.727 C 204.714 158.727,204.154 158.103,204.154 157.414 C 204.154 156.371,203.661 155.988,202.321 155.988 L 201.165 155.988 201.113 155.369 L 201.061 154.750 199.983 154.698 L 198.905 154.646 198.613 155.411 M229.226 154.819 C 229.211 154.879,229.181 155.007,229.158 155.104 C 229.136 155.201,229.108 155.655,229.097 156.112 L 229.076 156.943 227.972 156.996 L 226.867 157.048 226.811 159.302 L 226.756 161.555 228.446 161.555 L 230.137 161.555 230.137 160.605 C 230.137 158.955,230.289 158.543,231.003 158.249 C 232.307 157.712,232.884 155.623,231.934 154.878 C 231.645 154.651,229.281 154.600,229.226 154.819 M257.122 154.780 C 257.057 154.845,257.004 155.358,257.004 155.921 L 257.004 156.944 255.811 156.996 L 254.618 157.048 254.568 159.302 L 254.519 161.555 256.513 161.554 L 258.506 161.553 258.552 160.361 C 258.592 159.306,258.654 159.119,259.094 158.727 C 260.053 157.876,260.191 156.410,259.449 154.971 C 259.287 154.657,257.400 154.502,257.122 154.780 M289.619 154.805 C 289.569 154.856,289.527 155.362,289.527 155.929 C 289.527 156.958,289.526 156.960,288.994 156.960 C 288.530 156.960,288.472 157.012,288.556 157.357 C 288.608 157.576,288.670 158.610,288.692 159.655 L 288.732 161.555 289.616 161.555 L 290.499 161.556 290.474 160.460 C 290.443 159.084,290.733 158.588,291.657 158.440 C 292.600 158.290,292.806 156.888,292.142 155.143 C 291.964 154.676,290.010 154.415,289.619 154.805 M298.895 155.582 L 298.896 156.518 297.851 156.490 C 296.604 156.456,296.152 156.715,295.995 157.556 C 295.848 158.339,295.602 158.526,294.547 158.660 C 293.104 158.843,292.886 159.073,292.886 160.411 L 292.886 161.555 296.642 161.555 L 300.398 161.554 300.415 160.613 C 300.439 159.329,300.603 158.770,300.992 158.647 C 301.724 158.414,301.969 157.321,301.592 155.968 L 301.253 154.750 300.074 154.698 L 298.895 154.646 298.895 155.582 M319.597 154.901 C 318.831 155.824,319.245 158.240,320.196 158.395 C 321.226 158.562,321.536 159.059,321.468 160.429 L 321.411 161.555 322.747 161.553 C 323.577 161.551,323.991 161.492,323.839 161.396 C 323.697 161.306,323.654 161.148,323.735 161.017 C 323.811 160.894,323.860 160.453,323.845 160.037 C 323.821 159.421,323.882 159.261,324.172 159.169 C 325.061 158.887,325.395 156.994,324.820 155.502 L 324.496 154.662 323.397 154.662 C 322.762 154.662,322.197 154.755,322.060 154.883 C 321.869 155.060,321.847 155.060,321.946 154.883 C 322.129 154.559,319.867 154.577,319.597 154.901 M356.960 156.953 C 356.886 158.172,356.802 159.706,356.774 160.362 L 356.724 161.555 358.521 161.555 L 360.318 161.555 360.292 159.302 L 360.265 157.048 359.806 156.992 C 359.325 156.934,359.285 156.828,359.309 155.675 C 359.318 155.231,359.258 155.049,359.128 155.130 C 359.007 155.204,358.970 155.152,359.031 154.994 C 359.110 154.788,358.928 154.738,358.113 154.738 L 357.096 154.738 356.960 156.953 M59.286 156.719 C 59.155 157.417,59.472 157.844,60.121 157.844 C 60.716 157.844,60.981 158.536,60.981 160.092 L 60.981 161.555 62.925 161.555 L 64.870 161.555 64.884 160.981 C 64.892 160.665,64.935 160.183,64.980 159.910 C 65.092 159.226,64.195 158.374,63.362 158.374 C 62.588 158.374,61.689 157.631,61.685 156.988 C 61.681 156.275,61.511 156.157,60.415 156.110 L 59.408 156.067 59.286 156.719 M338.393 156.231 C 337.990 156.634,338.352 157.658,338.935 157.768 C 339.856 157.940,340.039 158.473,340.073 161.069 L 340.080 161.555 342.024 161.555 L 343.968 161.555 343.968 160.398 C 343.968 159.049,343.468 158.390,342.435 158.379 C 341.637 158.371,340.813 157.627,340.680 156.796 L 340.574 156.133 339.524 156.141 C 338.946 156.146,338.438 156.186,338.393 156.231 M140.776 156.765 C 140.858 156.899,140.537 156.960,139.747 156.960 C 138.701 156.960,138.251 157.105,138.507 157.361 C 138.561 157.415,138.604 158.383,138.602 159.512 L 138.600 161.566 140.820 161.516 L 143.039 161.467 143.008 159.346 C 142.973 156.961,142.991 157.006,142.024 156.942 C 141.635 156.917,141.168 156.823,140.986 156.733 C 140.756 156.621,140.692 156.630,140.776 156.765 M377.942 156.731 C 377.965 156.808,377.852 157.070,377.689 157.313 C 377.288 157.916,377.031 159.127,377.026 160.446 L 377.022 161.545 380.645 161.547 L 384.269 161.550 384.269 160.408 L 384.269 159.266 383.528 158.908 C 383.088 158.696,382.425 158.550,381.893 158.548 C 380.457 158.544,380.203 158.424,380.203 157.745 C 380.203 157.051,380.153 157.009,379.231 156.945 C 378.842 156.918,378.384 156.827,378.212 156.743 C 378.041 156.660,377.919 156.654,377.942 156.731 M42.777 157.222 C 42.643 157.384,42.533 158.266,42.490 159.520 L 42.420 161.555 44.498 161.555 L 46.577 161.555 46.532 160.555 C 46.500 159.866,46.322 159.225,45.956 158.494 C 45.665 157.911,45.426 157.327,45.426 157.197 C 45.426 156.844,43.072 156.867,42.777 157.222 M69.200 159.258 L 69.200 161.555 71.144 161.555 L 73.089 161.555 73.104 159.258 L 73.120 156.960 71.160 156.960 L 69.200 156.960 69.200 159.258 M129.143 157.100 C 129.096 157.177,129.071 158.191,129.089 159.354 L 129.121 161.467 130.977 161.517 L 132.833 161.566 132.848 159.263 L 132.863 156.960 131.046 156.960 C 130.047 156.960,129.191 157.023,129.143 157.100 M161.802 157.239 C 161.861 157.393,161.909 158.427,161.909 159.537 L 161.909 161.555 164.472 161.555 L 167.035 161.555 167.035 160.382 C 167.035 159.090,166.970 158.991,165.709 158.369 C 165.320 158.177,164.748 157.781,164.437 157.490 C 163.770 156.864,161.578 156.655,161.802 157.239 M189.837 157.122 C 189.837 157.211,189.912 157.310,190.005 157.343 C 190.098 157.375,190.187 158.336,190.202 159.479 L 190.230 161.555 191.447 161.555 L 192.665 161.555 192.665 160.410 C 192.665 159.717,192.515 158.810,192.286 158.112 L 191.908 156.960 190.872 156.960 C 190.303 156.960,189.837 157.033,189.837 157.122 M368.749 157.702 C 368.633 157.819,368.539 158.117,368.540 158.365 C 368.542 158.708,368.582 158.754,368.705 158.559 C 368.794 158.418,368.826 158.235,368.776 158.154 C 368.725 158.072,368.780 157.889,368.897 157.747 C 369.155 157.437,369.047 157.404,368.749 157.702 M24.122 158.977 C 23.930 159.083,23.740 159.190,23.698 159.215 C 23.657 159.241,23.801 159.428,24.020 159.631 C 24.461 160.042,25.482 159.997,26.337 159.528 L 26.778 159.286 26.248 159.174 C 25.957 159.112,25.437 158.999,25.094 158.923 C 24.710 158.838,24.335 158.859,24.122 158.977 M36.075 160.230 L 36.110 161.555 37.675 161.555 L 39.240 161.555 39.240 160.402 C 39.240 159.032,39.065 158.904,37.186 158.904 L 36.040 158.904 36.075 160.230 M282.634 160.311 L 282.634 161.555 284.233 161.555 L 285.831 161.555 285.779 160.362 L 285.727 159.169 284.180 159.118 L 282.634 159.067 282.634 160.311 M315.205 160.382 L 315.231 161.506 316.520 161.540 L 317.808 161.574 317.808 160.416 L 317.808 159.258 316.493 159.258 L 315.178 159.258 315.205 160.382 M15.422 161.319 C 15.281 161.376,15.201 161.780,15.201 162.440 C 15.201 163.971,15.247 164.030,16.457 164.030 L 17.499 164.030 17.499 164.899 C 17.499 166.324,17.504 166.328,19.285 166.328 L 20.857 166.328 20.857 165.191 C 20.857 163.834,20.380 163.323,19.113 163.323 C 18.321 163.323,18.029 163.011,18.029 162.161 C 18.029 161.372,16.509 160.880,15.422 161.319 M28.988 165.077 L 28.988 166.301 30.181 166.270 L 31.374 166.240 31.383 165.179 C 31.393 163.924,31.326 163.860,30.004 163.856 L 28.988 163.853 28.988 165.077 \",stroke:\"none\",fill:\"#ccd5ce\",fillRule:\"evenodd\"}),/*#__PURE__*/React.createElement(\"path\",{id:\"path1\",d:\"M47.017 20.934 C 47.017 23.106,46.341 25.583,45.713 25.710 C 45.507 25.751,44.344 25.959,43.129 26.171 C 41.913 26.383,40.820 26.585,40.698 26.618 C 40.550 26.659,40.477 27.062,40.477 27.840 L 40.477 29.002 42.013 28.951 L 43.548 28.900 43.503 27.812 C 43.453 26.587,43.328 26.681,45.338 26.423 C 46.662 26.253,47.017 25.957,47.017 25.026 C 47.017 24.601,47.183 23.717,47.385 23.062 C 47.700 22.041,47.765 20.823,47.557 19.841 C 47.552 19.817,47.428 19.797,47.282 19.797 C 47.074 19.797,47.017 20.041,47.017 20.934 M91.737 21.087 C 91.737 21.797,91.659 22.455,91.565 22.549 C 91.470 22.644,91.272 23.356,91.126 24.131 C 90.836 25.661,90.705 25.827,89.366 26.359 C 88.694 26.625,88.639 26.699,88.588 27.405 C 88.474 28.955,88.532 29.009,90.283 28.951 L 91.825 28.900 91.801 27.751 C 91.788 27.119,91.719 26.233,91.648 25.783 C 91.525 25.006,91.775 23.720,92.060 23.661 C 92.125 23.647,92.576 23.615,93.062 23.588 C 93.548 23.562,94.010 23.533,94.089 23.524 C 94.288 23.502,94.192 20.288,93.984 20.018 C 93.882 19.885,93.398 19.797,92.776 19.797 L 91.737 19.797 91.737 21.087 M3.726 23.471 C 3.703 25.018,4.747 26.509,5.860 26.516 C 6.548 26.521,6.694 26.739,6.751 27.843 L 6.805 28.900 7.741 28.953 L 8.678 29.007 8.625 27.826 L 8.573 26.645 7.030 26.174 C 5.391 25.674,4.423 24.986,4.414 24.315 C 4.412 24.115,4.259 23.632,4.075 23.243 L 3.741 22.536 3.726 23.471 M57.048 25.729 C 56.975 25.804,56.926 26.150,56.940 26.499 C 56.953 26.847,56.995 26.973,57.034 26.779 C 57.098 26.456,57.222 26.430,58.468 26.483 C 60.111 26.552,60.186 26.613,60.186 27.893 L 60.186 28.900 61.052 28.955 C 62.090 29.021,62.212 28.882,62.216 27.630 C 62.218 26.831,62.167 26.699,61.821 26.597 C 61.602 26.533,61.071 26.315,60.640 26.113 C 59.835 25.734,57.306 25.464,57.048 25.729 M11.995 28.233 C 11.464 28.276,11.062 28.423,10.858 28.649 C 10.545 28.995,10.553 28.997,11.590 28.883 C 12.166 28.819,12.678 28.764,12.726 28.761 C 13.286 28.725,13.382 29.025,13.157 30.101 C 12.825 31.694,13.268 31.547,13.682 29.927 C 13.870 29.188,13.235 27.816,12.853 28.136 C 12.832 28.154,12.446 28.197,11.995 28.233 M65.015 28.230 C 64.549 28.301,64.028 28.736,64.201 28.909 C 64.250 28.958,64.505 28.916,64.768 28.816 C 65.430 28.565,66.440 28.589,66.714 28.863 C 66.977 29.126,66.793 31.024,66.473 31.345 C 66.369 31.448,66.284 31.700,66.284 31.904 C 66.284 32.392,68.738 32.573,68.785 32.088 C 68.799 31.939,68.819 31.736,68.829 31.639 C 68.839 31.541,68.568 31.323,68.228 31.153 C 67.655 30.867,67.605 30.777,67.557 29.932 C 67.466 28.380,66.829 27.952,65.015 28.230 M84.369 28.662 C 84.157 28.890,83.901 29.292,83.801 29.556 C 83.682 29.870,83.328 30.175,82.773 30.440 C 82.129 30.747,81.842 31.021,81.573 31.582 C 81.328 32.095,81.019 32.413,80.562 32.623 C 79.699 33.020,79.403 33.368,79.132 34.309 C 78.965 34.884,78.771 35.150,78.384 35.331 C 77.319 35.829,76.811 37.235,77.378 38.116 C 77.574 38.420,79.806 38.410,80.060 38.104 C 80.291 37.825,80.275 36.254,80.037 35.944 C 79.291 34.972,79.819 33.230,80.860 33.230 C 81.655 33.230,82.024 32.885,82.138 32.034 C 82.260 31.124,82.403 31.003,83.495 30.886 C 84.475 30.781,84.660 30.586,84.664 29.651 L 84.666 28.988 85.943 28.988 C 87.183 28.988,87.208 28.980,86.800 28.694 C 86.080 28.190,84.824 28.173,84.369 28.662 M35.843 28.887 C 35.701 28.991,35.603 29.156,35.626 29.253 C 35.648 29.350,35.760 29.887,35.875 30.446 L 36.084 31.463 37.015 31.463 C 37.841 31.463,37.969 31.412,38.151 31.012 C 38.485 30.279,38.419 28.990,38.047 28.978 C 37.877 28.972,37.369 28.906,36.919 28.832 C 36.401 28.747,36.006 28.767,35.843 28.887 M99.953 29.346 C 99.891 29.446,99.867 29.949,99.898 30.464 C 99.995 32.040,99.350 32.700,97.715 32.700 L 96.465 32.700 96.593 33.274 C 96.851 34.436,96.965 36.239,96.790 36.414 C 96.694 36.510,96.074 36.589,95.413 36.589 C 94.329 36.589,94.211 36.623,94.211 36.942 C 94.211 37.636,96.705 37.454,97.239 36.721 C 97.768 35.996,97.776 34.019,97.252 33.881 C 97.086 33.837,97.389 33.792,97.924 33.781 C 99.496 33.748,100.813 32.083,100.721 30.243 C 100.669 29.189,100.310 28.769,99.953 29.346 M366.337 29.671 C 366.145 30.583,366.275 31.431,366.621 31.521 C 366.901 31.594,366.946 31.790,366.941 32.904 C 366.933 34.705,366.783 34.867,365.192 34.792 C 363.995 34.735,363.941 34.750,363.941 35.130 C 363.942 35.507,364.011 35.528,365.265 35.528 L 366.588 35.528 367.067 34.804 C 367.330 34.406,367.590 33.751,367.644 33.347 C 367.729 32.712,367.831 32.572,368.407 32.301 C 369.526 31.774,369.704 31.492,369.694 30.257 L 369.686 29.156 368.061 29.180 C 366.455 29.204,366.435 29.210,366.337 29.671 M374.568 30.281 C 374.545 31.108,374.609 31.471,374.807 31.635 C 374.956 31.758,375.077 31.950,375.077 32.060 C 375.077 32.463,375.812 32.717,376.863 32.680 L 377.918 32.642 377.867 30.947 L 377.817 29.253 376.208 29.203 L 374.599 29.152 374.568 30.281 M107.910 31.598 C 107.035 32.240,106.974 36.366,107.815 38.008 C 107.891 38.157,108.008 38.529,108.075 38.834 C 108.189 39.353,108.977 39.557,109.366 39.168 C 109.412 39.123,109.630 39.155,109.851 39.239 C 110.291 39.406,110.466 38.900,110.471 37.452 L 110.473 36.813 109.810 36.923 C 108.650 37.116,108.224 36.983,108.004 36.357 C 107.656 35.366,107.590 33.227,107.878 32.302 C 108.022 31.840,108.128 31.464,108.114 31.465 C 108.099 31.467,108.007 31.527,107.910 31.598 M309.184 31.776 C 308.379 32.010,308.008 32.017,306.532 31.828 C 305.111 31.645,280.182 31.620,265.525 31.787 C 264.251 31.801,263.895 31.937,263.911 32.403 C 263.919 32.615,263.966 32.687,264.016 32.564 C 264.088 32.384,268.582 32.343,286.631 32.355 L 309.156 32.370 309.770 31.990 C 310.744 31.388,310.643 31.351,309.184 31.776 M314.420 31.636 C 314.388 31.732,314.388 32.282,314.421 32.860 L 314.480 33.910 315.572 34.374 C 317.069 35.011,319.109 34.974,319.553 34.303 C 319.832 33.882,319.829 33.876,319.397 34.005 C 318.435 34.292,317.437 34.325,316.655 34.094 L 315.838 33.852 315.895 32.657 L 315.952 31.462 315.216 31.462 C 314.811 31.462,314.453 31.541,314.420 31.636 M139.682 32.175 C 139.074 32.455,138.577 32.756,138.577 32.845 C 138.577 32.935,138.033 32.967,137.340 32.918 L 136.103 32.829 136.103 33.715 C 136.103 35.741,136.034 35.686,138.356 35.542 C 138.501 35.533,138.577 35.232,138.577 34.675 C 138.577 33.725,138.823 33.406,140.088 32.713 L 140.804 32.321 159.403 32.378 C 175.861 32.428,177.997 32.404,177.952 32.170 C 177.873 31.754,174.847 31.682,156.960 31.673 L 140.787 31.666 139.682 32.175 M191.104 32.075 C 190.683 32.305,190.199 32.620,190.029 32.774 C 189.812 32.970,189.368 33.053,188.536 33.053 C 187.215 33.053,187.070 33.179,187.255 34.164 C 187.362 34.736,187.373 34.741,188.475 34.791 L 189.587 34.841 190.001 34.013 C 190.228 33.557,190.563 33.146,190.744 33.098 C 190.925 33.051,191.074 32.952,191.074 32.878 C 191.074 32.362,192.431 32.342,225.011 32.388 C 253.803 32.429,258.066 32.468,258.683 32.700 C 259.826 33.128,261.600 32.977,261.600 32.451 C 261.600 32.063,261.550 32.047,260.575 32.121 C 260.004 32.165,258.953 32.075,258.197 31.919 C 256.989 31.670,253.321 31.640,224.356 31.647 L 191.869 31.655 191.104 32.075 M66.433 33.993 C 66.726 34.345,66.873 36.078,66.658 36.633 C 66.477 37.099,66.419 37.119,65.228 37.119 C 64.021 37.119,63.986 37.131,63.986 37.561 C 63.986 37.992,64.018 38.003,65.274 38.003 L 66.561 38.003 67.067 37.068 C 67.647 35.996,67.609 34.732,66.978 34.101 C 66.584 33.707,66.120 33.615,66.433 33.993 M264.261 34.760 C 264.480 35.400,264.605 36.233,264.605 37.070 C 264.605 38.328,264.620 38.378,265.002 38.324 C 265.802 38.211,265.669 36.192,264.774 34.852 C 263.877 33.510,263.827 33.501,264.261 34.760 M320.252 35.042 C 320.289 35.747,320.384 36.348,320.462 36.377 C 320.540 36.406,320.784 36.587,321.004 36.777 C 321.224 36.968,321.725 37.176,322.117 37.238 C 322.857 37.357,323.641 37.968,323.641 38.427 C 323.641 38.571,324.068 38.945,324.590 39.257 C 325.431 39.760,325.572 39.931,325.837 40.772 C 326.223 41.998,326.634 42.270,327.955 42.176 C 329.079 42.095,329.212 42.030,329.060 41.634 C 328.981 41.429,328.684 41.361,327.864 41.361 C 326.538 41.361,326.306 41.133,326.298 39.821 C 326.292 38.774,326.046 38.533,324.988 38.533 C 324.373 38.533,324.367 38.525,324.314 37.693 L 324.260 36.854 323.288 36.803 C 322.753 36.775,322.057 36.633,321.741 36.486 C 321.137 36.205,321.101 36.088,321.121 34.512 C 321.130 33.813,321.098 33.760,320.657 33.760 L 320.184 33.760 320.252 35.042 M35.705 35.144 C 35.705 35.237,35.279 35.281,34.747 35.243 C 33.805 35.175,33.787 35.183,33.672 35.706 C 33.607 35.999,33.426 36.496,33.269 36.811 C 32.624 38.102,32.720 43.613,33.410 44.902 C 33.721 45.483,33.754 45.257,33.526 44.099 C 33.405 43.482,33.364 42.523,33.429 41.803 C 33.490 41.122,33.551 40.009,33.564 39.328 C 33.578 38.648,33.665 37.972,33.757 37.826 C 33.951 37.520,35.710 37.448,35.923 37.738 C 35.994 37.835,36.054 37.303,36.056 36.555 C 36.057 35.807,35.979 35.146,35.882 35.086 C 35.784 35.026,35.705 35.052,35.705 35.144 M176.351 35.847 C 175.363 35.911,175.124 36.274,175.193 37.609 L 175.234 38.394 176.216 38.300 C 177.976 38.133,177.899 38.194,177.957 36.926 C 178.014 35.652,178.135 35.733,176.351 35.847 M361.866 36.279 C 361.654 36.548,361.643 37.140,361.853 37.011 C 361.936 36.959,361.950 36.832,361.885 36.726 C 361.820 36.621,361.913 36.428,362.093 36.297 C 362.272 36.166,362.333 36.058,362.230 36.058 C 362.126 36.058,361.962 36.158,361.866 36.279 M364.089 37.306 L 364.158 38.533 363.564 38.536 C 362.654 38.540,362.479 38.742,362.397 39.887 C 362.260 41.778,362.018 42.068,360.575 42.068 C 359.382 42.068,359.346 42.081,359.346 42.510 C 359.346 42.845,359.250 42.956,358.948 42.969 C 358.571 42.986,358.573 42.993,358.992 43.109 C 359.700 43.305,359.778 45.780,359.077 45.780 C 358.212 45.780,357.932 46.069,357.932 46.963 C 357.932 48.315,357.329 48.931,355.941 48.997 L 354.839 49.050 354.839 50.906 L 354.839 52.762 353.601 52.767 L 352.364 52.771 352.326 53.385 C 352.306 53.723,352.332 53.900,352.385 53.778 C 352.449 53.632,352.896 53.557,353.707 53.557 C 355.394 53.557,356.137 52.252,355.462 50.475 C 355.292 50.029,355.302 50.022,356.125 50.016 C 357.233 50.008,357.631 49.648,358.261 48.081 C 358.635 47.149,358.916 46.723,359.314 46.481 C 360.466 45.780,360.796 43.525,359.806 43.124 C 359.546 43.019,359.804 42.969,360.672 42.956 C 362.081 42.934,362.538 42.517,362.791 41.016 C 362.920 40.255,363.566 39.327,364.082 39.163 C 364.674 38.975,364.833 38.453,364.621 37.395 C 364.315 35.875,364.005 35.824,364.089 37.306 M170.148 37.500 C 169.151 38.079,168.979 38.379,168.979 39.537 C 168.979 40.604,168.998 40.654,169.412 40.654 C 169.824 40.654,169.844 40.604,169.839 39.570 C 169.832 38.115,170.053 37.906,171.556 37.942 C 172.187 37.957,172.822 38.068,172.967 38.188 C 173.184 38.369,173.210 38.355,173.116 38.109 C 172.850 37.417,170.959 37.029,170.148 37.500 M273.000 37.429 C 272.358 37.537,271.144 38.029,271.144 38.182 C 271.144 38.264,271.402 38.257,271.718 38.167 C 272.550 37.928,273.616 37.960,273.636 38.224 C 273.673 38.704,273.594 39.878,273.502 40.212 C 273.290 40.978,273.986 40.016,274.230 39.205 C 274.501 38.305,273.801 37.294,273.000 37.429 M209.456 37.745 C 208.922 37.878,208.126 37.993,207.689 37.999 C 205.657 38.029,205.325 38.250,205.284 39.602 L 205.253 40.654 207.576 40.649 C 209.094 40.645,209.801 40.586,209.617 40.479 C 209.254 40.267,209.281 38.577,209.651 38.339 C 209.787 38.252,211.131 38.200,212.638 38.224 L 215.378 38.268 215.466 39.505 C 215.515 40.186,215.490 41.022,215.411 41.364 L 215.267 41.986 214.133 41.891 C 212.879 41.785,212.815 41.834,212.815 42.878 L 212.815 43.482 214.058 43.482 C 215.086 43.482,215.318 43.429,215.400 43.173 C 215.455 43.003,215.662 42.467,215.860 41.982 C 216.409 40.634,216.325 38.622,215.691 37.960 C 215.142 37.388,211.405 37.259,209.456 37.745 M235.793 37.738 C 235.672 37.883,235.467 38.003,235.336 38.003 C 235.206 38.003,235.009 38.341,234.899 38.754 C 234.665 39.628,234.452 39.928,233.921 40.130 C 232.960 40.495,232.536 43.260,233.243 44.543 C 233.633 45.250,233.672 45.279,233.595 44.808 C 233.185 42.290,233.445 41.631,234.859 41.613 L 235.882 41.599 235.882 39.933 L 235.882 38.268 237.472 38.223 C 238.347 38.198,239.156 38.238,239.269 38.312 C 239.504 38.466,239.636 40.123,239.438 40.442 C 239.340 40.602,239.809 40.654,241.351 40.654 L 243.394 40.654 243.394 39.516 C 243.394 38.153,243.434 38.184,241.394 37.991 C 240.501 37.907,239.452 37.758,239.063 37.659 C 237.951 37.379,236.054 37.424,235.793 37.738 M295.890 37.741 C 294.293 38.301,294.300 38.294,294.300 39.535 L 294.300 40.654 295.194 40.654 C 295.778 40.654,296.048 40.589,295.972 40.467 C 295.761 40.125,295.860 38.484,296.101 38.331 C 296.369 38.162,299.910 38.132,300.872 38.291 L 301.524 38.399 301.471 39.526 L 301.418 40.654 302.352 40.654 C 302.933 40.654,303.318 40.571,303.374 40.433 C 303.444 40.260,303.466 40.262,303.477 40.439 C 303.487 40.606,303.579 40.619,303.822 40.489 C 305.136 39.786,307.203 40.157,307.203 41.096 C 307.203 41.239,307.529 41.572,307.928 41.836 C 309.001 42.546,309.231 44.278,308.378 45.221 C 308.126 45.499,308.091 46.006,308.118 48.975 C 308.136 50.864,308.180 52.044,308.215 51.598 L 308.280 50.789 309.111 50.851 C 309.569 50.885,310.078 50.943,310.244 50.979 C 310.708 51.081,310.966 46.479,310.521 46.034 C 310.413 45.926,309.445 45.916,309.015 46.018 C 308.796 46.070,308.617 46.033,308.617 45.936 C 308.617 45.839,308.537 45.808,308.440 45.868 C 308.343 45.928,308.263 45.854,308.263 45.702 C 308.263 45.535,308.420 45.425,308.661 45.424 C 309.301 45.419,309.446 45.220,309.576 44.158 C 309.901 41.520,305.291 38.069,303.710 39.765 C 303.392 40.107,303.386 40.097,303.425 39.251 C 303.461 38.463,303.424 38.372,302.992 38.205 C 301.283 37.542,297.219 37.276,295.890 37.741 M64.132 39.759 C 64.188 41.149,64.179 41.184,63.778 41.187 C 62.768 41.193,62.572 41.355,62.572 42.189 C 62.572 43.677,62.053 44.176,60.495 44.184 C 59.436 44.189,59.390 44.207,59.390 44.631 C 59.390 45.056,59.433 45.073,60.512 45.073 C 62.019 45.073,62.360 44.773,63.174 42.731 C 63.319 42.366,63.514 42.068,63.608 42.068 C 64.027 42.068,65.080 40.800,64.978 40.420 C 64.921 40.208,64.873 39.861,64.872 39.648 C 64.871 39.434,64.691 39.051,64.472 38.796 L 64.074 38.333 64.132 39.759 M92.141 38.518 C 91.885 38.707,91.912 40.552,92.180 41.232 C 92.890 43.027,92.476 43.836,90.847 43.836 C 89.733 43.836,89.616 43.869,89.616 44.189 C 89.616 44.511,89.732 44.542,90.897 44.537 C 92.444 44.530,92.718 44.272,92.994 42.558 C 93.198 41.291,93.352 41.049,94.003 40.974 C 94.486 40.918,94.601 40.079,94.304 38.783 C 94.220 38.420,92.551 38.215,92.141 38.518 M187.434 39.776 C 187.642 41.286,187.591 41.349,186.115 41.406 L 184.976 41.449 184.921 42.201 L 184.867 42.952 186.104 42.952 C 187.484 42.952,187.487 42.950,187.911 41.597 C 188.181 40.738,188.179 40.629,187.869 39.751 C 187.385 38.375,187.241 38.383,187.434 39.776 M377.351 39.358 C 376.779 40.559,376.810 42.162,377.451 44.498 L 377.948 46.310 378.622 46.310 C 379.970 46.310,380.203 46.102,380.203 44.901 L 380.203 43.836 379.145 43.873 C 378.492 43.897,378.003 43.827,377.868 43.692 C 377.571 43.395,377.450 39.964,377.710 39.218 C 378.019 38.330,377.800 38.415,377.351 39.358 M145.299 39.354 C 145.293 40.210,145.436 40.300,146.800 40.300 C 147.880 40.300,148.026 40.435,147.866 41.284 C 147.754 41.883,147.739 41.891,146.832 41.897 C 145.420 41.906,145.289 42.084,145.322 43.943 C 145.338 44.808,145.383 45.247,145.423 44.919 L 145.496 44.323 146.604 44.420 L 147.712 44.517 148.096 43.425 C 149.047 40.722,148.548 39.240,146.686 39.240 C 145.900 39.240,145.623 39.169,145.485 38.931 C 145.341 38.684,145.304 38.770,145.299 39.354 M259.235 39.859 C 259.077 41.168,259.108 45.479,259.277 45.745 C 259.377 45.903,259.751 45.959,260.467 45.922 L 261.511 45.868 261.562 42.863 C 261.617 39.579,261.550 38.976,261.150 39.130 C 261.009 39.184,260.893 39.157,260.893 39.070 C 260.893 38.983,260.543 38.925,260.117 38.943 L 259.341 38.975 259.235 39.859 M200.549 39.714 C 199.856 39.829,198.674 40.633,198.674 40.992 C 198.674 41.682,198.160 42.068,197.242 42.068 C 196.173 42.068,195.688 42.496,195.358 43.728 C 195.201 44.317,195.052 44.543,194.819 44.543 C 193.777 44.543,193.364 45.934,194.020 47.238 C 194.290 47.775,195.889 47.964,196.341 47.512 C 196.638 47.215,196.606 45.744,196.289 45.137 C 195.470 43.566,196.062 42.582,197.702 42.789 C 199.850 43.059,199.735 43.115,199.735 41.797 C 199.735 40.852,199.791 40.626,200.044 40.547 C 200.214 40.495,200.492 40.378,200.660 40.288 C 201.105 40.050,201.882 40.086,202.720 40.382 C 203.424 40.630,203.445 40.627,203.272 40.303 C 202.987 39.771,201.784 39.511,200.549 39.714 M247.017 39.935 C 245.486 40.306,245.354 40.635,246.752 40.599 L 248.078 40.566 248.130 41.361 C 248.192 42.292,248.500 42.596,249.393 42.604 C 250.570 42.614,250.895 43.783,250.123 45.226 C 250.019 45.421,249.943 46.003,249.955 46.520 C 249.972 47.318,249.996 47.380,250.110 46.929 C 250.185 46.637,250.255 46.487,250.266 46.596 C 250.278 46.704,250.506 46.795,250.773 46.798 C 252.304 46.813,252.396 46.838,252.645 47.314 C 252.810 47.629,252.847 47.968,252.756 48.330 C 252.375 49.843,252.365 49.966,252.656 49.562 C 253.824 47.934,253.191 45.426,251.613 45.426 C 250.842 45.426,250.830 45.418,250.999 44.973 C 251.418 43.871,250.906 42.068,250.174 42.068 C 249.681 42.068,249.062 41.641,248.866 41.166 C 248.657 40.662,247.860 39.754,247.656 39.788 C 247.596 39.798,247.309 39.864,247.017 39.935 M72.936 41.971 C 72.550 42.268,72.119 43.045,72.111 43.458 C 72.103 43.851,71.504 44.543,71.172 44.543 C 70.430 44.543,69.872 46.480,70.355 47.382 C 70.693 48.013,70.879 47.733,70.879 46.594 L 70.879 45.465 71.719 45.312 L 72.559 45.159 72.612 44.144 C 72.687 42.696,73.079 42.332,74.552 42.338 C 75.454 42.342,75.653 42.292,75.611 42.073 C 75.539 41.694,73.402 41.612,72.936 41.971 M166.028 42.537 C 165.085 43.973,165.041 46.615,165.946 47.434 C 166.263 47.721,166.263 47.694,165.934 46.719 C 165.284 44.795,165.931 43.343,167.471 43.269 C 168.527 43.217,168.537 43.212,168.537 42.687 C 168.537 41.886,166.534 41.766,166.028 42.537 M328.625 43.352 C 327.957 44.157,327.988 46.636,328.698 49.257 C 328.887 49.955,328.899 50.289,328.749 50.671 C 328.092 52.345,328.138 56.009,328.824 56.695 C 329.034 56.905,329.040 56.777,328.863 55.823 C 328.698 54.929,328.706 54.435,328.903 53.344 L 329.150 51.983 330.240 51.930 L 331.330 51.878 331.330 50.022 L 331.330 48.166 330.246 48.114 L 329.163 48.062 328.877 47.042 C 328.525 45.790,328.516 45.023,328.838 43.952 C 329.081 43.146,328.995 42.906,328.625 43.352 M273.572 43.836 C 273.743 44.640,273.740 46.264,273.566 46.899 C 273.430 47.395,273.418 47.399,272.198 47.341 L 270.967 47.282 270.967 48.200 C 270.968 49.287,271.030 49.339,272.384 49.375 L 273.429 49.403 273.879 47.957 C 274.650 45.485,274.640 45.014,273.794 43.747 L 273.440 43.217 273.572 43.836 M292.930 45.037 C 292.322 45.066,291.824 45.106,291.824 45.126 C 291.823 45.145,291.628 45.733,291.391 46.432 C 290.939 47.766,290.951 48.013,291.538 49.315 C 291.816 49.931,291.816 49.928,291.708 48.656 C 291.572 47.070,291.685 46.914,293.011 46.860 C 294.238 46.810,294.154 46.890,294.089 45.844 L 294.034 44.985 292.930 45.037 M57.061 45.957 C 57.044 46.248,57.017 46.745,57.000 47.061 C 56.983 47.377,57.067 47.715,57.188 47.813 C 58.023 48.488,57.501 50.729,56.507 50.729 C 56.138 50.729,55.733 51.275,55.588 51.966 C 55.318 53.247,54.920 53.557,53.545 53.557 C 52.332 53.557,52.219 53.618,52.427 54.161 C 52.563 54.515,54.677 54.564,54.967 54.220 C 55.070 54.099,55.344 53.784,55.577 53.521 C 55.810 53.258,56.053 52.803,56.117 52.509 C 56.220 52.040,57.089 51.085,57.415 51.082 C 57.580 51.080,58.153 50.047,58.153 49.751 C 58.153 49.366,58.545 48.608,58.745 48.608 C 59.470 48.608,60.114 47.803,60.003 47.033 C 59.778 45.474,59.729 45.426,58.334 45.426 L 57.092 45.426 57.061 45.957 M87.260 46.556 C 87.177 47.435,87.213 47.677,87.451 47.858 C 87.651 48.011,87.765 48.428,87.813 49.185 C 87.910 50.703,87.615 50.977,85.991 50.874 C 84.899 50.804,84.831 50.822,84.880 51.162 C 84.934 51.542,86.334 51.765,87.239 51.538 C 87.765 51.406,88.554 50.157,88.558 49.451 C 88.561 48.715,88.677 48.551,89.455 48.185 L 90.091 47.887 89.951 47.002 C 89.695 45.380,89.724 45.411,88.475 45.446 L 87.362 45.476 87.260 46.556 M110.081 45.995 C 109.431 47.436,109.368 47.737,109.486 48.832 C 109.627 50.139,109.880 51.610,110.245 53.248 L 110.511 54.441 111.361 54.441 C 112.779 54.441,112.772 54.450,112.757 52.522 C 112.749 51.585,112.707 50.904,112.663 51.010 C 112.557 51.265,110.616 51.137,110.447 50.864 C 109.981 50.111,109.843 47.583,110.201 46.391 C 110.507 45.373,110.448 45.179,110.081 45.995 M185.129 45.692 C 185.564 47.293,185.619 47.735,185.451 48.286 C 185.353 48.609,185.222 49.099,185.161 49.375 C 185.053 49.861,185.016 49.876,184.040 49.840 C 182.546 49.785,182.589 49.762,182.589 50.630 C 182.589 51.576,182.672 51.637,184.008 51.673 L 185.056 51.701 185.612 49.968 C 186.266 47.930,186.245 47.072,185.515 46.028 C 185.250 45.649,185.076 45.497,185.129 45.692 M145.647 48.922 C 146.078 50.686,145.767 51.435,144.604 51.439 C 143.115 51.443,142.496 52.074,143.131 52.939 C 143.709 53.725,145.997 53.035,146.004 52.072 C 146.005 51.868,146.113 51.345,146.243 50.909 C 146.455 50.202,146.443 50.008,146.140 49.108 C 145.625 47.583,145.290 47.457,145.647 48.922 M13.180 48.651 C 13.386 49.255,13.435 49.813,13.358 50.681 C 13.300 51.339,13.207 53.176,13.151 54.762 C 13.069 57.083,12.998 57.665,12.787 57.746 C 12.390 57.898,10.899 57.893,10.649 57.738 C 10.476 57.631,10.430 58.407,10.434 61.368 C 10.438 64.014,10.493 65.043,10.620 64.825 C 10.759 64.586,11.036 64.516,11.851 64.516 C 13.121 64.516,12.941 64.916,13.086 61.776 C 13.154 60.318,13.307 58.767,13.426 58.330 C 13.546 57.892,13.702 55.978,13.773 54.077 C 13.844 52.175,13.957 50.530,14.024 50.422 C 14.167 50.189,13.524 48.459,13.153 48.081 C 12.941 47.864,12.945 47.962,13.180 48.651 M213.035 48.867 C 213.320 50.520,213.200 50.704,211.797 50.765 L 210.605 50.817 210.605 51.525 L 210.605 52.232 211.766 52.279 L 212.926 52.327 213.381 51.219 L 213.836 50.110 213.481 49.138 C 212.989 47.795,212.834 47.701,213.035 48.867 M191.471 49.226 C 190.994 49.963,190.964 50.724,191.383 51.489 L 191.692 52.055 191.781 50.827 L 191.869 49.599 193.062 49.615 C 194.072 49.628,194.255 49.585,194.255 49.332 C 194.255 48.349,192.093 48.267,191.471 49.226 M231.410 49.329 C 230.516 50.373,230.194 52.497,230.749 53.690 C 231.238 54.740,231.429 54.896,231.185 54.044 C 230.958 53.251,230.979 51.720,231.226 51.179 C 231.458 50.670,233.366 50.483,233.555 50.950 C 233.604 51.072,233.650 50.687,233.658 50.096 L 233.672 49.020 232.673 49.020 C 231.941 49.020,231.603 49.103,231.410 49.329 M163.912 50.412 C 163.120 51.448,162.968 52.691,163.503 53.741 C 163.967 54.649,163.965 54.651,163.883 53.206 C 163.803 51.788,163.868 51.720,165.316 51.717 C 166.228 51.715,166.611 51.219,166.203 50.569 C 165.973 50.202,164.167 50.078,163.912 50.412 M65.930 51.215 C 65.930 51.288,65.731 51.579,65.488 51.861 C 65.243 52.146,65.046 52.597,65.046 52.873 C 65.046 53.250,64.915 53.439,64.507 53.650 C 63.468 54.188,63.279 54.514,63.279 55.767 C 63.279 56.798,63.315 56.916,63.632 56.916 C 63.949 56.916,63.986 56.798,63.986 55.790 L 63.986 54.664 64.718 54.566 C 65.602 54.448,65.747 54.250,65.751 53.160 C 65.755 51.923,66.176 51.565,67.536 51.642 C 68.437 51.693,68.582 51.658,68.582 51.392 C 68.582 51.125,68.400 51.083,67.256 51.083 C 66.527 51.083,65.930 51.142,65.930 51.215 M82.718 52.681 C 82.397 53.280,82.510 54.509,82.918 54.858 C 83.244 55.137,83.282 55.327,83.223 56.378 C 83.130 58.025,82.958 58.194,81.444 58.122 C 80.242 58.065,80.232 58.068,80.284 58.506 C 80.332 58.919,80.409 58.952,81.461 59.001 C 82.938 59.071,83.783 58.324,83.783 56.948 C 83.783 56.337,84.321 55.598,85.035 55.228 C 85.646 54.912,85.724 54.176,85.268 53.035 L 84.985 52.329 83.938 52.343 C 83.115 52.355,82.854 52.427,82.718 52.681 M271.118 54.016 C 271.175 55.364,271.150 55.503,270.853 55.513 C 270.673 55.519,270.148 55.539,269.686 55.557 C 269.224 55.575,268.813 55.510,268.772 55.413 C 268.731 55.316,268.692 55.714,268.684 56.297 L 268.670 57.357 269.876 57.398 L 271.082 57.439 271.550 56.110 L 272.018 54.782 271.669 53.860 C 271.120 52.411,271.052 52.431,271.118 54.016 M379.574 53.331 C 379.084 54.074,379.058 55.518,379.497 57.534 C 379.709 58.506,379.918 59.540,379.962 59.832 C 380.226 61.586,380.136 61.441,380.956 61.432 C 381.368 61.427,381.805 61.359,381.927 61.280 C 382.064 61.191,382.149 61.225,382.150 61.368 C 382.152 61.536,382.200 61.527,382.324 61.335 C 382.419 61.189,382.497 60.420,382.498 59.626 L 382.501 58.183 381.662 58.183 C 380.191 58.183,380.227 58.199,380.116 57.490 C 380.059 57.125,379.931 56.361,379.830 55.791 C 379.697 55.037,379.704 54.517,379.857 53.881 C 380.107 52.840,380.015 52.661,379.574 53.331 M93.670 54.300 C 93.349 54.718,92.664 55.457,92.147 55.943 C 91.086 56.940,90.925 57.656,91.516 58.736 L 91.825 59.302 91.877 58.109 C 91.906 57.452,92.001 56.916,92.089 56.916 C 92.177 56.916,92.459 56.721,92.715 56.483 C 92.972 56.245,93.238 56.027,93.306 55.997 C 93.375 55.968,93.617 55.639,93.843 55.268 C 94.335 54.462,94.434 54.543,94.714 55.978 C 94.927 57.066,94.794 58.222,94.356 59.081 C 94.029 59.723,94.374 59.357,94.832 58.575 C 95.554 57.344,95.489 55.545,94.672 54.129 C 94.307 53.496,94.286 53.499,93.670 54.300 M252.441 54.043 C 252.496 54.522,252.516 54.529,253.734 54.529 L 254.971 54.529 255.003 55.502 C 255.021 56.036,255.041 56.574,255.047 56.697 C 255.067 57.059,261.357 56.989,261.497 56.625 C 261.701 56.092,261.608 53.775,261.379 53.688 C 260.771 53.459,259.338 53.629,258.556 54.022 C 257.494 54.556,256.841 54.551,255.804 53.999 C 255.136 53.644,254.721 53.557,253.679 53.557 L 252.385 53.557 252.441 54.043 M288.993 54.839 C 288.399 56.786,288.375 57.257,288.823 58.297 C 289.217 59.214,289.671 59.616,289.346 58.760 C 289.117 58.158,289.126 56.397,289.362 55.722 C 289.573 55.115,289.910 54.979,291.041 55.043 L 291.825 55.087 291.825 54.322 L 291.825 53.557 290.605 53.557 L 289.385 53.557 288.993 54.839 M361.431 54.458 C 361.221 54.575,361.197 54.775,361.316 55.451 C 361.397 55.916,361.515 56.715,361.578 57.225 L 361.693 58.153 360.564 58.159 C 358.911 58.167,358.361 58.776,358.577 60.358 C 358.784 61.863,359.282 61.896,359.269 60.404 L 359.258 59.125 360.451 59.073 L 361.644 59.021 361.644 59.902 C 361.644 60.387,361.723 60.833,361.821 60.893 C 361.918 60.953,361.997 60.881,361.997 60.733 C 361.997 60.460,363.776 60.403,364.040 60.667 C 364.444 61.071,364.619 64.272,364.298 65.389 C 364.029 66.329,364.213 66.227,364.719 65.157 C 365.247 64.041,365.271 63.558,364.896 61.600 C 364.747 60.822,364.558 59.487,364.477 58.634 C 364.311 56.885,364.183 56.647,363.317 56.484 C 362.980 56.421,362.701 56.353,362.698 56.333 C 362.694 56.313,362.650 55.979,362.599 55.590 C 362.549 55.201,362.479 54.795,362.444 54.686 C 362.357 54.416,361.750 54.279,361.431 54.458 M50.323 54.817 C 50.074 54.959,50.015 55.189,50.046 55.882 C 50.074 56.489,50.007 56.820,49.833 56.937 C 49.634 57.071,49.656 57.096,49.934 57.056 C 50.248 57.010,50.299 57.132,50.389 58.153 C 50.516 59.581,50.415 59.784,49.461 60.016 C 48.721 60.195,48.694 60.226,48.608 60.996 C 48.458 62.348,47.968 62.773,46.632 62.712 C 45.590 62.664,45.511 62.687,45.458 63.058 C 45.404 63.437,45.458 63.456,46.621 63.456 C 48.030 63.456,48.269 63.285,49.052 61.721 C 49.310 61.204,49.654 60.735,49.816 60.678 C 50.383 60.478,51.083 59.561,51.083 59.018 C 51.083 58.423,51.763 57.623,52.269 57.623 C 52.976 57.623,53.207 56.013,52.654 54.945 C 52.479 54.607,50.851 54.517,50.323 54.817 M308.460 55.542 C 309.122 57.457,308.786 58.010,306.943 58.038 C 305.781 58.055,305.546 58.228,305.924 58.787 C 306.101 59.050,308.057 59.104,308.357 58.855 C 309.397 57.993,309.457 55.803,308.465 54.906 C 308.147 54.618,308.147 54.635,308.460 55.542 M350.394 54.939 C 350.342 55.102,350.231 55.395,350.148 55.590 C 349.955 56.042,350.006 56.967,350.233 57.126 C 350.329 57.193,350.439 57.811,350.478 58.498 C 350.571 60.157,350.437 60.309,348.931 60.253 C 347.856 60.214,347.764 60.239,347.712 60.596 C 347.658 60.964,347.717 60.981,349.082 60.981 C 350.200 60.981,350.508 60.926,350.508 60.728 C 350.508 60.590,350.634 60.351,350.787 60.197 C 350.940 60.044,351.141 59.386,351.233 58.734 C 351.402 57.543,351.568 57.277,352.149 57.272 C 352.594 57.268,352.673 56.930,352.507 55.743 L 352.362 54.706 351.425 54.673 C 350.683 54.648,350.469 54.703,350.394 54.939 M210.775 55.279 C 211.208 56.398,211.271 57.250,210.985 58.124 C 210.825 58.614,210.694 59.159,210.694 59.335 C 210.694 59.613,210.535 59.655,209.501 59.655 L 208.308 59.655 208.257 60.627 L 208.207 61.600 209.413 61.616 L 210.619 61.633 211.008 60.379 C 211.411 59.077,211.690 57.439,211.612 56.827 C 211.502 55.966,211.198 55.176,210.937 55.076 C 210.722 54.993,210.683 55.042,210.775 55.279 M142.895 57.193 C 143.088 57.386,143.173 57.806,143.173 58.563 L 143.173 59.655 142.268 59.622 C 141.771 59.604,141.254 59.547,141.121 59.496 C 140.821 59.380,140.653 59.976,140.730 60.884 L 140.787 61.549 141.972 61.588 C 143.286 61.632,143.218 61.689,143.610 60.211 C 143.910 59.081,143.378 56.916,142.800 56.916 C 142.700 56.916,142.742 57.041,142.895 57.193 M228.853 58.323 C 227.907 60.617,227.890 63.044,228.814 63.812 C 229.133 64.076,229.133 64.070,228.816 63.190 C 228.317 61.804,228.715 59.774,229.498 59.716 C 230.705 59.626,231.123 59.651,231.239 59.820 C 231.310 59.924,231.370 59.512,231.372 58.904 C 231.373 58.297,231.315 57.790,231.242 57.778 C 229.805 57.549,229.107 57.709,228.853 58.323 M162.086 58.463 C 160.975 58.614,160.268 62.102,161.093 63.361 C 161.524 64.018,161.585 63.864,161.347 62.726 C 161.184 61.952,161.192 61.589,161.386 60.933 L 161.628 60.112 162.785 60.060 L 163.942 60.009 163.994 59.200 L 164.047 58.391 163.287 58.397 C 162.869 58.400,162.329 58.430,162.086 58.463 M31.397 58.904 C 31.339 59.123,31.290 59.824,31.288 60.463 C 31.287 61.101,31.161 62.046,31.007 62.562 C 30.548 64.108,30.557 69.350,31.021 70.210 L 31.374 70.866 31.313 68.193 C 31.280 66.722,31.304 65.102,31.368 64.592 L 31.484 63.664 32.462 63.604 C 33.191 63.559,33.479 63.611,33.595 63.809 C 33.774 64.116,33.818 60.205,33.647 59.169 L 33.537 58.506 32.521 58.506 C 31.616 58.506,31.492 58.550,31.397 58.904 M327.044 59.222 C 326.622 59.388,326.529 59.998,326.754 61.123 C 326.868 61.693,328.545 61.935,328.918 61.435 C 329.150 61.124,329.131 59.418,328.894 59.269 C 328.576 59.069,327.500 59.042,327.044 59.222 M80.478 60.627 L 80.513 61.953 79.231 62.005 C 77.981 62.056,77.313 62.661,78.171 62.966 C 79.961 63.602,81.426 62.595,81.192 60.888 C 80.970 59.273,80.437 59.078,80.478 60.627 M112.155 60.268 C 111.628 61.309,111.585 62.318,111.988 64.195 C 112.140 64.906,112.338 66.239,112.428 67.157 C 112.623 69.151,112.619 69.145,113.938 69.077 L 114.980 69.023 115.030 66.933 C 115.068 65.361,115.028 64.874,114.871 64.971 C 114.685 65.086,113.943 65.126,113.087 65.067 C 112.462 65.024,112.064 61.088,112.562 59.876 C 112.890 59.077,112.633 59.326,112.155 60.268 M269.023 60.318 C 269.460 61.563,269.460 61.629,269.018 62.812 L 268.659 63.772 267.716 63.765 C 266.487 63.757,266.372 63.849,266.372 64.836 L 266.372 65.665 267.388 65.631 C 267.947 65.612,268.469 65.592,268.547 65.587 C 269.599 65.513,270.027 60.668,269.067 59.708 L 268.669 59.310 269.023 60.318 M306.029 59.653 C 306.585 61.103,306.296 62.218,305.365 62.218 C 304.493 62.218,304.021 62.649,304.021 63.444 C 304.021 64.383,303.765 64.543,302.596 64.332 C 302.067 64.237,301.340 64.110,300.980 64.050 L 300.326 63.942 300.370 65.203 L 300.415 66.465 299.520 66.747 C 298.700 67.006,298.545 67.005,297.669 66.745 C 296.523 66.405,296.391 66.466,297.134 66.995 C 298.475 67.950,301.203 67.301,301.455 65.966 C 301.580 65.310,302.050 65.046,303.095 65.046 C 303.795 65.046,304.728 64.338,304.728 63.807 C 304.728 63.481,305.437 62.749,305.753 62.749 C 306.737 62.749,307.269 60.587,306.511 59.674 C 306.215 59.317,305.894 59.303,306.029 59.653 M58.911 60.495 C 58.710 60.714,58.335 61.346,58.076 61.900 C 57.817 62.454,57.458 62.954,57.278 63.011 C 56.527 63.249,56.032 63.995,56.032 64.888 C 56.032 65.789,55.761 66.107,54.993 66.107 C 54.476 66.107,54.394 66.357,54.531 67.531 L 54.653 68.582 55.386 68.509 C 55.790 68.468,56.305 68.428,56.531 68.420 C 56.936 68.405,56.941 68.383,56.912 66.416 C 56.871 63.537,56.858 63.633,57.313 63.630 C 58.240 63.624,58.506 63.441,58.506 62.811 C 58.506 61.246,59.122 60.715,60.798 60.831 C 61.622 60.888,61.688 60.863,61.688 60.495 C 61.688 60.121,61.615 60.097,60.482 60.097 C 59.456 60.097,59.220 60.157,58.911 60.495 M89.192 60.638 C 88.641 61.257,88.450 62.329,88.699 63.411 L 88.871 64.163 88.027 64.163 C 87.007 64.163,86.385 64.815,86.172 66.110 C 85.972 67.322,85.632 67.993,85.086 68.255 C 84.587 68.495,84.455 69.477,84.776 70.570 C 84.869 70.888,86.219 71.019,86.861 70.772 C 87.234 70.629,87.241 68.817,86.870 68.327 C 85.899 67.043,86.791 65.080,88.377 65.009 C 89.561 64.956,90.205 64.340,89.317 64.110 C 89.014 64.031,89.014 64.026,89.312 64.006 C 89.558 63.990,89.591 63.916,89.461 63.674 C 88.689 62.232,89.298 60.981,90.771 60.981 C 91.623 60.981,91.913 60.919,91.913 60.738 C 91.913 59.939,89.881 59.865,89.192 60.638 M288.172 61.829 C 286.811 61.908,286.199 63.157,286.645 64.943 C 286.997 66.350,287.227 66.329,287.108 64.901 C 286.985 63.437,287.049 63.372,288.599 63.372 L 289.527 63.373 289.527 62.729 C 289.527 61.912,289.304 61.764,288.172 61.829 M347.923 62.734 C 348.173 64.245,348.096 64.339,346.625 64.339 C 345.500 64.339,345.382 64.373,345.382 64.693 C 345.382 65.013,345.500 65.046,346.628 65.046 C 348.566 65.046,349.152 64.092,348.276 62.362 C 347.865 61.549,347.748 61.673,347.923 62.734 M357.112 62.411 C 356.439 62.606,355.811 63.786,355.811 64.855 C 355.811 65.592,355.461 66.106,354.959 66.108 C 354.557 66.110,354.020 66.981,353.410 68.626 C 353.069 69.542,352.809 69.996,352.622 69.996 C 351.989 69.996,351.522 71.008,351.738 71.910 C 352.077 73.322,352.270 73.390,352.273 72.098 L 352.276 70.930 353.027 70.772 L 353.778 70.614 353.876 69.554 C 353.930 68.970,354.127 68.189,354.313 67.817 L 354.651 67.142 355.850 67.199 C 357.190 67.263,357.324 67.093,356.803 66.002 C 355.930 64.173,356.517 63.031,358.277 63.130 C 359.271 63.186,359.347 63.164,359.346 62.812 C 359.346 62.217,358.379 62.044,357.112 62.411 M323.521 63.392 C 323.101 63.843,322.757 64.311,322.757 64.433 C 322.757 64.555,322.424 64.788,322.016 64.951 C 320.407 65.595,319.929 66.169,319.929 67.459 C 319.929 68.602,319.930 68.605,320.410 68.549 C 320.867 68.496,320.889 68.451,320.839 67.657 C 320.763 66.438,320.915 66.148,321.842 65.743 C 323.356 65.080,323.464 65.001,323.464 64.567 C 323.464 63.960,324.215 63.283,324.915 63.258 C 325.235 63.247,325.577 63.220,325.674 63.197 C 325.771 63.174,326.069 63.144,326.337 63.129 C 327.536 63.063,326.846 62.572,325.554 62.572 L 324.285 62.572 323.521 63.392 M43.280 64.211 C 43.266 64.330,43.218 64.706,43.174 65.046 C 43.129 65.387,43.109 65.904,43.130 66.195 C 43.150 66.487,43.178 67.243,43.192 67.875 L 43.217 69.023 42.599 69.082 C 41.737 69.164,41.577 69.353,41.440 70.455 C 41.293 71.626,41.092 71.763,39.517 71.763 C 38.474 71.763,38.356 71.799,38.356 72.117 C 38.356 72.438,38.474 72.470,39.633 72.470 C 41.010 72.470,42.064 71.750,42.071 70.803 C 42.074 70.311,42.217 70.136,42.998 69.661 C 43.822 69.161,44.012 68.817,44.012 67.833 C 44.012 66.940,44.243 66.637,44.921 66.637 C 45.580 66.637,45.661 66.436,45.522 65.140 L 45.402 64.024 44.354 64.009 C 43.648 63.999,43.297 64.065,43.280 64.211 M75.770 64.104 C 75.483 64.391,75.652 66.139,75.995 66.432 C 76.568 66.922,76.644 68.503,76.136 69.377 L 75.726 70.084 74.584 70.089 C 73.275 70.094,73.076 70.379,73.605 71.493 C 74.340 73.041,73.800 74.276,72.408 74.235 C 70.865 74.189,70.879 74.184,70.879 74.803 C 70.879 75.243,70.926 75.322,71.091 75.157 C 71.213 75.035,71.798 74.945,72.467 74.945 C 73.856 74.945,74.162 74.608,74.417 72.804 C 74.580 71.656,74.814 71.233,75.289 71.233 C 75.816 71.233,76.356 70.445,76.873 68.923 C 77.161 68.072,77.512 67.366,77.698 67.261 C 78.655 66.721,78.789 66.004,78.201 64.560 C 77.973 63.998,76.207 63.667,75.770 64.104 M140.843 64.251 C 141.161 64.919,141.261 66.425,141.054 67.421 L 140.850 68.405 139.625 68.405 L 138.400 68.405 138.400 69.091 C 138.400 69.883,138.546 69.960,139.981 69.928 C 140.894 69.908,140.911 69.897,141.171 69.200 C 142.097 66.723,142.066 65.594,141.037 64.339 C 140.778 64.024,140.723 63.999,140.843 64.251 M208.543 65.314 C 208.803 66.400,208.799 66.529,208.486 67.451 L 208.152 68.433 207.125 68.375 C 206.529 68.341,206.088 68.391,206.075 68.493 C 206.062 68.590,205.993 68.392,205.921 68.051 C 205.841 67.670,205.793 68.315,205.796 69.730 C 205.798 71.109,205.842 71.675,205.905 71.144 L 206.010 70.261 207.121 70.208 L 208.232 70.155 208.563 69.413 C 209.171 68.049,209.357 66.431,209.022 65.423 C 208.549 63.997,208.209 63.921,208.543 65.314 M94.286 65.834 C 94.234 66.041,94.216 66.684,94.245 67.263 L 94.300 68.316 95.433 68.360 C 96.871 68.415,96.775 68.239,96.767 70.823 L 96.759 73.034 97.151 72.001 C 97.585 70.858,97.579 69.723,97.130 67.786 C 96.994 67.203,96.838 66.442,96.783 66.096 L 96.682 65.466 95.531 65.462 C 94.503 65.458,94.370 65.497,94.286 65.834 M227.787 66.425 C 226.584 66.488,226.611 66.446,225.982 69.187 C 225.549 71.071,225.645 72.050,226.344 72.915 C 226.620 73.256,226.624 73.253,226.501 72.824 C 226.212 71.820,226.220 70.173,226.517 69.277 L 226.816 68.376 227.947 68.435 L 229.077 68.493 229.064 67.698 C 229.044 66.450,228.958 66.364,227.787 66.425 M288.820 66.460 C 288.674 66.555,288.641 66.633,288.747 66.635 C 288.859 66.636,288.955 67.075,288.977 67.686 L 289.015 68.734 288.213 68.854 C 287.121 69.018,286.823 68.881,286.944 68.272 C 287.357 66.192,287.247 66.121,286.402 67.921 L 286.006 68.763 286.662 69.187 C 287.317 69.611,287.319 69.611,288.997 69.353 C 289.920 69.211,291.551 69.039,292.620 68.971 L 294.565 68.847 294.565 67.742 C 294.565 67.134,294.629 66.637,294.708 66.637 C 294.786 66.637,294.802 66.558,294.741 66.460 C 294.599 66.230,289.176 66.230,288.820 66.460 M343.305 66.408 C 343.055 66.501,342.985 68.758,343.233 68.758 C 343.496 68.758,343.791 69.638,343.791 70.422 C 343.791 71.641,343.322 72.088,341.973 72.153 C 340.267 72.234,340.181 73.004,341.879 72.994 C 343.521 72.985,343.940 72.533,344.415 70.261 C 344.536 69.680,344.967 69.112,345.286 69.112 C 345.765 69.112,345.852 68.747,345.658 67.560 L 345.463 66.372 344.495 66.350 C 343.962 66.337,343.427 66.364,343.305 66.408 M381.896 67.253 C 381.462 68.059,381.489 70.491,381.951 72.317 C 382.132 73.033,382.337 74.160,382.406 74.820 L 382.531 76.021 383.621 75.969 L 384.711 75.917 384.761 74.165 C 384.821 72.112,384.775 72.037,383.476 72.097 C 382.547 72.140,382.501 72.122,382.501 71.709 C 382.501 71.471,382.373 70.708,382.216 70.013 C 381.938 68.782,381.986 68.077,382.428 66.925 C 382.636 66.385,382.229 66.636,381.896 67.253 M158.925 67.785 C 158.144 69.695,157.991 71.473,158.522 72.464 C 159.037 73.423,159.260 73.318,158.951 72.264 C 158.720 71.476,158.711 71.153,158.895 70.178 C 159.252 68.277,159.142 68.405,160.418 68.405 L 161.555 68.405 161.555 67.639 L 161.555 66.873 160.421 66.886 L 159.287 66.900 158.925 67.785 M316.882 68.103 C 316.038 68.601,315.809 70.962,316.615 70.847 C 316.973 70.797,317.015 70.688,317.032 69.765 C 317.056 68.446,317.173 68.346,318.590 68.436 C 319.590 68.500,319.753 68.468,319.753 68.213 C 319.753 67.590,317.874 67.518,316.882 68.103 M266.380 68.852 C 266.384 68.946,266.490 69.461,266.616 69.996 C 267.000 71.621,266.601 72.508,265.512 72.453 C 264.072 72.382,263.894 72.517,263.918 73.675 C 263.929 74.228,263.974 74.544,264.018 74.378 C 264.081 74.139,264.342 74.066,265.279 74.025 C 266.875 73.954,267.715 72.229,267.134 70.213 C 266.929 69.500,266.363 68.480,266.380 68.852 M51.722 69.996 C 51.370 70.385,51.083 70.855,51.083 71.041 C 51.083 71.226,50.824 71.590,50.508 71.848 C 49.166 72.946,48.962 73.209,48.962 73.837 C 48.962 74.454,48.515 75.122,48.103 75.122 C 47.573 75.122,47.371 75.511,47.373 76.527 C 47.377 77.867,47.485 77.988,48.627 77.929 C 50.157 77.851,50.142 77.900,49.716 74.371 L 49.572 73.179 50.195 72.905 C 51.275 72.428,51.344 72.363,51.525 71.647 C 51.876 70.255,52.182 69.996,53.473 69.996 C 54.500 69.996,54.618 69.959,54.618 69.642 C 54.618 68.884,52.492 69.144,51.722 69.996 M310.774 70.468 L 309.662 70.923 309.714 72.006 L 309.766 73.089 310.517 73.143 L 311.268 73.198 311.268 72.045 L 311.268 70.893 312.019 70.690 C 312.726 70.500,314.194 70.563,314.921 70.814 C 315.099 70.876,314.971 70.717,314.636 70.461 C 313.804 69.824,312.341 69.827,310.774 70.468 M82.116 72.734 C 81.606 73.404,81.610 74.136,82.132 75.166 C 82.482 75.859,82.508 75.800,82.481 74.370 L 82.457 73.089 83.650 73.037 C 84.785 72.987,84.843 72.963,84.843 72.550 C 84.843 71.763,82.749 71.904,82.116 72.734 M305.028 72.477 C 303.895 72.902,303.632 73.134,303.840 73.523 C 304.079 73.969,305.902 74.557,306.833 74.488 C 307.931 74.407,308.088 74.314,308.073 73.757 C 308.065 73.487,308.020 73.360,307.973 73.476 C 307.696 74.156,304.728 74.044,304.728 73.354 C 304.728 72.720,306.436 72.582,307.801 73.105 C 308.013 73.187,308.062 73.142,307.985 72.940 C 307.883 72.677,307.275 72.422,306.319 72.242 C 306.076 72.197,305.495 72.303,305.028 72.477 M363.942 74.868 C 363.942 76.645,363.988 77.071,364.163 76.925 C 364.480 76.662,366.240 76.786,366.444 77.085 C 366.792 77.596,366.499 79.432,365.981 79.992 L 365.499 80.513 357.164 80.566 C 352.580 80.595,348.570 80.572,348.255 80.514 C 347.549 80.384,347.495 79.944,348.166 79.786 C 349.205 79.540,350.100 78.293,349.801 77.506 C 349.172 75.852,349.697 74.888,351.182 74.972 L 352.276 75.033 352.276 74.533 L 352.276 74.033 351.102 74.091 C 350.158 74.138,349.889 74.217,349.732 74.495 C 349.624 74.686,349.437 74.950,349.315 75.082 C 349.194 75.215,349.086 75.537,349.077 75.797 C 349.059 76.298,349.106 77.563,349.154 77.861 C 349.170 77.958,348.829 78.078,348.397 78.126 L 347.611 78.215 347.297 79.275 L 346.982 80.336 347.423 80.778 L 347.865 81.220 355.682 81.283 C 363.496 81.346,365.933 81.220,366.610 80.721 C 366.877 80.523,367.378 78.043,367.207 77.766 C 367.167 77.700,367.006 76.661,366.851 75.456 C 366.521 72.903,366.585 73.008,365.293 72.914 C 364.740 72.873,364.211 72.792,364.115 72.733 C 364.005 72.665,363.942 73.447,363.942 74.868 M206.002 73.707 C 206.490 75.345,206.520 75.795,206.192 76.523 L 205.868 77.243 204.760 77.243 C 204.040 77.243,203.622 77.165,203.564 77.022 C 203.440 76.715,203.429 78.129,203.551 78.585 C 203.742 79.297,205.747 79.187,206.143 78.444 C 207.065 76.714,207.095 74.816,206.219 73.707 L 205.870 73.266 206.002 73.707 M308.269 74.459 C 308.276 75.676,308.506 76.099,309.412 76.556 C 309.704 76.704,310.102 76.912,310.296 77.020 C 310.490 77.128,310.789 77.260,310.959 77.313 C 311.129 77.365,311.268 77.535,311.268 77.691 C 311.268 78.113,312.168 79.211,312.697 79.433 C 313.421 79.739,315.157 79.580,315.157 79.209 C 315.157 78.952,314.996 78.919,314.035 78.974 C 312.848 79.042,311.975 78.466,311.975 77.613 C 311.975 77.201,311.247 76.536,310.795 76.536 C 309.970 76.536,309.221 75.642,309.167 74.594 C 309.108 73.456,309.062 73.354,308.606 73.354 C 308.303 73.354,308.264 73.481,308.269 74.459 M340.869 73.663 C 341.122 74.318,341.178 75.604,340.969 75.994 C 340.672 76.550,338.652 76.488,338.455 75.917 C 338.378 75.693,338.346 75.823,338.367 76.270 L 338.400 76.977 339.549 77.081 C 341.218 77.232,341.582 76.863,341.582 75.023 C 341.582 74.034,341.514 73.652,341.317 73.527 C 340.909 73.269,340.736 73.322,340.869 73.663 M138.577 75.122 L 138.577 76.359 137.330 76.359 L 136.082 76.359 136.137 77.107 L 136.191 77.855 137.340 77.904 L 138.489 77.953 138.887 77.024 C 139.355 75.934,139.382 75.400,139.017 74.524 C 138.641 73.626,138.577 73.713,138.577 75.122 M284.724 74.887 C 283.859 75.116,283.669 76.737,284.401 77.640 C 284.850 78.194,284.921 78.022,284.733 76.835 C 284.511 75.436,284.433 75.475,287.483 75.475 C 291.319 75.475,291.252 75.453,291.324 76.725 C 291.376 77.643,291.343 77.769,291.030 77.836 C 290.835 77.878,291.153 77.900,291.735 77.886 L 292.794 77.861 292.932 76.897 C 293.190 75.092,292.350 74.778,287.318 74.799 C 286.054 74.805,284.887 74.844,284.724 74.887 M156.957 75.426 C 156.764 75.561,156.606 75.830,156.606 76.024 C 156.606 76.218,156.481 76.618,156.329 76.913 C 155.948 77.650,155.972 78.243,156.426 79.246 C 156.862 80.209,157.041 80.264,156.780 79.353 C 156.281 77.612,156.682 76.768,158.012 76.756 C 158.569 76.750,159.049 76.835,159.122 76.950 C 159.194 77.063,159.253 76.710,159.255 76.167 L 159.258 75.180 158.283 75.180 C 157.737 75.180,157.154 75.288,156.957 75.426 M224.224 75.862 C 223.575 76.960,223.567 78.845,224.207 79.758 C 224.422 80.065,224.439 79.982,224.354 79.044 C 224.189 77.224,224.278 77.091,225.637 77.125 L 226.794 77.154 226.742 76.270 L 226.690 75.387 225.628 75.335 C 224.594 75.285,224.557 75.299,224.224 75.862 M36.205 76.879 L 36.263 78.107 35.321 78.161 L 34.379 78.215 34.325 79.272 C 34.266 80.430,33.952 80.954,33.319 80.954 C 32.767 80.954,32.346 81.500,32.346 82.217 C 32.346 83.025,31.512 83.909,31.077 83.562 C 30.371 82.999,30.379 82.426,31.114 80.908 L 31.436 80.242 30.942 80.594 C 30.189 81.130,29.853 81.771,29.746 82.870 C 29.685 83.508,29.524 84.009,29.304 84.251 C 29.114 84.461,28.985 84.801,29.018 85.008 L 29.076 85.383 29.777 85.025 C 30.162 84.828,30.681 84.666,30.930 84.666 C 31.725 84.666,33.053 83.182,33.053 82.295 C 33.053 82.143,33.375 81.817,33.767 81.569 C 34.461 81.131,34.605 80.914,34.936 79.806 C 35.036 79.469,35.300 79.178,35.655 79.010 C 36.835 78.452,37.137 77.732,36.832 76.204 C 36.597 75.033,36.141 75.525,36.205 76.879 M71.107 76.902 L 71.144 78.215 69.907 78.235 C 68.026 78.267,68.049 78.896,69.934 78.973 C 71.607 79.042,72.049 78.574,71.759 77.043 C 71.450 75.416,71.062 75.332,71.107 76.902 M264.081 75.745 C 264.084 75.840,264.200 76.116,264.339 76.359 C 264.679 76.953,264.670 78.754,264.323 79.774 L 264.041 80.601 262.953 80.622 C 262.354 80.633,261.805 80.633,261.732 80.622 C 261.569 80.596,261.579 81.826,261.745 82.192 C 261.991 82.736,263.977 82.630,264.248 82.058 C 264.812 80.865,265.269 78.063,265.043 77.175 C 264.857 76.443,264.063 75.263,264.081 75.745 M114.581 76.888 L 114.200 77.948 114.566 80.291 C 114.767 81.579,114.962 82.737,114.998 82.864 C 115.046 83.028,115.397 83.084,116.222 83.057 L 117.378 83.019 117.328 81.324 L 117.278 79.629 116.186 79.689 L 115.095 79.748 114.971 78.920 C 114.902 78.465,114.899 77.583,114.962 76.960 C 115.106 75.562,115.061 75.554,114.581 76.888 M80.159 76.392 C 79.052 76.899,78.517 80.120,79.426 80.802 L 79.982 81.220 88.241 81.269 L 96.500 81.318 97.214 80.867 C 98.009 80.366,98.036 80.011,97.368 78.897 C 96.821 77.987,96.489 77.795,96.694 78.508 C 96.787 78.831,96.863 79.435,96.863 79.849 L 96.863 80.601 88.569 80.601 C 78.822 80.601,79.717 80.761,79.717 79.019 C 79.717 77.278,79.908 77.066,81.467 77.066 C 82.510 77.066,82.567 77.044,82.513 76.668 C 82.451 76.229,80.909 76.048,80.159 76.392 M10.538 78.126 C 10.988 78.729,11.160 80.144,10.969 81.668 C 10.866 82.486,10.782 84.204,10.782 85.487 C 10.782 88.500,10.842 88.378,9.349 88.378 L 8.131 88.378 8.131 89.306 C 8.133 90.885,8.363 95.371,8.432 95.163 C 8.492 94.985,9.416 94.989,10.288 95.171 C 10.647 95.247,10.716 94.825,10.876 91.560 C 10.936 90.345,11.097 88.873,11.234 88.290 C 11.385 87.652,11.489 86.209,11.497 84.666 C 11.504 83.257,11.578 81.706,11.660 81.220 C 11.822 80.270,11.266 78.584,10.627 78.085 C 10.383 77.895,10.370 77.901,10.538 78.126 M338.459 79.192 C 338.518 80.422,338.517 80.424,338.050 80.424 C 337.173 80.424,336.898 80.710,336.895 81.624 C 336.893 82.410,336.637 83.407,336.303 83.929 C 336.197 84.095,335.813 84.146,334.979 84.105 C 333.742 84.045,333.326 84.425,333.888 85.102 C 334.263 85.554,334.411 87.180,334.127 87.730 C 333.877 88.216,333.831 88.230,332.688 88.172 C 331.577 88.117,331.504 88.137,331.450 88.511 C 331.396 88.893,331.446 88.909,332.708 88.909 L 334.022 88.909 334.488 88.236 C 334.849 87.715,334.954 87.352,334.954 86.621 C 334.954 85.637,335.229 85.214,335.879 85.202 C 336.270 85.195,337.078 83.935,337.357 82.899 C 337.673 81.727,337.751 81.583,338.169 81.393 C 338.968 81.029,339.221 80.427,339.019 79.364 C 338.724 77.808,338.388 77.705,338.459 79.192 M282.593 78.790 C 281.390 80.162,281.179 84.077,282.276 84.664 C 282.595 84.835,282.599 84.818,282.363 84.363 C 281.906 83.482,281.880 82.538,282.276 81.264 L 282.648 80.071 283.698 80.071 C 284.836 80.071,285.203 79.671,284.784 78.889 C 284.535 78.423,282.977 78.353,282.593 78.790 M294.255 78.579 C 294.183 78.654,294.134 79.001,294.147 79.349 C 294.160 79.697,294.203 79.823,294.241 79.629 C 294.304 79.313,294.427 79.282,295.405 79.337 C 297.059 79.431,297.365 79.894,296.863 81.548 C 296.506 82.725,296.985 82.359,297.387 81.149 C 297.689 80.239,297.493 79.356,296.875 78.843 C 296.563 78.584,294.456 78.372,294.255 78.579 M66.496 80.460 C 66.154 80.801,66.238 82.286,66.637 82.939 C 67.626 84.562,66.935 86.080,65.206 86.080 C 64.016 86.080,63.964 86.098,64.018 86.478 C 64.122 87.213,66.167 87.159,66.841 86.404 C 67.363 85.819,67.424 85.657,67.590 84.424 C 67.696 83.641,68.093 83.120,68.644 83.041 C 69.069 82.981,69.139 81.692,68.771 80.724 C 68.570 80.195,66.948 80.007,66.496 80.460 M314.681 80.645 C 314.084 81.569,314.179 83.373,314.905 84.887 C 315.222 85.550,315.223 85.550,316.339 85.550 L 317.455 85.550 317.455 84.618 L 317.455 83.686 316.326 83.781 L 315.198 83.876 314.969 83.255 C 314.727 82.600,314.732 81.821,314.982 80.948 C 315.134 80.419,314.949 80.232,314.681 80.645 M136.339 80.855 C 136.802 82.062,136.839 82.639,136.517 83.657 L 136.191 84.690 135.088 84.634 C 133.852 84.571,133.804 84.614,133.805 85.786 L 133.805 86.522 135.042 86.522 C 135.940 86.522,136.279 86.459,136.279 86.293 C 136.279 86.166,136.396 85.837,136.539 85.560 C 137.258 84.171,137.353 81.800,136.731 80.793 C 136.555 80.508,136.226 80.560,136.339 80.855 M42.952 81.308 C 42.952 81.405,42.842 81.485,42.707 81.485 C 42.573 81.485,42.205 82.003,41.890 82.636 C 41.499 83.423,41.191 83.818,40.917 83.887 C 40.290 84.045,39.625 84.860,39.562 85.550 C 39.515 86.065,39.390 86.227,38.816 86.525 C 37.844 87.027,37.734 87.272,37.927 88.492 L 38.091 89.527 38.944 89.582 C 39.461 89.615,39.910 89.545,40.083 89.405 C 40.294 89.234,40.334 89.231,40.236 89.395 C 40.163 89.516,40.179 89.616,40.271 89.616 C 40.656 89.616,40.844 87.279,40.477 87.053 C 39.863 86.673,40.391 84.490,41.097 84.490 C 41.700 84.490,42.076 84.091,42.265 83.251 C 42.513 82.147,42.865 81.884,44.207 81.802 C 45.966 81.695,45.961 81.131,44.202 81.131 C 43.486 81.131,42.952 81.207,42.952 81.308 M203.626 82.996 C 203.627 83.088,203.733 83.562,203.863 84.048 C 204.081 84.868,203.973 85.812,203.624 86.137 C 203.418 86.329,201.522 86.383,201.341 86.202 C 201.203 86.063,201.149 86.304,201.149 87.061 L 201.148 88.113 202.424 88.025 C 203.882 87.924,203.929 87.875,204.368 85.992 C 204.594 85.022,204.586 84.856,204.283 84.048 C 203.959 83.187,203.621 82.646,203.626 82.996 M384.376 83.831 C 383.991 84.801,384.047 86.300,384.557 88.619 L 384.853 89.969 385.851 89.969 C 387.202 89.969,387.276 89.858,387.261 87.857 C 387.254 86.928,387.195 86.289,387.129 86.436 C 387.021 86.674,386.160 86.755,385.026 86.634 C 384.877 86.618,384.796 86.059,384.761 84.799 L 384.711 82.987 384.376 83.831 M155.322 83.749 C 154.150 83.846,153.282 86.442,153.850 88.151 C 154.260 89.385,154.740 89.812,154.382 88.625 C 153.900 87.023,154.291 85.492,155.231 85.304 C 156.087 85.133,156.746 85.179,156.843 85.418 C 156.892 85.539,156.938 85.230,156.946 84.731 C 156.961 83.719,156.808 83.626,155.322 83.749 M221.881 84.622 C 221.386 85.762,221.280 86.209,221.275 87.182 C 221.272 87.944,221.369 88.359,221.648 88.781 L 222.026 89.350 221.902 88.378 C 221.833 87.844,221.788 87.327,221.800 87.229 C 221.888 86.563,222.064 85.900,222.159 85.883 C 222.791 85.764,224.243 85.827,224.346 85.977 C 224.417 86.083,224.477 85.807,224.478 85.365 C 224.482 84.324,224.267 84.136,223.075 84.136 C 222.172 84.136,222.075 84.176,221.881 84.622 M261.869 85.373 C 262.524 87.852,262.138 88.887,260.568 88.859 L 259.390 88.837 259.390 89.701 L 259.390 90.565 260.539 90.519 C 261.915 90.465,261.809 90.560,262.388 88.869 C 262.920 87.315,262.882 86.696,262.190 85.616 C 261.862 85.104,261.781 85.043,261.869 85.373 M74.995 86.729 C 74.595 86.989,74.183 87.386,74.079 87.613 C 73.976 87.839,73.760 88.025,73.599 88.025 C 72.422 88.025,71.793 91.185,72.857 91.755 C 73.196 91.936,73.218 91.917,73.105 91.536 C 72.581 89.760,72.864 88.732,73.878 88.732 C 74.614 88.732,75.055 88.364,75.150 87.671 L 75.210 87.229 86.478 87.184 L 97.746 87.138 97.746 88.274 C 97.746 89.013,97.669 89.443,97.525 89.505 C 97.404 89.558,97.661 89.584,98.097 89.564 L 98.890 89.527 99.142 88.431 C 99.639 86.274,99.535 86.257,86.125 86.257 L 75.723 86.257 74.995 86.729 M344.141 86.497 C 342.656 86.805,342.340 87.099,342.481 88.045 C 342.650 89.185,342.979 89.618,343.663 89.603 C 344.015 89.595,344.131 89.545,343.967 89.471 C 343.728 89.363,343.648 88.517,343.768 87.362 C 343.787 87.188,346.219 87.141,355.281 87.141 L 366.770 87.141 366.770 87.546 C 366.770 87.768,366.650 88.409,366.505 88.968 C 366.344 89.586,366.250 90.661,366.266 91.701 C 366.281 92.644,366.325 93.203,366.365 92.943 C 366.435 92.485,366.468 92.473,367.495 92.524 C 368.848 92.591,368.805 92.522,368.786 94.589 C 368.778 95.576,368.835 96.249,368.916 96.120 C 369.157 95.741,369.618 94.033,369.522 93.878 C 369.473 93.798,369.358 92.946,369.267 91.984 C 369.096 90.168,368.818 89.262,368.433 89.262 C 367.992 89.262,367.654 88.705,367.647 87.968 C 367.642 87.330,367.554 87.163,367.000 86.743 L 366.359 86.257 355.738 86.276 C 348.543 86.289,344.802 86.361,344.141 86.497 M279.823 88.017 C 279.318 89.289,279.309 89.862,279.778 90.884 L 280.129 91.648 280.144 90.190 L 280.159 88.732 281.289 88.732 C 282.528 88.732,282.634 88.643,282.634 87.595 L 282.634 87.018 281.441 86.983 L 280.247 86.948 279.823 88.017 M193.460 87.281 C 194.117 87.439,194.328 89.152,193.812 90.148 C 193.327 91.087,193.281 92.276,193.694 93.210 C 194.170 94.286,194.241 94.250,194.127 92.990 C 193.964 91.189,194.055 91.055,195.410 91.089 L 196.565 91.118 196.532 89.404 C 196.513 88.462,196.432 87.587,196.351 87.460 C 196.237 87.279,196.204 87.286,196.200 87.494 C 196.197 87.651,196.141 87.687,196.064 87.583 C 195.894 87.350,195.647 87.303,194.170 87.222 C 193.439 87.181,193.147 87.206,193.460 87.281 M64.256 88.272 C 64.322 88.796,64.320 89.480,64.251 89.791 L 64.127 90.357 62.907 90.281 C 61.726 90.207,61.688 90.217,61.688 90.617 C 61.688 90.999,61.760 91.030,62.646 91.030 C 63.172 91.030,63.709 91.067,63.839 91.112 C 64.611 91.383,65.351 89.064,64.846 87.954 C 64.438 87.060,64.126 87.228,64.256 88.272 M185.152 89.792 C 185.213 89.890,185.187 89.969,185.096 89.969 C 185.005 89.969,184.920 90.554,184.906 91.269 L 184.881 92.569 186.077 92.684 C 187.841 92.853,188.152 92.311,187.509 90.190 C 187.336 89.619,187.328 89.616,186.189 89.616 C 185.470 89.616,185.084 89.681,185.152 89.792 M331.659 90.649 C 331.912 92.176,331.838 92.267,330.351 92.267 C 329.151 92.267,329.099 92.284,329.153 92.665 C 329.204 93.024,329.320 93.067,330.373 93.117 C 332.265 93.205,332.992 91.706,331.904 89.963 C 331.543 89.386,331.480 89.564,331.659 90.649 M133.821 89.881 C 133.820 89.978,133.922 90.494,134.046 91.028 C 134.458 92.794,133.934 93.538,132.435 93.317 C 131.948 93.246,131.674 93.275,131.657 93.400 C 131.642 93.506,131.575 93.235,131.507 92.797 C 131.393 92.067,131.382 92.104,131.369 93.239 C 131.350 94.935,131.395 94.998,132.656 95.050 C 134.172 95.111,135.102 93.310,134.601 91.282 C 134.432 90.598,133.825 89.507,133.821 89.881 M116.864 90.735 C 116.349 91.889,116.401 92.615,117.205 95.493 L 117.440 96.332 118.457 96.332 C 119.283 96.332,119.510 96.268,119.658 95.990 C 119.863 95.607,119.909 93.310,119.706 93.603 C 119.634 93.705,119.096 93.806,118.510 93.827 L 117.444 93.864 117.270 92.917 C 117.175 92.397,117.158 91.620,117.233 91.191 C 117.443 89.987,117.285 89.792,116.864 90.735 M340.979 90.300 C 339.755 90.643,339.232 93.487,340.290 94.052 C 340.629 94.234,340.651 94.215,340.538 93.834 C 339.909 91.706,340.258 90.983,341.875 91.060 C 343.012 91.115,343.085 91.095,343.085 90.739 C 343.084 90.172,342.140 89.975,340.979 90.300 M153.377 92.090 C 152.127 92.198,151.967 92.436,151.490 94.912 C 151.172 96.563,151.173 96.616,151.506 97.509 C 152.006 98.846,152.450 99.129,151.989 97.816 C 151.603 96.717,151.631 96.188,152.156 94.690 L 152.452 93.843 153.425 93.894 C 153.959 93.923,154.455 94.026,154.527 94.123 C 154.689 94.344,154.680 92.628,154.517 92.267 C 154.423 92.060,154.174 92.021,153.377 92.090 M61.688 93.229 C 61.688 94.355,61.675 94.388,61.235 94.388 C 60.313 94.388,60.097 94.659,60.097 95.820 C 60.097 97.615,59.658 98.127,58.169 98.068 C 57.183 98.029,57.104 97.994,57.039 97.577 C 56.995 97.295,56.959 97.399,56.942 97.857 C 56.928 98.259,57.028 98.855,57.164 99.183 C 57.844 100.811,57.508 101.812,56.282 101.812 C 55.405 101.812,55.148 102.105,55.148 103.104 C 55.148 103.983,54.889 104.122,53.640 103.914 C 51.585 103.572,51.726 103.501,51.773 104.861 C 51.805 105.791,51.759 106.054,51.564 106.054 C 51.426 106.054,51.061 106.180,50.752 106.334 C 50.127 106.646,49.062 106.553,48.198 106.111 C 47.716 105.864,47.706 105.867,47.900 106.228 C 48.546 107.437,52.627 107.026,52.818 105.734 C 52.893 105.225,53.667 104.640,54.264 104.640 C 54.904 104.640,55.608 104.064,55.876 103.322 C 56.031 102.893,56.290 102.633,56.780 102.412 C 57.661 102.014,58.077 101.395,58.132 100.398 C 58.177 99.585,58.488 99.160,59.040 99.160 C 59.350 99.160,60.097 98.457,60.097 98.166 C 60.097 98.069,60.258 97.656,60.455 97.248 C 60.652 96.841,60.862 96.263,60.922 95.964 C 60.987 95.640,61.181 95.363,61.404 95.277 C 62.370 94.903,62.631 94.330,62.321 93.263 C 61.914 91.864,61.688 91.851,61.688 93.229 M70.560 92.703 C 69.565 93.753,69.505 96.509,70.478 96.509 C 70.838 96.509,70.884 96.462,70.718 96.263 C 70.348 95.816,70.278 94.332,70.598 93.713 C 70.898 93.132,71.001 93.099,72.426 93.113 C 73.104 93.119,73.177 93.078,73.177 92.693 C 73.177 92.048,71.175 92.055,70.560 92.703 M201.413 93.315 C 201.600 94.930,201.496 95.095,200.289 95.095 C 199.731 95.095,199.180 95.000,199.063 94.883 C 198.822 94.642,198.749 96.451,198.986 96.774 C 199.307 97.210,201.295 97.012,201.478 96.526 C 202.185 94.641,202.206 94.447,201.829 93.329 C 201.376 91.988,201.258 91.984,201.413 93.315 M33.451 92.836 C 33.232 92.942,33.053 93.125,33.053 93.244 C 33.053 93.363,32.934 93.560,32.788 93.682 C 32.641 93.803,32.457 94.151,32.379 94.454 C 32.300 94.758,32.059 95.095,31.843 95.203 C 31.130 95.559,30.578 96.210,30.386 96.922 C 30.197 97.623,29.862 98.100,29.558 98.100 C 29.105 98.100,28.458 98.934,28.455 99.520 C 28.451 100.726,28.319 100.911,27.378 101.036 C 26.423 101.162,26.362 101.315,26.627 102.916 L 26.736 103.579 27.763 103.579 C 28.328 103.579,28.839 103.501,28.898 103.405 C 28.962 103.302,28.874 103.272,28.688 103.331 C 28.386 103.426,28.385 103.418,28.679 103.177 C 28.900 102.994,28.988 102.664,28.988 102.013 L 28.988 101.105 29.916 101.084 C 30.426 101.073,30.960 101.053,31.103 101.040 C 31.449 101.008,31.580 98.989,31.249 98.784 C 31.108 98.697,31.024 98.242,31.023 97.555 C 31.021 96.396,31.035 96.375,32.103 95.981 C 32.706 95.759,33.053 95.181,33.053 94.400 C 33.053 93.674,33.681 93.327,34.992 93.327 C 35.940 93.327,36.058 93.288,36.058 92.974 C 36.058 92.566,34.213 92.469,33.451 92.836 M219.376 93.896 C 218.764 95.252,218.668 97.268,219.177 98.076 C 219.624 98.786,219.827 98.694,219.552 97.906 C 219.299 97.180,219.303 96.652,219.572 95.498 L 219.789 94.565 220.908 94.565 L 222.027 94.565 221.972 93.814 L 221.918 93.062 220.857 93.012 L 219.797 92.962 219.376 93.896 M326.939 94.358 C 326.786 94.641,326.813 96.686,326.970 96.686 C 327.536 96.686,327.690 98.813,327.171 99.472 C 326.779 99.970,324.776 100.090,324.485 99.632 C 324.413 99.519,324.362 99.823,324.371 100.309 C 324.381 100.795,324.424 101.065,324.465 100.908 C 324.528 100.674,324.740 100.635,325.638 100.692 C 326.990 100.778,328.060 99.872,328.060 98.642 C 328.060 97.964,328.455 97.212,328.866 97.109 C 329.524 96.944,329.607 96.688,329.400 95.449 L 329.209 94.300 328.106 94.270 C 327.499 94.254,326.974 94.294,326.939 94.358 M259.531 95.436 C 259.827 97.274,259.253 97.748,257.137 97.414 C 256.962 97.386,256.964 98.938,257.138 99.046 C 257.212 99.092,257.763 99.173,258.362 99.226 L 259.451 99.323 259.895 98.005 C 260.360 96.621,260.351 96.427,259.759 95.051 C 259.371 94.150,259.334 94.212,259.531 95.436 M386.687 94.858 C 386.006 96.182,386.144 98.689,386.998 100.489 C 387.334 101.198,389.222 101.455,389.464 100.825 C 389.617 100.426,389.592 98.860,389.436 99.072 C 389.365 99.169,388.854 99.249,388.302 99.249 L 387.298 99.249 386.932 98.011 C 386.493 96.529,386.488 96.398,386.844 95.350 C 387.163 94.410,387.070 94.115,386.687 94.858 M337.910 95.307 C 337.120 96.525,337.288 98.807,338.167 98.807 C 338.270 98.807,338.296 98.673,338.226 98.498 C 338.002 97.937,337.898 96.156,338.090 96.156 C 338.189 96.156,338.312 95.996,338.363 95.801 C 338.418 95.592,338.589 95.459,338.782 95.476 C 340.067 95.589,340.610 95.450,340.610 95.007 C 340.610 94.124,338.526 94.356,337.910 95.307 M277.781 95.493 C 277.743 95.614,277.547 96.174,277.345 96.737 C 276.863 98.077,276.869 99.347,277.362 100.333 C 277.836 101.282,277.878 101.253,277.661 100.132 C 277.233 97.925,277.733 96.863,279.200 96.863 L 280.159 96.863 280.159 96.067 L 280.159 95.272 279.005 95.272 C 278.236 95.272,277.827 95.346,277.781 95.493 M98.829 98.365 C 98.831 99.629,98.892 100.509,98.966 100.321 C 99.047 100.112,99.145 100.053,99.217 100.170 C 99.282 100.274,99.697 100.339,100.141 100.312 C 101.367 100.240,101.664 100.739,101.345 102.335 C 101.232 102.898,101.225 102.902,100.286 102.843 C 99.574 102.799,99.311 102.849,99.223 103.049 C 99.139 103.237,99.068 103.160,98.977 102.784 C 98.850 102.260,98.848 102.262,98.828 102.916 C 98.813 103.375,98.883 103.579,99.053 103.579 C 99.392 103.579,99.514 103.975,99.514 105.075 C 99.514 106.393,99.283 106.547,97.829 106.199 C 96.682 105.924,96.493 106.035,97.360 106.473 C 98.733 107.168,100.060 106.817,100.283 105.699 C 100.350 105.365,100.671 104.879,101.060 104.523 C 102.085 103.586,102.387 100.771,101.621 99.299 C 101.534 99.132,101.411 98.555,101.348 98.017 L 101.233 97.039 100.572 97.039 C 100.185 97.039,99.815 97.155,99.679 97.318 C 99.477 97.562,99.409 97.501,99.137 96.832 L 98.827 96.067 98.829 98.365 M180.513 96.637 C 180.370 96.688,180.292 97.084,180.292 97.761 L 180.292 98.807 179.408 98.807 C 178.922 98.807,178.524 98.884,178.524 98.978 C 178.524 99.072,178.405 99.104,178.259 99.048 C 178.040 98.964,177.994 99.147,177.994 100.105 L 177.994 101.265 178.657 101.449 C 180.122 101.856,180.822 101.619,180.822 100.716 C 180.822 100.041,181.391 99.514,182.120 99.514 C 183.194 99.514,183.844 97.243,182.932 96.679 C 182.708 96.540,180.875 96.509,180.513 96.637 M68.454 96.907 C 67.558 98.067,67.396 99.282,67.983 100.431 C 68.319 101.089,68.632 101.260,68.404 100.661 C 67.728 98.883,68.299 97.689,69.785 97.773 L 70.880 97.835 70.880 97.260 L 70.879 96.686 69.752 96.686 C 69.059 96.686,68.559 96.771,68.454 96.907 M131.781 97.299 C 132.122 98.114,132.106 99.764,131.748 100.701 L 131.459 101.457 130.455 101.400 C 129.903 101.369,129.357 101.285,129.242 101.213 C 129.094 101.122,129.032 101.286,129.032 101.771 L 129.032 102.458 130.314 102.444 L 131.595 102.430 131.932 101.740 C 132.721 100.124,132.799 98.515,132.149 97.260 C 131.751 96.493,131.457 96.523,131.781 97.299 M192.355 97.890 C 192.039 97.921,191.781 98.045,191.781 98.166 C 191.781 98.288,191.611 98.739,191.403 99.169 C 190.860 100.293,190.849 102.044,191.380 102.874 C 191.837 103.588,191.848 103.557,191.583 102.321 C 191.431 101.611,191.438 101.180,191.612 100.453 L 191.839 99.507 192.915 99.545 C 193.506 99.565,194.049 99.666,194.120 99.769 C 194.192 99.872,194.251 99.633,194.253 99.238 C 194.257 98.093,193.778 97.753,192.355 97.890 M119.246 99.366 C 118.835 99.996,118.622 101.197,118.789 101.944 C 118.871 102.309,118.986 102.837,119.045 103.118 C 119.105 103.400,119.507 103.973,119.939 104.393 C 120.432 104.872,120.725 105.313,120.725 105.575 C 120.725 106.654,122.261 107.164,123.532 106.506 C 124.321 106.098,124.099 105.954,123.108 106.232 C 121.862 106.580,121.432 106.281,121.432 105.066 C 121.432 103.975,121.554 103.579,121.893 103.579 C 122.028 103.579,122.138 103.440,122.136 103.270 C 122.135 103.095,122.077 103.038,122.003 103.137 C 121.932 103.235,121.435 103.334,120.899 103.359 L 119.925 103.403 119.600 102.653 C 119.128 101.565,119.079 100.951,119.382 99.964 C 119.687 98.971,119.640 98.762,119.246 99.366 M152.047 99.205 C 151.496 99.869,151.149 101.226,151.404 101.719 C 151.543 101.986,151.660 102.296,151.663 102.406 C 151.686 103.252,154.512 103.569,154.630 102.740 C 154.684 102.362,154.628 102.342,153.538 102.342 C 151.773 102.342,151.397 101.771,151.987 99.983 C 152.335 98.928,152.341 98.851,152.047 99.205 M199.098 99.249 C 199.346 100.261,199.391 101.296,199.214 101.953 L 199.016 102.687 197.917 102.647 C 197.313 102.625,196.760 102.528,196.689 102.430 C 196.617 102.333,196.557 102.552,196.556 102.916 L 196.553 103.579 195.625 103.600 C 195.115 103.612,194.641 103.613,194.572 103.603 C 194.393 103.576,194.218 104.647,194.286 105.359 C 194.343 105.958,194.357 105.967,195.387 106.095 C 195.960 106.166,196.467 106.262,196.512 106.308 C 196.750 106.545,197.084 105.806,197.084 105.041 C 197.084 103.984,197.293 103.756,198.265 103.756 C 199.705 103.756,200.452 101.162,199.460 99.602 C 199.213 99.213,199.050 99.054,199.098 99.249 M335.668 100.369 C 334.958 102.224,335.281 104.158,336.392 104.704 C 336.622 104.817,336.948 105.186,337.117 105.524 C 337.751 106.790,338.415 106.995,339.802 106.353 L 340.673 105.950 339.404 106.022 L 338.135 106.094 338.113 105.455 C 338.101 105.104,338.071 104.737,338.047 104.640 C 338.023 104.543,337.993 104.304,337.981 104.110 C 337.965 103.862,337.833 103.756,337.539 103.756 C 337.308 103.756,336.870 103.706,336.567 103.646 L 336.014 103.535 336.014 102.320 L 336.014 101.105 336.677 101.080 C 337.042 101.066,337.559 101.066,337.826 101.080 C 338.288 101.105,338.312 101.067,338.312 100.310 C 338.312 99.437,338.370 99.472,336.861 99.442 L 336.029 99.426 335.668 100.369 M175.608 101.229 L 176.138 101.297 176.049 102.482 L 175.961 103.668 174.768 103.629 C 173.429 103.586,173.351 103.631,174.098 104.018 C 175.739 104.866,177.022 104.199,177.022 102.498 C 177.022 101.193,176.944 101.101,175.873 101.136 C 175.310 101.154,175.232 101.181,175.608 101.229 M317.214 102.015 C 316.660 103.730,316.962 104.288,318.441 104.284 C 319.646 104.280,319.711 104.203,319.732 102.750 C 319.754 101.292,319.788 101.334,318.487 101.211 L 317.504 101.118 317.214 102.015 M257.181 102.740 L 257.181 103.915 256.164 103.968 L 255.148 104.021 255.094 105.056 L 255.041 106.092 253.699 106.024 L 252.358 105.956 253.223 106.356 C 254.601 106.994,255.444 106.769,255.678 105.702 C 255.798 105.157,256.509 104.463,256.948 104.463 C 257.627 104.463,258.054 103.599,257.797 102.745 C 257.396 101.413,257.181 101.411,257.181 102.740 M68.484 104.754 C 68.393 105.602,68.415 105.969,68.560 106.017 C 68.673 106.055,68.866 106.187,68.990 106.311 C 69.716 107.037,71.450 107.096,72.618 106.436 C 73.284 106.058,72.919 105.994,71.947 106.317 C 71.092 106.601,71.008 106.599,70.263 106.291 L 69.479 105.967 69.428 104.817 C 69.349 103.040,68.672 102.995,68.484 104.754 M127.972 104.776 C 127.972 106.383,127.368 106.823,125.855 106.320 C 124.913 106.008,124.602 106.031,125.026 106.383 C 125.917 107.123,127.381 107.080,128.386 106.286 C 129.078 105.739,129.078 103.579,128.386 103.579 C 127.992 103.579,127.972 103.639,127.972 104.776 M157.211 104.737 C 157.244 105.373,157.300 105.914,157.336 105.939 C 158.524 106.757,166.274 107.114,167.838 106.422 C 168.296 106.220,168.888 106.054,169.154 106.054 C 169.577 106.054,169.631 105.993,169.582 105.568 C 169.551 105.300,169.507 104.744,169.485 104.331 L 169.443 103.579 168.519 103.579 C 167.132 103.579,167.115 103.596,167.183 104.907 L 167.242 106.054 163.588 106.054 L 159.934 106.054 159.994 104.914 C 160.062 103.592,160.055 103.586,158.248 103.582 L 157.151 103.579 157.211 104.737 M218.654 103.921 C 218.420 104.359,218.415 106.054,218.648 106.054 C 218.745 106.054,218.825 106.167,218.825 106.306 C 218.825 107.088,220.994 107.136,221.741 106.370 L 222.095 106.009 221.653 106.132 C 221.410 106.200,220.918 106.338,220.561 106.438 C 219.191 106.823,218.654 105.657,219.469 104.065 C 219.780 103.458,218.978 103.316,218.654 103.921 M277.440 104.014 C 276.193 105.918,277.653 107.507,279.629 106.398 C 280.221 106.066,279.681 105.961,278.614 106.201 C 277.659 106.415,277.568 106.283,277.695 104.865 C 277.822 103.452,277.818 103.438,277.440 104.014 M366.478 103.839 C 366.533 103.982,366.515 104.137,366.437 104.185 C 366.067 104.414,366.231 105.869,366.636 105.946 C 366.855 105.988,367.402 106.095,367.852 106.185 C 368.673 106.349,369.235 106.177,369.147 105.789 C 369.125 105.692,369.013 105.155,368.898 104.596 L 368.689 103.579 367.534 103.579 C 366.591 103.579,366.397 103.627,366.478 103.839 M389.488 103.916 C 388.766 106.190,389.219 106.617,391.648 105.949 C 391.877 105.886,391.949 104.690,391.765 104.006 C 391.618 103.457,389.658 103.381,389.488 103.916 M23.957 104.529 C 23.726 104.760,23.334 105.351,23.085 105.842 C 22.836 106.333,22.476 106.784,22.286 106.845 C 21.884 106.972,20.857 108.446,20.857 108.895 C 20.857 109.076,20.641 109.276,20.327 109.386 C 19.596 109.641,18.913 110.424,18.913 111.009 C 18.913 111.648,18.411 112.244,17.669 112.487 C 17.206 112.638,17.045 112.806,16.959 113.228 C 16.762 114.200,16.817 114.185,13.409 114.185 L 10.225 114.185 9.736 113.696 C 9.466 113.426,9.072 112.678,8.852 112.019 C 8.310 110.390,8.137 110.393,8.421 112.025 C 8.895 114.753,9.086 114.837,15.024 114.917 L 19.708 114.980 19.708 112.594 L 19.708 110.208 20.556 110.153 C 21.498 110.093,21.741 109.778,21.741 108.616 C 21.741 107.984,21.872 107.840,22.699 107.556 C 23.091 107.422,23.284 107.186,23.495 106.584 C 24.041 105.026,24.286 104.817,25.562 104.817 C 26.572 104.817,26.690 104.780,26.690 104.463 C 26.690 103.892,24.542 103.944,23.957 104.529 M296.597 106.254 C 296.597 108.175,296.592 108.168,298.153 108.173 C 298.846 108.175,298.934 108.124,299.145 107.601 C 299.919 105.686,299.494 104.770,297.770 104.640 L 296.597 104.551 296.597 106.254 M75.092 108.171 C 74.978 111.819,74.873 111.894,69.888 111.874 C 66.340 111.860,65.402 111.973,64.516 112.521 C 64.218 112.706,64.187 112.760,64.421 112.686 C 64.611 112.626,66.790 112.582,69.261 112.588 L 73.756 112.599 74.394 112.125 C 74.746 111.864,75.195 111.457,75.393 111.221 C 75.717 110.834,75.864 110.797,76.862 110.853 L 77.971 110.915 77.935 108.617 C 77.889 105.692,77.990 105.877,76.449 105.877 L 75.163 105.877 75.092 108.171 M89.733 105.995 C 89.669 106.060,89.616 106.769,89.616 107.571 L 89.616 109.029 90.803 109.088 C 92.523 109.174,93.015 108.715,92.939 107.098 L 92.886 105.966 91.765 105.912 C 90.886 105.871,90.672 105.909,90.775 106.089 C 90.879 106.274,90.858 106.276,90.667 106.098 C 90.409 105.859,89.923 105.805,89.733 105.995 M228.092 106.074 C 228.031 106.172,228.039 107.242,228.108 108.451 C 228.322 112.157,228.851 111.900,221.052 111.882 C 214.920 111.868,214.613 111.892,213.550 112.449 C 212.973 112.752,212.957 112.777,213.403 112.685 C 213.677 112.627,217.152 112.585,221.124 112.590 C 226.763 112.597,228.377 112.550,228.490 112.376 C 228.569 112.253,228.723 111.454,228.831 110.601 C 229.064 108.758,228.977 108.872,230.198 108.794 C 230.997 108.743,231.192 108.786,231.260 109.027 C 231.307 109.191,231.331 108.568,231.315 107.645 L 231.286 105.966 229.744 105.931 C 228.860 105.911,228.155 105.973,228.092 106.074 M248.473 107.424 C 248.316 109.970,247.932 110.341,245.647 110.149 C 245.448 110.133,245.338 110.248,245.338 110.475 C 245.338 110.791,245.458 110.826,246.545 110.826 C 247.638 110.826,247.774 110.866,247.980 111.250 C 248.605 112.418,248.939 112.500,253.292 112.562 C 255.783 112.597,257.656 112.543,258.305 112.416 C 259.092 112.263,259.553 112.265,260.215 112.424 C 261.279 112.679,261.484 112.552,260.688 112.130 C 260.162 111.852,259.515 111.816,254.775 111.808 L 249.452 111.798 248.880 111.187 L 248.309 110.575 248.701 109.773 C 249.281 108.590,249.434 105.877,248.922 105.877 C 248.603 105.877,248.559 106.027,248.473 107.424 M285.768 107.238 C 285.834 108.331,285.949 108.771,286.320 109.359 C 286.933 110.334,287.294 110.493,286.933 109.631 C 286.785 109.277,286.613 108.307,286.549 107.476 C 286.445 106.114,286.397 105.960,286.059 105.912 C 285.698 105.861,285.687 105.911,285.768 107.238 M343.968 107.216 C 343.968 108.331,344.043 108.682,344.418 109.322 C 344.985 110.290,345.590 110.863,345.167 110.031 C 344.865 109.438,344.498 107.516,344.498 106.526 C 344.498 106.067,344.421 105.877,344.233 105.877 C 344.021 105.877,343.968 106.144,343.968 107.216 M45.578 108.658 C 45.677 108.844,45.851 109.527,45.964 110.177 C 46.133 111.148,46.280 111.468,46.791 111.979 L 47.412 112.600 51.697 112.587 C 54.054 112.580,56.212 112.623,56.493 112.681 C 56.774 112.740,56.535 112.579,55.963 112.324 C 54.945 111.871,54.840 111.861,51.352 111.880 C 46.833 111.904,46.946 111.957,46.317 109.502 C 46.123 108.744,45.953 108.424,45.721 108.381 C 45.452 108.330,45.428 108.377,45.578 108.658 M359.422 108.860 C 359.477 109.188,359.523 109.818,359.523 110.260 C 359.523 110.984,359.603 111.141,360.335 111.842 L 361.147 112.620 365.682 112.519 C 368.176 112.463,370.535 112.398,370.924 112.375 C 371.312 112.352,371.899 112.401,372.227 112.483 C 372.979 112.671,372.836 112.342,372.016 112.000 C 371.577 111.817,370.371 111.784,366.493 111.850 L 361.533 111.934 360.911 111.388 C 360.441 110.975,360.238 110.610,360.076 109.886 C 359.820 108.744,359.251 107.851,359.422 108.860 M298.895 109.236 C 298.895 109.555,299.013 109.589,300.133 109.589 C 300.813 109.589,301.370 109.656,301.370 109.737 C 301.370 109.819,301.569 109.976,301.812 110.087 C 302.222 110.274,302.254 110.377,302.254 111.530 C 302.254 113.267,302.844 113.396,303.036 111.701 C 303.169 110.523,302.802 109.846,301.665 109.177 C 300.887 108.719,298.895 108.761,298.895 109.236 M392.841 111.743 C 392.258 111.835,389.593 111.875,386.920 111.833 C 382.377 111.762,382.015 111.779,381.379 112.099 C 380.491 112.547,380.666 112.688,381.778 112.421 C 382.439 112.262,382.893 112.257,383.564 112.401 C 385.024 112.714,392.393 112.651,393.693 112.314 C 394.286 112.160,395.153 112.061,395.619 112.093 C 396.329 112.143,396.465 112.102,396.465 111.843 C 396.465 111.485,394.777 111.439,392.841 111.743 M89.649 112.120 L 89.704 112.506 95.625 112.536 C 98.882 112.553,101.984 112.608,102.519 112.658 L 103.491 112.749 102.598 112.336 C 101.732 111.935,101.525 111.920,95.650 111.829 L 89.594 111.735 89.649 112.120 M114.069 112.213 C 112.913 112.676,112.613 112.879,113.344 112.704 C 113.938 112.561,132.553 112.547,133.231 112.689 C 133.511 112.747,133.319 112.597,132.777 112.335 L 131.839 111.880 123.471 111.839 L 115.103 111.798 114.069 112.213 M155.848 112.181 L 155.104 112.563 177.769 112.582 C 190.235 112.593,200.576 112.641,200.748 112.689 C 200.920 112.737,200.658 112.577,200.167 112.335 L 199.273 111.894 177.932 111.846 L 156.592 111.798 155.848 112.181 M272.239 112.183 C 271.345 112.545,270.655 112.972,271.400 112.703 C 271.589 112.635,274.291 112.583,277.405 112.589 C 284.782 112.602,287.229 112.472,287.229 112.066 C 287.229 111.543,273.559 111.650,272.239 112.183 M305.435 111.843 C 303.715 112.089,303.166 112.729,304.795 112.590 C 306.616 112.434,306.849 112.589,306.849 113.948 L 306.849 115.091 307.424 115.036 C 307.998 114.980,307.998 114.979,308.051 113.884 L 308.103 112.789 307.078 112.312 C 305.822 111.728,305.964 111.768,305.435 111.843 M322.316 111.900 C 321.927 111.984,321.131 112.204,320.548 112.391 L 319.487 112.731 319.487 113.855 L 319.487 114.980 320.371 114.980 L 321.255 114.980 321.255 113.951 C 321.255 112.733,321.253 112.734,323.229 112.427 C 324.353 112.253,324.812 112.249,325.307 112.413 C 326.268 112.730,326.479 112.523,325.637 112.092 C 324.845 111.686,323.641 111.616,322.316 111.900 M332.483 112.126 C 331.459 112.665,331.505 112.744,332.685 112.471 C 333.566 112.266,334.008 112.252,334.762 112.403 C 336.882 112.826,345.382 112.556,345.382 112.065 C 345.382 111.587,333.399 111.644,332.483 112.126 M18.162 131.460 C 18.575 131.497,19.251 131.497,19.664 131.460 C 20.077 131.422,19.739 131.392,18.913 131.392 C 18.087 131.392,17.749 131.422,18.162 131.460 M266.505 131.460 C 267.015 131.496,267.850 131.496,268.361 131.460 C 268.871 131.425,268.453 131.395,267.433 131.395 C 266.412 131.395,265.994 131.425,266.505 131.460 M11.489 134.968 C 11.489 136.609,10.175 137.200,8.398 136.357 C 8.032 136.183,7.467 136.101,6.869 136.136 L 5.921 136.191 5.871 137.214 C 5.834 137.950,5.896 138.312,6.092 138.508 C 6.280 138.696,6.363 139.130,6.363 139.927 C 6.363 141.627,6.248 141.759,4.754 141.759 L 3.512 141.759 3.568 142.245 C 3.622 142.714,3.665 142.733,4.792 142.788 L 5.960 142.845 6.363 142.169 C 6.585 141.798,6.855 141.056,6.963 140.521 C 7.149 139.598,7.201 139.529,8.005 139.145 C 8.493 138.912,8.917 138.568,9.007 138.333 C 9.397 137.305,10.523 136.992,11.146 137.738 C 11.716 138.422,11.584 139.047,10.683 139.922 C 10.148 140.442,9.907 140.809,9.968 141.011 C 10.018 141.179,10.109 141.555,10.172 141.847 C 10.430 143.058,10.393 143.024,11.372 142.979 C 12.704 142.917,12.726 142.898,12.726 141.828 C 12.726 141.111,12.639 140.788,12.373 140.521 C 11.484 139.632,12.064 137.308,13.255 136.987 C 14.431 136.670,14.465 136.301,13.464 134.688 C 13.022 133.975,12.894 133.887,12.230 133.839 L 11.489 133.784 11.489 134.968 M22.050 134.019 C 22.002 134.144,21.948 135.117,21.930 136.180 C 21.912 137.244,21.857 138.179,21.809 138.257 C 21.760 138.336,21.804 138.400,21.907 138.400 C 22.016 138.400,22.095 138.804,22.095 139.366 C 22.095 140.494,22.242 140.622,23.615 140.682 L 24.517 140.722 24.738 139.870 C 25.152 138.273,25.216 138.135,25.644 137.917 C 26.623 137.417,27.144 137.621,27.807 138.765 C 28.611 140.149,28.993 140.404,30.082 140.282 C 30.599 140.224,31.120 140.175,31.242 140.172 C 31.363 140.170,31.463 140.009,31.463 139.814 C 31.463 139.495,31.345 139.461,30.257 139.461 C 28.971 139.461,28.281 139.037,28.281 138.246 C 28.281 137.610,27.635 137.039,26.809 136.946 C 25.668 136.817,25.305 136.369,25.241 135.006 L 25.188 133.893 23.663 133.842 C 22.544 133.805,22.114 133.852,22.050 134.019 M132.903 133.937 C 132.893 134.010,132.874 135.044,132.859 136.235 L 132.833 138.400 133.294 138.400 C 133.828 138.400,133.977 137.698,133.980 135.175 L 133.981 133.805 133.451 133.805 C 133.160 133.805,132.913 133.864,132.903 133.937 M139.677 134.976 C 139.681 135.896,139.784 136.342,140.155 137.053 L 140.629 137.958 141.591 137.972 C 142.844 137.990,142.996 137.925,142.996 137.365 C 142.997 136.904,142.983 136.899,141.902 136.960 C 140.503 137.038,140.345 136.849,140.345 135.097 C 140.345 133.944,140.308 133.805,140.008 133.805 C 139.711 133.805,139.672 133.940,139.677 134.976 M154.839 135.097 L 154.839 136.389 153.734 136.378 C 152.931 136.371,152.596 136.295,152.509 136.103 C 152.443 135.957,152.383 136.368,152.377 137.018 C 152.366 137.999,152.416 138.211,152.673 138.279 C 152.961 138.354,152.960 138.361,152.665 138.380 C 152.390 138.398,152.416 138.489,152.858 139.063 C 153.139 139.428,153.473 140.063,153.601 140.475 C 153.765 141.004,153.977 141.287,154.327 141.442 C 155.000 141.740,155.467 142.941,155.222 143.746 C 154.771 145.231,154.806 145.420,155.361 144.498 C 156.041 143.370,155.952 141.792,155.178 141.228 C 155.111 141.180,154.987 140.623,154.903 139.991 L 154.750 138.842 154.013 138.664 C 152.922 138.401,152.842 138.165,153.892 138.306 L 154.801 138.428 155.173 137.221 C 155.654 135.662,155.647 133.805,155.161 133.805 C 154.879 133.805,154.839 133.965,154.839 135.097 M161.025 135.811 C 161.025 138.118,161.090 138.400,161.619 138.401 C 162.225 138.401,162.033 133.923,161.423 133.837 C 161.030 133.781,161.025 133.806,161.025 135.811 M238.726 134.078 C 238.527 134.278,238.445 134.693,238.445 135.500 L 238.445 136.640 241.847 136.592 L 245.250 136.544 245.250 135.219 L 245.250 133.893 242.129 133.845 C 239.465 133.804,238.967 133.838,238.726 134.078 M259.558 133.966 C 259.613 134.055,259.558 134.164,259.435 134.208 C 259.259 134.272,259.262 134.370,259.447 134.684 C 259.576 134.901,259.596 135.026,259.492 134.962 C 259.365 134.884,259.302 135.165,259.302 135.802 L 259.302 136.760 260.545 136.791 C 262.927 136.851,263.014 136.980,263.014 140.431 C 263.014 142.150,263.107 143.426,263.293 144.243 C 263.548 145.362,263.548 145.579,263.293 146.699 C 262.662 149.471,262.949 157.898,263.709 158.925 C 263.983 159.297,264.074 159.685,264.074 160.488 C 264.074 161.499,264.097 161.555,264.501 161.555 C 265.392 161.555,265.185 158.509,264.249 157.842 L 263.721 157.466 263.721 152.256 L 263.721 147.045 264.176 146.590 C 264.942 145.824,265.020 144.410,264.296 144.410 C 263.862 144.410,263.721 143.502,263.721 140.708 C 263.721 137.490,263.723 137.486,265.157 137.557 L 266.107 137.605 266.161 136.667 C 266.214 135.733,266.211 135.726,265.205 134.767 L 264.195 133.805 261.827 133.805 C 260.440 133.805,259.499 133.872,259.558 133.966 M270.889 133.966 C 270.824 134.072,270.317 134.162,269.764 134.166 C 268.451 134.176,267.115 134.648,266.663 135.260 C 266.212 135.873,266.363 136.031,267.060 135.671 C 269.157 134.586,270.261 135.555,269.920 138.179 C 269.881 138.484,270.940 138.454,271.498 138.135 C 271.779 137.974,272.468 137.880,273.392 137.876 C 275.224 137.868,275.210 137.845,275.210 140.927 C 275.210 143.167,275.235 143.337,275.652 143.951 C 276.251 144.835,276.273 146.229,275.696 146.843 C 275.306 147.258,275.297 147.362,275.246 152.187 L 275.194 157.108 275.647 157.527 C 276.081 157.930,276.246 158.946,276.268 161.347 C 276.270 161.482,276.422 161.556,276.630 161.524 C 276.955 161.473,276.995 161.320,277.038 159.951 C 277.075 158.795,277.180 158.256,277.480 157.680 C 277.928 156.821,278.087 148.555,277.684 147.061 C 277.439 146.150,277.435 145.089,277.672 143.900 C 278.051 141.995,277.920 138.549,277.444 137.903 C 277.194 137.565,276.983 136.967,276.917 136.416 C 276.806 135.480,276.154 133.972,275.810 133.857 C 275.684 133.815,275.699 134.171,275.857 134.939 C 276.121 136.225,275.976 137.428,275.555 137.428 C 275.350 137.428,275.288 137.061,275.248 135.616 L 275.198 133.805 274.673 133.805 L 274.149 133.805 274.149 135.015 C 274.149 136.458,273.884 136.810,272.793 136.810 C 271.692 136.810,271.317 136.377,271.345 135.142 C 271.368 134.156,271.138 133.563,270.889 133.966 M195.795 134.329 C 195.329 134.511,194.642 134.712,194.267 134.775 C 192.621 135.053,192.225 137.870,193.832 137.870 C 194.398 137.870,194.455 138.199,194.395 141.121 C 194.354 143.096,194.292 143.601,194.079 143.700 C 192.673 144.352,192.761 144.232,192.655 145.653 C 192.601 146.379,192.457 147.156,192.334 147.380 C 191.936 148.109,192.130 148.380,193.019 148.333 C 194.337 148.264,194.336 148.262,194.403 151.577 C 194.482 155.463,194.523 155.339,193.149 155.405 L 192.046 155.457 191.993 156.276 C 191.961 156.767,192.085 157.526,192.302 158.171 C 192.521 158.820,192.665 159.705,192.665 160.401 L 192.665 161.555 193.372 161.555 C 193.760 161.555,194.080 161.536,194.082 161.511 C 194.083 161.487,194.133 160.935,194.192 160.285 C 194.379 158.217,193.949 157.171,192.886 157.108 C 192.618 157.092,192.836 157.032,193.370 156.975 C 194.309 156.875,194.355 156.845,194.747 156.076 C 195.348 154.896,195.262 148.519,194.621 146.669 L 194.209 145.481 194.674 144.530 C 195.117 143.625,195.139 143.446,195.139 140.766 L 195.139 137.952 194.351 137.051 L 193.563 136.150 193.965 135.773 C 194.186 135.565,194.486 135.395,194.631 135.395 C 194.777 135.395,195.225 135.236,195.628 135.042 C 196.147 134.791,196.721 134.688,197.605 134.688 C 198.733 134.688,198.851 134.655,198.851 134.335 C 198.851 133.854,197.020 133.850,195.795 134.329 M354.386 134.154 C 354.234 134.243,353.529 134.476,352.819 134.673 C 351.370 135.075,351.052 135.368,351.044 136.315 C 351.036 137.307,351.357 137.870,351.932 137.870 C 352.643 137.870,352.629 137.680,352.630 147.562 C 352.631 152.837,352.706 157.143,352.808 157.755 C 352.906 158.338,352.991 159.432,352.998 160.186 L 353.010 161.555 353.792 161.555 L 354.574 161.555 354.574 160.337 C 354.574 159.408,354.510 159.094,354.304 159.015 C 353.398 158.668,353.336 157.959,353.336 147.925 C 353.336 137.682,353.353 137.860,352.286 136.792 C 351.677 136.183,351.812 135.654,352.629 135.448 C 352.872 135.387,353.389 135.193,353.778 135.016 C 354.248 134.804,354.915 134.695,355.767 134.692 C 356.929 134.689,357.048 134.656,357.048 134.335 C 357.048 133.946,354.981 133.805,354.386 134.154 M12.854 135.793 C 12.815 136.109,12.783 135.851,12.783 135.219 C 12.783 134.587,12.815 134.328,12.854 134.644 C 12.894 134.960,12.894 135.477,12.854 135.793 M86.492 134.490 C 85.990 134.652,85.433 134.917,85.255 135.078 C 84.948 135.355,83.461 135.389,82.766 135.134 C 82.607 135.076,82.545 135.321,82.545 136.020 L 82.545 136.986 83.790 136.986 C 84.803 136.986,85.134 137.060,85.572 137.384 C 86.350 137.959,89.746 138.174,89.567 137.636 C 89.526 137.513,89.035 137.407,88.364 137.376 C 86.437 137.287,84.984 136.520,85.474 135.850 C 85.900 135.267,87.445 134.688,88.573 134.688 C 89.146 134.688,89.616 134.617,89.616 134.531 C 89.616 134.074,87.851 134.051,86.492 134.490 M325.188 134.293 C 324.574 134.376,324.495 134.684,324.562 136.721 L 324.615 138.312 324.923 137.655 C 325.093 137.293,325.232 136.713,325.232 136.365 C 325.232 135.090,326.319 134.556,327.656 135.175 C 328.883 135.742,328.820 135.178,328.792 145.360 C 328.767 154.483,328.874 156.576,329.365 156.627 C 329.473 156.638,329.682 156.661,329.828 156.678 C 329.973 156.695,330.272 156.604,330.490 156.477 C 330.840 156.273,330.890 156.283,330.903 156.558 C 330.913 156.748,330.996 156.663,331.114 156.341 C 331.423 155.506,331.511 135.226,331.207 135.196 C 331.080 135.184,330.594 135.190,330.127 135.209 C 329.660 135.229,329.176 135.161,329.051 135.058 C 328.401 134.518,326.425 134.127,325.188 134.293 M73.930 134.556 C 73.834 134.677,73.702 135.316,73.637 135.975 C 73.573 136.634,73.472 137.430,73.414 137.743 C 73.207 138.864,73.942 137.782,74.179 136.616 C 74.521 134.941,75.076 134.594,76.428 135.210 C 77.718 135.798,77.636 135.002,77.606 146.579 C 77.579 156.825,77.587 157.072,77.932 157.470 C 78.353 157.956,78.720 159.562,78.557 160.210 C 78.383 160.907,78.603 161.555,79.014 161.555 C 79.323 161.555,79.364 161.434,79.364 160.504 C 79.364 159.226,79.671 157.677,79.997 157.305 C 80.248 157.019,80.265 155.913,80.253 141.117 L 80.247 135.085 79.183 135.170 C 78.538 135.222,78.025 135.178,77.882 135.059 C 77.159 134.459,74.294 134.094,73.930 134.556 M371.586 134.556 C 371.490 134.677,371.356 135.373,371.288 136.103 C 371.221 136.832,371.121 137.627,371.067 137.870 C 370.969 138.312,370.969 138.312,371.320 137.958 C 371.515 137.763,371.760 137.146,371.869 136.575 C 372.182 134.939,372.755 134.605,374.159 135.241 C 375.349 135.779,375.293 135.208,375.264 146.600 C 375.237 156.825,375.245 157.072,375.590 157.470 C 376.001 157.944,376.370 159.519,376.239 160.241 C 376.109 160.960,376.301 161.555,376.663 161.555 C 376.928 161.555,376.985 161.331,377.061 159.998 C 377.165 158.180,377.773 156.531,378.252 156.769 C 378.402 156.843,378.930 156.922,379.426 156.944 C 380.738 157.001,380.838 156.666,380.734 152.541 C 380.699 151.167,380.773 150.589,381.142 149.359 C 381.390 148.533,381.638 147.648,381.692 147.392 C 381.857 146.612,382.985 146.469,383.658 147.142 C 384.050 147.534,384.093 147.725,384.105 149.130 C 384.115 150.288,384.206 150.865,384.461 151.392 L 384.805 152.099 384.719 150.142 C 384.594 147.256,384.683 146.885,385.502 146.885 C 386.549 146.885,386.828 146.431,386.848 144.701 C 386.864 143.368,386.893 143.257,387.246 143.205 C 387.619 143.149,387.627 143.195,387.627 145.362 L 387.627 147.576 388.290 147.680 C 389.727 147.906,389.656 147.927,389.707 147.251 C 389.770 146.423,390.185 146.041,391.234 145.845 C 392.771 145.558,393.106 145.804,393.106 147.221 C 393.106 149.329,391.991 149.959,390.544 148.667 C 389.903 148.095,389.748 148.070,389.748 148.540 C 389.748 148.781,389.956 149.226,390.210 149.528 C 390.572 149.958,390.682 150.296,390.717 151.088 C 390.742 151.644,390.772 152.150,390.785 152.213 C 390.824 152.399,392.279 152.495,392.709 152.340 C 393.057 152.214,393.106 152.073,393.106 151.196 C 393.106 150.533,393.218 150.011,393.437 149.645 C 393.668 149.261,393.802 148.585,393.879 147.415 C 393.960 146.200,394.066 145.680,394.265 145.533 C 394.433 145.408,394.464 145.305,394.346 145.265 C 394.240 145.230,394.123 144.778,394.088 144.262 C 394.033 143.473,393.814 142.706,393.814 143.304 C 393.814 143.408,393.654 143.452,393.460 143.401 C 393.266 143.350,393.106 143.243,393.106 143.162 C 393.106 143.082,390.993 143.010,388.409 143.002 C 385.098 142.992,383.747 143.044,383.830 143.178 C 384.589 144.407,383.886 146.001,382.584 146.001 C 381.550 146.001,381.285 146.278,380.975 147.684 C 380.487 149.897,380.482 149.903,379.099 149.848 L 377.907 149.801 377.906 142.450 L 377.905 135.098 376.834 135.171 C 376.218 135.213,375.665 135.163,375.533 135.053 C 374.816 134.458,371.951 134.097,371.586 134.556 M279.854 135.202 C 279.653 135.499,279.512 136.143,279.454 137.031 L 279.364 138.401 280.247 138.400 L 281.131 138.400 281.132 137.301 L 281.132 136.202 281.839 135.989 C 282.227 135.872,283.045 135.770,283.656 135.763 C 284.492 135.752,284.792 135.681,284.872 135.472 C 285.056 134.994,284.728 134.907,282.415 134.824 L 280.164 134.743 279.854 135.202 M368.582 136.014 C 368.584 136.403,368.620 136.541,368.662 136.321 C 368.705 136.102,368.703 135.783,368.659 135.614 C 368.615 135.445,368.580 135.625,368.582 136.014 M94.352 138.617 C 94.204 138.721,94.272 138.735,94.546 138.657 C 94.917 138.552,94.939 138.570,94.723 138.804 C 94.587 138.950,94.437 139.046,94.388 139.017 C 94.205 138.908,94.208 140.747,94.391 140.967 C 94.625 141.249,94.683 144.009,94.460 144.230 C 94.372 144.318,93.763 144.413,93.106 144.441 L 91.913 144.493 91.913 145.512 C 91.913 146.073,91.973 146.538,92.046 146.546 C 92.119 146.555,92.645 146.584,93.215 146.613 C 93.854 146.644,94.310 146.757,94.405 146.907 C 94.613 147.234,94.608 157.960,94.400 158.684 C 94.198 159.389,94.438 159.438,94.870 158.780 C 95.338 158.067,95.444 148.737,95.007 146.773 C 94.738 145.565,94.737 145.386,94.993 144.636 C 95.146 144.185,95.273 143.334,95.274 142.744 C 95.278 141.223,95.342 141.166,97.162 141.057 L 98.719 140.963 98.727 139.947 C 98.731 139.388,98.672 138.931,98.594 138.931 C 98.517 138.931,98.453 138.846,98.453 138.743 C 98.453 138.640,98.553 138.613,98.674 138.683 C 98.803 138.757,98.834 138.743,98.748 138.650 C 98.555 138.439,94.650 138.410,94.352 138.617 M142.554 138.612 C 141.695 139.099,141.656 141.039,142.472 142.656 L 143.009 143.720 144.107 143.667 C 145.205 143.615,145.206 143.614,145.261 143.040 L 145.316 142.466 144.180 142.466 L 143.044 142.466 142.755 141.709 C 142.398 140.774,142.389 140.076,142.723 139.130 C 142.865 138.729,142.964 138.403,142.944 138.406 C 142.924 138.409,142.749 138.501,142.554 138.612 M238.445 138.615 C 238.445 138.659,238.606 139.189,238.804 139.791 C 239.352 141.459,239.007 141.974,237.384 141.914 L 236.235 141.871 236.181 142.423 C 236.137 142.864,236.264 143.117,236.821 143.690 C 237.203 144.084,237.561 144.626,237.616 144.894 C 237.814 145.864,238.107 146.055,239.367 146.040 C 240.417 146.028,240.538 146.065,240.712 146.447 C 240.883 146.822,241.037 146.874,242.105 146.921 L 243.305 146.973 243.305 149.935 C 243.305 151.564,243.332 152.816,243.364 152.719 C 243.538 152.194,245.440 152.530,245.655 153.124 C 246.028 154.156,246.082 155.235,245.806 156.130 C 245.574 156.881,245.574 156.954,245.806 156.761 C 246.578 156.120,246.804 154.481,246.301 153.160 C 246.153 152.771,245.990 152.326,245.937 152.171 C 245.885 152.017,245.537 151.756,245.165 151.592 C 244.300 151.210,244.235 151.046,244.102 148.917 C 244.014 147.517,243.907 147.012,243.587 146.487 L 243.182 145.824 241.962 145.824 L 240.742 145.824 240.742 144.422 C 240.742 143.175,240.703 143.007,240.389 142.908 C 240.092 142.814,240.035 142.640,240.035 141.833 C 240.035 141.086,239.914 140.655,239.496 139.914 C 239.030 139.089,238.445 138.365,238.445 138.615 M160.075 138.895 C 160.014 138.994,159.817 139.036,159.637 138.989 C 159.142 138.859,159.082 139.858,159.100 147.857 C 159.119 156.222,159.017 155.633,160.451 155.638 L 161.555 155.641 161.553 147.153 C 161.551 142.485,161.492 138.745,161.420 138.842 C 161.257 139.064,160.444 139.088,160.296 138.875 C 160.233 138.784,160.138 138.793,160.075 138.895 M245.124 138.931 C 244.719 139.812,244.637 140.669,244.898 141.294 L 245.166 141.935 246.401 141.935 L 247.636 141.935 247.636 141.382 L 247.636 140.829 246.495 140.930 L 245.354 141.030 245.300 139.848 C 245.270 139.198,245.191 138.785,245.124 138.931 M133.805 139.991 C 133.805 140.571,133.830 140.579,135.440 140.524 L 136.279 140.495 136.279 141.131 C 136.279 142.654,137.104 144.153,138.049 144.346 C 138.863 144.513,139.112 145.520,138.687 146.931 C 138.402 147.876,138.735 147.952,139.202 147.049 C 139.775 145.942,139.098 143.350,138.238 143.350 C 138.025 143.350,137.173 141.814,137.013 141.141 C 136.689 139.785,136.302 139.463,134.998 139.462 L 133.805 139.461 133.805 139.991 M31.096 140.925 C 30.411 141.455,30.251 142.790,30.687 144.357 C 31.375 146.831,31.326 148.456,30.476 151.368 C 30.338 151.841,30.225 152.408,30.225 152.627 C 30.225 153.632,29.994 154.183,29.491 154.373 C 29.004 154.557,28.988 154.603,28.988 155.797 L 28.988 157.030 29.877 156.033 C 30.366 155.485,30.928 154.985,31.127 154.921 C 31.474 154.811,31.476 154.793,31.177 154.463 C 30.662 153.893,30.642 152.282,31.137 151.171 L 31.551 150.244 32.553 150.243 C 33.189 150.243,33.587 150.324,33.643 150.464 C 33.692 150.586,33.739 149.949,33.747 149.050 C 33.755 148.087,33.833 147.415,33.937 147.415 C 34.034 147.415,34.114 147.498,34.114 147.601 C 34.114 147.715,34.501 147.766,35.118 147.733 C 36.341 147.669,36.402 147.537,36.461 144.800 L 36.500 142.980 35.440 143.013 C 34.114 143.054,33.761 143.228,33.758 143.842 C 33.754 144.570,33.580 144.690,32.523 144.691 C 31.072 144.694,30.501 143.275,31.184 141.361 C 31.315 140.996,31.410 140.701,31.398 140.704 C 31.385 140.707,31.249 140.806,31.096 140.925 M150.066 142.544 C 150.066 142.852,150.241 143.250,150.493 143.517 C 150.728 143.765,151.086 144.481,151.290 145.108 C 151.738 146.486,151.793 146.525,153.277 146.528 C 154.045 146.530,154.492 146.608,154.559 146.752 C 154.616 146.874,154.633 146.600,154.597 146.144 C 154.561 145.688,154.421 145.204,154.287 145.070 C 154.153 144.936,153.916 144.553,153.760 144.220 C 153.605 143.887,153.327 143.297,153.142 142.908 L 152.806 142.201 151.436 142.112 L 150.066 142.024 150.066 142.544 M24.510 142.937 C 24.327 143.120,24.371 144.444,24.557 144.329 C 24.647 144.273,24.765 144.298,24.818 144.384 C 24.871 144.469,25.319 144.525,25.814 144.508 C 27.009 144.467,27.044 144.557,27.044 147.654 C 27.044 150.927,27.115 150.773,25.587 150.773 L 24.344 150.773 24.457 151.595 C 24.519 152.047,24.640 152.504,24.725 152.611 C 25.112 153.094,25.273 154.626,25.004 155.269 L 24.741 155.899 23.406 155.899 C 22.122 155.899,22.072 155.915,22.126 156.297 C 22.178 156.663,22.288 156.699,23.490 156.747 C 25.437 156.825,25.806 156.430,25.806 154.267 L 25.806 152.701 25.232 152.447 C 24.671 152.200,24.681 152.197,25.684 152.305 C 26.628 152.406,26.734 152.381,27.009 151.992 C 27.982 150.618,28.015 144.988,27.061 143.205 C 26.855 142.820,24.839 142.608,24.510 142.937 M39.818 149.757 C 39.893 153.475,39.968 156.826,39.985 157.202 C 40.031 158.200,39.693 158.374,37.704 158.374 C 36.359 158.374,36.058 158.422,36.058 158.639 C 36.058 158.847,36.303 158.904,37.196 158.904 C 39.064 158.904,39.240 159.033,39.240 160.402 L 39.240 161.555 39.770 161.555 C 40.274 161.555,40.301 161.518,40.312 160.804 C 40.327 159.879,40.452 158.870,40.566 158.756 C 40.789 158.534,41.380 159.369,41.353 159.869 C 41.272 161.425,41.323 161.582,41.893 161.522 L 42.425 161.467 42.492 159.476 C 42.532 158.293,42.645 157.381,42.770 157.230 C 43.246 156.657,42.850 156.337,41.742 156.400 L 40.704 156.458 40.591 155.892 C 40.528 155.580,40.477 152.551,40.477 149.160 L 40.477 142.996 40.080 142.996 L 39.682 142.996 39.818 149.757 M46.102 144.682 C 46.149 146.102,46.100 146.488,45.792 147.124 C 45.459 147.813,45.426 148.201,45.426 151.492 L 45.426 155.104 46.752 155.046 L 48.078 154.988 48.075 151.422 C 48.072 147.778,48.042 147.562,47.501 147.362 C 47.023 147.186,46.858 146.527,46.826 144.683 C 46.799 143.089,46.777 142.996,46.422 142.996 C 46.060 142.995,46.047 143.061,46.102 144.682 M59.700 143.113 C 59.843 143.171,59.920 143.590,59.920 144.315 C 59.920 145.580,59.808 145.730,58.725 145.908 C 57.729 146.073,57.599 146.370,57.660 148.344 C 57.707 149.843,57.740 149.978,58.065 149.978 C 58.381 149.978,58.424 149.843,58.470 148.703 C 58.531 147.196,58.935 146.708,60.121 146.708 C 61.269 146.708,61.560 146.251,61.484 144.569 C 61.433 143.461,61.471 143.173,61.667 143.173 C 61.873 143.173,61.893 143.633,61.789 145.966 C 61.630 149.503,61.769 149.920,62.952 149.451 C 63.112 149.387,63.291 149.413,63.350 149.507 C 63.655 150.002,64.129 149.479,64.250 148.513 C 64.371 147.543,64.361 147.512,63.783 147.040 L 63.192 146.558 63.191 144.777 L 63.190 142.997 61.335 143.010 C 60.314 143.018,59.578 143.064,59.700 143.113 M64.710 144.631 C 64.863 146.988,64.765 146.885,66.833 146.885 C 68.580 146.885,68.582 146.884,68.582 146.443 C 68.582 146.011,68.551 146.001,67.270 146.001 L 65.958 146.001 65.751 145.374 C 65.637 145.029,65.571 144.353,65.604 143.871 C 65.665 143.003,65.661 142.996,65.135 142.996 L 64.605 142.996 64.710 144.631 M83.783 144.778 C 83.872 146.587,84.077 147.061,84.770 147.061 C 85.156 147.061,85.197 147.579,85.197 152.543 L 85.197 157.466 84.622 157.867 C 83.805 158.438,83.788 158.482,83.785 160.109 L 83.783 161.579 84.269 161.523 C 84.732 161.470,84.757 161.417,84.807 160.407 C 84.845 159.630,84.947 159.275,85.187 159.081 C 86.322 158.163,86.215 147.295,85.058 146.093 C 84.747 145.770,84.675 145.463,84.650 144.349 C 84.619 143.016,84.611 142.996,84.156 142.996 L 83.694 142.995 83.783 144.778 M104.471 144.697 C 104.569 146.445,104.870 147.061,105.625 147.061 C 106.193 147.061,106.378 148.485,105.955 149.588 C 105.757 150.104,106.206 149.920,106.491 149.368 C 107.054 148.280,106.859 147.178,105.966 146.391 L 105.170 145.691 105.170 144.344 C 105.170 143.064,105.150 142.996,104.772 142.996 C 104.381 142.996,104.376 143.022,104.471 144.697 M109.501 145.693 C 109.501 149.399,109.739 149.811,111.810 149.680 C 112.622 149.628,112.686 149.589,112.740 149.122 C 112.795 148.641,112.768 148.621,112.121 148.660 C 110.114 148.783,109.848 148.547,110.026 146.806 C 110.299 144.145,110.247 142.996,109.854 142.997 C 109.516 142.998,109.501 143.116,109.501 145.693 M115.776 144.989 C 115.776 146.466,115.707 147.080,115.513 147.357 C 115.103 147.944,116.459 148.529,118.250 148.539 C 118.979 148.543,119.637 148.630,119.712 148.732 C 119.787 148.834,119.808 147.648,119.760 146.097 C 119.694 143.980,119.726 143.243,119.889 143.139 C 120.010 143.062,119.755 143.006,119.311 143.013 C 118.873 143.019,118.615 143.064,118.736 143.113 C 119.015 143.226,119.038 145.540,118.768 146.315 C 118.449 147.228,117.143 147.424,116.618 146.637 C 116.546 146.530,116.487 145.667,116.485 144.719 C 116.483 143.115,116.458 142.996,116.129 142.996 C 115.796 142.996,115.776 143.114,115.776 144.989 M166.758 145.604 C 166.752 147.037,166.701 148.511,166.644 148.879 C 166.576 149.324,166.622 149.628,166.780 149.786 C 166.911 149.917,166.979 150.063,166.932 150.111 C 166.884 150.158,167.326 150.161,167.912 150.118 L 168.979 150.039 168.979 151.313 L 168.979 152.587 167.654 152.502 C 165.507 152.365,165.817 153.062,167.992 153.264 C 169.409 153.396,169.590 153.558,169.741 154.829 C 169.859 155.826,170.251 156.691,170.656 156.846 C 170.872 156.929,170.896 156.886,170.768 156.646 C 170.086 155.372,170.340 153.594,171.262 153.187 C 171.641 153.020,171.997 152.763,172.054 152.615 C 172.180 152.284,171.186 150.265,170.829 150.128 C 170.538 150.016,170.473 149.536,170.749 149.536 C 170.865 149.536,170.904 148.423,170.860 146.346 C 170.800 143.479,170.822 143.161,171.079 143.211 C 171.321 143.257,171.373 143.600,171.415 145.427 C 171.470 147.817,171.511 147.886,172.798 147.738 C 173.233 147.688,173.320 147.580,173.447 146.934 C 173.598 146.166,174.285 145.471,174.893 145.471 C 175.141 145.471,175.173 145.312,175.105 144.429 C 175.032 143.496,175.064 143.369,175.404 143.204 C 175.684 143.068,174.994 143.017,172.779 143.008 L 169.775 142.995 169.822 144.719 C 169.874 146.592,169.672 147.289,169.053 147.379 C 168.255 147.494,167.479 145.724,167.599 144.063 C 167.675 143.015,167.668 142.996,167.223 142.997 L 166.770 142.998 166.758 145.604 M185.566 144.158 C 185.639 145.580,185.360 146.001,184.344 146.001 C 183.684 146.001,183.678 146.008,183.487 146.929 C 183.382 147.439,183.156 148.317,182.987 148.880 L 182.678 149.903 181.480 149.839 L 180.283 149.776 180.331 152.351 L 180.380 154.927 181.573 154.979 C 182.391 155.015,182.766 155.102,182.766 155.255 C 182.766 155.379,182.927 155.813,183.124 156.221 C 183.321 156.628,183.530 157.198,183.588 157.487 C 183.713 158.115,183.872 158.249,184.802 158.515 C 186.032 158.865,186.191 159.072,186.202 160.340 C 186.213 161.435,186.227 161.469,186.699 161.523 L 187.185 161.579 187.191 160.197 C 187.194 159.262,187.249 158.906,187.360 159.096 C 187.450 159.250,187.496 159.727,187.463 160.157 C 187.363 161.429,187.531 161.579,188.986 161.519 L 190.235 161.467 190.203 159.446 C 190.174 157.690,190.125 157.387,189.826 157.128 C 189.638 156.964,189.483 156.640,189.483 156.409 C 189.484 156.004,189.442 155.990,188.389 156.049 C 186.876 156.134,186.411 155.154,186.996 153.114 C 187.241 152.260,187.075 152.419,186.572 153.518 C 186.025 154.714,186.023 154.824,186.515 156.227 C 186.984 157.561,186.804 157.844,185.485 157.844 C 184.562 157.844,184.185 157.428,183.676 155.848 C 182.707 152.838,182.680 152.289,183.387 149.890 C 183.516 149.452,183.673 148.715,183.736 148.251 C 183.884 147.149,184.390 146.615,185.411 146.481 C 186.494 146.339,186.673 146.031,186.638 144.368 L 186.608 142.996 186.057 142.996 L 185.506 142.995 185.566 144.158 M188.197 143.217 C 188.858 144.070,188.204 146.578,187.259 146.816 C 186.953 146.893,186.832 147.046,186.832 147.354 C 186.832 147.592,186.708 148.025,186.557 148.317 C 186.024 149.348,186.026 150.453,186.562 151.368 C 187.017 152.144,187.382 152.538,187.035 151.878 C 186.038 149.982,187.021 148.117,188.902 148.337 C 189.410 148.396,189.483 148.353,189.483 147.998 C 189.483 147.710,189.585 147.592,189.837 147.592 C 190.031 147.592,190.181 147.532,190.169 147.459 C 189.992 146.337,190.231 143.188,190.499 143.118 C 190.669 143.073,190.182 143.028,189.417 143.017 C 188.328 143.000,188.063 143.044,188.197 143.217 M206.571 143.217 C 206.745 143.452,206.747 145.411,206.574 145.584 C 206.517 145.640,205.943 145.729,205.297 145.781 C 204.029 145.883,204.031 145.881,203.914 147.061 C 203.781 148.396,203.774 148.402,202.384 148.299 L 201.149 148.207 201.149 148.871 L 201.149 149.536 202.342 149.533 C 203.864 149.530,203.971 149.451,204.421 148.002 C 205.226 145.412,206.982 145.954,206.982 148.792 C 206.982 150.143,207.325 151.511,207.795 152.030 C 208.087 152.353,208.087 152.381,207.790 152.598 C 206.902 153.248,206.944 155.360,207.864 156.340 C 208.520 157.037,210.517 156.958,210.517 156.234 C 210.517 155.940,210.378 155.899,209.380 155.899 C 207.604 155.899,207.017 154.641,207.952 152.838 C 208.176 152.406,208.166 152.130,207.862 150.457 C 207.301 147.371,207.495 146.178,208.560 146.178 C 209.349 146.178,209.692 145.604,209.707 144.261 L 209.722 142.996 208.065 142.996 C 206.770 142.996,206.444 143.044,206.571 143.217 M210.969 143.190 C 211.035 143.296,211.088 143.873,211.088 144.471 C 211.086 145.778,211.407 146.487,212.067 146.633 C 213.060 146.854,213.150 146.914,213.321 147.468 C 213.507 148.075,213.678 149.699,213.728 151.355 L 213.760 152.379 214.922 152.327 L 216.085 152.276 216.198 150.950 C 216.261 150.221,216.409 149.386,216.527 149.094 C 217.221 147.386,216.689 145.471,215.521 145.471 L 214.936 145.471 214.936 144.336 C 214.936 143.594,215.012 143.171,215.157 143.113 C 215.278 143.064,214.876 143.018,214.263 143.010 C 213.508 143.001,213.186 143.058,213.265 143.186 C 213.439 143.468,213.379 145.508,213.191 145.695 C 212.690 146.196,212.256 145.464,212.315 144.219 L 212.373 142.995 211.611 142.996 C 211.105 142.996,210.890 143.061,210.969 143.190 M282.966 143.425 C 282.816 143.626,282.677 144.204,282.656 144.709 L 282.617 145.626 283.288 145.813 C 283.657 145.915,284.211 145.999,284.518 146.000 C 284.916 146.001,285.356 146.229,286.052 146.796 C 287.718 148.153,287.958 147.913,287.873 144.975 C 287.835 143.637,287.877 143.299,288.102 143.163 C 288.282 143.054,287.485 143.007,285.808 143.027 C 283.430 143.056,283.217 143.085,282.966 143.425 M290.234 144.295 C 290.335 145.782,290.531 146.101,291.500 146.362 C 292.519 146.637,292.873 148.416,292.169 149.731 C 291.920 150.195,292.247 150.167,292.695 149.687 C 293.017 149.342,293.153 148.798,293.282 147.344 C 293.412 145.879,295.497 145.985,295.731 147.468 C 295.885 148.438,296.093 148.564,297.534 148.564 C 298.719 148.564,298.811 148.537,298.863 148.166 C 298.917 147.789,298.861 147.768,297.781 147.768 C 296.536 147.768,296.421 147.633,296.421 146.174 C 296.421 145.588,296.172 145.471,294.933 145.471 L 294.004 145.471 293.965 144.383 C 293.938 143.643,294.000 143.248,294.157 143.148 C 294.287 143.066,293.460 143.000,292.267 142.999 L 290.146 142.996 290.234 144.295 M299.200 143.135 C 299.027 143.171,298.898 143.294,298.912 143.408 C 299.023 144.308,298.867 146.535,298.701 146.432 C 298.566 146.348,298.568 146.427,298.709 146.690 C 298.820 146.898,298.856 147.159,298.788 147.269 C 298.716 147.385,298.742 147.421,298.849 147.355 C 298.951 147.292,299.082 147.363,299.140 147.513 C 299.221 147.725,299.473 147.774,300.263 147.733 L 301.281 147.680 301.421 146.620 C 301.498 146.036,301.577 144.985,301.598 144.283 L 301.635 143.007 300.574 143.038 C 299.991 143.055,299.373 143.099,299.200 143.135 M305.037 143.924 C 305.061 144.434,305.167 145.501,305.274 146.293 C 305.436 147.502,305.419 147.950,305.171 149.066 C 304.543 151.887,304.925 158.620,305.741 159.134 C 305.885 159.224,305.966 159.685,305.966 160.415 C 305.966 161.503,305.985 161.555,306.392 161.555 C 306.792 161.555,306.823 161.484,306.878 160.451 C 306.963 158.869,306.895 158.612,306.218 157.954 L 305.612 157.366 305.615 153.407 C 305.618 148.857,305.599 148.922,306.940 148.913 C 307.975 148.906,308.289 148.699,308.138 148.123 C 308.010 147.633,308.742 147.238,309.779 147.238 C 311.537 147.238,312.322 146.325,312.326 144.278 C 312.329 143.066,312.307 142.996,311.931 142.996 C 311.550 142.995,311.536 143.049,311.593 144.252 C 311.670 145.879,311.123 146.624,309.962 146.472 C 308.946 146.338,308.812 146.112,308.778 144.454 L 308.747 142.996 306.870 142.996 L 304.993 142.996 305.037 143.924 M315.516 143.166 C 315.349 143.271,315.243 143.671,315.219 144.287 C 315.196 144.888,315.046 145.467,314.816 145.844 C 314.616 146.173,314.451 146.736,314.451 147.095 C 314.450 147.454,314.375 147.794,314.282 147.851 C 314.140 147.939,313.431 148.924,312.974 149.669 C 312.657 150.184,313.235 149.819,314.229 148.873 C 315.223 147.929,315.305 147.790,315.399 146.905 C 315.524 145.720,315.412 145.804,317.042 145.671 L 318.415 145.559 318.378 144.448 C 318.345 143.446,318.381 143.321,318.738 143.175 C 319.023 143.059,318.737 143.017,317.720 143.025 C 316.942 143.031,316.191 143.126,316.051 143.237 C 315.855 143.391,315.827 143.387,315.929 143.217 C 316.085 142.958,315.884 142.933,315.516 143.166 M320.254 144.257 C 320.320 145.654,320.220 145.817,319.287 145.821 C 318.616 145.825,318.521 146.081,318.518 147.890 C 318.515 149.533,318.713 150.066,319.328 150.066 C 319.685 150.066,319.752 150.013,319.611 149.843 C 318.643 148.677,319.154 146.543,320.404 146.527 C 321.234 146.517,321.534 145.982,321.572 144.447 L 321.608 142.996 320.901 142.995 L 320.194 142.995 320.254 144.257 M323.530 143.151 C 323.829 143.268,323.858 143.476,323.830 145.337 C 323.792 147.919,324.161 148.449,324.869 146.831 C 325.637 145.077,325.068 142.984,323.831 143.008 C 323.372 143.017,323.290 143.056,323.530 143.151 M336.058 143.118 C 336.228 143.162,336.507 143.162,336.677 143.118 C 336.847 143.073,336.708 143.037,336.368 143.037 C 336.027 143.037,335.888 143.073,336.058 143.118 M338.798 143.113 C 338.942 143.171,339.019 143.590,339.019 144.315 C 339.019 145.580,338.907 145.730,337.824 145.908 C 336.863 146.067,336.737 146.317,336.693 148.157 C 336.657 149.707,336.747 150.066,337.173 150.066 C 337.434 150.066,337.491 149.704,337.432 148.431 C 337.388 147.483,338.175 146.708,339.182 146.708 C 340.388 146.708,340.678 146.258,340.562 144.563 C 340.482 143.404,340.511 143.173,340.731 143.173 C 340.960 143.173,340.982 143.619,340.896 146.487 C 340.841 148.310,340.857 149.602,340.932 149.359 C 341.042 149.003,341.090 148.974,341.180 149.209 C 341.259 149.414,341.481 149.492,341.922 149.471 C 342.269 149.455,342.572 149.500,342.597 149.572 C 342.707 149.887,343.083 149.371,343.281 148.631 C 343.536 147.678,343.427 147.292,342.839 147.069 C 342.354 146.884,342.072 145.323,342.246 143.781 L 342.334 142.996 340.456 143.010 C 339.422 143.018,338.677 143.064,338.798 143.113 M343.548 143.131 C 343.661 143.205,343.780 143.965,343.824 144.898 C 343.919 146.932,343.895 146.910,345.928 146.847 C 347.501 146.799,347.595 146.775,347.648 146.399 C 347.702 146.016,347.653 146.001,346.362 146.001 C 344.790 146.001,344.675 145.868,344.675 144.045 L 344.675 142.996 344.012 142.999 C 343.648 143.000,343.439 143.060,343.548 143.131 M360.030 143.155 C 360.215 143.272,360.265 143.786,360.242 145.332 C 360.209 147.565,360.323 147.842,361.229 147.737 C 361.638 147.689,361.755 147.554,361.941 146.910 C 362.063 146.486,362.257 146.025,362.373 145.886 C 362.497 145.736,362.568 145.166,362.546 144.489 C 362.512 143.443,362.544 143.331,362.916 143.182 C 363.207 143.065,362.820 143.016,361.555 143.010 C 360.493 143.005,359.884 143.063,360.030 143.155 M364.201 143.164 C 364.258 143.256,364.346 143.912,364.397 144.622 C 364.531 146.500,364.847 146.776,366.950 146.858 C 368.438 146.916,368.537 146.898,368.537 146.567 C 368.537 146.251,368.397 146.209,367.150 146.152 C 365.310 146.068,365.179 145.946,365.179 144.300 L 365.179 142.996 364.638 142.996 C 364.341 142.996,364.144 143.071,364.201 143.164 M247.246 143.482 C 246.468 144.382,246.426 145.400,247.121 146.528 L 247.666 147.415 248.812 147.415 C 249.957 147.415,249.957 147.415,249.901 146.929 C 249.848 146.465,249.793 146.439,248.700 146.354 C 247.298 146.246,247.108 145.939,247.390 144.234 C 247.487 143.650,247.554 143.173,247.540 143.173 C 247.526 143.173,247.394 143.312,247.246 143.482 M259.535 144.243 C 259.651 144.964,259.649 145.718,259.529 146.503 C 259.296 148.023,259.340 148.034,259.876 146.585 L 260.319 145.388 259.957 144.413 C 259.449 143.039,259.334 142.993,259.535 144.243 M271.174 144.192 C 271.310 145.141,271.238 146.699,271.020 147.503 C 270.961 147.720,271.137 147.591,271.476 147.170 C 272.340 146.095,272.238 144.184,271.275 143.384 C 271.066 143.211,271.050 143.335,271.174 144.192 M291.954 144.892 C 291.916 145.259,291.884 145.002,291.883 144.322 C 291.882 143.641,291.914 143.341,291.953 143.655 C 291.992 143.969,291.992 144.525,291.954 144.892 M306.409 144.146 C 306.432 145.211,306.285 145.865,306.000 145.960 C 305.848 146.011,305.789 145.628,305.789 144.589 C 305.789 142.845,306.370 142.430,306.409 144.146 M356.562 144.281 C 356.065 145.776,356.010 148.185,356.451 149.114 C 356.888 150.035,357.003 149.970,356.811 148.911 C 356.688 148.232,356.702 147.446,356.860 146.225 C 356.983 145.275,357.056 144.180,357.022 143.791 L 356.960 143.084 356.562 144.281 M98.367 144.165 C 97.984 145.168,97.988 145.498,98.396 146.621 L 98.719 147.506 98.719 145.428 C 98.719 144.285,98.709 143.350,98.698 143.350 C 98.687 143.350,98.538 143.716,98.367 144.165 M153.516 145.339 L 154.397 145.407 153.380 145.439 C 152.517 145.466,152.365 145.424,152.367 145.161 C 152.369 144.954,152.414 144.921,152.503 145.062 C 152.576 145.177,153.032 145.302,153.516 145.339 M177.596 145.420 L 177.110 145.494 177.110 151.928 C 177.110 158.108,177.097 158.369,176.768 158.544 C 175.737 159.096,174.887 158.455,174.198 156.606 C 173.673 155.199,173.254 154.527,173.482 155.457 C 173.554 155.749,173.677 156.493,173.756 157.111 C 173.900 158.243,174.536 159.258,175.102 159.258 C 175.262 159.258,175.315 159.571,175.290 160.362 L 175.254 161.467 176.182 161.521 L 177.110 161.574 177.113 160.548 C 177.116 159.463,177.211 159.190,177.640 159.043 C 178.271 158.827,178.524 159.223,178.524 160.424 L 178.524 161.578 179.099 161.522 C 179.659 161.468,179.672 161.447,179.642 160.672 C 179.624 160.234,179.604 159.472,179.597 158.978 C 179.584 158.017,179.408 157.829,178.303 157.589 L 177.817 157.483 177.817 151.574 C 177.817 146.133,177.842 145.651,178.126 145.485 C 178.445 145.299,178.418 145.296,177.596 145.420 M144.960 146.133 C 144.442 147.397,144.429 147.705,144.861 148.636 L 145.278 149.536 146.446 149.536 L 147.614 149.536 147.559 148.962 L 147.503 148.387 146.391 148.387 C 145.092 148.387,144.992 148.240,145.184 146.605 C 145.310 145.534,145.255 145.417,144.960 146.133 M215.824 146.624 C 216.388 147.224,216.364 148.031,215.751 149.076 C 215.201 150.015,214.904 149.953,214.316 148.773 C 213.516 147.169,214.722 145.451,215.824 146.624 M280.183 147.245 C 280.170 147.395,280.318 147.829,280.513 148.210 C 280.886 148.943,280.968 150.384,280.714 151.745 C 280.632 152.183,280.669 152.790,280.810 153.336 C 281.257 155.064,280.955 157.431,280.336 157.048 C 280.185 156.955,280.310 158.912,280.466 159.081 C 280.511 159.129,281.713 159.169,283.137 159.169 L 285.727 159.169 285.779 160.369 L 285.832 161.569 287.282 161.518 L 288.732 161.467 288.690 159.611 C 288.633 157.095,288.592 156.960,287.887 156.960 C 287.463 156.960,287.268 157.063,287.139 157.354 C 286.599 158.574,283.517 158.401,283.517 157.151 C 283.517 156.955,283.250 156.716,282.809 156.517 C 281.573 155.960,281.138 154.230,281.337 150.666 C 281.471 148.280,281.374 147.768,280.787 147.768 C 280.485 147.768,280.338 147.652,280.284 147.371 C 280.242 147.152,280.196 147.095,280.183 147.245 M147.863 147.729 C 147.811 147.864,147.768 148.558,147.768 149.273 C 147.768 151.160,148.189 151.498,150.562 151.512 C 151.505 151.517,152.149 151.598,152.229 151.722 C 152.300 151.832,152.360 151.533,152.361 151.057 C 152.364 150.284,152.284 150.104,151.613 149.370 C 151.200 148.918,150.703 148.327,150.508 148.055 C 150.096 147.479,148.055 147.228,147.863 147.729 M233.981 147.599 C 233.740 147.745,233.672 148.027,233.672 148.886 L 233.672 149.986 234.865 150.596 C 236.208 151.283,236.425 151.290,236.981 150.672 C 237.345 150.267,237.356 150.193,237.125 149.664 C 236.988 149.351,236.834 148.895,236.784 148.652 C 236.584 147.687,234.891 147.051,233.981 147.599 M249.305 148.020 C 248.829 148.368,248.832 150.911,249.308 151.825 C 249.817 152.801,249.986 152.894,251.259 152.894 L 252.432 152.894 252.376 152.408 C 252.322 151.938,252.282 151.921,251.127 151.870 C 250.273 151.833,249.934 151.750,249.934 151.581 C 249.934 151.451,249.815 151.116,249.670 150.838 C 249.336 150.197,249.333 149.428,249.661 148.498 C 249.935 147.722,249.856 147.616,249.305 148.020 M173.694 148.873 C 173.974 149.940,173.854 152.650,173.468 153.947 C 173.063 155.312,173.257 155.081,174.079 153.224 C 174.758 151.690,174.353 147.945,173.509 147.945 C 173.477 147.945,173.560 148.363,173.694 148.873 M368.030 148.669 C 367.752 149.316,367.680 150.045,367.605 152.983 C 367.503 156.906,367.510 156.960,368.101 156.960 C 368.510 156.960,368.513 156.946,368.263 156.347 C 367.952 155.601,367.942 154.713,368.231 153.425 C 368.351 152.890,368.409 151.935,368.361 151.304 C 368.312 150.672,368.332 149.685,368.406 149.110 C 368.574 147.803,368.460 147.669,368.030 148.669 M138.400 149.006 L 138.400 149.536 139.634 149.536 C 141.086 149.536,141.209 149.713,140.920 151.388 C 140.716 152.574,140.786 152.611,141.250 151.560 C 141.683 150.583,141.725 149.816,141.371 149.403 C 141.225 149.233,141.056 148.955,140.996 148.785 C 140.905 148.530,140.667 148.475,139.643 148.475 L 138.400 148.475 138.400 149.006 M285.769 148.617 C 284.275 148.695,284.196 148.873,284.187 152.189 C 284.178 155.526,284.257 155.667,286.069 155.575 L 287.229 155.516 287.212 154.514 C 287.198 153.746,287.161 153.616,287.053 153.955 C 286.975 154.198,286.903 154.317,286.894 154.220 C 286.884 154.118,286.475 154.068,285.929 154.102 C 284.988 154.161,284.981 154.158,284.868 153.594 C 284.722 152.865,284.722 151.157,284.868 150.428 L 284.981 149.862 286.106 149.920 L 287.230 149.978 287.230 149.256 C 287.229 148.789,287.151 148.540,287.008 148.549 C 286.887 148.557,286.329 148.588,285.769 148.617 M361.711 148.938 C 361.488 149.829,361.642 149.955,362.901 149.909 L 364.070 149.867 364.182 150.431 C 364.327 151.151,364.328 152.864,364.185 153.579 C 364.058 154.213,361.997 154.483,361.997 153.867 C 361.997 153.721,361.918 153.601,361.821 153.601 C 361.639 153.601,361.572 155.152,361.734 155.575 C 361.844 155.861,364.028 155.884,364.309 155.603 C 365.450 154.461,364.885 148.674,363.628 148.639 C 363.363 148.631,362.846 148.607,362.478 148.585 C 361.918 148.551,361.794 148.607,361.711 148.938 M9.916 150.526 C 8.811 151.931,9.523 155.048,10.994 155.245 C 12.651 155.467,12.770 157.646,11.148 158.067 C 10.434 158.251,9.371 157.633,9.369 157.031 C 9.368 156.549,8.911 156.149,8.038 155.863 C 7.410 155.658,7.298 155.529,6.982 154.656 C 6.340 152.880,6.153 152.718,4.752 152.718 C 3.572 152.718,3.535 152.731,3.535 153.160 C 3.535 153.403,3.635 153.609,3.756 153.617 C 3.878 153.626,4.295 153.652,4.684 153.675 C 5.073 153.698,5.528 153.730,5.696 153.747 C 6.083 153.787,6.540 154.659,6.540 155.360 C 6.540 156.032,7.088 156.605,7.733 156.609 C 8.416 156.613,8.593 156.776,8.732 157.534 C 8.858 158.222,9.490 158.727,10.223 158.727 C 11.361 158.727,11.729 159.145,11.684 160.386 L 11.642 161.555 12.184 161.555 L 12.726 161.555 12.726 160.308 C 12.726 159.556,12.794 159.102,12.896 159.165 C 12.989 159.223,13.043 159.669,13.015 160.156 C 12.929 161.675,12.903 161.666,16.239 161.276 C 17.453 161.134,18.029 161.408,18.029 162.127 C 18.029 163.011,18.312 163.323,19.113 163.323 C 20.380 163.323,20.857 163.834,20.857 165.191 C 20.857 166.291,20.872 166.328,21.307 166.328 C 21.752 166.328,21.756 166.315,21.705 165.046 L 21.653 163.765 20.592 163.256 C 20.009 162.976,19.368 162.672,19.168 162.582 C 18.969 162.491,18.651 162.084,18.461 161.678 C 18.172 161.057,17.995 160.906,17.340 160.721 C 16.224 160.407,15.908 160.058,15.908 159.142 C 15.908 158.289,15.519 157.753,14.764 157.564 C 14.291 157.445,14.282 157.414,14.226 155.722 L 14.194 154.750 13.460 154.696 C 12.964 154.659,12.726 154.559,12.726 154.387 C 12.726 154.191,12.462 154.132,11.587 154.132 L 10.447 154.132 10.146 153.178 C 9.870 152.304,9.868 152.135,10.117 151.145 C 10.425 149.922,10.415 149.891,9.916 150.526 M58.651 150.287 C 58.613 150.409,58.592 150.966,58.605 151.526 L 58.629 152.543 57.740 152.807 C 57.251 152.952,56.667 153.071,56.442 153.071 C 56.007 153.071,55.331 153.628,55.315 153.999 C 55.206 156.575,54.986 158.939,54.839 159.117 C 54.511 159.515,54.660 160.976,55.060 161.277 C 56.186 162.128,58.899 161.490,58.838 160.389 C 58.790 159.508,58.851 159.258,59.117 159.258 C 59.308 159.258,59.387 159.538,59.426 160.362 L 59.479 161.467 60.230 161.521 L 60.981 161.576 60.981 160.103 C 60.981 158.535,60.718 157.844,60.121 157.844 C 59.472 157.844,59.155 157.417,59.286 156.719 L 59.408 156.067 60.415 156.110 C 60.970 156.134,61.481 156.235,61.553 156.336 C 61.624 156.436,61.684 156.170,61.685 155.745 C 61.687 155.158,61.741 155.011,61.909 155.135 C 62.189 155.342,63.974 155.274,64.200 155.049 C 64.309 154.940,64.303 154.505,64.185 153.842 C 63.592 150.523,63.509 150.327,62.630 150.182 C 61.385 149.976,58.727 150.047,58.651 150.287 M112.043 150.440 C 111.092 151.391,111.859 154.701,113.163 155.277 C 113.533 155.440,114.112 155.835,114.452 156.155 L 115.068 156.736 115.068 156.233 C 115.068 155.235,114.554 154.308,114.000 154.308 C 113.042 154.308,112.626 154.022,112.407 153.211 C 112.183 152.380,112.308 150.676,112.621 150.299 C 112.950 149.903,112.461 150.023,112.043 150.440 M337.693 151.286 L 337.702 152.551 336.826 152.811 C 336.344 152.954,335.728 153.071,335.456 153.071 C 334.663 153.071,334.463 153.599,334.251 156.253 C 334.147 157.565,334.009 158.838,333.945 159.081 C 333.752 159.820,333.745 160.848,333.933 160.848 C 334.031 160.848,334.069 161.008,334.019 161.202 C 333.858 161.816,337.303 161.735,337.709 161.115 C 337.867 160.873,337.949 160.548,337.890 160.394 C 337.734 159.989,337.956 159.258,338.234 159.258 C 338.402 159.258,338.487 159.581,338.524 160.362 L 338.577 161.467 339.338 161.522 L 340.099 161.577 340.031 160.108 C 339.950 158.322,339.761 157.923,338.926 157.766 C 338.307 157.650,338.294 157.630,338.346 156.906 L 338.400 156.164 339.373 156.139 C 339.907 156.126,340.404 156.106,340.477 156.095 C 340.550 156.085,340.618 155.738,340.627 155.325 C 340.642 154.687,340.666 154.640,340.787 155.015 C 340.864 155.259,340.936 155.374,340.946 155.272 C 340.957 155.156,341.274 155.126,341.803 155.192 C 342.669 155.299,343.438 155.101,343.438 154.770 C 343.438 154.469,342.898 151.808,342.692 151.092 C 342.451 150.254,342.347 150.219,339.810 150.112 L 337.684 150.022 337.693 151.286 M147.183 150.486 C 146.535 152.173,146.992 153.175,148.805 154.044 C 149.499 154.376,150.066 154.592,150.066 154.522 C 150.062 153.882,148.599 152.543,147.901 152.542 C 147.638 152.541,147.592 152.368,147.592 151.392 C 147.592 150.328,147.404 149.911,147.183 150.486 M318.065 150.609 C 318.015 150.691,317.868 150.717,317.738 150.668 C 317.456 150.559,317.215 152.007,317.379 152.826 C 317.562 153.739,319.447 153.537,319.654 152.583 C 319.930 151.306,318.632 149.693,318.065 150.609 M291.863 152.364 C 291.855 153.674,291.892 153.937,292.029 153.562 C 292.201 153.092,292.958 153.008,294.059 153.338 C 294.311 153.414,294.511 152.475,294.366 151.898 C 294.259 151.469,292.709 151.277,292.709 151.692 C 292.709 151.982,292.014 151.394,291.945 151.045 C 291.905 150.847,291.869 151.441,291.863 152.364 M105.877 151.657 L 105.877 152.187 107.140 152.187 L 108.403 152.187 108.298 153.469 L 108.194 154.750 108.551 153.955 C 109.442 151.964,109.007 151.127,107.081 151.127 L 105.877 151.127 105.877 151.657 M114.960 152.264 C 114.645 153.084,114.952 153.514,115.820 153.470 C 116.393 153.441,116.660 153.497,116.662 153.647 C 116.664 153.792,116.723 153.776,116.836 153.601 C 116.979 153.381,117.010 153.396,117.023 153.690 L 117.038 154.043 117.190 153.690 C 117.560 152.828,117.408 152.387,116.703 152.276 C 116.339 152.219,115.819 152.138,115.548 152.095 C 115.231 152.045,115.021 152.105,114.960 152.264 M384.412 153.755 C 384.080 154.801,384.382 155.632,385.229 156.004 C 385.538 156.140,385.602 156.349,385.647 157.360 C 385.704 158.673,385.495 158.957,384.743 158.582 C 383.471 157.948,380.558 157.589,380.284 158.032 C 380.089 158.349,380.344 158.444,381.580 158.512 C 382.239 158.548,383.100 158.729,383.517 158.918 L 384.269 159.259 384.269 160.418 L 384.269 161.576 385.020 161.521 L 385.771 161.467 385.822 160.407 C 385.882 159.160,386.116 158.904,387.197 158.904 C 388.915 158.904,389.020 158.981,389.078 160.295 L 389.129 161.467 391.502 161.517 C 394.202 161.573,394.160 161.594,394.164 160.186 L 394.167 159.258 395.118 159.258 C 396.277 159.258,396.402 159.116,396.450 157.755 L 396.487 156.695 395.371 156.754 C 394.056 156.823,394.033 156.840,393.973 157.755 C 393.854 159.552,392.224 159.721,390.524 158.112 C 389.960 157.580,389.453 157.219,389.397 157.310 C 389.243 157.559,388.053 158.020,387.566 158.020 C 386.945 158.020,386.677 157.591,386.477 156.274 L 386.299 155.104 385.593 155.015 L 384.887 154.927 384.799 153.869 L 384.711 152.811 384.412 153.755 M58.795 154.163 L 59.229 154.597 58.868 155.439 C 58.631 155.993,58.506 156.667,58.506 157.402 C 58.506 159.045,58.478 159.081,57.181 159.081 C 55.828 159.081,55.819 159.065,55.844 156.799 C 55.865 154.900,55.963 154.354,56.365 153.892 C 56.781 153.415,58.205 153.574,58.795 154.163 M337.623 154.012 C 338.301 154.475,338.307 154.540,337.797 155.939 C 337.576 156.545,337.428 157.378,337.428 158.016 L 337.428 159.081 336.290 159.081 C 334.864 159.081,334.885 159.120,334.926 156.538 C 334.972 153.628,335.853 152.802,337.623 154.012 M140.698 154.520 C 140.698 155.028,140.757 155.178,140.919 155.080 C 141.088 154.979,141.093 155.008,140.942 155.202 C 140.629 155.606,140.678 156.584,141.019 156.755 C 141.646 157.069,143.117 157.007,143.250 156.662 C 144.035 154.637,143.627 153.754,141.928 153.797 L 140.698 153.828 140.698 154.520 M231.473 154.468 C 231.425 154.546,231.582 154.700,231.822 154.809 C 232.169 154.967,232.261 155.144,232.272 155.675 C 232.279 156.041,232.314 156.492,232.348 156.677 C 232.443 157.180,231.906 157.826,231.090 158.191 C 230.280 158.554,230.137 158.916,230.137 160.605 C 230.137 161.501,230.162 161.555,230.579 161.555 C 231.005 161.555,231.021 161.515,231.021 160.402 C 231.021 159.373,231.064 159.231,231.418 159.082 C 232.321 158.703,232.871 157.983,233.480 156.383 C 233.654 155.924,233.723 155.899,234.817 155.899 L 235.970 155.899 235.970 155.300 C 235.970 154.793,235.895 154.681,235.485 154.578 C 234.749 154.394,231.573 154.307,231.473 154.468 M16.121 155.829 C 16.080 157.144,16.252 157.490,16.946 157.491 C 17.202 157.491,17.888 157.688,18.471 157.929 C 19.171 158.217,19.879 158.367,20.552 158.370 C 21.501 158.374,21.586 158.408,21.758 158.860 C 21.994 159.480,22.432 159.965,22.757 159.965 C 22.896 159.965,23.331 160.239,23.722 160.574 C 24.114 160.909,24.683 161.236,24.988 161.300 C 25.292 161.365,25.795 161.608,26.104 161.840 C 27.272 162.717,27.762 162.366,27.565 160.796 C 27.506 160.329,27.526 159.906,27.608 159.856 C 27.689 159.805,27.714 159.694,27.661 159.609 C 27.609 159.524,27.906 159.425,28.321 159.387 C 28.917 159.334,28.841 159.313,27.963 159.289 C 27.272 159.269,26.659 159.356,26.346 159.518 C 25.407 160.004,24.469 160.050,24.022 159.633 C 23.802 159.429,23.657 159.241,23.698 159.215 C 24.323 158.834,24.518 158.813,25.518 159.019 C 26.734 159.270,26.708 159.275,26.585 158.805 C 26.408 158.127,25.370 157.623,23.886 157.492 C 23.128 157.426,22.411 157.311,22.293 157.239 C 22.176 157.166,21.951 157.212,21.794 157.342 C 21.609 157.496,21.027 157.577,20.124 157.574 C 18.356 157.567,18.146 157.389,18.108 155.858 L 18.080 154.750 17.119 154.698 L 16.157 154.646 16.121 155.829 M252.261 155.109 C 251.544 156.682,251.647 157.554,252.647 158.405 C 253.230 158.901,253.201 158.765,253.285 161.335 C 253.289 161.468,253.538 161.555,253.911 161.555 L 254.529 161.555 254.559 159.479 C 254.575 158.336,254.608 156.885,254.632 156.253 C 254.686 154.843,254.600 154.732,253.416 154.685 C 252.552 154.650,252.454 154.686,252.261 155.109 M292.085 154.949 C 292.795 156.662,292.598 158.290,291.662 158.440 C 290.748 158.586,290.457 159.070,290.481 160.407 L 290.499 161.467 291.692 161.519 L 292.886 161.572 292.886 160.419 C 292.886 159.073,293.102 158.843,294.547 158.660 C 295.602 158.526,295.848 158.339,295.995 157.556 C 296.153 156.714,296.603 156.456,297.858 156.490 C 298.815 156.515,298.904 156.487,298.858 156.164 C 298.725 155.243,295.974 155.679,295.573 156.685 C 294.902 158.368,293.239 158.511,293.239 156.886 C 293.239 156.017,292.914 155.252,292.403 154.917 C 291.967 154.631,291.953 154.632,292.085 154.949 M319.311 154.873 C 318.778 155.175,318.698 155.373,318.695 156.394 C 318.690 158.033,318.132 158.638,316.823 158.426 C 316.297 158.341,316.189 158.233,316.001 157.604 C 315.661 156.470,315.339 156.253,314.001 156.253 L 312.845 156.253 312.896 157.711 L 312.947 159.169 315.378 159.218 L 317.808 159.268 317.808 160.412 L 317.808 161.555 318.692 161.555 C 319.410 161.555,319.578 161.498,319.590 161.246 C 319.632 160.323,319.718 159.335,319.762 159.258 C 319.791 159.209,319.859 159.686,319.916 160.318 L 320.018 161.467 320.724 161.467 L 321.431 161.467 321.473 160.379 C 321.525 159.054,321.206 158.559,320.196 158.395 C 319.245 158.240,318.831 155.824,319.597 154.901 C 319.836 154.614,319.778 154.608,319.311 154.873 M98.251 155.502 C 97.824 156.187,97.768 157.097,97.964 160.185 C 98.044 161.459,98.179 161.588,99.356 161.521 L 100.309 161.467 100.309 160.331 C 100.309 159.083,100.158 158.819,99.335 158.639 C 98.464 158.447,98.179 157.551,98.507 156.032 C 98.808 154.643,98.799 154.625,98.251 155.502 M198.549 155.060 C 197.766 156.088,197.596 157.227,198.064 158.305 C 198.228 158.683,198.387 159.510,198.416 160.141 C 198.446 160.773,198.477 161.355,198.484 161.435 C 198.491 161.514,198.716 161.554,198.984 161.523 C 199.771 161.432,199.724 159.655,198.904 158.581 C 198.234 157.703,198.122 156.596,198.588 155.479 C 198.862 154.823,198.848 154.668,198.549 155.060 M324.917 155.838 C 325.396 157.255,325.029 158.897,324.172 159.169 C 323.882 159.261,323.821 159.421,323.845 160.037 C 323.860 160.453,323.811 160.894,323.735 161.017 C 323.548 161.318,323.947 161.549,324.658 161.553 L 325.232 161.555 325.232 160.626 C 325.232 160.115,325.315 159.419,325.416 159.080 C 325.729 158.032,325.675 156.417,325.303 155.647 C 324.778 154.563,324.529 154.687,324.917 155.838 M356.577 155.899 C 356.366 156.531,356.144 157.346,356.083 157.711 C 356.022 158.076,355.901 158.374,355.815 158.374 C 355.729 158.374,355.609 158.529,355.549 158.718 C 355.488 158.908,355.284 159.112,355.095 159.172 C 354.811 159.262,354.751 159.443,354.753 160.198 C 354.757 161.449,354.878 161.588,355.916 161.522 L 356.783 161.467 356.725 160.795 C 356.692 160.426,356.758 159.432,356.871 158.586 C 356.984 157.740,357.050 156.531,357.018 155.899 L 356.960 154.750 356.577 155.899 M154.908 155.281 C 155.374 157.174,155.146 158.056,154.141 158.257 C 153.175 158.450,152.731 161.555,153.669 161.555 C 154.146 161.555,154.302 161.184,154.306 160.042 C 154.308 159.446,154.401 159.256,154.855 158.920 C 155.965 158.099,156.108 156.955,155.266 155.628 C 155.022 155.243,154.861 155.086,154.908 155.281 M201.149 155.502 C 201.149 155.983,201.161 155.988,202.313 155.988 C 203.662 155.988,204.154 156.369,204.154 157.414 C 204.154 158.103,204.714 158.727,205.332 158.727 C 205.555 158.727,206.037 158.847,206.404 158.994 L 207.070 159.260 207.070 160.363 C 207.070 161.585,207.834 162.179,208.105 161.167 C 208.561 159.464,208.037 158.374,206.761 158.373 C 205.956 158.372,204.861 157.833,204.861 157.437 C 204.861 157.121,204.179 155.709,203.841 155.325 C 203.327 154.741,201.149 154.884,201.149 155.502 M259.772 156.007 C 260.097 157.246,259.909 158.019,259.109 158.727 C 258.673 159.114,258.604 159.313,258.558 160.318 L 258.506 161.467 259.081 161.522 L 259.655 161.578 259.655 160.427 C 259.655 159.646,259.732 159.230,259.895 159.134 C 260.614 158.709,260.754 157.096,260.168 155.985 C 259.583 154.877,259.477 154.883,259.772 156.007 M301.370 155.121 C 301.370 155.179,301.497 155.665,301.653 156.201 C 301.973 157.301,301.667 158.432,300.992 158.647 C 300.212 158.894,300.154 161.467,300.928 161.467 C 301.452 161.467,301.459 161.455,301.512 160.410 C 301.552 159.641,301.660 159.267,301.910 159.034 C 302.244 158.723,302.364 157.945,302.267 156.727 C 302.219 156.115,301.370 154.596,301.370 155.121 M133.912 155.650 C 133.853 155.803,133.805 156.160,133.805 156.444 C 133.805 156.870,133.731 156.960,133.382 156.960 C 132.855 156.960,132.806 157.187,132.821 159.611 L 132.833 161.467 133.451 161.467 L 134.070 161.467 134.167 159.696 C 134.289 157.475,134.278 157.490,135.661 157.490 C 137.148 157.490,137.339 157.740,137.343 159.695 C 137.346 161.334,137.462 161.606,138.124 161.525 L 138.606 161.467 138.604 159.483 C 138.604 158.392,138.572 157.437,138.534 157.362 C 138.496 157.287,138.443 156.907,138.415 156.518 C 138.351 155.601,138.331 155.593,136.138 155.558 C 135.112 155.541,134.215 155.492,134.145 155.449 C 134.076 155.406,133.970 155.496,133.912 155.650 M147.592 156.137 C 147.592 156.268,147.433 156.519,147.238 156.695 C 147.004 156.907,146.885 157.239,146.885 157.680 C 146.885 158.538,145.992 158.941,144.277 158.857 C 143.376 158.812,143.156 158.856,143.080 159.094 C 142.933 159.556,143.036 161.202,143.211 161.202 C 143.299 161.202,143.321 161.281,143.261 161.379 C 143.191 161.493,143.937 161.555,145.372 161.555 L 147.592 161.555 147.592 160.407 L 147.592 159.258 148.255 159.237 C 148.619 159.225,148.992 159.230,149.083 159.248 C 149.603 159.348,150.026 159.058,150.033 158.597 C 150.037 158.328,150.053 157.715,150.068 157.233 C 150.103 156.143,149.822 155.899,148.530 155.899 C 147.862 155.899,147.592 155.968,147.592 156.137 M108.175 156.783 L 108.175 157.313 109.410 157.313 C 110.630 157.313,110.648 157.320,110.916 157.888 C 111.937 160.050,112.388 160.456,113.846 160.525 L 115.069 160.583 115.069 160.009 L 115.068 159.434 113.941 159.434 C 112.719 159.434,112.366 159.161,111.491 157.539 C 110.858 156.365,110.674 156.253,109.373 156.253 L 108.175 156.253 108.175 156.783 M68.405 157.534 C 68.285 157.850,68.083 158.347,67.957 158.639 C 67.280 160.206,67.589 161.620,68.589 161.525 L 69.200 161.467 69.252 159.611 C 69.325 156.999,68.955 156.091,68.405 157.534 M73.143 157.349 C 73.101 157.572,73.072 158.590,73.078 159.611 L 73.089 161.467 73.663 161.522 C 74.117 161.566,74.241 161.510,74.252 161.257 C 74.260 161.081,74.282 160.579,74.303 160.141 C 74.359 158.906,73.321 156.405,73.143 157.349 M89.445 158.436 C 89.105 160.793,89.099 160.897,89.285 161.244 C 89.437 161.529,89.634 161.569,90.644 161.522 L 91.825 161.467 91.845 160.672 C 91.856 160.234,91.877 159.558,91.892 159.169 C 91.916 158.561,91.862 157.766,91.764 157.259 C 91.749 157.180,91.657 157.165,91.560 157.225 C 91.463 157.285,91.383 157.263,91.383 157.176 C 91.383 157.088,90.994 157.012,90.518 157.007 L 89.653 156.997 89.445 158.436 M161.194 157.410 C 160.812 157.817,160.761 158.052,160.700 159.709 L 160.632 161.555 161.270 161.555 L 161.909 161.555 161.906 159.479 C 161.903 157.052,161.803 156.762,161.194 157.410 M211.749 157.105 C 211.440 157.242,211.261 160.924,211.542 161.342 C 211.653 161.506,212.116 161.556,213.182 161.519 L 214.667 161.467 214.669 160.340 C 214.670 159.578,214.597 159.185,214.441 159.125 C 214.315 159.076,213.895 158.569,213.507 157.998 C 212.801 156.958,212.464 156.787,211.749 157.105 M235.549 157.836 C 235.157 158.557,235.086 158.907,235.086 160.133 L 235.086 161.579 236.721 161.523 L 238.356 161.467 238.380 159.470 C 238.407 157.105,238.339 156.985,236.963 156.985 L 236.012 156.985 235.549 157.836 M245.156 157.141 C 245.154 157.285,245.143 158.316,245.132 159.434 L 245.114 161.467 245.756 161.522 L 246.399 161.577 246.426 160.727 C 246.440 160.259,246.464 159.757,246.477 159.611 C 246.515 159.210,245.855 157.625,245.487 157.230 C 245.239 156.964,245.160 156.943,245.156 157.141 M268.891 157.083 C 268.769 157.129,268.670 157.398,268.670 157.682 C 268.670 157.975,268.765 158.198,268.891 158.200 C 269.062 158.202,269.060 158.235,268.883 158.347 C 268.719 158.452,268.669 158.909,268.706 159.980 L 268.758 161.467 270.393 161.518 L 272.028 161.569 272.028 160.320 C 272.028 159.285,271.938 158.892,271.502 158.028 L 270.975 156.985 270.044 156.993 C 269.531 156.997,269.012 157.038,268.891 157.083 M330.579 157.142 C 330.212 157.289,330.180 157.420,330.162 158.810 C 330.124 161.660,330.110 161.555,330.535 161.555 C 330.862 161.555,330.888 161.438,330.888 159.987 C 330.888 159.066,330.994 158.117,331.145 157.689 C 331.422 156.906,331.346 156.834,330.579 157.142 M347.546 157.311 C 347.425 157.504,347.327 157.770,347.327 157.902 C 347.327 158.035,347.213 158.374,347.075 158.656 C 346.361 160.113,346.683 161.621,347.688 161.525 L 348.299 161.467 348.340 159.611 C 348.397 157.033,348.156 156.334,347.546 157.311 M360.293 159.213 L 360.318 161.467 363.133 161.516 C 366.312 161.571,366.166 161.637,366.220 160.126 C 366.283 158.395,366.264 158.374,364.631 158.374 C 362.983 158.374,362.071 158.061,361.824 157.410 C 361.681 157.033,361.540 156.960,360.960 156.960 L 360.268 156.960 360.293 159.213 M369.068 157.145 C 369.068 157.249,368.988 157.285,368.891 157.225 C 368.794 157.165,368.714 157.244,368.714 157.402 C 368.714 157.583,368.795 157.639,368.935 157.555 C 369.081 157.467,369.073 157.525,368.910 157.726 C 368.774 157.892,368.712 158.077,368.771 158.136 C 368.830 158.195,368.798 158.393,368.701 158.576 C 368.594 158.775,368.571 159.438,368.643 160.232 L 368.763 161.555 370.329 161.555 C 371.698 161.555,371.897 161.516,371.910 161.246 C 371.918 161.076,371.941 160.579,371.962 160.141 C 372.000 159.336,371.608 157.971,371.165 157.369 C 370.892 156.997,369.068 156.802,369.068 157.145 M45.516 157.513 C 45.586 157.744,45.836 158.292,46.072 158.733 C 46.350 159.253,46.514 159.872,46.538 160.500 L 46.575 161.467 47.480 161.520 C 48.471 161.577,48.608 161.380,48.608 159.898 C 48.608 159.344,47.826 158.374,47.379 158.374 C 47.269 158.374,47.029 158.235,46.846 158.065 C 46.662 157.894,46.260 157.607,45.951 157.425 L 45.389 157.095 45.516 157.513 M51.928 157.445 C 50.954 158.555,50.660 161.555,51.525 161.555 C 51.957 161.555,51.967 161.527,51.974 160.186 C 51.978 159.432,52.051 158.458,52.136 158.020 C 52.315 157.091,52.293 157.028,51.928 157.445 M61.688 157.279 C 61.688 157.660,62.779 158.374,63.362 158.374 C 64.463 158.374,65.059 159.171,64.932 160.473 C 64.826 161.550,64.828 161.555,65.290 161.555 C 65.746 161.555,65.753 161.535,65.753 160.332 C 65.753 158.552,65.022 157.737,63.190 157.474 C 62.704 157.404,62.167 157.291,61.997 157.223 C 61.824 157.153,61.688 157.178,61.688 157.279 M164.756 157.753 C 165.183 158.093,165.607 158.371,165.698 158.372 C 166.496 158.380,167.033 159.181,167.034 160.362 C 167.035 161.642,167.704 162.202,167.984 161.158 C 168.552 159.039,166.704 157.137,164.079 157.137 C 164.025 157.137,164.330 157.414,164.756 157.753 M170.238 157.955 C 169.935 158.413,169.680 158.993,169.672 159.244 C 169.664 159.494,169.619 159.934,169.573 160.220 C 169.427 161.118,169.630 161.555,170.193 161.555 L 170.692 161.555 170.808 159.405 C 170.944 156.873,170.948 156.883,170.238 157.955 M340.787 157.279 C 340.787 157.646,341.877 158.374,342.435 158.379 C 343.468 158.390,343.968 159.049,343.968 160.398 C 343.968 161.515,343.984 161.555,344.410 161.555 C 344.839 161.555,344.852 161.519,344.852 160.332 C 344.852 158.552,344.121 157.737,342.289 157.474 C 341.803 157.404,341.266 157.291,341.096 157.223 C 340.923 157.153,340.787 157.178,340.787 157.279 M31.465 158.719 C 28.986 158.828,28.830 158.930,29.486 160.011 C 30.413 161.536,29.960 162.439,28.270 162.439 C 27.743 162.439,27.529 163.956,27.738 166.195 C 27.745 166.268,28.029 166.328,28.369 166.328 L 28.988 166.328 28.988 165.071 L 28.988 163.814 31.112 163.942 C 32.631 164.033,33.305 164.011,33.482 163.864 C 33.694 163.688,33.933 158.435,33.722 158.586 C 33.695 158.606,32.679 158.666,31.465 158.719 M110.375 163.869 C 110.153 164.228,110.632 164.439,111.600 164.407 C 112.393 164.381,112.581 164.432,112.648 164.689 C 112.701 164.893,112.737 164.837,112.750 164.531 C 112.777 163.924,110.699 163.344,110.375 163.869 M106.879 165.208 C 106.815 165.272,106.066 165.344,105.215 165.368 L 103.668 165.410 103.655 166.915 C 103.640 168.622,103.592 168.574,105.296 168.550 C 106.413 168.534,106.389 168.559,106.429 167.349 C 106.461 166.357,106.462 166.355,107.191 166.077 C 108.476 165.586,108.834 165.878,108.916 167.480 C 108.966 168.459,109.003 168.541,109.412 168.589 L 109.854 168.641 109.818 167.182 C 109.786 165.892,109.735 165.687,109.376 165.411 C 108.971 165.099,107.137 164.950,106.879 165.208 \",stroke:\"none\",fill:\"#849c84\",fillRule:\"evenodd\"}),/*#__PURE__*/React.createElement(\"path\",{id:\"path2\",d:\"M3.571 20.979 C 3.623 22.146,3.631 22.164,4.190 22.308 C 4.848 22.478,5.303 23.041,5.303 23.685 C 5.303 24.534,5.754 24.923,6.737 24.923 C 9.198 24.923,11.269 25.576,11.748 26.502 C 11.963 26.918,12.201 27.059,12.975 27.232 C 14.196 27.505,14.848 28.193,14.848 29.209 C 14.848 29.742,15.243 30.568,15.543 30.663 C 16.177 30.865,16.262 31.515,16.259 36.199 C 16.256 40.933,16.165 41.650,15.466 42.422 C 15.011 42.924,13.080 42.909,13.080 42.403 C 13.080 42.230,13.000 42.040,12.903 41.980 C 12.788 41.909,12.726 42.882,12.726 44.769 L 12.726 47.668 13.449 47.885 C 14.768 48.280,14.896 48.870,14.788 54.060 C 14.668 59.834,14.371 66.096,14.150 67.521 C 14.051 68.153,13.969 69.197,13.967 69.841 C 13.964 71.030,13.530 72.377,13.014 72.805 C 12.704 73.063,10.790 73.017,10.762 72.752 C 10.683 72.003,10.447 74.343,10.439 75.954 L 10.429 77.936 11.121 78.123 C 12.326 78.447,12.549 79.191,12.553 82.910 C 12.557 86.785,12.248 94.351,12.004 96.332 C 11.903 97.159,11.749 98.829,11.664 100.044 C 11.402 103.769,11.151 104.243,9.475 104.174 C 8.038 104.115,8.101 103.945,8.169 107.727 L 8.219 110.548 8.793 110.713 C 9.338 110.869,9.888 111.692,10.316 112.992 C 10.406 113.267,10.692 113.301,12.888 113.301 C 15.514 113.301,15.908 113.162,15.908 112.234 C 15.908 111.953,16.489 111.462,17.328 111.035 C 17.619 110.887,17.885 110.502,18.086 109.934 C 18.392 109.074,19.016 108.529,19.696 108.529 C 19.846 108.529,20.017 108.312,20.079 108.042 C 20.284 107.160,20.912 106.054,21.209 106.054 C 21.547 106.054,22.135 105.309,22.516 104.396 C 22.664 104.041,22.909 103.704,23.059 103.646 C 23.209 103.589,23.332 103.396,23.332 103.218 C 23.332 103.026,23.613 102.737,24.024 102.506 C 24.543 102.214,24.793 101.913,25.024 101.301 C 25.366 100.392,25.873 99.800,26.468 99.615 C 27.042 99.435,27.397 99.021,27.397 98.530 C 27.397 98.057,28.251 97.187,28.867 97.032 C 29.145 96.962,29.345 96.650,29.604 95.883 C 29.932 94.912,30.016 94.812,30.676 94.603 C 31.307 94.403,31.416 94.286,31.594 93.622 C 31.705 93.208,32.080 92.554,32.427 92.170 C 33.246 91.264,33.223 91.286,33.890 90.753 C 34.236 90.477,34.548 90.006,34.680 89.558 C 34.910 88.785,35.367 88.273,35.979 88.104 C 36.217 88.039,36.417 87.746,36.563 87.250 C 36.835 86.331,37.524 85.550,38.063 85.550 C 38.609 85.550,38.885 85.229,38.892 84.587 C 38.899 83.904,39.606 83.076,40.182 83.076 C 40.734 83.076,40.933 82.822,41.195 81.780 C 41.341 81.199,41.554 80.840,41.871 80.640 C 43.285 79.748,43.836 79.153,43.836 78.514 C 43.836 77.740,44.458 76.778,45.106 76.551 C 45.564 76.391,46.133 75.572,46.133 75.073 C 46.133 74.730,46.841 74.128,47.400 73.996 C 47.793 73.903,47.935 73.695,48.250 72.749 C 48.601 71.693,48.683 71.591,49.408 71.290 C 50.104 71.003,50.207 70.885,50.350 70.212 C 50.513 69.449,51.739 67.856,52.341 67.622 C 52.499 67.561,52.762 67.087,52.925 66.568 C 53.240 65.567,53.756 64.870,54.183 64.870 C 54.586 64.870,55.148 64.208,55.148 63.734 C 55.148 63.146,55.943 62.251,56.621 62.076 C 57.120 61.947,57.210 61.821,57.455 60.903 C 57.606 60.337,57.888 59.745,58.082 59.588 C 58.276 59.431,58.489 59.161,58.555 58.988 C 58.621 58.816,58.816 58.623,58.988 58.559 C 59.512 58.364,60.097 57.563,60.097 57.040 C 60.097 56.529,60.638 55.901,61.533 55.372 C 61.819 55.203,62.083 54.823,62.212 54.393 C 62.471 53.527,63.121 52.850,63.693 52.850 C 64.050 52.850,64.144 52.738,64.246 52.193 C 64.427 51.231,64.809 50.593,65.381 50.297 C 65.660 50.153,65.934 49.913,65.992 49.763 C 66.049 49.614,66.210 49.492,66.349 49.492 C 66.617 49.492,66.990 48.631,66.992 48.007 C 66.994 47.428,67.617 46.610,68.353 46.221 C 68.862 45.953,69.038 45.741,69.083 45.343 C 69.170 44.582,69.714 43.916,70.509 43.598 C 71.216 43.315,71.304 43.178,71.503 42.054 C 71.578 41.629,71.770 41.327,72.087 41.135 C 73.353 40.370,73.887 39.711,74.044 38.718 C 74.199 37.737,74.215 37.717,75.614 36.647 C 75.890 36.435,76.218 35.955,76.342 35.578 C 76.556 34.930,77.430 34.114,77.910 34.114 C 78.021 34.114,78.194 33.811,78.294 33.440 C 78.504 32.661,79.102 32.032,79.813 31.842 C 80.086 31.769,80.363 31.594,80.429 31.454 C 81.080 30.067,81.217 29.881,81.727 29.692 C 83.025 29.209,83.076 29.174,83.076 28.736 C 83.076 28.070,83.755 27.462,84.666 27.311 C 85.614 27.154,86.086 26.928,86.405 26.478 C 86.777 25.953,87.948 25.289,88.953 25.031 C 90.094 24.739,90.266 24.146,90.174 20.813 L 90.146 19.797 86.743 19.799 C 84.852 19.801,83.223 19.878,83.076 19.973 C 82.930 20.068,82.892 20.146,82.991 20.148 C 83.255 20.151,83.200 22.173,82.927 22.502 C 82.461 23.064,80.456 23.332,76.720 23.332 L 73.174 23.332 72.601 22.784 C 72.068 22.274,72.028 22.156,72.028 21.061 L 72.028 19.885 66.505 19.838 L 60.981 19.792 60.979 21.341 C 60.977 22.665,60.913 23.002,60.537 23.659 C 60.295 24.082,60.097 24.458,60.097 24.494 C 60.097 24.595,61.860 25.061,62.749 25.195 C 63.765 25.349,65.046 25.923,65.046 26.225 C 65.046 26.633,65.633 27.005,66.724 27.288 C 67.792 27.565,68.228 27.912,68.228 28.483 C 68.228 29.100,68.624 29.656,69.175 29.814 C 70.590 30.218,70.789 34.225,69.430 34.928 C 68.486 35.416,68.228 35.809,68.228 36.760 C 68.228 38.050,67.514 39.518,66.727 39.847 C 66.318 40.017,66.089 40.249,66.025 40.554 C 65.973 40.803,65.885 41.226,65.829 41.494 C 65.695 42.137,64.903 42.952,64.410 42.952 C 64.089 42.952,63.995 43.082,63.898 43.658 C 63.832 44.046,63.706 44.409,63.617 44.464 C 63.528 44.519,63.456 44.721,63.456 44.913 C 63.456 45.556,62.754 46.469,61.933 46.894 C 61.556 47.089,61.329 47.394,61.159 47.933 C 60.861 48.879,60.533 49.276,59.798 49.583 C 59.411 49.745,59.187 49.983,59.106 50.320 C 58.947 50.983,58.358 52.143,58.181 52.143 C 57.884 52.143,56.916 53.162,56.916 53.475 C 56.916 53.656,56.735 54.086,56.514 54.432 C 56.292 54.777,56.027 55.219,55.923 55.413 C 55.819 55.608,55.476 55.892,55.160 56.044 C 54.726 56.253,54.490 56.558,54.203 57.281 C 53.871 58.115,53.705 58.299,52.941 58.683 C 52.134 59.089,52.051 59.190,51.928 59.918 C 51.789 60.741,51.388 61.205,50.538 61.528 C 50.190 61.661,50.008 61.939,49.765 62.711 C 49.590 63.266,49.258 63.946,49.028 64.220 C 48.797 64.495,48.608 64.774,48.608 64.840 C 48.608 64.906,48.387 65.058,48.118 65.177 C 47.569 65.420,47.017 66.233,47.017 66.799 C 47.017 67.056,46.725 67.359,46.078 67.773 C 45.317 68.260,45.096 68.515,44.915 69.117 C 44.658 69.977,43.959 70.703,43.388 70.703 C 43.069 70.703,42.968 70.832,42.870 71.365 C 42.737 72.097,42.091 73.174,41.783 73.176 C 41.291 73.179,40.290 74.413,40.144 75.196 C 39.947 76.252,39.549 76.824,38.752 77.199 C 38.222 77.449,38.077 77.628,37.995 78.137 C 37.852 79.018,37.316 79.668,36.625 79.801 C 36.013 79.919,35.862 80.138,35.531 81.396 C 35.397 81.906,35.156 82.233,34.670 82.567 C 34.192 82.896,33.807 83.411,33.352 84.335 C 32.633 85.795,32.312 86.257,32.020 86.257 C 31.699 86.257,29.732 87.337,29.415 87.688 C 29.137 87.995,29.096 87.976,28.500 87.266 C 27.345 85.889,27.212 85.216,27.668 83.050 C 27.817 82.343,28.002 80.817,28.080 79.659 C 28.258 77.030,28.407 76.844,30.270 76.932 L 31.463 76.989 31.463 73.948 L 31.463 70.907 30.951 70.795 C 29.708 70.522,29.424 69.400,29.591 65.426 C 29.920 57.610,30.025 55.897,30.206 55.326 C 30.314 54.986,30.402 54.183,30.402 53.540 C 30.402 51.723,30.840 51.187,32.384 51.119 C 33.486 51.070,33.562 51.092,33.635 51.473 C 33.677 51.696,33.723 50.428,33.736 48.656 L 33.760 45.433 33.335 45.326 C 32.198 45.041,31.816 43.940,31.816 40.945 C 31.816 35.945,32.379 32.675,33.380 31.860 C 33.823 31.499,35.837 31.569,35.936 31.949 C 35.997 32.182,36.022 32.160,36.038 31.860 C 36.055 31.536,35.965 31.463,35.555 31.463 C 34.888 31.463,34.537 31.024,34.391 30.008 C 34.170 28.477,34.985 27.397,36.361 27.397 C 37.020 27.397,37.241 27.284,38.111 26.495 C 39.565 25.179,39.979 25.046,42.902 24.959 C 46.027 24.865,45.878 25.078,45.799 20.813 L 45.780 19.797 39.269 19.797 C 35.689 19.797,32.724 19.832,32.680 19.875 C 32.637 19.918,32.645 20.467,32.698 21.095 C 32.788 22.174,32.766 22.264,32.290 22.740 L 31.787 23.243 25.748 23.290 L 19.708 23.336 18.800 22.811 C 17.834 22.253,17.570 21.576,17.874 20.438 C 18.048 19.790,18.120 19.797,10.494 19.797 L 3.519 19.797 3.571 20.979 M102.386 29.120 C 103.237 29.152,104.629 29.152,105.479 29.120 C 106.330 29.087,105.634 29.061,103.933 29.061 C 102.232 29.061,101.536 29.087,102.386 29.120 M371.056 29.119 C 371.615 29.154,372.530 29.154,373.089 29.119 C 373.648 29.084,373.190 29.055,372.072 29.055 C 370.954 29.055,370.497 29.084,371.056 29.119 M107.770 29.513 C 108.100 29.898,108.276 29.860,108.114 29.438 C 108.056 29.288,107.888 29.165,107.740 29.165 C 107.509 29.165,107.514 29.214,107.770 29.513 M310.379 31.860 C 310.371 32.417,310.013 32.828,309.264 33.141 C 308.701 33.377,305.869 33.409,286.321 33.406 C 274.056 33.403,263.975 33.447,263.920 33.502 C 263.768 33.655,264.287 33.931,264.731 33.935 C 264.946 33.936,265.394 34.176,265.726 34.468 L 266.330 34.998 268.656 34.998 C 271.062 34.998,272.028 35.285,272.028 36.000 C 272.028 36.228,272.222 36.294,273.513 36.503 C 274.397 36.646,275.210 37.430,275.210 38.139 C 275.210 38.804,275.546 39.770,275.776 39.770 C 276.034 39.770,276.721 40.693,276.660 40.958 C 276.476 41.761,275.777 42.110,274.500 42.038 L 273.249 41.967 273.301 42.494 C 273.344 42.919,273.462 43.048,273.917 43.165 C 274.994 43.442,275.210 43.969,275.210 46.325 C 275.210 50.623,274.526 51.877,272.245 51.761 C 271.056 51.701,270.337 52.302,271.410 52.460 C 273.396 52.753,273.368 57.618,271.368 59.708 C 270.754 60.349,270.758 60.330,270.422 64.183 C 270.244 66.225,270.140 66.719,269.737 67.453 L 269.261 68.316 267.861 68.316 L 266.460 68.316 266.358 67.256 L 266.255 66.195 266.225 67.372 L 266.195 68.548 267.066 68.668 C 267.590 68.740,267.977 68.893,268.038 69.053 C 268.546 70.376,268.067 75.652,267.440 75.652 C 267.370 75.652,267.222 75.851,267.111 76.094 C 267.001 76.337,266.794 76.536,266.651 76.536 C 266.234 76.536,266.176 76.779,266.003 79.237 C 265.675 83.907,265.279 84.740,263.386 84.750 C 262.793 84.752,262.307 84.814,262.307 84.887 C 262.307 84.960,262.501 85.020,262.739 85.020 C 263.903 85.020,264.072 88.227,263.087 91.640 C 262.614 93.279,261.020 94.058,259.644 93.321 C 259.342 93.160,259.302 93.199,259.302 93.648 C 259.302 94.077,259.412 94.201,259.994 94.429 C 261.907 95.181,261.749 99.589,259.738 101.543 C 259.003 102.257,258.948 102.374,258.948 103.227 C 258.948 104.338,258.551 105.082,257.810 105.354 C 256.878 105.697,256.769 105.794,256.575 106.462 C 256.283 107.465,255.754 107.730,254.107 107.699 C 252.574 107.669,252.415 107.569,252.411 106.628 C 252.409 106.288,252.318 106.054,252.187 106.054 C 252.028 106.053,251.982 106.362,252.022 107.158 L 252.078 108.263 251.324 108.749 C 250.909 109.017,250.436 109.236,250.272 109.236 C 250.084 109.236,249.943 109.416,249.892 109.722 C 249.847 109.989,249.778 110.327,249.739 110.473 C 249.678 110.703,250.376 110.750,255.003 110.826 C 260.952 110.925,261.133 110.964,261.491 112.214 L 261.651 112.771 266.315 112.771 C 270.602 112.771,270.987 112.746,271.074 112.461 C 271.571 110.856,271.822 110.811,280.115 110.867 C 287.355 110.916,288.495 110.812,286.257 110.311 C 285.661 110.178,285.217 109.969,285.112 109.772 C 284.972 109.512,284.626 109.427,283.301 109.329 C 281.210 109.174,280.457 108.977,279.866 108.430 C 279.369 107.969,279.199 107.911,277.796 107.729 C 276.710 107.587,276.096 106.993,276.087 106.072 C 276.080 105.307,275.818 104.800,275.166 104.288 C 274.083 103.440,274.980 102.168,276.601 102.253 C 277.163 102.282,277.613 102.400,277.703 102.543 C 277.801 102.698,277.857 102.485,277.859 101.944 C 277.861 101.162,277.831 101.105,277.411 101.105 C 275.633 101.105,275.550 95.165,277.300 93.106 C 277.506 92.864,277.842 92.797,278.861 92.797 C 280.259 92.797,280.877 92.100,279.734 91.813 C 278.013 91.381,277.995 86.229,279.710 84.880 C 280.377 84.356,280.536 83.828,280.700 81.602 C 280.958 78.094,281.546 76.005,282.274 76.005 C 282.366 76.005,282.590 75.667,282.773 75.254 C 283.358 73.937,284.067 73.707,287.566 73.707 C 292.792 73.707,294.219 74.081,295.368 75.751 C 295.695 76.227,296.050 76.523,296.371 76.588 C 298.559 77.025,299.307 81.354,297.355 82.280 C 296.680 82.601,296.610 82.695,296.604 83.289 L 296.597 83.944 297.949 83.996 C 299.612 84.060,300.085 84.464,299.779 85.563 C 299.474 86.657,298.922 87.015,297.670 86.930 L 296.597 86.857 296.597 94.555 L 296.597 102.254 297.580 102.192 C 299.525 102.071,300.442 103.006,300.671 105.341 C 300.795 106.609,300.834 106.698,301.527 107.313 C 301.927 107.668,302.254 108.047,302.254 108.155 C 302.254 108.263,302.410 108.352,302.601 108.352 C 302.792 108.352,303.029 108.502,303.127 108.685 C 303.225 108.868,303.578 109.179,303.911 109.376 C 304.244 109.572,304.625 109.959,304.757 110.236 C 304.976 110.693,305.109 110.750,306.233 110.872 C 306.912 110.946,308.121 111.169,308.918 111.368 C 310.850 111.849,317.617 111.792,319.222 111.281 C 319.948 111.050,320.874 110.964,322.877 110.943 L 325.559 110.915 326.088 111.420 C 326.379 111.698,326.665 112.116,326.723 112.348 C 326.828 112.766,326.852 112.771,329.122 112.771 L 331.414 112.771 331.657 112.196 C 332.212 110.885,331.989 110.928,338.903 110.798 C 342.319 110.734,345.174 110.718,345.248 110.764 C 345.322 110.810,345.382 110.763,345.382 110.660 C 345.382 110.554,345.013 110.473,344.532 110.473 C 343.171 110.473,342.373 109.246,342.420 107.223 C 342.446 106.061,342.295 105.884,341.273 105.880 C 340.728 105.878,340.610 105.940,340.610 106.228 C 340.610 107.050,339.713 107.680,338.545 107.680 C 337.110 107.680,336.878 107.587,336.268 106.770 C 335.982 106.388,335.580 105.997,335.374 105.902 C 333.783 105.167,333.784 97.746,335.376 97.746 C 335.956 97.746,336.544 96.839,336.544 95.944 C 336.544 94.757,337.294 93.171,337.977 92.913 C 338.549 92.697,338.773 92.234,338.985 90.834 C 339.146 89.764,339.248 89.594,340.396 88.484 C 340.880 88.016,341.238 87.466,341.386 86.965 C 341.858 85.365,341.014 85.470,354.012 85.404 C 368.748 85.329,367.368 85.156,369.349 87.329 C 371.130 89.281,371.074 95.657,369.269 96.315 L 368.537 96.582 368.574 100.125 C 368.594 102.073,368.637 102.913,368.670 101.990 C 368.738 100.033,368.754 100.010,369.982 99.956 C 372.048 99.866,372.792 102.423,371.155 103.984 C 370.775 104.346,370.596 104.730,370.482 105.434 C 370.072 107.953,368.079 108.455,366.573 106.418 C 366.270 106.009,366.034 105.877,365.602 105.877 C 364.558 105.877,364.486 105.969,364.575 107.187 C 364.681 108.623,363.954 109.231,362.126 109.235 C 361.619 109.236,361.290 109.728,361.290 110.484 C 361.290 110.815,361.466 110.826,366.405 110.826 C 372.408 110.826,372.618 110.872,373.158 112.285 L 373.344 112.771 376.759 112.771 L 380.174 112.771 380.498 112.108 C 381.102 110.872,381.346 110.827,387.450 110.824 C 394.358 110.821,393.637 111.109,393.637 108.350 C 393.637 105.874,393.638 105.876,392.518 105.878 C 392.082 105.879,391.891 105.996,391.659 106.405 C 391.017 107.533,389.508 107.974,388.636 107.288 C 387.404 106.320,387.643 103.579,388.959 103.579 C 389.482 103.579,389.568 103.521,389.551 103.182 C 389.535 102.882,389.510 102.860,389.450 103.093 C 389.315 103.606,387.061 103.537,386.558 103.005 C 385.713 102.109,385.329 100.094,385.329 96.545 C 385.329 94.568,385.382 94.469,386.531 94.285 C 387.270 94.167,387.273 94.163,387.245 93.437 C 387.219 92.773,387.211 92.760,387.145 93.291 L 387.073 93.873 385.892 93.821 C 384.573 93.763,384.737 93.927,383.716 91.648 C 383.263 90.637,382.916 85.546,383.210 84.224 C 383.363 83.532,384.099 82.725,384.578 82.723 C 384.737 82.722,384.799 82.312,384.799 81.264 L 384.800 79.806 383.672 79.864 C 381.548 79.974,380.905 78.202,380.781 71.895 C 380.684 67.011,380.728 66.785,381.839 66.499 C 382.515 66.325,382.869 65.001,382.202 65.142 C 379.522 65.709,378.860 64.677,378.449 59.292 C 378.065 54.264,378.230 53.255,379.540 52.615 C 380.184 52.300,380.203 52.265,380.183 51.377 C 380.171 50.875,380.126 50.603,380.081 50.773 C 380.014 51.030,379.801 51.081,378.820 51.073 C 377.087 51.058,376.878 50.742,376.457 47.480 C 375.658 41.286,375.850 39.210,377.279 38.613 C 377.888 38.359,377.905 38.326,377.885 37.426 C 377.874 36.917,377.828 36.639,377.784 36.810 C 377.739 36.980,377.649 37.121,377.583 37.123 C 377.517 37.126,377.049 37.174,376.543 37.231 C 375.377 37.362,374.631 36.696,374.448 35.363 C 374.265 34.022,374.012 33.217,373.742 33.114 C 373.602 33.060,373.487 32.905,373.487 32.769 C 373.487 32.432,371.230 32.427,370.742 32.763 C 370.550 32.896,369.989 33.106,369.495 33.231 L 368.597 33.458 368.378 34.449 C 368.105 35.680,367.347 36.955,366.704 37.267 C 366.436 37.396,366.191 37.595,366.160 37.708 C 366.129 37.822,366.011 38.252,365.899 38.664 C 365.657 39.555,364.992 40.276,364.280 40.418 C 363.997 40.475,363.763 40.611,363.761 40.720 C 363.728 42.571,362.937 44.402,362.076 44.618 C 361.597 44.738,361.114 45.536,361.114 46.206 C 361.114 46.701,360.549 47.324,359.876 47.572 C 359.514 47.705,359.345 48.017,358.938 49.303 C 358.582 50.428,358.314 50.964,357.992 51.198 C 357.745 51.378,357.369 51.656,357.157 51.816 C 356.940 51.981,356.635 52.566,356.458 53.158 C 356.190 54.050,356.012 54.308,355.268 54.875 C 354.731 55.285,354.357 55.722,354.299 56.008 C 353.912 57.910,353.618 58.416,352.796 58.597 C 352.262 58.714,352.196 58.838,352.002 60.097 C 351.822 61.268,351.226 62.301,350.376 62.915 C 349.735 63.378,349.624 63.550,349.624 64.084 C 349.624 65.540,348.708 66.271,346.846 66.300 C 345.910 66.314,345.872 66.330,346.396 66.481 C 346.980 66.649,347.015 66.716,347.233 68.079 C 347.383 69.014,346.913 69.885,345.995 70.371 C 345.281 70.751,345.242 70.814,345.038 71.957 C 344.794 73.321,344.127 74.483,343.418 74.776 C 343.012 74.945,342.891 75.169,342.629 76.241 C 342.324 77.488,341.356 79.010,340.868 79.010 C 340.759 79.010,340.579 79.406,340.467 79.890 C 340.094 81.506,339.808 81.985,339.029 82.297 C 338.402 82.547,338.312 82.654,338.315 83.139 C 338.321 84.257,337.428 86.178,336.733 86.542 C 335.959 86.948,335.844 87.099,335.840 87.712 C 335.837 88.295,335.331 89.616,335.111 89.616 C 335.025 89.616,334.954 89.772,334.954 89.963 C 334.954 90.154,334.775 90.402,334.556 90.515 C 333.765 90.923,333.363 91.430,333.363 92.021 C 333.363 92.797,333.100 93.437,332.589 93.909 C 332.356 94.124,331.878 94.560,331.526 94.878 C 330.959 95.393,330.888 95.553,330.888 96.323 C 330.888 97.310,330.383 98.077,329.491 98.447 C 329.070 98.621,328.946 98.805,328.847 99.397 C 328.599 100.881,327.857 102.019,326.686 102.708 C 326.305 102.932,326.070 103.232,326.001 103.581 C 325.874 104.212,324.851 105.169,324.298 105.173 C 323.798 105.176,323.644 105.294,323.127 106.068 C 322.718 106.678,321.600 107.263,320.255 107.568 C 319.562 107.725,318.675 107.129,318.070 106.098 C 317.884 105.782,317.642 105.524,317.532 105.524 C 316.409 105.524,315.483 104.027,315.874 102.843 C 316.120 102.097,316.829 101.281,317.232 101.281 C 317.404 101.281,317.450 100.543,317.434 98.056 C 317.423 96.281,317.379 94.962,317.336 95.124 C 317.277 95.348,317.005 95.432,316.205 95.478 C 314.382 95.580,314.096 95.101,314.096 91.932 C 314.096 90.666,314.019 89.050,313.925 88.341 C 313.831 87.633,313.632 86.098,313.481 84.932 C 313.331 83.765,313.167 82.557,313.116 82.248 C 313.054 81.867,312.663 81.315,311.910 80.543 C 311.298 79.916,310.693 79.151,310.566 78.845 C 310.337 78.292,309.006 77.467,307.890 77.187 C 307.640 77.124,307.283 76.864,307.098 76.608 C 306.269 75.464,306.253 75.454,304.726 75.189 C 300.954 74.534,301.020 71.845,304.817 71.494 C 306.547 71.334,306.929 71.198,307.475 70.549 C 308.182 69.709,309.514 69.250,311.622 69.119 C 313.590 68.996,314.061 68.843,314.491 68.187 C 314.842 67.651,316.287 66.883,317.233 66.729 C 317.862 66.626,318.051 66.493,318.400 65.908 C 318.819 65.205,320.458 64.163,321.145 64.163 C 321.447 64.163,322.227 63.421,322.227 63.135 C 322.227 62.849,323.171 61.865,323.446 61.865 C 324.068 61.864,325.004 60.596,325.142 59.567 C 325.383 57.764,326.143 57.092,327.941 57.092 C 328.723 57.092,328.934 57.154,328.999 57.402 C 329.061 57.640,329.084 57.622,329.100 57.323 C 329.118 56.983,329.019 56.928,328.293 56.881 C 327.196 56.810,327.118 56.521,327.276 53.115 C 327.432 49.733,327.431 50.119,327.285 47.548 C 327.137 44.926,326.935 44.120,326.359 43.858 C 326.128 43.752,325.939 43.548,325.939 43.404 C 325.939 43.259,325.800 43.066,325.629 42.975 C 325.364 42.833,325.182 42.376,324.767 40.808 C 324.726 40.649,324.459 40.473,324.175 40.416 C 323.435 40.268,322.808 39.655,322.676 38.949 C 322.550 38.277,322.093 38.003,321.101 38.003 C 320.422 38.003,318.692 37.184,318.692 36.862 C 318.692 36.150,317.826 35.739,316.077 35.620 C 312.802 35.399,311.703 34.617,311.831 32.601 L 311.904 31.463 311.144 31.463 C 310.476 31.463,310.384 31.510,310.379 31.860 M102.183 32.723 C 101.194 32.887,101.002 33.041,100.451 34.114 C 100.097 34.802,99.824 35.065,99.135 35.382 C 98.767 35.552,98.646 35.760,98.562 36.373 C 98.433 37.316,98.033 37.904,96.992 38.681 C 96.278 39.214,96.191 39.360,96.093 40.181 C 95.971 41.213,95.564 41.865,94.814 42.230 C 94.105 42.576,93.901 42.900,93.761 43.908 C 93.683 44.471,93.492 44.925,93.219 45.198 C 92.987 45.430,92.797 45.675,92.797 45.744 C 92.797 45.812,92.516 46.107,92.172 46.399 C 91.707 46.792,91.481 47.180,91.293 47.901 C 91.034 48.900,90.537 49.492,89.957 49.492 C 89.707 49.492,89.547 49.771,89.275 50.685 C 88.989 51.643,88.730 52.077,87.965 52.886 C 87.301 53.588,86.951 54.129,86.816 54.668 C 86.572 55.636,86.091 56.256,85.290 56.636 C 84.729 56.902,84.666 57.003,84.666 57.642 C 84.666 58.904,83.370 60.981,82.581 60.981 C 82.348 60.981,82.192 61.420,82.192 62.073 C 82.192 62.840,81.693 63.785,80.834 64.645 C 79.917 65.564,79.717 65.922,79.717 66.653 C 79.717 67.337,78.995 68.356,78.453 68.437 C 78.089 68.491,77.716 69.393,77.298 71.233 C 77.180 71.754,76.571 72.470,76.247 72.470 C 75.822 72.470,75.335 73.202,75.211 74.025 C 75.038 75.181,74.339 76.474,73.713 76.798 C 73.331 76.995,73.137 77.271,72.995 77.818 C 72.464 79.861,72.043 80.231,70.211 80.268 C 69.655 80.279,69.359 80.328,69.554 80.375 C 71.007 80.733,70.699 83.685,69.135 84.391 C 68.457 84.696,68.419 84.757,68.303 85.705 C 68.133 87.103,67.474 88.342,66.738 88.649 C 66.130 88.904,65.937 89.287,65.933 90.248 C 65.930 90.890,65.055 92.288,64.335 92.800 C 63.951 93.073,63.782 93.397,63.619 94.171 C 63.348 95.450,63.043 95.947,62.346 96.239 C 61.805 96.467,61.438 97.280,61.030 99.160 C 60.898 99.765,60.674 100.013,59.904 100.406 C 59.377 100.675,59.187 100.916,58.957 101.610 C 58.634 102.581,58.290 102.965,57.586 103.141 C 57.029 103.280,56.828 103.496,56.682 104.113 C 56.526 104.770,55.944 105.309,55.168 105.518 C 54.659 105.655,54.426 105.839,54.262 106.235 C 53.840 107.254,53.204 107.599,51.486 107.739 C 49.786 107.877,49.042 108.158,48.766 108.765 C 48.666 108.983,48.412 109.238,48.200 109.331 C 47.771 109.520,47.290 110.377,47.460 110.650 C 47.526 110.758,49.023 110.826,51.330 110.826 C 55.646 110.826,56.467 111.033,56.820 112.207 L 56.989 112.771 60.493 112.771 C 63.676 112.771,64.006 112.742,64.093 112.461 C 64.536 111.025,65.237 110.826,69.862 110.826 C 72.788 110.826,73.737 110.773,73.797 110.605 C 73.969 110.117,73.618 105.994,73.398 105.921 C 73.256 105.874,73.177 106.028,73.177 106.353 C 73.177 107.581,72.145 107.970,69.534 107.726 C 67.736 107.557,66.814 106.661,66.814 105.082 C 66.814 104.867,66.575 104.443,66.284 104.137 C 65.542 103.362,65.491 101.413,66.195 100.751 C 66.571 100.398,66.638 100.176,66.642 99.262 C 66.650 97.125,67.250 95.527,68.263 94.942 C 68.871 94.591,68.926 94.490,69.036 93.518 C 69.182 92.231,69.980 90.731,70.603 90.575 C 71.093 90.452,71.194 90.260,71.493 88.887 C 71.741 87.750,72.488 86.709,73.598 85.956 L 74.326 85.462 86.795 85.462 C 100.758 85.462,99.949 85.387,100.511 86.731 C 100.839 87.517,100.295 88.786,99.388 89.350 C 98.775 89.732,98.705 90.060,98.913 91.579 L 99.019 92.355 100.111 92.298 C 102.219 92.187,103.232 95.486,103.108 102.063 C 103.067 104.211,102.824 104.970,101.883 105.894 C 101.455 106.314,101.105 106.759,101.105 106.882 C 101.105 107.399,100.185 107.731,98.784 107.719 C 97.236 107.706,96.926 107.543,96.759 106.653 C 96.487 105.206,95.412 105.638,95.484 107.164 C 95.538 108.292,95.072 109.236,94.460 109.236 C 94.337 109.236,94.092 109.415,93.915 109.634 C 93.738 109.853,93.358 110.137,93.072 110.265 C 92.090 110.702,92.974 110.821,97.234 110.824 C 102.203 110.827,103.403 111.139,103.403 112.426 C 103.403 112.759,103.562 112.771,108.083 112.771 L 112.763 112.771 113.106 112.098 C 113.721 110.894,113.508 110.921,122.934 110.860 C 132.818 110.796,133.057 110.828,133.612 112.287 L 133.796 112.771 144.227 112.771 L 154.657 112.771 154.901 112.188 C 155.479 110.805,153.491 110.915,177.937 110.915 C 202.443 110.915,200.324 110.796,200.960 112.209 L 201.213 112.771 207.011 112.771 L 212.810 112.771 213.071 112.146 C 213.592 110.899,213.980 110.835,221.012 110.830 L 227.176 110.826 227.066 110.274 C 227.005 109.970,226.955 109.612,226.955 109.479 C 226.955 109.284,226.450 109.236,224.398 109.236 L 221.840 109.236 221.451 108.709 C 221.036 108.148,220.482 107.912,219.140 107.723 C 218.204 107.592,218.087 107.491,217.742 106.513 C 217.595 106.094,217.274 105.678,216.927 105.453 C 216.612 105.249,216.353 104.995,216.352 104.888 C 216.351 104.781,216.228 104.450,216.079 104.151 C 215.803 103.598,215.808 103.523,216.275 100.901 C 216.482 99.745,217.210 99.160,218.446 99.160 C 219.126 99.160,219.534 99.239,219.591 99.381 C 219.640 99.503,219.687 99.423,219.694 99.205 C 219.706 98.867,219.617 98.807,219.104 98.807 C 217.926 98.807,217.941 98.839,217.942 96.181 C 217.943 93.692,218.072 92.882,218.670 91.618 C 219.156 90.593,219.306 90.509,220.740 90.466 C 222.299 90.420,222.552 89.924,221.299 89.372 C 219.792 88.707,219.957 83.947,221.552 82.059 C 222.241 81.244,224.048 81.215,224.352 82.015 C 224.407 82.161,224.455 81.843,224.459 81.308 C 224.464 80.340,224.461 80.334,223.721 79.972 C 222.718 79.480,222.458 78.539,222.721 76.359 C 222.978 74.231,222.961 74.273,224.157 73.004 C 224.659 72.471,224.727 72.118,224.917 69.023 C 225.109 65.913,225.454 64.738,226.466 63.753 C 226.954 63.277,226.986 63.151,227.147 61.013 C 227.354 58.277,227.791 56.186,228.285 55.566 C 228.858 54.848,231.083 54.642,231.254 55.291 C 231.302 55.472,231.341 55.406,231.354 55.127 C 231.372 54.704,231.304 54.656,230.570 54.573 C 229.380 54.439,229.196 53.658,229.598 50.463 C 230.034 46.994,230.531 46.260,232.386 46.342 C 233.980 46.412,234.311 45.776,232.985 45.191 C 231.060 44.342,231.465 40.203,233.707 37.809 C 235.031 36.394,235.786 36.257,240.579 36.564 C 243.908 36.777,244.603 36.989,245.824 38.164 C 246.522 38.834,246.648 38.886,247.566 38.886 C 248.649 38.886,249.757 39.671,249.757 40.438 C 249.757 40.876,250.042 41.110,250.760 41.263 C 251.378 41.395,251.864 41.987,252.149 42.952 C 252.263 43.341,252.506 43.655,252.803 43.797 C 254.913 44.810,254.745 50.022,252.603 50.022 C 252.496 50.022,252.408 50.261,252.408 50.552 L 252.408 51.083 253.615 51.083 C 254.839 51.083,255.590 51.476,255.590 52.119 C 255.590 52.562,257.012 53.025,257.612 52.777 L 258.153 52.554 258.113 50.183 C 258.092 48.879,257.992 47.431,257.892 46.964 C 257.608 45.635,257.672 38.481,257.980 37.207 C 258.458 35.225,258.344 33.831,257.685 33.601 C 257.288 33.463,247.723 33.407,224.458 33.407 L 191.789 33.407 191.537 33.805 C 191.398 34.023,191.227 34.637,191.157 35.168 C 190.904 37.094,190.170 37.736,188.352 37.622 C 187.512 37.569,187.367 37.607,187.291 37.901 C 187.174 38.348,187.304 38.533,187.734 38.533 C 188.246 38.533,188.899 39.269,189.122 40.097 C 189.423 41.214,188.759 44.541,188.095 45.238 C 186.902 46.490,186.966 46.303,186.805 49.001 C 186.561 53.059,186.450 54.162,186.260 54.397 C 186.119 54.571,186.504 54.613,188.091 54.597 C 189.197 54.585,189.863 54.525,189.571 54.463 C 188.795 54.298,188.683 52.709,189.396 51.965 C 189.757 51.588,189.898 51.195,190.038 50.178 C 190.247 48.654,190.478 47.964,190.825 47.831 C 190.962 47.778,191.074 47.633,191.074 47.509 C 191.074 47.384,191.337 47.072,191.660 46.815 C 192.105 46.460,192.303 46.110,192.483 45.359 C 192.728 44.335,192.937 44.057,193.782 43.625 C 194.084 43.471,194.468 42.996,194.758 42.415 C 195.182 41.566,195.314 41.443,195.939 41.315 C 196.792 41.140,197.123 40.902,197.452 40.228 C 197.855 39.400,198.492 39.053,199.927 38.877 C 201.797 38.648,201.914 38.606,202.257 38.023 C 202.859 37.005,204.854 36.654,211.060 36.473 C 216.723 36.309,217.234 36.588,217.234 39.844 C 217.234 44.454,216.197 46.584,214.011 46.461 L 212.903 46.399 212.849 47.055 C 212.801 47.626,212.851 47.727,213.227 47.821 C 215.238 48.326,215.248 52.726,213.243 54.995 C 212.587 55.738,212.519 56.075,212.364 59.390 C 212.176 63.375,211.072 64.593,208.440 63.717 C 208.319 63.677,208.219 63.711,208.219 63.795 C 208.219 63.878,208.581 64.000,209.024 64.066 C 210.242 64.249,210.391 65.058,209.964 69.200 C 209.644 72.317,209.057 73.177,207.250 73.177 C 206.145 73.177,206.101 73.160,205.998 72.691 C 205.815 71.862,205.757 71.824,205.796 72.559 C 205.832 73.257,205.842 73.266,206.581 73.320 C 207.946 73.419,208.171 74.586,207.573 78.447 C 207.115 81.400,206.635 81.943,204.611 81.799 C 203.702 81.735,202.889 82.270,203.556 82.494 C 205.399 83.111,206.074 85.537,205.144 88.202 C 204.991 88.639,204.865 89.102,204.863 89.230 C 204.862 89.359,204.743 89.582,204.600 89.725 C 204.456 89.869,204.262 90.122,204.170 90.287 C 204.032 90.532,203.738 90.586,202.575 90.581 L 201.149 90.574 201.149 91.230 C 201.149 91.812,201.214 91.908,201.723 92.082 C 203.730 92.766,203.655 97.259,201.605 99.190 L 200.886 99.867 200.797 101.783 C 200.696 103.929,200.147 105.170,199.296 105.170 C 198.830 105.170,198.321 105.684,198.320 106.156 C 198.316 107.884,195.414 108.071,194.466 106.405 C 193.813 105.258,192.902 105.776,192.993 107.241 C 193.105 109.051,192.095 109.703,190.658 108.749 C 190.255 108.482,189.646 108.116,189.306 107.936 C 188.878 107.710,188.563 107.339,188.282 106.734 L 187.877 105.859 188.277 105.056 C 188.498 104.615,188.879 104.111,189.125 103.936 C 189.609 103.592,189.642 103.581,190.234 103.577 C 190.544 103.575,190.575 103.538,190.376 103.412 C 189.731 103.004,190.019 97.897,190.777 96.294 C 191.300 95.190,191.467 95.107,193.239 95.070 C 194.184 95.050,194.255 95.019,194.255 94.630 C 194.255 94.400,194.168 94.211,194.061 94.211 C 192.809 94.211,192.188 92.822,192.457 90.622 C 192.538 89.961,192.568 89.012,192.525 88.514 C 192.461 87.785,192.508 87.563,192.766 87.375 C 193.107 87.126,188.465 87.016,187.583 87.252 C 186.756 87.474,187.117 89.616,187.981 89.616 C 188.733 89.616,188.954 89.915,189.076 91.092 C 189.301 93.276,188.236 94.341,186.002 94.162 L 184.799 94.066 185.493 94.317 C 187.103 94.899,186.998 97.096,185.310 98.137 C 184.883 98.401,184.534 98.743,184.534 98.897 C 184.534 99.533,183.995 100.168,183.045 100.648 C 182.415 100.967,182.059 101.258,182.059 101.455 C 182.059 102.045,181.353 102.685,180.397 102.963 C 179.557 103.207,179.316 103.364,178.570 104.145 C 177.874 104.876,177.561 105.059,176.633 105.277 C 174.634 105.748,173.525 105.403,173.294 104.239 C 173.155 103.539,173.140 103.587,173.051 104.982 L 172.956 106.472 172.007 106.990 C 170.761 107.670,167.395 107.903,161.203 107.737 L 156.873 107.621 155.950 107.093 C 154.913 106.499,154.727 106.042,154.880 104.453 C 154.926 103.973,154.896 103.579,154.813 103.579 C 154.730 103.579,154.660 103.719,154.658 103.889 C 154.644 105.029,152.633 105.563,151.652 104.687 C 150.074 103.277,150.054 99.733,151.620 99.108 L 152.263 98.851 151.677 98.723 C 150.686 98.505,150.344 97.448,150.475 95.013 C 150.687 91.079,151.369 89.616,152.991 89.616 L 153.425 89.616 153.046 89.237 C 152.235 88.426,152.932 82.757,153.982 81.633 C 154.568 81.005,156.687 80.863,156.838 81.441 C 156.882 81.611,156.928 81.418,156.939 81.013 C 156.958 80.337,156.917 80.266,156.448 80.163 C 154.550 79.746,154.671 74.500,156.621 72.620 C 157.384 71.885,157.442 71.649,157.553 68.847 C 157.692 65.326,158.386 64.176,160.393 64.140 C 161.522 64.121,161.569 64.106,160.878 63.994 C 160.456 63.926,160.040 63.757,159.952 63.618 C 159.585 63.039,159.910 58.035,160.375 57.103 C 160.538 56.776,160.672 56.418,160.672 56.308 C 160.672 55.876,161.689 55.502,162.864 55.502 C 164.258 55.502,164.684 54.780,163.429 54.544 C 162.271 54.327,161.973 53.309,162.327 50.778 C 162.572 49.023,162.791 48.510,163.855 47.192 C 164.136 46.843,164.251 46.314,164.391 44.725 C 164.657 41.689,165.129 40.439,166.259 39.770 C 166.735 39.488,167.073 38.955,167.323 38.091 C 167.544 37.327,169.373 36.412,170.680 36.412 C 171.480 36.412,171.697 36.335,172.150 35.892 C 173.445 34.626,175.012 33.937,176.596 33.937 C 178.448 33.937,178.305 33.754,176.373 33.651 C 172.824 33.462,140.650 33.404,140.430 33.586 C 140.196 33.780,140.267 34.392,140.569 34.777 C 140.676 34.915,141.190 34.998,141.935 34.998 C 144.158 34.998,145.129 35.665,145.094 37.171 C 145.072 38.140,145.060 38.162,144.520 38.230 C 144.069 38.287,144.106 38.305,144.719 38.328 C 145.346 38.351,145.471 38.301,145.471 38.024 C 145.471 37.572,145.779 37.364,146.646 37.232 C 149.019 36.871,149.859 38.602,149.508 43.129 C 149.223 46.793,148.707 47.598,146.676 47.539 C 145.151 47.495,145.037 47.552,146.170 47.791 C 147.343 48.038,147.510 48.483,147.338 50.906 C 147.159 53.431,146.901 54.351,146.143 55.164 L 145.473 55.883 144.342 55.785 C 143.283 55.693,143.205 55.711,143.106 56.080 C 142.921 56.773,142.983 56.902,143.670 57.252 C 145.997 58.440,144.981 64.139,142.489 63.873 C 142.136 63.835,141.589 63.771,141.273 63.730 C 140.957 63.688,140.698 63.722,140.698 63.804 C 140.698 63.886,141.101 64.008,141.593 64.076 C 142.781 64.239,142.886 64.522,142.759 67.203 C 142.569 71.202,141.836 72.512,139.822 72.451 C 138.498 72.412,138.488 72.414,138.433 72.883 C 138.388 73.258,138.451 73.354,138.739 73.354 C 140.772 73.354,140.864 78.810,138.861 80.552 C 138.268 81.068,138.094 81.845,137.947 84.639 C 137.759 88.207,137.280 88.901,134.998 88.906 C 133.923 88.908,133.805 88.944,133.805 89.262 C 133.805 89.489,133.923 89.616,134.134 89.616 C 136.194 89.616,136.207 96.009,134.150 97.449 C 133.691 97.771,133.451 98.626,133.451 99.943 C 133.451 102.041,133.018 103.182,131.767 104.377 C 130.957 105.151,130.623 105.608,130.538 106.061 C 130.178 107.983,125.097 108.561,124.694 106.726 L 124.575 106.186 124.193 106.871 C 123.524 108.069,120.804 108.138,120.066 106.975 C 119.899 106.711,119.433 106.156,119.031 105.741 C 118.261 104.946,117.903 103.699,117.892 101.778 C 117.886 100.570,117.611 99.691,117.055 99.095 C 116.012 97.976,115.785 97.047,115.734 93.684 L 115.687 90.648 116.264 90.132 C 116.582 89.848,116.960 89.616,117.104 89.616 C 117.301 89.616,117.366 89.395,117.366 88.728 L 117.366 87.840 116.211 87.899 C 114.855 87.968,114.451 87.570,114.255 85.971 C 114.197 85.496,113.985 84.671,113.785 84.136 C 113.484 83.335,113.407 82.635,113.344 80.159 L 113.268 77.154 113.771 76.504 C 114.047 76.146,114.452 75.807,114.671 75.749 C 115.053 75.649,115.067 75.574,115.042 73.837 C 115.027 72.842,114.982 72.251,114.941 72.522 C 114.818 73.343,112.856 73.180,112.348 72.307 C 111.460 70.783,111.168 69.361,110.966 65.577 C 110.701 60.636,110.894 59.721,112.254 59.449 C 112.749 59.350,112.770 59.307,112.747 58.440 C 112.733 57.942,112.689 57.703,112.649 57.909 C 112.586 58.228,112.443 58.287,111.689 58.304 C 111.201 58.315,110.739 58.363,110.662 58.410 C 110.492 58.515,109.755 57.698,109.472 57.091 C 109.018 56.117,108.529 51.729,108.529 48.638 C 108.529 46.923,108.977 45.896,109.867 45.575 C 110.430 45.371,110.473 45.301,110.473 44.589 C 110.473 43.887,110.445 43.838,110.131 44.006 C 109.227 44.490,107.909 44.172,107.306 43.326 C 106.915 42.777,106.231 37.261,106.231 34.657 C 106.231 32.445,105.618 32.153,102.183 32.723 M302.200 36.592 C 303.989 36.817,305.168 37.316,305.521 37.998 C 305.737 38.415,305.965 38.544,306.779 38.714 C 308.826 39.138,310.384 40.825,310.384 42.617 C 310.384 42.952,310.514 43.185,310.779 43.327 C 312.056 44.011,312.152 44.396,312.150 48.823 C 312.148 53.153,311.935 54.148,310.811 55.074 C 310.452 55.370,310.348 55.646,310.276 56.488 C 310.053 59.118,309.179 60.981,308.169 60.981 C 308.006 60.981,307.910 61.157,307.910 61.455 C 307.910 62.337,307.254 63.401,306.634 63.525 C 305.934 63.665,305.435 64.107,305.435 64.588 C 305.435 65.089,304.684 65.930,304.236 65.930 C 303.601 65.930,303.308 66.133,302.961 66.812 C 302.484 67.748,301.358 68.245,299.447 68.365 C 297.986 68.456,297.955 68.468,297.237 69.201 C 295.584 70.890,285.108 71.194,285.108 69.554 C 285.108 69.430,284.896 69.190,284.636 69.020 L 284.163 68.710 284.636 68.366 C 284.896 68.177,285.108 67.924,285.108 67.804 C 285.108 67.462,286.029 66.675,286.593 66.536 L 287.106 66.409 286.542 66.117 C 285.410 65.532,285.139 64.029,285.702 61.457 C 285.977 60.201,286.057 60.048,286.978 59.037 C 287.526 58.434,287.543 58.366,287.634 56.385 C 287.823 52.264,288.525 50.906,290.467 50.906 C 291.223 50.906,291.649 50.982,291.708 51.127 C 291.757 51.248,291.801 51.069,291.806 50.729 C 291.815 50.181,291.739 50.075,291.141 49.800 C 289.508 49.048,289.661 44.655,291.379 42.986 C 292.011 42.373,293.621 42.188,293.988 42.687 C 294.059 42.784,294.119 42.403,294.120 41.841 C 294.123 40.913,294.068 40.764,293.522 40.218 C 290.746 37.442,294.955 35.684,302.200 36.592 M95.373 52.770 C 96.918 54.161,96.444 58.928,94.723 59.306 C 93.547 59.564,94.095 60.362,95.449 60.362 C 97.553 60.362,97.847 61.037,98.396 67.125 C 98.789 71.481,98.374 73.177,96.918 73.177 C 96.528 73.177,96.509 73.236,96.509 74.481 C 96.509 76.740,96.564 76.855,97.570 76.697 C 99.321 76.420,99.931 76.994,100.005 78.986 C 100.062 80.535,99.861 80.883,98.424 81.725 L 97.627 82.192 88.356 82.192 C 79.434 82.192,79.059 82.178,78.392 81.838 C 78.010 81.644,77.616 81.484,77.515 81.483 C 77.414 81.481,77.162 81.220,76.956 80.901 L 76.581 80.321 76.956 79.674 C 77.162 79.318,77.499 78.984,77.704 78.933 C 78.001 78.858,78.098 78.660,78.182 77.948 C 78.340 76.612,79.082 75.118,79.863 74.563 C 80.438 74.155,80.553 73.948,80.755 72.974 C 80.967 71.947,81.073 71.774,82.031 70.897 C 82.969 70.038,83.076 69.868,83.076 69.241 C 83.076 68.267,83.681 67.267,84.492 66.901 C 85.155 66.602,85.550 65.622,85.550 64.275 C 85.550 63.761,86.424 62.572,86.801 62.572 C 87.265 62.572,87.652 61.917,87.786 60.908 C 87.860 60.353,88.047 59.882,88.292 59.637 C 88.505 59.424,88.732 59.114,88.795 58.949 C 88.859 58.784,89.068 58.608,89.261 58.558 C 89.521 58.490,89.706 58.138,89.972 57.205 C 90.451 55.529,90.489 55.468,91.348 55.064 C 91.880 54.814,92.090 54.608,92.090 54.337 C 92.090 53.974,92.669 53.068,93.059 52.820 C 93.161 52.755,93.472 52.492,93.749 52.235 L 94.253 51.768 94.710 52.176 C 94.962 52.401,95.260 52.668,95.373 52.770 M364.739 53.002 C 364.886 53.550,365.171 54.596,365.375 55.325 C 366.020 57.641,366.250 64.019,365.726 65.100 C 365.398 65.777,365.203 65.962,364.634 66.132 C 363.946 66.338,363.942 66.345,363.942 67.245 L 363.942 68.151 365.135 68.096 C 366.628 68.028,366.821 68.174,367.173 69.644 C 367.324 70.275,367.577 71.267,367.736 71.849 C 368.733 75.504,368.384 81.275,367.127 81.925 C 366.458 82.271,347.648 82.330,346.899 81.989 C 345.316 81.268,345.643 77.314,347.354 76.502 C 347.904 76.240,347.996 76.103,348.094 75.394 C 348.244 74.299,348.637 73.582,349.566 72.706 C 350.211 72.099,350.372 71.815,350.488 71.083 C 350.662 69.984,351.060 69.357,351.813 68.998 C 352.332 68.750,352.427 68.585,352.699 67.458 C 353.112 65.748,353.439 65.142,354.155 64.756 C 354.674 64.477,354.813 64.254,355.125 63.207 C 355.547 61.790,356.179 60.703,356.671 60.546 C 357.026 60.434,357.438 59.587,357.665 58.506 C 357.755 58.078,358.091 57.612,358.760 56.989 C 359.576 56.229,359.741 55.970,359.825 55.310 C 360.035 53.679,360.658 52.979,362.073 52.782 C 362.454 52.729,363.041 52.490,363.376 52.252 C 364.183 51.678,364.421 51.809,364.739 53.002 M191.604 53.921 C 191.604 54.151,191.529 54.239,191.400 54.159 C 191.278 54.083,191.244 54.110,191.315 54.226 C 191.391 54.349,191.193 54.444,190.768 54.489 C 190.123 54.556,190.128 54.559,190.904 54.588 C 191.675 54.617,191.707 54.598,191.746 54.087 C 191.768 53.796,191.745 53.557,191.695 53.557 C 191.645 53.557,191.604 53.721,191.604 53.921 M153.601 89.684 C 153.601 89.721,153.840 89.787,154.132 89.830 C 154.423 89.873,154.662 89.842,154.662 89.762 C 154.662 89.681,154.423 89.616,154.132 89.616 C 153.840 89.616,153.601 89.646,153.601 89.684 M68.464 102.342 C 68.464 103.071,68.495 103.369,68.534 103.005 C 68.572 102.640,68.572 102.044,68.534 101.679 C 68.495 101.315,68.464 101.613,68.464 102.342 M322.264 101.377 C 321.972 101.708,322.214 101.701,322.659 101.364 C 322.900 101.182,322.926 101.107,322.747 101.111 C 322.607 101.115,322.390 101.234,322.264 101.377 M395.964 106.032 C 395.772 106.154,395.778 106.201,395.994 106.284 C 396.141 106.340,396.296 106.570,396.339 106.794 C 396.389 107.060,396.425 106.971,396.441 106.540 C 396.465 105.862,396.378 105.769,395.964 106.032 M135.423 135.233 C 135.487 136.655,135.491 136.665,136.237 137.361 C 136.649 137.745,136.986 138.105,136.986 138.160 C 136.986 138.216,137.185 138.497,137.428 138.786 C 137.671 139.075,137.871 139.444,137.871 139.607 C 137.874 140.450,138.258 141.214,138.856 141.567 C 139.624 142.020,140.345 143.522,140.345 144.669 C 140.345 145.752,140.566 146.215,141.257 146.581 C 141.655 146.791,141.929 147.114,142.083 147.553 C 142.594 149.005,142.819 150.008,142.819 150.828 C 142.819 151.537,142.881 151.706,143.167 151.781 C 143.358 151.831,143.560 152.015,143.616 152.190 C 143.671 152.365,143.827 152.551,143.962 152.602 C 144.438 152.785,144.852 153.998,144.851 155.210 C 144.851 156.578,144.643 156.913,143.734 157.009 C 143.345 157.050,143.554 157.089,144.256 157.107 L 145.428 157.137 145.819 156.088 C 146.035 155.512,146.334 154.993,146.484 154.936 C 146.725 154.843,146.723 154.795,146.462 154.506 C 146.300 154.327,146.093 153.724,146.002 153.165 C 145.813 152.006,145.591 151.657,145.041 151.657 C 144.059 151.657,143.726 150.806,143.580 147.919 C 143.477 145.869,143.625 145.471,144.494 145.471 C 144.825 145.471,145.133 145.411,145.179 145.338 C 145.224 145.265,144.708 145.232,144.032 145.265 C 142.130 145.356,141.341 144.496,141.130 142.102 C 140.990 140.526,140.902 140.169,140.651 140.162 C 139.672 140.137,138.842 137.971,138.842 135.440 L 138.842 133.805 137.100 133.805 L 135.358 133.805 135.423 135.233 M156.536 139.028 L 156.554 144.252 156.067 144.773 C 155.770 145.091,155.402 145.294,155.121 145.294 L 154.662 145.294 154.662 149.959 L 154.662 154.624 155.340 154.895 C 156.155 155.221,156.606 155.851,156.606 156.662 C 156.606 157.432,156.944 158.404,157.165 158.268 C 157.644 157.972,157.696 156.906,157.674 147.834 C 157.649 137.891,157.725 136.986,158.585 136.986 C 159.336 136.986,159.788 136.252,159.788 135.030 L 159.788 133.805 158.153 133.805 L 156.518 133.805 156.536 139.028 M88.306 135.704 C 87.502 135.753,86.169 136.218,86.616 136.293 C 86.661 136.301,87.355 136.362,88.157 136.429 L 89.616 136.550 89.616 136.061 C 89.616 135.792,89.556 135.587,89.483 135.606 C 89.410 135.624,88.880 135.668,88.306 135.704 M197.253 135.741 C 195.655 135.905,195.667 135.890,195.970 137.293 C 196.171 138.228,196.201 139.182,196.107 141.670 C 196.040 143.420,196.014 145.727,196.049 146.796 C 196.143 149.723,196.094 154.898,195.937 158.418 L 195.798 161.555 196.467 161.555 L 197.136 161.555 197.013 159.066 C 196.867 156.119,197.125 155.207,198.192 154.901 L 198.763 154.737 198.808 145.155 C 198.845 137.537,198.809 135.577,198.632 135.597 C 198.509 135.611,197.889 135.676,197.253 135.741 M355.223 135.768 C 353.865 135.918,353.800 136.007,354.126 137.259 C 354.353 138.129,354.397 139.840,354.400 147.761 C 354.403 158.337,354.483 159.019,355.402 156.249 C 355.669 155.441,355.832 155.227,356.385 154.957 L 357.048 154.633 357.048 152.369 C 357.048 150.171,357.037 150.101,356.650 149.996 C 355.607 149.710,355.104 148.628,355.104 146.671 C 355.104 144.691,355.577 143.620,356.650 143.171 C 357.045 143.006,357.048 142.975,357.048 139.290 L 357.048 135.576 356.650 135.615 C 356.432 135.636,355.789 135.705,355.223 135.768 M75.441 136.018 C 75.320 136.140,75.484 136.987,75.628 136.985 C 75.912 136.981,76.138 136.124,75.881 136.025 C 75.565 135.904,75.556 135.903,75.441 136.018 M326.472 136.323 C 326.478 137.193,326.873 137.285,327.301 136.516 C 327.476 136.202,327.465 136.116,327.242 136.030 C 326.720 135.830,326.469 135.925,326.472 136.323 M373.099 136.018 C 372.978 136.140,373.141 136.987,373.286 136.985 C 373.570 136.981,373.796 136.124,373.539 136.025 C 373.223 135.904,373.214 135.903,373.099 136.018 M266.236 136.633 C 266.236 136.973,266.273 137.112,266.317 136.942 C 266.362 136.772,266.362 136.494,266.317 136.323 C 266.273 136.153,266.236 136.293,266.236 136.633 M266.375 138.003 C 266.373 138.299,266.474 138.400,266.770 138.398 C 267.063 138.396,267.104 138.355,266.926 138.242 C 266.793 138.158,266.615 137.980,266.531 137.847 C 266.418 137.669,266.377 137.710,266.375 138.003 M259.302 140.466 L 259.302 142.991 259.907 143.244 C 261.784 144.028,261.654 147.185,259.724 147.669 L 259.302 147.775 259.302 151.205 L 259.302 154.635 259.918 154.838 C 260.668 155.085,261.205 155.732,261.330 156.536 C 261.381 156.866,261.473 157.435,261.535 157.799 L 261.646 158.462 261.880 157.932 C 262.213 157.178,262.240 138.533,261.909 138.266 C 261.787 138.168,261.151 138.055,260.495 138.015 L 259.302 137.942 259.302 140.466 M239.208 138.423 C 239.323 138.483,239.800 138.589,240.269 138.656 C 242.063 138.915,242.438 141.176,240.965 142.857 C 240.429 143.469,240.800 143.703,242.306 143.703 C 243.901 143.703,244.315 143.468,243.949 142.769 C 243.227 141.386,243.372 138.995,244.199 138.650 C 244.534 138.510,244.808 138.377,244.807 138.354 C 244.807 138.331,243.500 138.312,241.903 138.312 C 240.306 138.312,239.093 138.362,239.208 138.423 M73.260 147.680 C 73.260 152.833,73.282 154.915,73.310 152.307 C 73.337 149.700,73.337 145.484,73.310 142.939 C 73.282 140.394,73.259 142.528,73.260 147.680 M324.417 140.698 C 324.417 142.011,324.445 142.548,324.479 141.891 C 324.513 141.235,324.513 140.161,324.479 139.505 C 324.445 138.849,324.417 139.386,324.417 140.698 M26.587 140.341 C 26.493 140.436,25.981 140.585,25.448 140.673 L 24.481 140.834 25.762 140.854 C 27.030 140.875,27.170 140.818,26.899 140.390 C 26.808 140.248,26.698 140.231,26.587 140.341 M7.880 140.731 C 7.832 140.956,7.756 141.458,7.711 141.847 C 7.666 142.236,7.575 142.764,7.510 143.021 C 7.275 143.935,7.822 144.410,9.109 144.410 C 9.834 144.410,10.253 144.487,10.312 144.631 C 10.361 144.753,10.407 144.436,10.415 143.927 C 10.427 143.089,10.389 142.993,9.996 142.894 C 9.488 142.767,9.036 142.135,8.744 141.144 C 8.505 140.333,8.014 140.099,7.880 140.731 M28.795 142.566 C 28.574 142.930,28.553 143.248,28.683 144.286 C 28.771 144.986,28.809 147.113,28.767 149.013 C 28.709 151.667,28.744 152.515,28.917 152.677 C 29.566 153.283,29.988 147.195,29.538 143.726 C 29.342 142.211,29.171 141.945,28.795 142.566 M98.630 142.466 C 98.630 142.564,98.157 142.643,97.565 142.643 C 96.585 142.643,96.487 142.678,96.328 143.096 C 96.024 143.896,96.103 157.403,96.413 157.661 C 96.684 157.886,96.661 157.936,96.963 156.474 C 97.119 155.719,97.541 155.186,98.202 154.910 L 98.807 154.657 98.807 151.204 L 98.807 147.750 98.321 147.580 C 96.650 146.995,96.530 144.079,98.144 143.291 C 98.695 143.021,99.115 142.289,98.719 142.289 C 98.670 142.289,98.630 142.369,98.630 142.466 M37.922 143.160 C 37.859 143.262,37.859 143.803,37.921 144.364 C 38.067 145.686,37.598 146.862,36.689 147.451 L 36.063 147.857 36.061 152.592 L 36.058 157.328 37.428 157.277 L 38.798 157.225 38.798 150.155 L 38.798 143.084 38.417 143.030 C 38.207 143.000,37.985 143.059,37.922 143.160 M51.840 143.394 C 52.236 143.796,52.436 143.730,52.254 143.255 C 52.199 143.113,51.996 142.996,51.802 142.996 C 51.460 142.996,51.462 143.009,51.840 143.394 M86.520 143.099 C 86.326 143.181,86.465 145.242,86.770 146.796 C 86.865 147.282,86.957 149.867,86.975 152.541 C 86.992 155.214,87.056 157.632,87.118 157.914 L 87.229 158.426 87.760 157.983 C 88.051 157.740,88.588 157.433,88.953 157.303 L 89.616 157.066 89.616 150.243 C 89.616 145.172,89.561 143.366,89.403 143.208 C 89.204 143.009,86.939 142.923,86.520 143.099 M107.114 143.105 C 106.729 143.215,106.856 145.253,107.278 145.736 C 107.456 145.939,107.669 146.643,107.780 147.393 C 108.186 150.148,108.595 148.845,108.495 145.117 L 108.440 143.084 107.910 143.057 C 107.618 143.042,107.260 143.063,107.114 143.105 M303.049 143.172 C 302.983 143.280,302.981 143.822,303.045 144.376 C 303.200 145.710,302.720 146.903,301.813 147.438 L 301.186 147.808 301.234 151.268 L 301.281 154.728 301.845 154.874 C 302.585 155.065,303.134 155.786,303.151 156.586 C 303.170 157.493,303.577 158.589,303.716 158.109 C 303.772 157.914,303.844 154.454,303.876 150.420 L 303.933 143.084 303.552 143.030 C 303.342 143.000,303.116 143.064,303.049 143.172 M117.424 144.322 C 117.425 145.002,117.457 145.259,117.495 144.892 C 117.534 144.525,117.533 143.969,117.494 143.655 C 117.455 143.341,117.424 143.641,117.424 144.322 M310.346 144.012 C 310.438 145.465,310.512 145.602,310.537 144.366 C 310.550 143.710,310.501 143.173,310.427 143.173 C 310.354 143.173,310.317 143.551,310.346 144.012 M244.882 144.672 C 244.627 145.061,244.612 145.239,244.782 145.808 C 244.893 146.180,244.985 146.826,244.985 147.244 C 244.985 148.923,245.337 150.243,245.785 150.243 C 246.718 150.243,247.293 151.456,247.417 153.690 C 247.511 155.392,247.666 155.899,248.094 155.899 C 248.248 155.899,248.539 156.299,248.779 156.841 C 249.670 158.856,250.641 158.457,250.641 156.075 C 250.641 155.043,250.650 155.023,251.215 154.860 C 251.768 154.700,251.756 154.693,250.906 154.678 C 248.996 154.643,248.482 154.045,248.160 151.487 C 247.897 149.393,247.896 149.391,247.238 149.325 C 246.606 149.262,245.884 147.538,245.851 146.011 C 245.815 144.394,245.421 143.849,244.882 144.672 M3.575 147.724 L 3.624 150.685 4.877 150.736 C 6.863 150.818,6.948 150.696,6.948 147.768 C 6.948 144.855,6.884 144.764,4.837 144.764 L 3.527 144.764 3.575 147.724 M174.370 147.401 C 173.628 147.664,173.547 147.733,173.863 147.835 C 175.828 148.466,175.958 153.694,174.029 154.475 L 173.487 154.694 174.026 154.929 C 174.546 155.156,174.898 155.685,175.354 156.922 C 175.840 158.242,175.960 157.439,176.008 152.564 C 176.066 146.665,176.105 146.788,174.370 147.401 M326.530 147.425 C 326.427 147.528,325.894 147.658,325.346 147.715 L 324.348 147.818 324.388 151.284 L 324.428 154.750 324.481 151.436 L 324.533 148.122 325.678 148.122 C 326.781 148.122,326.823 148.106,326.823 147.680 C 326.823 147.184,326.795 147.160,326.530 147.425 M205.769 148.387 L 205.782 149.448 205.950 148.699 C 206.061 148.204,206.056 147.844,205.937 147.638 C 205.799 147.402,205.759 147.582,205.769 148.387 M215.035 147.575 C 214.970 147.680,214.989 147.894,215.077 148.052 C 215.221 148.310,215.248 148.307,215.357 148.023 C 215.495 147.663,215.218 147.278,215.035 147.575 M294.135 147.954 C 294.146 148.527,294.159 148.539,294.341 148.160 C 294.485 147.862,294.482 147.703,294.329 147.551 C 294.172 147.393,294.126 147.489,294.135 147.954 M184.793 147.857 C 184.748 148.003,184.669 148.253,184.618 148.412 C 184.398 149.104,184.521 155.111,184.770 155.811 L 185.022 156.518 185.122 155.899 C 185.177 155.559,185.270 154.925,185.328 154.491 C 185.451 153.572,186.127 152.592,186.699 152.505 C 187.047 152.451,187.011 152.402,186.412 152.108 C 185.502 151.662,185.241 150.992,185.241 149.100 C 185.241 147.718,185.024 147.117,184.793 147.857 M382.330 149.043 C 382.066 150.848,382.075 155.054,382.344 155.871 C 382.630 156.738,382.951 156.267,383.114 154.740 C 383.251 153.461,383.832 152.542,384.505 152.539 C 384.804 152.538,384.728 152.442,384.156 152.099 C 383.254 151.559,383.204 151.432,383.080 149.413 C 382.947 147.246,382.616 147.083,382.330 149.043 M366.159 148.696 C 365.955 149.340,365.950 154.859,366.153 155.136 C 366.584 155.725,366.770 154.819,366.770 152.133 C 366.770 149.051,366.509 147.586,366.159 148.696 M282.350 149.988 C 282.212 150.538,282.366 154.807,282.530 154.971 C 282.873 155.313,282.993 154.511,282.948 152.188 C 282.900 149.694,282.652 148.784,282.350 149.988 M298.719 149.890 C 298.719 149.989,298.225 150.066,297.593 150.066 L 296.467 150.066 296.278 150.817 C 295.911 152.277,295.911 152.434,296.274 153.279 C 296.637 154.122,296.651 154.132,297.459 154.134 C 298.338 154.137,298.608 154.246,298.766 154.662 C 298.822 154.808,298.874 153.754,298.881 152.320 C 298.889 150.886,298.856 149.713,298.807 149.713 C 298.758 149.713,298.719 149.792,298.719 149.890 M312.859 152.452 L 312.859 154.839 314.096 154.839 C 314.777 154.839,315.334 154.819,315.334 154.794 C 315.334 154.770,315.446 154.214,315.583 153.558 C 315.803 152.505,315.800 152.230,315.554 151.216 L 315.275 150.066 314.067 150.066 L 312.859 150.066 312.859 152.452 M7.689 151.593 C 7.437 151.978,7.417 152.172,7.571 152.698 C 7.674 153.049,7.800 153.648,7.850 154.028 C 8.061 155.629,8.661 155.260,8.661 153.529 C 8.661 151.464,8.276 150.698,7.689 151.593 M110.339 152.119 C 110.245 152.303,110.120 152.881,110.061 153.404 C 109.933 154.541,110.000 154.459,109.039 154.648 C 108.273 154.798,108.278 154.800,109.436 154.819 C 110.774 154.841,110.822 154.784,110.821 153.160 C 110.821 152.094,110.599 151.615,110.339 152.119 M205.413 154.078 C 205.098 154.564,205.037 154.798,205.172 155.014 C 205.271 155.172,205.446 155.754,205.561 156.307 C 205.770 157.315,205.843 157.400,206.333 157.212 C 206.539 157.133,206.562 156.990,206.436 156.550 C 206.347 156.242,206.271 155.632,206.267 155.193 C 206.262 154.755,206.163 154.179,206.046 153.913 L 205.833 153.430 205.413 154.078 M168.380 154.537 C 168.058 154.773,168.058 154.794,168.373 155.274 C 168.691 155.761,168.700 155.763,168.865 155.392 C 169.132 154.795,168.808 154.225,168.380 154.537 M56.821 155.630 C 56.670 157.043,56.822 157.843,57.171 157.473 C 57.736 156.876,57.602 154.485,57.004 154.485 C 56.971 154.485,56.889 155.000,56.821 155.630 M335.959 154.599 C 335.779 154.779,335.811 157.453,335.994 157.566 C 336.356 157.790,336.559 157.126,336.508 155.886 C 336.461 154.713,336.276 154.282,335.959 154.599 M326.707 156.173 C 326.399 156.974,326.664 158.600,327.077 158.442 C 327.526 158.269,327.597 157.078,327.196 156.419 C 326.874 155.890,326.825 155.865,326.707 156.173 M317.287 156.683 C 317.099 156.910,317.099 157.010,317.287 157.236 C 317.495 157.487,317.531 157.487,317.671 157.236 C 317.916 156.798,317.586 156.323,317.287 156.683 M112.547 156.889 C 112.198 157.238,112.701 157.490,113.747 157.490 C 114.474 157.490,114.893 157.567,114.951 157.711 C 115.000 157.833,115.047 157.723,115.055 157.468 C 115.066 157.085,114.972 156.985,114.516 156.894 C 113.815 156.753,112.685 156.751,112.547 156.889 M17.241 159.245 C 17.106 159.465,17.379 159.617,18.354 159.866 C 19.105 160.057,19.180 160.128,19.349 160.807 C 19.665 162.077,21.962 162.948,22.674 162.069 C 22.933 161.749,22.956 161.637,22.773 161.579 C 22.643 161.538,22.473 161.396,22.396 161.265 C 22.318 161.134,21.957 160.979,21.594 160.921 C 20.944 160.817,20.327 160.138,20.327 159.527 C 20.327 159.092,17.496 158.833,17.241 159.245 \",stroke:\"none\",fill:\"#043404\",fillRule:\"evenodd\"}),/*#__PURE__*/React.createElement(\"path\",{id:\"path3\",d:\"M46.487 20.793 C 46.487 25.126,45.863 25.806,41.889 25.806 C 41.229 25.806,40.767 25.933,40.192 26.270 L 39.401 26.733 39.453 27.816 C 39.503 28.852,39.527 28.902,39.991 28.956 L 40.477 29.012 40.477 27.845 C 40.477 27.063,40.550 26.659,40.698 26.618 C 40.820 26.585,41.913 26.383,43.129 26.171 C 44.344 25.959,45.507 25.751,45.713 25.710 C 46.592 25.533,47.599 19.797,46.752 19.797 C 46.548 19.797,46.487 20.025,46.487 20.793 M57.279 20.062 C 57.092 20.301,56.935 22.449,57.071 22.890 C 57.276 23.551,59.199 23.500,59.702 22.820 C 60.132 22.238,60.234 21.062,59.924 20.247 C 59.740 19.763,57.627 19.616,57.279 20.062 M91.119 19.972 C 91.060 20.068,91.029 20.645,91.052 21.253 C 91.132 23.383,90.214 25.806,89.327 25.806 C 89.190 25.806,88.758 26.018,88.367 26.277 L 87.656 26.747 87.708 27.824 C 87.756 28.824,87.791 28.903,88.202 28.951 C 88.634 29.002,88.643 28.977,88.643 27.827 L 88.643 26.651 89.366 26.361 C 90.707 25.824,90.836 25.660,91.126 24.131 C 91.272 23.356,91.470 22.644,91.565 22.549 C 91.857 22.257,91.783 19.797,91.482 19.797 C 91.342 19.797,91.179 19.876,91.119 19.972 M4.064 23.185 C 4.255 23.606,4.413 24.115,4.415 24.315 C 4.422 24.985,5.390 25.674,7.030 26.174 L 8.573 26.645 8.625 27.817 L 8.677 28.988 9.450 28.988 C 9.903 28.988,10.259 28.897,10.312 28.767 C 10.375 28.609,10.405 28.618,10.415 28.798 C 10.425 28.983,10.533 28.951,10.826 28.676 C 12.572 27.036,14.767 29.342,13.156 31.123 C 12.729 31.594,13.138 31.550,13.690 31.065 C 15.231 29.712,14.028 27.681,11.745 27.782 L 10.444 27.839 10.392 27.248 C 10.335 26.595,9.254 26.114,6.811 25.654 C 5.540 25.415,5.179 25.088,4.596 23.652 C 4.353 23.053,4.055 22.531,3.935 22.492 C 3.793 22.445,3.837 22.686,4.064 23.185 M57.006 25.246 C 56.836 25.689,56.919 25.718,58.375 25.720 C 59.497 25.722,60.015 25.810,60.627 26.102 C 61.065 26.310,61.611 26.536,61.840 26.604 C 62.233 26.719,62.253 26.793,62.185 27.857 L 62.113 28.988 62.972 28.988 C 63.444 28.988,63.795 28.928,63.753 28.856 C 63.711 28.783,63.741 28.564,63.819 28.369 C 63.941 28.066,63.963 28.087,63.973 28.522 C 63.986 29.027,63.986 29.027,64.295 28.656 C 65.365 27.374,67.456 28.192,67.557 29.932 C 67.605 30.777,67.655 30.867,68.228 31.153 C 68.568 31.323,68.839 31.541,68.829 31.639 C 68.819 31.736,68.799 31.943,68.785 32.098 C 68.763 32.324,68.560 32.372,67.742 32.342 C 66.257 32.287,66.284 32.274,66.284 33.025 C 66.284 33.573,66.367 33.742,66.715 33.900 C 67.584 34.296,67.741 35.880,67.035 37.137 L 66.549 38.002 65.267 38.002 C 63.828 38.003,63.815 38.014,64.428 38.742 C 64.671 39.031,64.871 39.440,64.872 39.651 C 64.873 39.862,64.921 40.208,64.978 40.420 C 65.080 40.800,64.027 42.068,63.608 42.068 C 63.514 42.068,63.319 42.366,63.174 42.731 C 62.360 44.773,62.019 45.073,60.512 45.073 C 59.895 45.073,59.390 45.100,59.390 45.134 C 59.390 45.168,59.503 45.426,59.642 45.709 C 60.353 47.160,59.904 48.608,58.745 48.608 C 58.545 48.608,58.153 49.366,58.153 49.751 C 58.153 50.047,57.580 51.080,57.415 51.082 C 57.089 51.085,56.220 52.040,56.117 52.509 C 56.053 52.803,55.810 53.258,55.577 53.521 C 55.344 53.784,55.070 54.099,54.967 54.220 C 54.854 54.354,54.338 54.441,53.653 54.441 C 52.917 54.441,52.495 54.364,52.437 54.220 C 52.367 54.047,52.345 54.049,52.334 54.226 C 52.326 54.351,52.431 54.630,52.566 54.845 C 53.214 55.876,53.027 57.623,52.269 57.623 C 51.763 57.623,51.083 58.423,51.083 59.018 C 51.083 59.561,50.383 60.478,49.816 60.678 C 49.654 60.735,49.310 61.204,49.052 61.721 C 48.269 63.285,48.030 63.456,46.620 63.456 L 45.401 63.456 45.458 65.002 L 45.515 66.549 44.985 66.609 C 44.209 66.696,44.012 66.941,44.012 67.819 C 44.012 68.817,43.824 69.159,42.998 69.661 C 42.217 70.136,42.074 70.311,42.071 70.803 C 42.064 71.750,41.010 72.470,39.633 72.470 C 37.987 72.470,37.967 72.776,39.609 72.853 C 41.079 72.922,41.746 72.612,42.059 71.715 C 42.349 70.881,43.000 69.998,43.325 69.997 C 43.715 69.995,44.543 68.760,44.543 68.181 C 44.543 67.871,44.679 67.640,44.940 67.505 C 45.938 66.991,46.133 66.643,46.133 65.382 C 46.133 64.394,46.080 64.175,45.824 64.108 C 45.654 64.063,46.064 64.018,46.735 64.006 C 48.141 63.983,49.049 63.274,49.469 61.872 C 49.626 61.347,49.831 61.097,50.280 60.884 C 50.825 60.626,51.613 59.432,51.613 58.866 C 51.613 58.770,51.832 58.550,52.099 58.378 C 53.268 57.624,53.557 57.243,53.557 56.457 C 53.557 55.663,53.890 55.150,54.409 55.145 C 54.823 55.141,55.912 53.978,56.390 53.028 C 56.610 52.592,57.176 51.872,57.648 51.429 C 58.247 50.866,58.506 50.484,58.506 50.164 C 58.506 49.733,59.518 48.608,59.905 48.608 C 60.096 48.608,60.403 47.828,60.555 46.958 C 60.653 46.391,60.812 46.194,61.516 45.760 C 62.524 45.140,63.456 43.881,63.456 43.139 C 63.456 42.811,64.066 42.186,64.555 42.014 C 64.899 41.892,65.400 40.818,65.400 40.199 C 65.400 39.589,65.770 38.886,66.091 38.886 C 66.786 38.886,67.868 36.760,67.873 35.387 C 67.874 34.835,68.507 33.937,68.895 33.937 C 69.639 33.937,69.460 30.974,68.695 30.619 C 68.465 30.513,68.160 30.036,67.918 29.407 C 67.311 27.823,65.948 27.173,64.439 27.746 C 64.009 27.910,63.986 27.889,63.986 27.328 C 63.986 26.787,62.241 25.799,61.296 25.806 C 61.226 25.806,60.747 25.614,60.233 25.379 C 59.168 24.892,57.174 24.810,57.006 25.246 M84.436 28.090 C 84.163 28.267,83.797 28.681,83.622 29.009 C 83.448 29.338,83.068 29.726,82.779 29.872 C 82.035 30.246,81.308 30.857,81.308 31.107 C 81.308 31.476,80.589 32.346,80.280 32.352 C 79.838 32.360,79.082 33.097,78.942 33.656 C 78.817 34.151,78.366 34.653,77.532 35.225 C 77.227 35.434,76.978 35.864,76.792 36.503 C 76.560 37.303,76.410 37.515,75.913 37.751 C 74.947 38.210,74.870 38.390,75.145 39.548 L 75.387 40.566 76.309 40.619 C 77.645 40.696,77.857 40.527,77.910 39.345 C 77.943 38.593,77.894 38.356,77.705 38.356 C 77.372 38.356,77.243 37.964,77.243 36.955 C 77.243 36.052,77.439 35.772,78.384 35.331 C 78.771 35.150,78.965 34.884,79.132 34.309 C 79.403 33.368,79.699 33.020,80.562 32.623 C 81.019 32.413,81.328 32.095,81.573 31.582 C 81.842 31.021,82.129 30.747,82.773 30.440 C 83.328 30.175,83.682 29.870,83.801 29.556 C 84.258 28.350,85.342 27.944,86.498 28.547 C 87.096 28.859,87.141 28.865,87.141 28.639 C 87.141 28.005,85.179 27.607,84.436 28.090 M35.433 28.758 C 35.078 29.300,35.292 30.598,35.822 31.109 C 36.067 31.346,36.085 31.337,35.991 31.021 C 35.520 29.432,35.597 28.717,36.235 28.761 C 36.284 28.765,36.761 28.818,37.296 28.879 L 38.268 28.991 37.851 28.636 C 37.186 28.071,35.838 28.139,35.433 28.758 M100.729 29.297 C 100.717 29.370,100.725 29.852,100.746 30.368 C 100.817 32.071,99.429 33.749,97.924 33.781 C 97.389 33.792,97.086 33.837,97.252 33.881 C 97.776 34.019,97.768 35.996,97.239 36.721 C 96.832 37.280,96.784 37.296,95.516 37.296 C 94.253 37.296,93.646 37.642,94.521 37.863 C 96.357 38.326,97.562 37.696,97.901 36.097 C 98.069 35.302,98.262 35.001,99.207 34.064 C 101.030 32.257,101.105 32.118,101.105 30.541 C 101.105 29.445,100.846 28.590,100.729 29.297 M369.708 29.306 C 369.660 29.384,369.645 29.872,369.675 30.389 C 369.737 31.457,369.527 31.774,368.407 32.301 C 367.831 32.572,367.729 32.712,367.644 33.347 C 367.590 33.751,367.330 34.406,367.067 34.804 L 366.588 35.528 365.265 35.528 C 363.897 35.528,363.693 35.659,364.187 36.221 C 364.916 37.051,364.850 38.920,364.082 39.163 C 363.566 39.327,362.920 40.255,362.791 41.016 C 362.538 42.517,362.081 42.934,360.672 42.956 C 359.804 42.969,359.546 43.019,359.806 43.124 C 360.796 43.525,360.466 45.780,359.314 46.481 C 358.916 46.723,358.635 47.149,358.261 48.081 C 357.631 49.648,357.233 50.008,356.125 50.016 C 355.302 50.022,355.292 50.029,355.462 50.475 C 356.140 52.259,355.395 53.557,353.692 53.557 C 351.972 53.557,351.897 54.029,353.603 54.117 C 355.139 54.196,356.162 53.288,356.164 51.845 C 356.164 51.380,356.303 51.181,356.963 50.708 C 357.752 50.141,358.496 48.938,358.718 47.868 C 358.780 47.572,359.093 47.207,359.553 46.896 C 360.098 46.527,360.356 46.193,360.550 45.603 C 361.073 44.007,361.161 43.836,361.455 43.836 C 361.901 43.836,362.548 42.867,363.166 41.276 C 363.529 40.341,363.823 39.838,364.029 39.797 C 365.043 39.597,365.781 36.418,364.870 36.180 C 364.700 36.136,365.017 36.090,365.575 36.079 C 366.808 36.054,367.424 35.530,367.812 34.178 C 368.124 33.090,368.284 32.892,369.167 32.501 C 370.457 31.929,370.591 31.619,370.493 29.430 C 370.481 29.155,369.862 29.057,369.708 29.306 M373.753 29.340 C 373.557 29.656,373.717 31.464,373.959 31.665 C 374.088 31.772,374.194 31.924,374.194 32.003 C 374.194 33.108,377.044 34.320,377.722 33.504 C 378.203 32.924,377.880 32.629,376.817 32.678 C 375.818 32.724,375.077 32.461,375.077 32.060 C 375.077 31.950,374.953 31.756,374.801 31.630 C 374.609 31.471,374.532 31.127,374.551 30.504 C 374.565 30.010,374.570 29.507,374.562 29.386 C 374.544 29.124,373.908 29.088,373.753 29.340 M107.195 31.897 C 106.658 32.434,106.563 35.446,107.030 37.125 C 107.178 37.656,107.413 38.688,107.551 39.417 C 107.690 40.146,107.898 41.010,108.013 41.336 L 108.223 41.930 109.127 41.812 C 110.319 41.655,110.346 41.613,110.399 39.909 C 110.425 39.104,110.407 38.659,110.360 38.922 C 110.285 39.340,110.223 39.380,109.861 39.243 C 109.634 39.156,109.412 39.123,109.366 39.168 C 108.977 39.557,108.189 39.353,108.075 38.834 C 108.008 38.529,107.891 38.157,107.815 38.008 C 106.974 36.366,107.035 32.240,107.910 31.598 C 108.018 31.518,107.998 31.467,107.858 31.465 C 107.732 31.464,107.433 31.658,107.195 31.897 M313.391 32.656 C 313.392 33.817,313.408 33.860,314.001 34.264 C 314.630 34.692,317.095 35.339,318.129 35.347 C 318.808 35.352,319.398 35.623,319.402 35.932 C 319.408 36.324,320.710 37.214,321.745 37.532 C 322.570 37.786,322.846 37.973,323.180 38.502 C 323.620 39.199,323.987 39.555,324.571 39.852 C 324.956 40.047,324.989 40.097,325.618 41.430 C 326.168 42.594,326.536 42.805,327.908 42.740 C 328.797 42.698,329.041 42.624,329.086 42.386 C 329.136 42.122,329.009 42.095,328.045 42.168 C 326.629 42.275,326.231 42.024,325.837 40.772 C 325.572 39.931,325.431 39.760,324.590 39.257 C 324.068 38.945,323.641 38.571,323.641 38.427 C 323.641 37.968,322.857 37.357,322.117 37.238 C 321.725 37.176,321.224 36.968,321.004 36.777 C 320.784 36.587,320.538 36.406,320.458 36.377 C 320.378 36.348,320.286 35.773,320.253 35.101 C 320.188 33.735,319.987 33.507,319.540 34.292 C 319.115 35.038,317.166 35.069,315.522 34.356 L 314.450 33.891 314.429 32.898 C 314.417 32.352,314.421 31.805,314.437 31.684 C 314.454 31.549,314.255 31.463,313.927 31.463 L 313.389 31.463 313.391 32.656 M309.731 32.008 C 309.168 32.368,309.055 32.370,286.620 32.355 C 266.613 32.341,264.074 32.370,264.074 32.607 C 264.074 32.844,266.586 32.879,286.125 32.920 C 310.270 32.969,309.197 33.012,310.134 31.977 C 310.521 31.549,310.437 31.555,309.731 32.008 M139.959 32.760 C 138.761 33.484,138.577 33.739,138.577 34.672 C 138.577 35.232,138.501 35.533,138.356 35.542 C 136.365 35.665,136.298 35.657,136.220 35.280 C 136.178 35.076,136.154 35.613,136.167 36.473 C 136.195 38.316,136.233 38.356,137.939 38.356 C 139.705 38.356,139.945 38.186,139.920 36.950 C 139.909 36.390,139.808 35.821,139.696 35.686 C 139.296 35.203,139.349 33.794,139.784 33.359 L 140.178 32.965 159.090 32.965 C 175.806 32.965,177.997 32.934,177.952 32.700 C 177.907 32.467,175.670 32.431,159.255 32.401 L 140.610 32.367 139.959 32.760 M191.516 32.558 C 191.321 32.668,191.122 32.810,191.074 32.874 C 191.025 32.939,190.855 33.039,190.695 33.098 C 190.535 33.157,190.220 33.575,189.994 34.027 L 189.583 34.849 188.517 34.792 C 187.780 34.752,187.413 34.652,187.330 34.468 C 187.177 34.128,187.149 35.110,187.297 35.661 C 187.393 36.019,187.512 36.058,188.511 36.058 C 189.757 36.058,189.962 35.887,190.376 34.505 C 190.497 34.103,190.789 33.591,191.026 33.369 L 191.456 32.965 224.893 32.965 C 254.423 32.965,258.392 32.996,258.860 33.233 C 259.502 33.557,261.439 33.453,261.560 33.088 C 261.618 32.912,261.349 32.862,260.425 32.878 C 259.758 32.889,258.776 32.776,258.241 32.625 C 256.990 32.272,192.135 32.207,191.516 32.558 M33.516 33.665 C 33.353 33.914,33.145 34.653,33.053 35.309 C 32.961 35.964,32.764 36.935,32.616 37.467 C 31.888 40.078,32.377 44.330,33.512 45.261 C 33.806 45.502,33.807 45.491,33.528 45.062 C 32.735 43.844,32.559 38.232,33.269 36.811 C 33.426 36.496,33.607 35.999,33.672 35.706 C 33.787 35.183,33.805 35.175,34.747 35.243 C 35.279 35.281,35.705 35.237,35.705 35.144 C 35.705 35.052,35.784 35.026,35.882 35.086 C 35.991 35.154,36.058 34.832,36.058 34.241 L 36.058 33.286 34.935 33.250 C 33.906 33.216,33.787 33.251,33.516 33.665 M264.427 34.291 C 264.549 34.534,264.844 34.994,265.083 35.314 C 265.465 35.826,265.510 36.043,265.458 37.131 C 265.380 38.791,265.871 38.855,266.037 37.206 C 266.156 36.033,265.878 35.419,264.755 34.365 C 264.225 33.867,264.213 33.864,264.427 34.291 M174.768 35.532 C 173.933 36.056,173.928 36.064,173.928 37.025 C 173.928 38.742,175.178 38.969,175.226 37.260 C 175.261 35.995,175.352 35.911,176.757 35.846 C 177.794 35.798,177.911 35.755,177.962 35.395 C 178.057 34.726,175.906 34.817,174.768 35.532 M170.152 37.160 C 168.487 37.782,167.913 38.803,168.445 40.201 C 168.746 40.994,168.979 40.705,168.979 39.537 C 168.979 38.371,169.183 38.025,170.190 37.487 C 170.983 37.062,173.045 37.459,173.045 38.037 C 173.045 38.148,173.092 38.191,173.149 38.134 C 173.930 37.353,171.632 36.607,170.152 37.160 M259.138 37.371 C 258.479 38.637,258.349 45.025,258.948 46.664 C 259.143 47.196,259.302 47.652,259.302 47.678 C 259.302 47.705,259.772 47.715,260.348 47.702 C 261.486 47.677,261.592 47.567,261.598 46.399 L 261.600 45.868 260.516 45.929 C 259.746 45.973,259.388 45.922,259.281 45.753 C 259.109 45.481,259.075 41.185,259.235 39.859 L 259.341 38.975 260.117 38.943 C 260.543 38.925,260.893 38.990,260.893 39.086 C 260.893 39.182,260.981 39.206,261.089 39.139 C 261.197 39.073,261.355 39.128,261.440 39.261 C 261.538 39.416,261.595 39.108,261.597 38.422 C 261.600 37.107,261.413 36.909,260.214 36.964 C 259.521 36.995,259.287 37.084,259.138 37.371 M208.131 37.376 C 204.293 37.724,203.624 38.029,203.624 39.426 C 203.624 40.324,203.668 40.448,204.021 40.543 C 204.575 40.691,205.211 40.680,205.231 40.521 C 205.240 40.449,205.260 39.977,205.276 39.475 C 205.314 38.270,205.713 38.027,207.689 38.001 C 208.126 37.995,208.962 37.875,209.545 37.734 C 211.574 37.244,215.130 37.375,215.691 37.960 C 216.325 38.622,216.409 40.634,215.860 41.982 C 215.662 42.467,215.455 43.003,215.400 43.173 C 215.318 43.429,215.086 43.482,214.058 43.482 L 212.815 43.482 212.815 44.101 L 212.815 44.719 214.049 44.719 L 215.283 44.719 215.827 43.555 C 216.879 41.305,216.771 37.967,215.627 37.376 C 215.020 37.062,211.583 37.062,208.131 37.376 M235.705 37.245 C 235.226 37.360,234.379 38.179,234.379 38.527 C 234.379 38.682,234.217 38.925,234.020 39.068 C 232.468 40.186,231.959 43.748,233.193 44.849 C 233.526 45.147,233.524 45.126,233.165 44.417 C 232.537 43.177,233.013 40.475,233.921 40.130 C 234.452 39.928,234.665 39.628,234.899 38.754 C 235.009 38.341,235.206 38.003,235.336 38.003 C 235.467 38.003,235.672 37.883,235.793 37.738 C 236.054 37.424,237.951 37.379,239.063 37.659 C 239.452 37.758,240.501 37.907,241.394 37.991 C 243.434 38.184,243.394 38.153,243.394 39.516 C 243.394 40.542,243.429 40.654,243.753 40.654 C 244.618 40.654,244.613 38.439,243.747 37.947 C 242.861 37.444,237.004 36.932,235.705 37.245 M271.676 37.277 C 271.433 37.344,271.206 37.547,271.172 37.727 C 271.122 37.986,271.177 38.025,271.436 37.915 C 273.900 36.863,275.364 38.449,273.676 40.341 C 273.360 40.694,273.362 40.699,273.796 40.569 C 274.437 40.378,274.478 40.309,274.608 39.203 C 274.806 37.519,273.616 36.737,271.676 37.277 M295.890 37.292 C 293.855 37.613,293.443 38.101,293.924 39.620 L 294.280 40.742 294.290 39.579 C 294.301 38.269,294.304 38.266,296.039 37.719 C 297.496 37.260,301.229 37.521,302.992 38.205 C 303.424 38.372,303.461 38.463,303.425 39.251 C 303.386 40.097,303.392 40.107,303.710 39.765 C 305.291 38.069,309.901 41.520,309.576 44.158 C 309.446 45.220,309.301 45.419,308.661 45.424 C 308.420 45.425,308.263 45.535,308.263 45.702 C 308.263 45.854,308.343 45.928,308.440 45.868 C 308.537 45.808,308.617 45.839,308.617 45.936 C 308.617 46.033,308.796 46.070,309.015 46.018 C 309.445 45.916,310.413 45.926,310.521 46.034 C 310.966 46.479,310.708 51.081,310.244 50.979 C 310.078 50.943,309.565 50.885,309.103 50.850 L 308.263 50.787 308.263 51.915 L 308.263 53.043 309.455 52.991 C 311.103 52.919,311.163 52.781,311.236 48.889 C 311.299 45.534,311.276 45.363,310.661 44.656 C 310.287 44.225,309.677 42.650,309.677 42.112 C 309.677 41.867,307.643 39.770,307.405 39.770 C 307.294 39.770,307.203 39.706,307.203 39.628 C 307.203 39.442,305.638 38.884,305.120 38.886 C 304.899 38.886,304.670 38.763,304.612 38.613 C 304.195 37.526,299.200 36.769,295.890 37.292 M145.946 38.501 C 144.923 38.619,145.446 39.146,146.642 39.204 C 148.565 39.296,149.052 40.709,148.096 43.425 L 147.712 44.517 146.591 44.419 L 145.471 44.320 145.471 45.102 L 145.471 45.884 146.596 45.926 C 148.048 45.979,148.216 45.742,148.759 42.869 L 149.160 40.742 148.738 39.843 C 148.142 38.575,147.596 38.312,145.946 38.501 M187.328 38.559 C 187.972 39.395,188.211 40.642,187.911 41.597 C 187.487 42.949,187.483 42.952,186.114 42.952 L 184.887 42.952 184.887 43.570 L 184.887 44.189 186.103 44.189 C 187.499 44.189,187.491 44.196,188.134 42.568 C 188.830 40.805,188.638 39.581,187.516 38.621 C 187.262 38.404,187.189 38.380,187.328 38.559 M94.378 39.284 C 94.581 40.661,94.525 40.913,94.003 40.974 C 93.352 41.049,93.198 41.291,92.994 42.558 C 92.718 44.272,92.444 44.530,90.897 44.537 C 89.671 44.542,88.854 45.049,90.013 45.085 C 90.232 45.092,90.779 45.136,91.230 45.184 C 92.249 45.290,92.998 44.527,93.449 42.921 C 93.677 42.111,93.854 41.839,94.369 41.506 C 95.130 41.015,95.222 40.596,94.829 39.413 C 94.471 38.335,94.228 38.266,94.378 39.284 M376.940 39.453 C 376.443 40.294,376.531 43.129,377.134 45.692 C 377.386 46.761,377.647 47.873,377.715 48.162 C 377.830 48.657,377.893 48.691,378.799 48.737 C 380.011 48.799,380.203 48.572,380.203 47.076 L 380.203 45.965 379.750 46.138 C 379.501 46.233,378.994 46.310,378.624 46.310 L 377.952 46.310 377.495 44.663 C 376.802 42.164,376.718 40.903,377.177 39.866 C 377.704 38.674,377.554 38.413,376.940 39.453 M199.970 39.534 C 198.684 39.967,198.402 40.160,198.043 40.856 C 197.874 41.182,197.566 41.409,197.127 41.529 C 195.986 41.841,195.351 42.340,195.151 43.083 C 195.012 43.602,194.782 43.879,194.174 44.264 C 193.094 44.946,192.793 46.864,193.667 47.503 C 194.153 47.858,194.283 47.761,194.020 47.238 C 193.364 45.934,193.777 44.543,194.819 44.543 C 195.052 44.543,195.201 44.317,195.358 43.728 C 195.688 42.496,196.173 42.068,197.242 42.068 C 198.160 42.068,198.674 41.682,198.674 40.992 C 198.674 39.900,202.352 39.164,203.112 40.103 L 203.447 40.516 203.447 39.878 C 203.447 39.303,203.399 39.239,202.961 39.227 C 202.693 39.220,202.166 39.200,201.789 39.183 C 201.412 39.166,200.593 39.323,199.970 39.534 M246.759 39.630 C 246.325 39.727,245.874 39.937,245.757 40.097 C 245.460 40.502,245.575 40.546,246.161 40.250 C 247.494 39.579,248.325 39.861,248.866 41.166 C 249.062 41.641,249.681 42.068,250.174 42.068 C 250.906 42.068,251.418 43.871,250.999 44.973 C 250.830 45.418,250.842 45.426,251.613 45.426 C 253.217 45.426,253.784 47.730,252.650 49.635 C 252.392 50.067,252.415 50.059,252.908 49.544 C 254.132 48.264,253.574 44.543,252.159 44.543 C 251.878 44.543,251.525 43.789,251.525 43.191 C 251.525 42.674,250.786 41.908,249.868 41.472 C 249.489 41.292,249.192 40.986,249.078 40.658 C 248.924 40.216,247.931 39.375,247.636 39.436 C 247.587 39.446,247.192 39.534,246.759 39.630 M73.531 41.310 C 72.796 41.393,72.111 42.081,71.778 43.071 C 71.622 43.535,71.324 43.894,70.830 44.214 C 70.253 44.588,70.037 44.886,69.743 45.714 C 69.475 46.472,69.248 46.809,68.892 46.980 C 68.047 47.385,67.843 48.593,68.432 49.713 C 68.648 50.124,70.199 50.147,70.602 49.744 C 71.015 49.331,70.968 47.990,70.526 47.548 C 69.811 46.833,70.304 44.543,71.172 44.543 C 71.501 44.543,72.103 43.852,72.111 43.465 C 72.135 42.307,73.061 41.657,74.567 41.742 C 75.299 41.783,75.652 41.737,75.652 41.601 C 75.651 41.212,75.093 41.135,73.531 41.310 M166.088 41.449 C 164.657 42.881,164.496 46.861,165.842 47.567 C 166.232 47.772,166.234 47.769,165.918 47.413 C 165.263 46.675,165.096 45.621,165.418 44.257 C 165.887 42.270,166.121 42.027,167.498 42.098 C 168.627 42.156,168.641 42.151,168.589 41.715 C 168.523 41.151,166.591 40.946,166.088 41.449 M273.978 44.101 C 274.620 45.325,274.614 45.613,273.899 47.901 L 273.429 49.403 272.384 49.375 C 271.809 49.360,271.256 49.295,271.153 49.232 C 271.037 49.160,270.968 49.352,270.968 49.747 L 270.968 50.376 272.272 50.376 L 273.576 50.376 273.970 49.459 C 274.917 47.256,274.893 44.490,273.918 43.529 L 273.422 43.040 273.978 44.101 M328.153 43.477 C 327.530 44.165,327.556 47.210,328.204 49.575 C 328.296 49.909,328.255 50.490,328.094 51.166 C 327.499 53.663,327.901 56.916,328.806 56.916 C 328.917 56.916,328.906 56.817,328.778 56.664 C 328.132 55.885,328.115 52.289,328.749 50.671 C 328.899 50.289,328.887 49.955,328.698 49.257 C 327.988 46.636,327.957 44.157,328.625 43.352 C 328.933 42.980,328.498 43.096,328.153 43.477 M291.380 44.863 C 290.532 46.379,290.496 48.616,291.307 49.386 C 291.685 49.745,291.693 49.745,291.561 49.403 C 290.919 47.745,290.923 47.812,291.385 46.450 C 291.626 45.741,291.823 45.145,291.824 45.126 C 291.824 45.106,292.322 45.066,292.930 45.037 C 293.976 44.987,294.037 44.960,294.089 44.518 C 294.142 44.056,294.132 44.052,292.988 44.052 L 291.833 44.052 291.380 44.863 M89.701 45.772 C 89.762 45.962,89.874 46.516,89.951 47.002 L 90.091 47.887 89.455 48.185 C 88.677 48.551,88.561 48.715,88.558 49.451 C 88.551 50.886,87.520 51.691,85.824 51.586 C 85.010 51.535,84.843 51.574,84.843 51.812 C 84.843 52.056,85.057 52.097,86.228 52.077 C 87.735 52.053,88.416 51.624,88.649 50.552 C 88.831 49.716,89.351 48.877,89.830 48.648 C 90.551 48.303,90.728 46.397,90.108 45.647 C 89.828 45.308,89.579 45.385,89.701 45.772 M185.241 45.528 C 185.241 45.588,185.411 45.875,185.618 46.166 C 186.242 47.044,186.241 48.008,185.612 49.968 L 185.056 51.701 184.008 51.673 C 183.432 51.658,182.868 51.587,182.755 51.517 C 182.535 51.382,182.592 54.149,182.813 54.370 C 182.874 54.431,183.445 54.522,184.082 54.573 L 185.241 54.666 185.241 53.604 C 185.241 52.922,185.369 52.252,185.598 51.735 C 186.588 49.496,186.624 46.325,185.668 45.698 C 185.433 45.544,185.241 45.467,185.241 45.528 M109.676 46.239 C 108.895 47.264,109.276 53.850,110.224 55.705 C 110.832 56.895,112.771 56.220,112.771 54.819 L 112.771 54.336 111.645 54.408 L 110.520 54.479 110.250 53.267 C 109.265 48.854,109.246 47.042,110.171 45.824 C 110.264 45.703,110.299 45.603,110.250 45.603 C 110.201 45.603,109.943 45.889,109.676 46.239 M212.949 47.901 C 213.044 48.047,213.282 48.604,213.479 49.138 L 213.836 50.110 213.379 51.224 L 212.922 52.337 211.720 52.283 L 210.517 52.229 210.518 52.849 L 210.519 53.469 211.733 53.520 L 212.948 53.572 213.347 52.813 C 214.285 51.026,214.265 49.286,213.294 48.211 C 213.009 47.894,212.853 47.755,212.949 47.901 M13.565 48.806 C 13.807 49.312,13.999 49.892,13.991 50.095 C 13.852 53.993,13.597 57.705,13.426 58.330 C 13.307 58.767,13.154 60.318,13.086 61.776 C 12.941 64.916,13.122 64.516,11.849 64.516 C 10.534 64.516,10.417 64.691,10.461 66.581 C 10.486 67.625,10.510 67.742,10.558 67.063 L 10.622 66.163 11.718 66.237 C 13.343 66.348,13.469 66.071,13.632 62.042 C 13.711 60.103,13.862 58.587,14.037 57.982 C 14.746 55.536,14.373 48.998,13.480 48.203 C 13.160 47.918,13.168 47.977,13.565 48.806 M146.091 49.003 C 146.457 50.015,146.470 50.168,146.247 50.903 C 146.114 51.342,146.004 51.868,146.003 52.072 C 145.998 53.034,143.709 53.725,143.131 52.939 C 143.060 52.841,143.000 53.016,142.999 53.326 C 142.995 54.024,143.116 54.100,144.410 54.217 C 145.437 54.310,145.451 54.305,145.812 53.713 C 146.862 51.992,147.107 49.659,146.354 48.553 C 145.716 47.614,145.637 47.749,146.091 49.003 M230.880 48.829 C 229.924 51.143,229.889 53.450,230.795 54.302 L 231.219 54.700 230.768 53.731 C 230.217 52.546,230.216 52.486,230.716 50.973 C 231.335 49.099,231.369 49.063,232.511 49.037 C 233.664 49.010,233.753 48.954,233.602 48.351 C 233.496 47.928,233.421 47.901,232.376 47.901 L 231.263 47.901 230.880 48.829 M191.471 48.421 C 191.253 48.604,191.074 48.828,191.074 48.919 C 191.074 49.010,190.955 49.322,190.810 49.613 C 190.480 50.275,190.865 51.842,191.433 52.146 C 191.869 52.380,191.868 52.295,191.428 51.573 C 190.559 50.148,191.296 48.614,192.850 48.610 C 193.390 48.609,193.927 48.703,194.043 48.820 C 194.281 49.057,194.331 48.834,194.148 48.357 C 193.985 47.931,192.002 47.978,191.471 48.421 M163.837 49.279 C 162.604 50.718,162.510 53.817,163.679 54.443 C 163.969 54.598,163.957 54.525,163.581 53.868 C 162.647 52.234,163.333 50.322,164.885 50.233 C 165.427 50.202,165.933 50.268,166.077 50.388 C 166.356 50.619,166.422 50.127,166.216 49.359 C 166.073 48.826,164.277 48.765,163.837 49.279 M65.640 51.039 C 65.335 51.306,65.031 51.763,64.965 52.055 C 64.846 52.577,64.065 53.557,63.768 53.557 C 63.423 53.557,62.757 54.579,62.649 55.275 C 62.578 55.732,62.421 56.058,62.243 56.119 C 60.421 56.740,60.646 59.460,62.512 59.364 C 63.708 59.302,63.986 59.021,63.986 57.878 C 63.986 57.033,63.943 56.916,63.632 56.916 C 63.315 56.916,63.279 56.798,63.279 55.767 C 63.279 54.514,63.468 54.188,64.507 53.650 C 64.915 53.439,65.046 53.250,65.046 52.873 C 65.046 52.597,65.243 52.146,65.488 51.861 C 65.731 51.579,65.930 51.288,65.930 51.215 C 65.930 51.142,66.533 51.083,67.271 51.083 C 69.003 51.083,69.054 50.664,67.330 50.597 C 66.312 50.558,66.138 50.603,65.640 51.039 M85.294 53.110 C 85.729 54.150,85.635 54.918,85.035 55.228 C 84.321 55.598,83.783 56.337,83.783 56.948 C 83.783 58.344,82.927 59.086,81.409 59.008 C 80.130 58.942,80.053 59.003,80.660 59.610 C 81.340 60.290,81.415 61.535,80.828 62.421 L 80.352 63.140 79.151 63.059 C 78.070 62.985,77.950 63.010,77.950 63.305 C 77.950 63.778,80.403 63.794,80.821 63.323 C 81.232 62.860,81.662 61.718,81.662 61.087 C 81.662 60.492,82.080 59.744,82.413 59.744 C 82.872 59.744,83.617 58.732,84.069 57.492 C 84.399 56.586,84.673 56.118,84.943 55.994 C 86.040 55.495,86.415 53.709,85.610 52.819 C 85.152 52.313,85.014 52.440,85.294 53.110 M289.115 53.160 C 288.148 54.696,287.881 57.960,288.653 58.782 C 289.207 59.371,289.243 59.239,288.803 58.243 C 288.374 57.274,288.402 56.774,288.993 54.839 L 289.385 53.557 290.605 53.557 L 291.825 53.557 291.825 53.027 L 291.825 52.497 290.678 52.497 C 289.545 52.497,289.527 52.505,289.115 53.160 M271.613 53.731 L 272.027 54.757 271.553 56.103 L 271.078 57.449 269.918 57.403 C 268.787 57.359,268.758 57.368,268.758 57.799 C 268.758 58.218,268.820 58.246,269.952 58.330 C 270.608 58.378,271.145 58.355,271.145 58.278 C 271.145 58.201,271.311 57.913,271.516 57.637 C 272.293 56.584,272.432 54.544,271.812 53.257 C 271.384 52.369,271.220 52.759,271.613 53.731 M379.623 52.894 C 378.603 53.661,378.733 58.692,379.863 62.150 L 380.216 63.231 380.961 63.159 C 382.508 63.011,382.501 63.016,382.498 61.994 C 382.496 61.332,382.447 61.145,382.324 61.335 C 382.200 61.527,382.152 61.536,382.150 61.368 C 382.149 61.225,382.064 61.191,381.927 61.280 C 381.805 61.359,381.368 61.427,380.956 61.432 C 380.136 61.441,380.226 61.586,379.962 59.832 C 379.918 59.540,379.709 58.506,379.497 57.534 C 379.028 55.383,379.076 54.042,379.650 53.236 C 380.084 52.626,380.078 52.552,379.623 52.894 M252.408 53.204 C 252.408 53.525,252.526 53.557,253.691 53.557 C 254.720 53.557,255.138 53.645,255.804 53.999 C 256.844 54.553,257.495 54.556,258.567 54.013 C 259.233 53.676,259.643 53.594,260.513 53.626 C 261.535 53.663,261.612 53.640,261.563 53.302 C 261.502 52.876,259.478 52.661,259.030 53.032 C 258.037 53.856,256.463 53.888,255.348 53.107 C 254.730 52.674,252.408 52.750,252.408 53.204 M93.455 53.714 C 93.113 54.093,92.786 54.550,92.727 54.731 C 92.669 54.912,92.343 55.249,92.003 55.480 C 90.670 56.385,90.306 58.029,91.220 59.011 C 91.753 59.583,91.955 59.466,91.558 58.816 C 90.897 57.732,91.066 56.983,92.223 55.864 C 92.782 55.322,93.485 54.564,93.785 54.179 L 94.331 53.478 94.615 54.004 C 95.193 55.070,95.274 55.378,95.292 56.568 C 95.307 57.546,95.232 57.911,94.908 58.435 C 94.632 58.881,94.584 59.061,94.756 59.008 C 96.001 58.621,95.969 54.430,94.714 53.384 C 94.163 52.925,94.169 52.924,93.455 53.714 M361.204 54.014 C 360.583 54.684,360.758 56.650,361.460 56.884 C 361.588 56.926,361.645 56.884,361.587 56.790 C 361.270 56.277,361.171 54.600,361.448 54.454 C 361.952 54.191,362.525 54.549,362.550 55.142 C 362.562 55.437,362.592 55.758,362.616 55.855 C 362.640 55.952,362.670 56.108,362.682 56.201 C 362.694 56.293,362.980 56.421,363.317 56.484 C 364.183 56.647,364.311 56.885,364.477 58.634 C 364.558 59.487,364.747 60.822,364.896 61.600 C 365.243 63.415,365.244 64.125,364.896 64.781 C 364.316 65.876,364.228 66.222,364.622 65.866 C 365.897 64.712,365.254 55.750,363.858 55.214 C 363.710 55.157,363.588 55.003,363.588 54.873 C 363.588 54.596,362.616 53.829,362.044 53.655 C 361.746 53.564,361.538 53.654,361.204 54.014 M210.841 54.965 C 211.783 55.769,211.836 57.629,210.998 60.387 L 210.614 61.649 209.461 61.624 C 208.327 61.600,208.307 61.608,208.252 62.086 L 208.196 62.572 209.401 62.566 C 211.103 62.558,211.139 62.503,211.856 58.772 C 212.263 56.653,211.935 55.258,210.928 54.826 L 210.429 54.612 210.841 54.965 M352.491 55.666 C 352.679 56.908,352.602 57.268,352.149 57.272 C 351.568 57.277,351.402 57.543,351.233 58.734 C 351.141 59.386,350.940 60.044,350.787 60.197 C 350.634 60.351,350.508 60.590,350.508 60.728 C 350.508 60.926,350.202 60.981,349.094 60.981 C 347.515 60.981,347.378 61.117,348.046 62.021 C 349.302 63.720,348.699 65.021,346.649 65.037 C 344.899 65.050,344.960 65.467,346.722 65.538 C 348.155 65.595,348.811 65.174,349.019 64.063 C 349.174 63.238,349.006 62.030,348.710 61.842 C 348.565 61.750,348.804 61.692,349.339 61.691 C 350.522 61.687,351.201 60.985,351.472 59.485 C 351.620 58.666,352.141 57.866,352.625 57.712 C 353.276 57.506,353.285 55.840,352.640 54.985 C 352.332 54.577,352.329 54.591,352.491 55.666 M308.677 55.179 C 309.470 56.419,309.328 58.050,308.357 58.855 C 308.057 59.104,306.101 59.050,305.924 58.787 C 305.850 58.677,305.793 58.766,305.791 58.992 C 305.790 59.214,305.897 59.390,306.032 59.390 C 306.890 59.390,307.211 61.585,306.456 62.287 C 306.183 62.541,305.855 62.749,305.728 62.749 C 305.420 62.749,304.728 63.498,304.728 63.832 C 304.728 64.341,303.780 65.046,303.095 65.046 C 302.050 65.046,301.580 65.310,301.455 65.966 C 301.204 67.296,298.476 67.951,297.144 67.002 C 296.541 66.573,296.402 66.795,296.938 67.331 C 297.940 68.334,302.254 67.393,302.254 66.173 C 302.254 66.063,302.512 65.875,302.828 65.756 C 304.141 65.260,304.578 64.941,304.940 64.217 C 305.153 63.792,305.510 63.394,305.780 63.282 C 306.738 62.886,307.146 62.319,307.271 61.212 C 307.380 60.246,307.436 60.146,308.080 59.748 C 309.772 58.702,310.207 55.728,308.779 54.964 C 308.432 54.778,308.427 54.788,308.677 55.179 M31.351 56.341 C 31.296 56.511,31.140 56.950,31.003 57.317 C 30.852 57.723,30.756 58.667,30.756 59.736 C 30.756 60.700,30.640 61.991,30.500 62.605 C 29.760 65.829,30.144 70.703,31.138 70.703 C 31.224 70.703,31.154 70.444,30.981 70.128 C 30.556 69.351,30.575 64.019,31.007 62.562 C 31.161 62.046,31.287 61.101,31.288 60.463 C 31.292 58.569,31.332 58.506,32.532 58.506 C 33.518 58.506,33.563 58.526,33.634 58.992 C 33.674 59.260,33.719 59.001,33.732 58.418 C 33.746 57.835,33.707 57.059,33.647 56.695 L 33.537 56.032 32.495 56.032 C 31.657 56.032,31.432 56.093,31.351 56.341 M228.885 56.845 C 227.728 58.239,227.417 63.022,228.439 63.692 L 228.849 63.961 228.522 63.320 C 227.882 62.064,227.991 60.440,228.859 58.317 L 229.117 57.685 230.246 57.717 C 231.429 57.751,231.570 57.630,231.267 56.842 C 231.114 56.444,229.216 56.447,228.885 56.845 M161.222 57.937 C 160.084 60.187,160.052 63.009,161.155 63.732 L 161.588 64.015 161.185 63.471 C 160.412 62.425,160.640 60.054,161.659 58.539 C 161.680 58.508,162.202 58.456,162.819 58.423 L 163.942 58.363 163.997 57.728 L 164.051 57.092 162.848 57.097 L 161.644 57.102 161.222 57.937 M143.247 57.417 C 143.675 58.128,143.835 59.362,143.610 60.211 C 143.216 61.697,143.292 61.636,141.928 61.584 L 140.698 61.538 140.698 62.029 C 140.698 62.518,140.703 62.520,141.998 62.555 L 143.299 62.589 143.660 61.741 C 144.533 59.693,144.443 58.264,143.385 57.407 C 143.155 57.221,143.130 57.223,143.247 57.417 M358.948 57.814 C 358.778 57.913,358.639 58.109,358.639 58.250 C 358.639 58.391,358.566 58.506,358.476 58.506 C 358.170 58.506,357.887 59.785,357.984 60.724 L 358.080 61.654 357.431 61.774 C 356.386 61.968,355.457 63.158,355.457 64.303 C 355.457 64.676,355.261 64.988,354.718 65.475 C 353.912 66.199,353.235 67.378,353.048 68.383 C 352.983 68.735,352.762 69.167,352.558 69.343 C 352.354 69.519,352.011 69.815,351.794 70.001 C 351.117 70.583,351.038 72.487,351.670 73.011 C 352.073 73.345,352.098 73.166,351.799 72.093 C 351.502 71.025,351.906 69.996,352.622 69.996 C 352.809 69.996,353.069 69.542,353.410 68.626 C 354.020 66.981,354.557 66.110,354.959 66.108 C 355.461 66.106,355.811 65.592,355.811 64.855 C 355.811 63.066,356.950 62.040,358.680 62.272 C 359.176 62.339,359.346 62.298,359.346 62.113 C 359.346 61.977,359.253 61.865,359.140 61.865 C 359.026 61.865,358.987 61.812,359.052 61.747 C 359.117 61.682,359.061 61.503,358.928 61.349 C 358.587 60.956,358.427 59.682,358.646 59.107 C 358.928 58.365,359.328 58.165,360.539 58.159 C 361.401 58.154,361.644 58.095,361.644 57.888 C 361.644 57.571,359.467 57.511,358.948 57.814 M326.361 58.776 C 325.822 59.315,325.866 60.291,326.473 61.243 L 326.814 61.776 326.705 60.588 C 326.575 59.174,327.691 58.514,328.913 59.281 C 329.092 59.393,329.134 59.307,329.090 58.923 C 329.003 58.165,327.076 58.061,326.361 58.776 M269.129 59.761 C 270.082 60.810,269.540 65.529,268.459 65.590 C 268.332 65.597,267.830 65.616,267.344 65.634 C 266.487 65.664,266.460 65.681,266.460 66.195 C 266.460 67.497,269.175 66.871,269.462 65.504 C 269.504 65.301,269.709 64.429,269.917 63.567 C 270.433 61.421,269.978 59.390,268.980 59.390 C 268.877 59.390,268.943 59.557,269.129 59.761 M59.014 59.860 C 58.522 60.170,58.008 60.911,57.704 61.750 C 57.602 62.029,57.206 62.470,56.823 62.730 C 56.339 63.059,56.019 63.471,55.772 64.081 C 55.417 64.960,55.231 65.189,54.348 65.836 C 53.784 66.250,53.773 67.813,54.331 68.370 C 54.614 68.652,54.629 68.598,54.581 67.444 L 54.529 66.217 55.075 66.102 C 55.929 65.922,56.032 65.790,56.032 64.883 C 56.032 63.995,56.529 63.249,57.278 63.011 C 57.458 62.954,57.817 62.454,58.076 61.900 C 58.837 60.270,59.070 60.097,60.496 60.097 C 61.394 60.097,61.698 60.039,61.645 59.876 C 61.527 59.521,59.572 59.509,59.014 59.860 M89.239 59.970 C 88.700 60.425,88.346 61.092,88.036 62.239 C 87.875 62.833,87.615 63.222,87.078 63.671 C 86.365 64.267,85.829 65.390,85.472 67.035 C 85.414 67.302,85.273 67.521,85.159 67.521 C 84.273 67.521,83.739 68.949,84.206 70.068 C 84.481 70.726,84.948 71.150,84.783 70.592 C 84.455 69.481,84.583 68.496,85.086 68.255 C 85.632 67.993,85.972 67.322,86.172 66.110 C 86.385 64.815,87.007 64.163,88.027 64.163 L 88.871 64.163 88.699 63.411 C 88.254 61.475,89.038 60.099,90.565 60.135 C 91.064 60.147,91.571 60.233,91.692 60.326 C 91.939 60.514,92.002 60.144,91.778 59.823 C 91.513 59.443,89.742 59.547,89.239 59.970 M111.970 59.971 C 111.604 60.401,111.330 61.734,111.439 62.549 C 111.499 62.999,111.656 64.607,111.787 66.122 C 111.918 67.638,112.125 69.069,112.248 69.304 C 112.371 69.539,112.529 69.850,112.598 69.996 C 112.748 70.310,114.724 70.392,114.933 70.093 C 115.430 69.383,115.093 69.022,113.990 69.084 C 112.626 69.161,112.624 69.158,112.428 67.157 C 112.338 66.239,112.140 64.906,111.988 64.195 C 111.609 62.431,111.633 61.295,112.067 60.444 C 112.409 59.775,112.356 59.518,111.970 59.971 M287.036 60.913 C 286.770 61.233,286.440 62.070,286.085 63.321 C 285.831 64.221,286.271 65.553,287.017 66.137 C 287.283 66.345,287.292 66.339,287.092 66.083 C 286.397 65.193,286.396 62.786,287.091 62.110 C 287.346 61.862,288.990 61.730,289.316 61.932 C 289.545 62.074,289.613 61.410,289.420 60.907 C 289.266 60.507,287.368 60.512,287.036 60.913 M323.801 62.479 C 323.451 62.709,323.027 63.188,322.858 63.544 C 322.619 64.048,322.313 64.304,321.488 64.694 C 320.423 65.198,319.569 65.886,319.011 66.688 C 318.805 66.985,318.384 67.202,317.652 67.386 C 315.927 67.820,315.532 68.247,315.520 69.686 C 315.511 70.765,315.544 70.879,315.864 70.879 C 316.182 70.879,316.218 70.761,316.219 69.686 L 316.220 68.493 316.917 68.095 C 318.001 67.476,319.670 67.589,319.807 68.290 C 319.848 68.499,319.892 68.140,319.905 67.492 C 319.932 66.166,320.407 65.595,322.016 64.951 C 322.424 64.788,322.757 64.555,322.757 64.433 C 322.757 64.311,323.101 63.843,323.521 63.392 L 324.285 62.572 325.554 62.572 C 326.564 62.572,326.823 62.518,326.823 62.307 C 326.823 61.837,324.585 61.965,323.801 62.479 M94.323 63.323 C 94.171 63.891,94.191 65.879,94.346 65.652 C 94.418 65.547,94.972 65.461,95.579 65.461 L 96.681 65.461 96.779 66.093 C 96.833 66.441,96.964 67.044,97.070 67.433 C 97.556 69.211,97.576 70.855,97.126 72.050 C 96.627 73.375,96.648 73.418,97.317 72.452 C 97.991 71.479,97.983 68.539,97.299 65.592 C 97.059 64.563,96.822 63.542,96.771 63.323 C 96.688 62.962,96.576 62.925,95.554 62.925 C 94.537 62.925,94.419 62.963,94.323 63.323 M78.206 64.571 C 78.788 66.003,78.652 66.723,77.698 67.261 C 77.512 67.366,77.161 68.072,76.873 68.923 C 76.356 70.445,75.816 71.233,75.289 71.233 C 74.814 71.233,74.580 71.656,74.417 72.804 C 74.160 74.623,73.861 74.945,72.427 74.945 C 71.109 74.945,70.761 75.209,71.298 75.803 C 72.622 77.266,71.820 79.064,69.881 78.979 C 68.792 78.931,68.580 78.966,68.623 79.187 C 68.705 79.613,71.052 79.655,71.512 79.238 C 72.312 78.512,72.487 78.013,72.362 76.800 L 72.245 75.652 72.857 75.652 C 73.747 75.652,74.765 74.411,74.772 73.316 C 74.776 72.677,75.132 72.145,75.864 71.682 C 76.426 71.327,77.243 69.785,77.243 69.079 C 77.243 68.724,77.489 68.338,78.126 67.698 C 79.330 66.488,79.409 64.544,78.272 64.118 C 78.006 64.018,77.999 64.064,78.206 64.571 M141.081 64.251 C 141.123 64.348,141.345 64.824,141.574 65.309 C 142.019 66.254,141.937 67.393,141.320 68.818 C 141.186 69.125,141.031 69.525,140.974 69.707 C 140.882 70.000,140.733 70.026,139.625 69.941 L 138.379 69.846 138.434 70.318 C 138.487 70.772,138.536 70.793,139.674 70.843 L 140.859 70.895 141.316 70.205 C 142.318 68.691,142.390 65.348,141.440 64.476 C 141.200 64.255,141.038 64.154,141.081 64.251 M208.637 64.560 C 209.394 65.767,209.366 67.611,208.563 69.413 L 208.232 70.155 207.121 70.208 L 206.010 70.261 205.957 70.881 L 205.905 71.502 207.036 71.553 C 208.595 71.622,208.773 71.343,209.528 67.640 C 209.803 66.290,209.679 65.510,209.053 64.664 C 208.615 64.070,208.277 63.987,208.637 64.560 M226.567 65.621 C 225.243 67.706,224.960 72.405,226.120 73.026 C 226.427 73.191,226.431 73.171,226.190 72.703 C 225.526 71.413,225.671 69.230,226.571 66.963 C 226.797 66.393,228.822 66.117,228.963 66.637 C 229.003 66.783,229.045 66.678,229.056 66.405 C 229.106 65.202,227.211 64.605,226.567 65.621 M160.053 65.897 C 159.197 65.951,159.156 65.979,158.744 66.781 C 157.697 68.820,157.620 73.177,158.630 73.177 C 158.864 73.177,158.853 73.080,158.551 72.517 C 157.989 71.469,158.127 69.738,158.926 67.782 L 159.290 66.894 160.378 66.891 C 161.416 66.887,161.470 66.866,161.521 66.432 C 161.584 65.898,161.358 65.815,160.053 65.897 M294.741 66.460 C 294.802 66.558,294.786 66.637,294.708 66.637 C 294.629 66.637,294.565 67.134,294.565 67.742 L 294.565 68.847 292.620 68.971 C 291.551 69.039,289.920 69.211,288.997 69.353 L 287.318 69.611 286.653 69.181 L 285.989 68.751 286.350 68.003 C 286.549 67.592,286.790 67.117,286.884 66.947 C 287.150 66.467,286.923 66.580,286.348 67.212 C 286.061 67.528,285.823 67.909,285.820 68.060 C 285.818 68.211,285.730 68.420,285.625 68.524 C 285.489 68.660,285.623 68.898,286.094 69.355 C 286.875 70.114,287.676 70.179,290.661 69.729 C 291.624 69.584,292.878 69.465,293.447 69.465 C 294.016 69.465,294.659 69.373,294.876 69.261 C 295.094 69.149,295.391 69.001,295.537 68.932 C 295.732 68.840,295.808 68.476,295.826 67.545 L 295.851 66.284 295.241 66.284 C 294.880 66.284,294.677 66.356,294.741 66.460 M345.650 67.565 C 345.718 68.076,345.785 68.562,345.799 68.647 C 345.813 68.732,345.586 68.937,345.294 69.102 C 344.726 69.425,344.330 70.041,344.322 70.614 C 344.299 72.122,343.394 73.000,341.863 73.000 C 340.809 73.000,340.443 73.221,341.134 73.440 C 341.863 73.672,341.850 76.100,341.115 76.796 C 340.739 77.153,340.582 77.181,339.500 77.080 C 338.483 76.985,338.309 77.009,338.353 77.238 C 338.390 77.437,338.717 77.531,339.601 77.596 C 341.283 77.720,342.011 77.013,342.285 74.988 C 342.398 74.150,342.487 74.004,343.190 73.500 C 343.618 73.192,343.968 72.835,343.968 72.705 C 343.968 72.576,344.032 72.470,344.110 72.470 C 344.264 72.470,344.854 70.943,344.853 70.548 C 344.852 70.415,345.216 69.984,345.662 69.592 C 346.542 68.817,346.605 68.335,345.981 67.129 C 345.605 66.402,345.511 66.526,345.650 67.565 M381.857 66.846 C 381.092 68.038,381.019 68.636,381.343 71.056 C 381.492 72.174,381.615 73.605,381.616 74.235 C 381.617 75.124,381.723 75.591,382.088 76.312 L 382.559 77.243 383.679 77.243 L 384.799 77.243 384.799 76.580 L 384.800 75.917 383.666 75.976 L 382.532 76.034 382.406 74.827 C 382.337 74.162,382.131 73.029,381.948 72.308 C 381.495 70.515,381.461 67.923,381.883 67.279 C 382.055 67.017,382.153 66.760,382.101 66.708 C 382.049 66.656,381.939 66.718,381.857 66.846 M266.549 68.872 C 266.549 68.965,266.627 69.119,266.722 69.215 C 267.384 69.876,267.403 72.017,266.759 73.354 C 266.466 73.961,266.437 73.974,265.267 74.025 C 264.100 74.076,264.074 74.087,264.074 74.558 C 264.074 75.212,266.140 75.396,266.661 74.788 C 267.442 73.875,267.946 71.173,267.536 70.098 C 267.263 69.383,266.549 68.496,266.549 68.872 M52.143 69.060 C 51.637 69.247,51.230 69.726,50.791 70.654 C 50.548 71.167,50.279 71.586,50.192 71.586 C 49.766 71.586,48.771 72.773,48.669 73.402 C 48.595 73.861,48.390 74.203,48.010 74.500 C 47.016 75.279,46.850 75.461,46.768 75.868 C 46.723 76.089,46.640 76.489,46.583 76.755 C 46.511 77.096,46.297 77.317,45.863 77.499 C 44.731 77.971,44.811 80.156,45.960 80.163 C 46.817 80.168,47.467 79.980,47.415 79.741 C 47.391 79.631,47.437 79.540,47.517 79.540 C 47.658 79.540,47.649 79.250,47.434 76.750 C 47.332 75.562,47.509 75.122,48.089 75.122 C 48.513 75.122,48.962 74.462,48.962 73.837 C 48.962 73.209,49.166 72.946,50.508 71.848 C 50.824 71.590,51.083 71.226,51.083 71.041 C 51.083 70.162,52.282 69.289,53.489 69.289 C 54.124 69.289,54.618 69.211,54.618 69.112 C 54.618 68.928,52.616 68.886,52.143 69.060 M311.274 69.842 C 310.452 70.031,309.650 70.302,309.493 70.444 C 309.336 70.586,309.115 70.703,309.001 70.703 C 308.862 70.703,308.794 71.112,308.794 71.940 C 308.794 73.172,308.796 73.177,309.280 73.178 C 309.765 73.178,309.766 73.177,309.708 72.053 L 309.649 70.928 310.814 70.462 C 312.291 69.871,313.830 69.823,314.498 70.349 C 315.058 70.789,315.147 70.792,315.035 70.364 C 314.838 69.610,313.246 69.389,311.274 69.842 M81.861 72.234 C 81.344 72.839,81.308 72.970,81.308 74.266 L 81.308 75.652 80.729 75.652 C 79.900 75.652,79.212 76.491,78.816 77.986 C 78.643 78.637,78.417 79.328,78.314 79.521 C 77.971 80.160,78.106 80.539,78.862 81.063 L 79.598 81.573 87.961 81.625 C 96.824 81.681,97.269 81.647,98.162 80.856 C 98.979 80.133,98.314 78.310,97.154 78.088 L 96.734 78.008 97.224 78.730 C 98.051 79.950,98.049 80.340,97.214 80.867 L 96.500 81.318 88.241 81.269 L 79.982 81.220 79.426 80.802 C 78.750 80.294,78.746 78.824,79.418 77.385 C 79.882 76.392,80.211 76.215,81.537 76.246 C 82.664 76.273,82.678 76.254,82.216 75.335 C 81.223 73.360,81.802 72.117,83.715 72.117 C 84.600 72.117,84.843 72.060,84.843 71.852 C 84.843 71.205,82.481 71.507,81.861 72.234 M363.942 72.106 C 363.942 72.756,364.054 72.823,365.293 72.914 C 366.585 73.008,366.521 72.903,366.851 75.456 C 367.006 76.661,367.167 77.700,367.207 77.766 C 367.378 78.043,366.877 80.523,366.610 80.721 C 365.933 81.220,363.496 81.346,355.682 81.283 L 347.865 81.220 347.423 80.778 L 346.982 80.336 347.297 79.275 L 347.611 78.215 348.394 78.126 L 349.177 78.038 349.120 77.243 C 349.088 76.805,349.060 76.407,349.057 76.359 C 349.026 75.820,349.135 75.279,349.315 75.082 C 349.437 74.950,349.624 74.686,349.732 74.495 C 349.950 74.111,349.937 74.114,351.318 74.083 C 352.732 74.051,352.526 73.627,351.082 73.596 C 349.732 73.568,349.088 74.126,348.739 75.630 C 348.574 76.339,348.333 76.768,347.788 77.320 C 347.304 77.812,346.955 78.389,346.751 79.037 C 346.349 80.312,346.353 80.347,346.971 81.008 L 347.499 81.573 356.960 81.573 L 366.421 81.573 366.993 80.961 L 367.565 80.349 367.559 78.398 C 367.552 75.773,367.259 73.445,366.808 72.426 L 366.436 71.586 365.189 71.586 L 363.942 71.586 363.942 72.106 M304.610 72.161 C 303.333 72.728,302.921 73.127,303.157 73.567 C 303.430 74.078,305.387 74.944,306.266 74.945 C 306.930 74.945,307.079 75.029,307.673 75.740 C 308.039 76.178,308.441 76.536,308.566 76.536 C 308.691 76.536,308.794 76.606,308.794 76.692 C 308.794 76.778,309.227 77.024,309.756 77.239 C 310.647 77.600,311.268 78.187,311.268 78.666 C 311.268 79.320,312.848 80.099,314.046 80.035 C 315.534 79.956,315.546 79.518,314.059 79.559 C 312.588 79.599,311.268 78.716,311.268 77.691 C 311.268 77.535,311.129 77.365,310.959 77.313 C 310.789 77.260,310.490 77.128,310.296 77.020 C 310.102 76.912,309.704 76.704,309.412 76.556 C 308.511 76.102,308.278 75.675,308.243 74.414 C 308.225 73.783,308.177 73.489,308.136 73.762 C 307.977 74.820,304.429 74.623,303.840 73.523 C 303.273 72.463,307.267 71.803,307.928 72.847 C 308.020 72.992,308.082 73.008,308.084 72.887 C 308.097 71.885,306.150 71.478,304.610 72.161 M36.320 73.655 C 36.010 74.378,36.061 75.652,36.401 75.652 C 36.618 75.652,36.757 75.829,36.832 76.204 C 37.137 77.732,36.835 78.452,35.655 79.010 C 35.300 79.178,35.036 79.469,34.936 79.806 C 34.605 80.914,34.461 81.131,33.767 81.569 C 33.375 81.817,33.053 82.143,33.053 82.295 C 33.053 83.182,31.725 84.666,30.930 84.666 C 30.681 84.666,30.162 84.828,29.777 85.025 L 29.076 85.383 29.018 85.008 C 28.985 84.801,29.125 84.455,29.327 84.240 C 29.534 84.019,29.695 83.612,29.695 83.307 C 29.695 82.238,29.936 81.597,30.581 80.952 L 31.236 80.298 30.578 80.465 C 29.910 80.634,29.165 81.584,29.165 82.265 C 29.165 82.425,28.960 83.042,28.710 83.636 C 28.223 84.794,28.242 85.203,28.819 85.887 L 29.178 86.313 29.942 85.932 C 30.362 85.722,30.820 85.550,30.960 85.550 C 31.275 85.550,33.053 83.804,33.053 83.495 C 33.053 83.001,33.492 82.358,34.130 81.916 C 34.581 81.603,34.928 81.151,35.186 80.539 C 35.477 79.850,35.769 79.500,36.387 79.099 C 37.036 78.678,37.225 78.441,37.306 77.950 C 37.448 77.082,37.775 76.546,38.281 76.354 C 38.960 76.095,39.130 75.522,38.856 74.403 L 38.621 73.442 37.539 73.390 C 36.635 73.347,36.433 73.391,36.320 73.655 M206.098 73.445 C 206.098 73.526,206.205 73.717,206.336 73.870 C 207.097 74.761,207.011 76.811,206.143 78.446 C 205.785 79.121,203.858 79.291,203.592 78.671 C 203.526 78.517,203.466 78.809,203.459 79.319 L 203.447 80.247 204.664 80.247 C 206.122 80.247,206.244 80.120,206.907 77.904 C 207.392 76.283,207.443 75.366,207.095 74.541 C 206.861 73.990,206.098 73.150,206.098 73.445 M138.577 73.555 C 138.577 73.602,138.736 73.970,138.931 74.373 C 139.387 75.317,139.378 75.880,138.887 77.026 L 138.489 77.959 137.287 77.897 L 136.085 77.835 136.138 78.378 C 136.227 79.295,138.307 79.300,138.894 78.385 C 139.777 77.011,139.838 74.654,139.012 73.877 C 138.773 73.653,138.577 73.508,138.577 73.555 M156.374 75.254 C 155.535 77.404,155.583 79.016,156.514 79.890 L 156.956 80.305 156.492 79.348 C 155.967 78.266,155.928 77.687,156.329 76.913 C 156.481 76.618,156.606 76.215,156.606 76.018 C 156.606 75.507,157.279 75.147,158.155 75.191 C 159.120 75.239,159.335 75.100,159.190 74.522 C 159.080 74.086,159.013 74.061,157.957 74.061 L 156.839 74.061 156.374 75.254 M224.167 74.752 C 223.958 75.035,223.627 75.879,223.430 76.627 L 223.074 77.989 223.440 78.841 C 223.642 79.309,223.967 79.837,224.163 80.014 C 224.498 80.316,224.496 80.289,224.122 79.571 C 223.581 78.532,223.596 76.988,224.157 75.990 L 224.561 75.272 225.670 75.329 C 226.811 75.388,226.860 75.354,226.667 74.635 C 226.488 73.967,224.686 74.051,224.167 74.752 M284.321 74.663 C 283.717 75.028,283.592 75.216,283.405 76.040 C 283.257 76.693,282.990 77.212,282.561 77.680 C 280.824 79.576,280.636 84.843,282.306 84.843 C 282.435 84.843,282.400 84.752,282.221 84.621 C 281.187 83.865,281.471 79.797,282.632 78.746 C 283.016 78.399,284.525 78.465,284.762 78.840 C 284.886 79.036,284.927 78.983,284.929 78.620 C 284.930 78.350,284.749 77.960,284.510 77.721 C 283.941 77.152,283.751 75.999,284.131 75.419 C 284.515 74.833,284.829 74.771,287.406 74.781 C 292.435 74.801,293.209 75.104,292.920 76.945 C 292.756 77.990,292.825 78.098,293.490 77.842 C 294.269 77.543,293.677 74.945,292.831 74.945 C 292.705 74.945,292.523 74.865,292.426 74.768 C 291.781 74.123,285.350 74.040,284.321 74.663 M264.516 76.005 C 265.345 76.921,265.207 80.031,264.248 82.058 C 263.977 82.630,261.991 82.736,261.745 82.192 C 261.669 82.024,261.621 82.122,261.615 82.457 C 261.600 83.266,261.777 83.397,262.954 83.445 C 264.275 83.499,264.394 83.398,264.946 81.750 C 265.617 79.746,265.687 76.719,265.076 76.107 C 264.537 75.568,264.038 75.477,264.516 76.005 M114.504 76.314 C 114.061 76.826,113.881 77.945,114.029 79.275 C 114.105 79.956,114.171 80.935,114.176 81.452 C 114.182 82.079,114.336 82.711,114.642 83.357 L 115.099 84.324 116.241 84.278 L 117.383 84.233 117.330 83.621 L 117.278 83.008 116.172 83.055 C 115.377 83.088,115.048 83.035,114.999 82.867 C 114.463 81.019,114.216 77.871,114.540 77.020 C 114.918 76.023,114.909 75.844,114.504 76.314 M294.344 78.066 C 293.717 78.321,294.203 78.569,295.340 78.573 C 297.547 78.582,298.335 80.540,296.819 82.246 C 296.518 82.585,296.520 82.589,296.892 82.360 C 298.297 81.498,298.180 78.682,296.717 78.143 C 296.280 77.982,294.678 77.930,294.344 78.066 M338.759 78.459 C 339.376 79.761,338.973 81.485,338.050 81.485 C 337.793 81.485,337.671 81.734,337.357 82.899 C 337.078 83.935,336.270 85.195,335.879 85.202 C 335.229 85.214,334.954 85.637,334.954 86.621 C 334.954 87.352,334.849 87.715,334.488 88.236 L 334.022 88.909 332.720 88.909 C 331.303 88.909,331.206 88.997,331.765 89.783 C 333.051 91.589,332.346 93.221,330.326 93.116 C 329.266 93.061,329.121 93.092,329.121 93.367 C 329.121 93.828,331.585 93.831,331.988 93.372 C 332.669 92.595,332.872 91.894,332.748 90.739 L 332.628 89.616 333.247 89.616 C 334.109 89.616,334.825 88.858,335.225 87.520 C 335.459 86.740,335.775 86.218,336.454 85.488 C 337.182 84.706,337.413 84.306,337.587 83.529 C 337.766 82.728,337.981 82.369,338.784 81.534 C 339.944 80.326,339.979 78.373,338.846 78.076 C 338.573 78.005,338.563 78.048,338.759 78.459 M11.298 79.187 C 11.757 80.206,11.799 80.436,11.663 81.220 C 11.579 81.706,11.504 83.257,11.497 84.666 C 11.489 86.209,11.385 87.652,11.234 88.290 C 11.097 88.873,10.936 90.345,10.876 91.560 C 10.716 94.825,10.647 95.247,10.288 95.171 C 9.406 94.987,8.481 94.982,8.450 95.162 C 8.431 95.271,8.367 94.565,8.308 93.593 C 8.217 92.107,8.196 92.347,8.179 95.095 C 8.164 97.517,8.206 98.236,8.340 97.867 C 8.473 97.503,8.599 97.402,8.812 97.490 C 9.472 97.763,10.568 97.746,10.678 97.460 C 10.962 96.718,11.313 94.524,11.325 93.416 C 11.332 92.735,11.413 91.542,11.505 90.764 C 11.690 89.212,11.998 80.216,11.887 79.637 C 11.849 79.438,11.584 78.997,11.299 78.657 L 10.780 78.038 11.298 79.187 M68.873 81.159 C 69.200 82.404,69.131 82.972,68.644 83.041 C 68.093 83.120,67.696 83.641,67.590 84.424 C 67.424 85.658,67.363 85.819,66.835 86.411 C 66.329 86.977,66.275 86.994,65.149 86.936 C 64.007 86.877,63.520 87.146,64.313 87.398 C 65.156 87.665,65.315 89.567,64.573 90.519 C 64.103 91.123,64.093 91.126,62.872 91.057 C 61.196 90.962,61.253 91.428,62.934 91.560 C 64.562 91.687,65.200 91.014,65.486 88.864 C 65.548 88.403,65.667 88.025,65.752 88.025 C 66.284 88.025,67.480 86.448,67.865 85.241 C 68.089 84.536,68.332 83.959,68.406 83.959 C 69.235 83.959,69.771 82.533,69.351 81.444 C 68.880 80.222,68.580 80.043,68.873 81.159 M136.515 80.646 C 137.339 81.249,137.353 83.987,136.539 85.560 C 136.396 85.837,136.279 86.166,136.279 86.293 C 136.279 86.458,135.947 86.522,135.086 86.522 L 133.893 86.522 133.838 87.097 L 133.782 87.671 134.987 87.666 C 136.528 87.659,136.654 87.497,137.271 84.724 C 137.845 82.151,137.504 80.424,136.422 80.424 C 136.306 80.424,136.348 80.524,136.515 80.646 M314.328 80.563 C 313.689 80.970,313.579 82.666,314.096 84.136 C 314.284 84.671,314.441 85.251,314.444 85.425 C 314.447 85.599,314.611 86.056,314.807 86.441 L 315.164 87.141 316.309 87.141 L 317.455 87.141 317.455 86.346 L 317.455 85.550 316.339 85.550 C 315.223 85.550,315.222 85.550,314.905 84.887 C 314.179 83.373,314.084 81.569,314.681 80.645 C 314.840 80.400,314.653 80.357,314.328 80.563 M42.429 81.151 C 42.123 81.430,41.715 82.016,41.522 82.452 C 41.271 83.018,40.953 83.373,40.410 83.691 C 39.839 84.026,39.599 84.304,39.449 84.806 C 39.226 85.548,38.652 86.257,38.273 86.257 C 37.882 86.257,37.326 87.184,37.264 87.940 C 37.216 88.531,37.097 88.707,36.456 89.136 C 35.671 89.661,35.471 90.456,35.868 91.471 C 36.018 91.855,37.646 92.021,37.652 91.653 C 37.653 91.553,37.724 91.581,37.809 91.716 C 37.929 91.905,37.996 91.865,38.103 91.539 C 38.309 90.919,38.342 89.733,38.161 89.509 C 38.074 89.402,37.953 88.843,37.893 88.267 C 37.773 87.118,37.840 87.001,38.933 86.455 C 39.390 86.226,39.517 86.044,39.562 85.550 C 39.625 84.860,40.290 84.045,40.917 83.887 C 41.191 83.818,41.499 83.423,41.890 82.636 C 42.205 82.003,42.573 81.485,42.707 81.485 C 42.842 81.485,42.952 81.405,42.952 81.308 C 42.952 81.207,43.482 81.131,44.189 81.131 C 45.136 81.131,45.426 81.073,45.426 80.882 C 45.426 80.353,43.071 80.564,42.429 81.151 M154.441 82.968 C 154.271 83.097,154.132 83.317,154.132 83.457 C 154.132 83.597,154.062 83.787,153.976 83.880 C 152.978 84.958,153.250 88.872,154.364 89.469 L 154.723 89.661 154.364 89.205 C 153.635 88.277,153.516 87.312,153.932 85.694 C 154.399 83.875,154.509 83.766,155.870 83.759 C 156.984 83.754,157.105 83.660,156.852 83.002 C 156.716 82.646,154.899 82.621,154.441 82.968 M203.743 82.899 C 204.386 83.741,204.621 84.906,204.368 85.992 C 203.932 87.864,203.876 87.924,202.469 88.025 C 201.310 88.108,201.234 88.140,201.185 88.560 C 201.117 89.147,203.358 89.328,203.840 88.774 C 205.116 87.310,205.181 84.036,203.954 82.987 C 203.727 82.793,203.632 82.753,203.743 82.899 M384.504 83.036 C 384.185 83.238,383.550 84.990,383.637 85.427 C 383.679 85.640,383.804 86.690,383.913 87.760 C 384.050 89.091,384.234 89.941,384.496 90.455 L 384.880 91.206 385.968 91.206 C 387.139 91.206,387.265 91.088,387.271 89.978 C 387.273 89.641,387.226 89.592,387.061 89.757 C 386.945 89.874,386.400 89.969,385.851 89.969 L 384.853 89.969 384.552 88.599 C 384.031 86.227,383.987 84.690,384.412 83.729 C 384.614 83.272,384.764 82.900,384.745 82.902 C 384.726 82.903,384.618 82.963,384.504 83.036 M221.750 83.651 C 220.569 85.613,220.577 88.317,221.765 89.274 C 222.009 89.471,221.990 89.380,221.675 88.865 C 221.224 88.125,221.127 86.563,221.475 85.631 C 222.044 84.106,222.011 84.136,223.075 84.136 C 223.615 84.136,224.152 84.232,224.269 84.348 C 224.544 84.623,224.566 83.918,224.298 83.417 C 223.952 82.771,222.181 82.934,221.750 83.651 M261.958 85.054 C 261.955 85.121,262.105 85.439,262.290 85.761 C 262.885 86.795,262.903 87.363,262.392 88.858 C 261.806 90.570,261.918 90.472,260.495 90.517 L 259.302 90.555 259.302 91.193 L 259.302 91.830 260.574 91.827 L 261.846 91.825 262.415 90.411 C 263.268 88.289,263.297 86.397,262.489 85.509 C 262.200 85.191,261.961 84.987,261.958 85.054 M75.073 86.174 C 74.706 86.308,74.149 86.686,73.835 87.012 C 73.522 87.338,73.106 87.719,72.912 87.859 C 72.372 88.248,71.939 89.151,71.756 90.276 C 71.665 90.835,71.506 91.322,71.402 91.356 C 70.543 91.643,69.510 93.348,69.216 94.966 C 69.146 95.347,68.942 95.726,68.739 95.850 C 67.419 96.657,66.852 99.719,67.824 100.793 C 68.283 101.301,68.419 101.149,68.058 100.530 C 67.463 99.508,67.448 98.830,67.999 97.746 L 68.493 96.774 69.731 96.673 C 70.411 96.617,70.758 96.557,70.501 96.540 C 69.948 96.503,69.819 96.235,69.819 95.124 C 69.819 93.081,70.456 92.274,72.072 92.270 C 73.246 92.267,73.424 92.121,72.779 91.692 C 71.819 91.054,72.496 88.025,73.599 88.025 C 73.760 88.025,73.976 87.839,74.079 87.613 C 74.183 87.386,74.595 86.989,74.995 86.729 L 75.723 86.257 86.125 86.257 C 99.316 86.257,99.632 86.305,99.186 88.236 C 98.915 89.411,99.039 89.500,99.499 88.459 C 100.164 86.956,99.739 86.413,97.658 86.108 C 95.479 85.789,75.966 85.846,75.073 86.174 M279.795 86.655 C 278.890 88.238,278.878 90.542,279.769 91.424 L 280.175 91.825 279.801 90.977 C 279.309 89.858,279.313 89.302,279.823 88.015 L 280.247 86.944 281.396 86.986 L 282.545 87.028 282.601 86.466 L 282.656 85.904 281.440 85.904 L 280.224 85.904 279.795 86.655 M344.057 86.083 C 342.290 86.301,342.024 86.617,342.024 88.502 L 342.024 89.616 341.348 89.616 C 340.292 89.616,339.494 90.680,339.205 92.471 C 339.106 93.087,338.951 93.615,338.862 93.645 C 338.061 93.912,336.898 95.996,336.898 97.164 C 336.898 97.708,336.423 98.630,336.142 98.630 C 335.505 98.631,334.954 100.307,334.954 102.242 L 334.954 104.123 335.749 104.896 C 336.186 105.321,336.544 105.715,336.544 105.771 C 336.544 106.012,337.211 106.637,337.782 106.932 C 338.471 107.287,339.535 107.032,340.211 106.349 C 340.484 106.073,340.426 106.078,339.726 106.394 C 338.410 106.988,337.738 106.764,337.117 105.524 C 336.948 105.186,336.622 104.817,336.392 104.704 C 335.278 104.156,334.958 102.225,335.673 100.357 L 336.038 99.402 337.175 99.432 C 338.175 99.459,338.312 99.423,338.312 99.135 C 338.312 98.954,338.238 98.807,338.148 98.807 C 337.287 98.807,337.130 96.509,337.910 95.307 C 338.391 94.565,338.391 94.565,339.500 94.565 C 340.663 94.565,340.857 94.419,340.239 94.008 C 339.779 93.702,339.596 92.402,339.889 91.514 C 340.221 90.508,340.653 90.241,341.950 90.237 C 343.170 90.234,343.283 90.091,342.790 89.174 C 342.685 88.979,342.551 88.462,342.491 88.025 C 342.260 86.329,342.806 86.257,355.929 86.257 L 366.359 86.257 367.000 86.743 C 367.554 87.163,367.642 87.330,367.647 87.968 C 367.654 88.705,367.992 89.262,368.433 89.262 C 368.818 89.262,369.096 90.168,369.267 91.984 C 369.358 92.946,369.473 93.799,369.523 93.880 C 369.604 94.011,369.326 95.111,368.970 96.067 C 368.727 96.721,369.198 96.109,369.679 95.147 C 369.939 94.627,370.103 94.051,370.057 93.821 C 370.012 93.598,369.879 92.558,369.760 91.510 C 369.641 90.461,369.477 89.562,369.394 89.511 C 369.312 89.460,369.244 89.299,369.244 89.154 C 369.244 89.008,369.006 88.635,368.715 88.324 C 368.424 88.014,368.185 87.620,368.185 87.450 C 368.184 87.280,368.110 87.141,368.019 87.141 C 367.928 87.141,367.806 86.989,367.747 86.804 C 367.471 85.935,367.011 85.902,355.675 85.928 C 349.868 85.941,344.640 86.011,344.057 86.083 M193.372 88.622 C 193.372 89.353,193.255 90.399,193.113 90.945 C 192.817 92.080,193.052 93.028,193.831 93.846 C 194.235 94.271,194.235 94.266,193.792 93.404 C 193.282 92.414,193.288 91.162,193.807 90.159 C 194.211 89.378,194.123 87.435,193.681 87.351 C 193.409 87.299,193.372 87.451,193.372 88.622 M134.087 90.047 C 134.861 91.243,134.829 93.546,134.021 94.669 C 133.652 95.182,131.700 95.237,131.475 94.741 C 131.401 94.577,131.355 94.677,131.355 95.007 C 131.355 95.936,131.506 96.063,132.688 96.123 C 133.938 96.186,134.131 96.016,134.726 94.327 C 135.421 92.354,135.212 90.819,134.119 89.854 L 133.750 89.527 134.087 90.047 M187.446 89.925 C 188.248 91.960,187.824 92.843,186.120 92.684 C 184.982 92.578,184.887 92.596,184.887 92.910 C 184.887 93.512,187.176 93.497,187.783 92.890 C 188.473 92.201,188.520 91.716,188.007 90.596 C 187.603 89.713,187.148 89.169,187.446 89.925 M116.819 90.196 C 115.949 91.403,116.165 96.262,117.123 97.058 C 117.257 97.169,117.366 97.371,117.366 97.508 C 117.366 97.910,119.451 97.792,119.672 97.378 C 119.915 96.924,119.893 95.605,119.650 96.023 C 119.512 96.261,119.235 96.332,118.455 96.332 L 117.440 96.332 117.205 95.493 C 116.390 92.577,116.341 91.783,116.905 90.632 C 117.338 89.748,117.296 89.533,116.819 90.196 M152.133 91.345 C 151.103 92.484,150.606 96.767,151.370 97.922 C 152.003 98.878,152.043 98.815,151.564 97.614 L 151.158 96.597 151.477 94.960 C 151.980 92.380,152.145 92.134,153.421 92.062 C 154.245 92.015,154.493 92.060,154.549 92.267 C 154.589 92.413,154.630 92.289,154.641 91.993 C 154.678 91.023,152.851 90.552,152.133 91.345 M61.938 92.317 C 62.781 93.632,62.565 94.828,61.404 95.277 C 61.181 95.363,60.987 95.640,60.922 95.964 C 60.862 96.263,60.652 96.841,60.455 97.248 C 60.258 97.656,60.097 98.080,60.097 98.191 C 60.097 98.474,59.332 99.160,59.015 99.160 C 58.488 99.160,58.176 99.597,58.132 100.398 C 58.077 101.395,57.661 102.014,56.780 102.412 C 56.290 102.633,56.031 102.893,55.876 103.322 C 55.608 104.064,54.904 104.640,54.264 104.640 C 53.667 104.640,52.893 105.225,52.818 105.734 C 52.644 106.916,48.895 107.429,48.034 106.388 L 47.724 106.015 47.724 106.464 C 47.724 108.196,52.720 107.563,53.608 105.718 C 53.744 105.435,54.027 105.231,54.383 105.158 C 55.064 105.019,56.009 104.303,56.022 103.914 C 56.035 103.546,56.825 102.696,57.154 102.696 C 57.589 102.696,58.506 101.496,58.506 100.927 C 58.506 100.520,58.673 100.285,59.288 99.829 C 59.718 99.510,60.115 99.129,60.170 98.984 C 60.225 98.838,60.424 98.480,60.613 98.188 C 60.801 97.897,60.961 97.402,60.968 97.090 C 60.980 96.553,61.541 95.777,62.230 95.343 C 63.168 94.752,63.058 92.432,62.075 92.068 C 61.710 91.933,61.702 91.947,61.938 92.317 M219.961 92.096 C 218.421 92.668,217.938 97.674,219.333 98.601 C 219.726 98.862,219.724 98.845,219.266 98.177 C 218.653 97.282,218.702 95.393,219.376 93.891 L 219.797 92.952 220.902 93.007 C 222.003 93.062,222.007 93.061,222.007 92.576 C 222.006 92.309,221.947 92.080,221.874 92.067 C 221.316 91.968,220.263 91.984,219.961 92.096 M33.516 92.290 C 32.844 92.689,32.521 93.065,32.324 93.675 C 32.071 94.463,31.885 94.694,31.108 95.184 C 30.565 95.527,30.337 95.854,29.698 97.210 C 29.630 97.353,29.344 97.594,29.061 97.746 C 28.736 97.921,28.363 98.398,28.050 99.042 C 27.723 99.713,27.400 100.119,27.104 100.232 C 26.222 100.567,25.968 101.075,26.028 102.386 L 26.083 103.579 25.194 103.585 C 24.112 103.592,23.610 103.976,22.795 105.420 C 22.486 105.968,22.063 106.503,21.854 106.609 C 21.385 106.849,20.866 107.473,20.861 107.805 C 20.855 108.197,19.987 109.235,19.655 109.245 C 19.253 109.258,18.536 110.190,18.395 110.885 C 18.320 111.249,18.118 111.523,17.814 111.669 C 17.558 111.793,17.143 112.151,16.892 112.465 C 15.751 113.894,15.928 113.831,13.034 113.831 L 10.417 113.831 9.892 113.295 C 9.604 113.000,9.368 112.601,9.368 112.408 C 9.368 112.033,8.633 110.763,8.296 110.554 C 8.185 110.486,8.213 110.618,8.358 110.849 C 8.502 111.079,8.762 111.705,8.934 112.238 C 9.106 112.771,9.467 113.427,9.736 113.696 L 10.225 114.185 13.409 114.185 C 16.817 114.185,16.762 114.200,16.959 113.228 C 17.045 112.806,17.206 112.638,17.669 112.487 C 18.411 112.244,18.913 111.648,18.913 111.009 C 18.913 110.424,19.596 109.641,20.327 109.386 C 20.641 109.276,20.857 109.076,20.857 108.895 C 20.857 108.446,21.884 106.972,22.286 106.845 C 22.476 106.784,22.836 106.333,23.085 105.842 C 23.839 104.353,24.186 104.110,25.549 104.110 L 26.722 104.110 26.599 102.632 L 26.476 101.155 27.359 101.038 C 28.321 100.910,28.451 100.731,28.455 99.520 C 28.458 98.934,29.105 98.100,29.558 98.100 C 29.862 98.100,30.197 97.623,30.386 96.922 C 30.578 96.210,31.130 95.559,31.843 95.203 C 32.059 95.095,32.300 94.758,32.379 94.454 C 32.457 94.151,32.641 93.803,32.788 93.682 C 32.934 93.560,33.053 93.364,33.053 93.246 C 33.053 92.889,33.892 92.620,35.006 92.620 C 35.769 92.620,36.058 92.555,36.058 92.383 C 36.058 92.079,33.998 92.004,33.516 92.290 M201.783 93.228 C 202.221 94.437,202.208 94.580,201.478 96.526 C 201.295 97.012,199.318 97.209,198.978 96.774 C 198.902 96.677,198.862 96.876,198.890 97.216 L 198.939 97.835 200.177 97.835 L 201.414 97.835 201.906 96.848 C 202.579 95.499,202.622 93.898,202.014 92.834 C 201.402 91.762,201.308 91.921,201.783 93.228 M182.834 94.648 C 182.529 95.083,182.516 95.624,182.810 95.628 C 182.953 95.630,182.966 95.677,182.849 95.761 C 182.594 95.941,182.631 96.492,182.909 96.664 C 183.839 97.241,183.211 99.514,182.120 99.514 C 181.386 99.514,180.822 100.042,180.822 100.730 C 180.822 101.617,179.691 101.901,178.303 101.364 C 177.703 101.131,177.994 101.653,178.607 101.909 C 179.901 102.450,180.896 102.113,181.341 100.984 C 181.483 100.623,181.749 100.355,182.084 100.239 C 183.053 99.901,183.603 99.380,183.733 98.677 C 183.858 97.997,184.430 97.216,184.802 97.216 C 185.556 97.216,185.706 95.283,185.019 94.429 C 184.727 94.066,183.130 94.226,182.834 94.648 M259.689 94.946 C 260.355 96.325,260.372 96.584,259.895 98.005 L 259.451 99.323 258.362 99.226 C 257.763 99.173,257.212 99.092,257.138 99.046 C 256.978 98.947,256.960 99.546,257.111 99.941 C 257.194 100.158,257.482 100.220,258.393 100.217 L 259.567 100.212 260.059 99.171 C 260.711 97.794,260.774 96.135,260.209 95.222 C 259.606 94.245,259.262 94.063,259.689 94.946 M278.440 94.355 C 276.865 94.507,275.964 99.130,277.201 100.707 C 277.577 101.187,277.665 100.891,277.331 100.268 C 276.852 99.373,276.877 98.094,277.405 96.584 L 277.832 95.360 278.995 95.308 C 280.099 95.258,280.159 95.233,280.159 94.822 C 280.159 94.583,280.060 94.381,279.938 94.373 C 279.817 94.365,279.558 94.345,279.364 94.329 C 279.169 94.313,278.754 94.324,278.440 94.355 M98.841 95.183 C 98.822 96.371,99.350 97.715,99.679 97.318 C 99.815 97.155,100.185 97.039,100.572 97.039 L 101.233 97.039 101.348 98.017 C 101.411 98.555,101.534 99.132,101.621 99.299 C 102.357 100.713,102.081 103.666,101.142 104.433 C 100.824 104.692,100.455 105.223,100.322 105.612 C 99.860 106.971,98.423 107.236,96.967 106.233 C 96.514 105.920,96.534 105.959,97.083 106.460 C 98.429 107.685,99.721 107.524,100.706 106.006 C 100.973 105.595,101.331 105.155,101.502 105.028 C 101.672 104.901,101.812 104.682,101.812 104.541 C 101.812 104.401,101.883 104.286,101.970 104.286 C 102.513 104.286,102.751 101.557,102.346 99.964 C 102.172 99.279,101.971 98.122,101.900 97.393 C 101.710 95.445,101.465 95.063,100.431 95.098 C 99.111 95.143,99.012 95.117,98.932 94.697 C 98.890 94.479,98.849 94.697,98.841 95.183 M386.266 95.038 C 385.619 95.887,385.625 97.608,386.282 99.941 C 386.831 101.890,386.950 102.014,388.308 102.058 C 389.464 102.095,389.583 102.008,389.557 101.134 C 389.550 100.875,389.503 100.762,389.454 100.884 C 389.223 101.458,387.312 101.150,386.998 100.489 C 386.149 98.700,386.006 96.182,386.679 94.874 C 387.027 94.199,386.853 94.267,386.266 95.038 M329.402 95.493 C 329.466 96.003,329.528 96.498,329.540 96.593 C 329.553 96.688,329.307 96.880,328.995 97.020 C 328.444 97.267,328.060 97.933,328.060 98.642 C 328.060 99.870,326.990 100.778,325.644 100.692 C 324.696 100.632,324.542 100.666,324.467 100.952 C 324.388 101.256,323.672 101.405,322.811 101.297 C 322.185 101.218,321.849 103.479,322.461 103.656 C 323.373 103.918,324.364 103.963,324.617 103.753 C 324.940 103.485,324.978 101.628,324.666 101.317 C 324.501 101.152,324.777 101.105,325.907 101.105 C 327.286 101.105,327.371 101.082,327.562 100.663 C 327.673 100.420,327.827 100.221,327.905 100.221 C 327.982 100.221,328.138 99.883,328.250 99.470 C 328.590 98.214,328.800 97.746,329.023 97.746 C 329.811 97.746,330.284 96.080,329.799 95.015 C 329.463 94.278,329.277 94.501,329.402 95.493 M192.483 96.650 C 191.836 96.704,191.253 97.488,191.011 98.630 C 190.960 98.873,190.808 99.549,190.674 100.133 C 190.402 101.321,190.523 102.098,191.108 102.920 C 191.564 103.560,191.740 103.422,191.309 102.763 C 190.850 102.062,190.898 100.214,191.403 99.169 C 191.611 98.739,191.781 98.283,191.781 98.155 C 191.781 97.735,193.701 97.803,194.034 98.235 C 194.222 98.478,194.255 98.412,194.255 97.802 C 194.255 96.812,193.832 96.536,192.483 96.650 M132.149 97.260 C 132.799 98.515,132.721 100.124,131.932 101.740 C 131.599 102.423,131.584 102.431,130.535 102.456 C 129.951 102.470,129.375 102.490,129.253 102.500 C 129.131 102.510,129.038 102.735,129.046 103.005 C 129.054 103.272,129.095 103.406,129.138 103.303 C 129.186 103.188,129.625 103.145,130.280 103.192 C 131.546 103.284,131.870 103.070,132.502 101.723 C 133.078 100.497,133.119 97.591,132.567 97.039 C 132.030 96.502,131.815 96.616,132.149 97.260 M119.022 99.241 C 117.877 100.043,118.304 104.081,119.633 105.026 C 119.813 105.154,120.149 105.587,120.379 105.989 C 121.238 107.489,123.226 107.715,124.044 106.405 C 124.239 106.093,124.211 106.095,123.628 106.438 C 122.361 107.186,120.725 106.699,120.725 105.575 C 120.725 105.313,120.432 104.872,119.939 104.393 C 119.507 103.973,119.105 103.400,119.045 103.118 C 118.986 102.837,118.871 102.309,118.789 101.944 C 118.624 101.204,118.835 99.997,119.236 99.381 C 119.541 98.914,119.514 98.897,119.022 99.241 M151.806 99.293 C 150.077 101.354,151.188 104.201,153.551 103.764 C 154.101 103.662,154.575 103.579,154.606 103.579 C 154.637 103.579,154.662 103.480,154.662 103.358 C 154.663 103.200,154.366 103.154,153.611 103.197 C 152.547 103.257,151.676 102.904,151.663 102.406 C 151.660 102.296,151.543 101.986,151.404 101.719 C 151.149 101.226,151.496 99.869,152.047 99.205 C 152.148 99.083,152.193 98.984,152.148 98.984 C 152.103 98.984,151.949 99.123,151.806 99.293 M199.205 99.062 C 199.205 99.111,199.363 99.412,199.557 99.731 C 200.447 101.190,199.623 103.756,198.265 103.756 C 197.294 103.756,197.084 103.984,197.084 105.036 C 197.084 106.110,196.833 106.412,196.115 106.206 C 195.823 106.123,195.344 106.057,195.052 106.061 L 194.521 106.069 195.139 106.407 C 196.308 107.047,197.614 106.614,197.614 105.587 C 197.614 105.186,198.224 104.560,198.779 104.392 C 200.270 103.941,200.866 99.861,199.544 99.153 C 199.357 99.053,199.205 99.012,199.205 99.062 M176.845 101.240 C 177.275 101.556,177.049 103.607,176.543 103.986 C 175.939 104.438,174.802 104.420,173.998 103.945 C 173.553 103.682,173.442 103.664,173.518 103.864 C 173.872 104.785,175.720 105.061,176.779 104.351 L 177.552 103.833 177.605 102.617 C 177.642 101.764,177.589 101.358,177.428 101.256 C 177.141 101.074,176.599 101.059,176.845 101.240 M217.320 101.759 C 217.264 102.031,217.146 102.524,217.058 102.855 C 216.884 103.504,217.037 103.963,217.611 104.514 C 217.792 104.688,217.941 105.034,217.941 105.282 C 217.941 106.446,219.378 107.600,220.559 107.384 C 221.383 107.234,222.006 106.837,222.006 106.464 C 222.006 106.202,221.978 106.201,221.697 106.452 C 220.920 107.144,218.825 107.038,218.825 106.306 C 218.825 106.167,218.745 106.054,218.648 106.054 C 218.415 106.054,218.420 104.359,218.654 103.921 C 218.760 103.722,219.023 103.579,219.281 103.579 C 219.714 103.579,219.724 103.551,219.673 102.475 L 219.620 101.370 218.521 101.317 C 217.443 101.266,217.419 101.274,217.320 101.759 M257.181 101.419 C 257.181 101.499,257.265 101.648,257.367 101.751 C 258.290 102.673,258.021 103.949,256.780 104.546 C 256.307 104.773,255.947 105.100,255.802 105.435 C 255.397 106.368,255.297 106.493,254.819 106.663 C 254.460 106.791,254.141 106.741,253.456 106.452 C 252.909 106.221,252.589 106.156,252.631 106.285 C 252.669 106.401,253.157 106.679,253.717 106.904 L 254.734 107.312 255.300 106.880 C 255.611 106.643,256.010 106.181,256.187 105.854 C 256.365 105.526,256.760 105.133,257.066 104.979 C 258.394 104.312,258.711 102.276,257.600 101.548 C 257.370 101.397,257.181 101.339,257.181 101.419 M316.860 102.253 C 316.234 103.574,316.640 104.817,317.698 104.817 C 318.252 104.817,318.890 105.251,319.154 105.806 C 319.507 106.550,319.760 106.630,320.608 106.268 L 321.305 105.970 321.280 104.775 L 321.255 103.580 320.504 103.579 C 319.979 103.579,319.753 103.654,319.753 103.826 C 319.753 104.157,319.359 104.286,318.351 104.286 C 316.997 104.286,316.644 103.616,317.189 102.084 C 317.559 101.046,317.390 101.133,316.860 102.253 M68.216 104.053 C 67.539 105.833,67.891 106.519,69.785 107.114 L 71.076 107.519 71.963 107.103 C 72.451 106.875,72.930 106.540,73.027 106.358 C 73.198 106.038,73.189 106.038,72.716 106.351 C 71.576 107.105,69.757 107.078,68.974 106.295 C 68.842 106.162,68.649 106.054,68.546 106.054 C 68.421 106.054,68.399 105.646,68.481 104.817 C 68.609 103.519,68.518 103.258,68.216 104.053 M128.841 103.712 C 128.833 103.785,128.839 104.306,128.854 104.869 C 128.907 106.871,126.445 107.673,124.818 106.184 L 124.386 105.789 124.687 106.261 C 125.944 108.226,129.792 107.225,129.480 105.013 C 129.308 103.789,128.919 102.997,128.841 103.712 M156.076 104.817 C 156.076 105.799,156.131 106.054,156.341 106.054 C 156.487 106.054,156.606 106.125,156.606 106.212 C 156.606 106.974,164.601 107.616,167.224 107.065 C 167.946 106.913,168.877 106.742,169.291 106.684 C 169.706 106.626,170.362 106.452,170.750 106.297 L 171.454 106.016 171.454 104.789 L 171.454 103.562 170.440 103.615 L 169.427 103.668 169.479 104.375 C 169.507 104.764,169.555 105.300,169.584 105.568 C 169.631 105.993,169.577 106.054,169.154 106.054 C 168.888 106.054,168.296 106.220,167.838 106.422 C 166.268 107.117,158.481 106.754,157.331 105.933 C 157.292 105.905,157.238 105.464,157.212 104.952 C 157.186 104.440,157.158 103.922,157.150 103.800 C 157.143 103.676,156.905 103.579,156.606 103.579 L 156.076 103.579 156.076 104.817 M277.209 103.718 C 276.682 104.054,276.453 105.582,276.827 106.279 C 277.396 107.342,278.547 107.531,279.654 106.743 C 280.279 106.298,280.329 105.934,279.710 106.340 C 277.788 107.599,276.172 105.950,277.436 104.020 C 277.720 103.587,277.622 103.456,277.209 103.718 M296.630 104.065 C 296.683 104.528,296.740 104.556,297.815 104.640 C 299.490 104.771,299.911 105.707,299.145 107.601 C 299.018 107.916,298.969 108.174,299.037 108.172 C 300.139 108.148,300.274 105.112,299.222 103.993 C 298.585 103.314,296.550 103.371,296.630 104.065 M368.725 103.690 C 368.732 103.775,368.838 104.322,368.961 104.905 C 369.229 106.168,369.029 106.473,368.107 106.209 C 367.046 105.904,366.588 106.017,367.300 106.407 C 368.841 107.251,369.808 106.564,369.434 104.891 C 369.263 104.128,368.686 103.149,368.725 103.690 M389.149 104.072 C 388.146 106.011,389.128 107.381,390.862 106.461 C 391.541 106.100,391.167 105.938,390.242 106.194 C 389.149 106.496,388.903 105.759,389.485 103.925 C 389.647 103.416,389.442 103.505,389.149 104.072 M189.251 105.458 C 188.802 106.314,189.209 106.812,190.258 106.693 C 191.283 106.577,191.781 106.186,191.781 105.496 C 191.781 104.743,189.642 104.711,189.251 105.458 M74.591 108.214 L 74.591 110.551 74.017 111.042 L 73.442 111.533 69.818 111.533 C 65.991 111.533,65.340 111.623,64.559 112.256 C 64.222 112.530,64.182 112.607,64.428 112.509 C 65.995 111.890,66.232 111.862,69.814 111.875 C 74.884 111.893,74.978 111.827,75.092 108.171 C 75.155 106.146,75.130 105.877,74.877 105.877 C 74.628 105.877,74.591 106.179,74.591 108.214 M92.946 107.047 C 93.031 108.709,92.542 109.175,90.803 109.088 C 89.706 109.033,89.616 109.056,89.616 109.389 C 89.616 109.866,91.785 110.026,92.336 109.589 C 93.770 108.453,93.779 108.439,93.737 107.441 C 93.715 106.921,93.694 106.357,93.689 106.186 C 93.684 105.986,93.541 105.877,93.283 105.877 C 92.905 105.876,92.888 105.933,92.946 107.047 M227.250 106.186 C 227.112 106.704,227.238 108.232,227.465 108.781 C 228.557 111.434,228.323 111.533,220.966 111.534 C 214.842 111.535,213.999 111.615,213.426 112.249 C 213.090 112.620,213.433 112.612,213.964 112.237 C 214.404 111.926,215.532 111.870,221.052 111.882 C 227.589 111.897,227.724 111.884,228.010 111.195 C 228.412 110.223,228.175 105.881,227.718 105.879 C 227.499 105.878,227.297 106.011,227.250 106.186 M249.185 107.417 C 249.121 108.521,248.981 109.203,248.701 109.773 L 248.309 110.575 248.880 111.187 L 249.452 111.798 254.780 111.802 C 259.983 111.806,260.123 111.815,260.781 112.203 C 261.151 112.422,261.423 112.505,261.384 112.388 C 261.117 111.588,260.164 111.457,255.014 111.511 L 250.095 111.563 249.496 111.107 C 248.831 110.599,248.834 110.385,249.531 108.943 C 249.816 108.351,249.863 108.002,249.776 107.103 C 249.613 105.415,249.293 105.585,249.185 107.417 M285.218 106.149 C 284.737 107.405,285.551 109.530,286.770 110.198 C 287.071 110.363,287.198 110.393,287.053 110.264 C 286.250 109.558,285.842 108.614,285.771 107.301 C 285.703 106.048,285.456 105.531,285.218 106.149 M343.438 107.003 C 343.438 108.413,343.952 109.737,344.655 110.141 L 345.155 110.428 344.562 109.526 C 344.016 108.698,343.968 108.513,343.968 107.251 C 343.968 106.148,343.916 105.877,343.703 105.877 C 343.495 105.877,343.438 106.120,343.438 107.003 M45.721 108.336 C 46.001 108.460,46.164 108.781,46.330 109.534 C 46.855 111.905,46.852 111.903,51.366 111.880 C 54.639 111.862,55.022 111.893,55.783 112.229 C 56.798 112.678,56.961 112.599,56.175 112.039 C 55.608 111.635,55.467 111.620,51.565 111.566 C 46.897 111.500,47.108 111.590,46.914 109.581 C 46.783 108.229,46.868 108.357,46.023 108.251 C 45.483 108.184,45.419 108.202,45.721 108.336 M359.713 108.820 C 359.885 109.157,360.078 109.744,360.142 110.124 C 360.224 110.611,360.448 110.981,360.897 111.376 L 361.535 111.936 366.509 111.849 C 371.777 111.757,371.533 111.729,372.980 112.573 C 373.356 112.792,373.348 112.763,372.897 112.282 C 372.188 111.526,371.842 111.486,366.416 111.523 L 361.555 111.556 361.091 111.054 C 360.776 110.713,360.587 110.257,360.502 109.637 C 360.377 108.734,360.234 108.502,359.683 108.307 C 359.434 108.219,359.437 108.280,359.713 108.820 M299.013 108.470 C 298.710 108.773,298.985 108.882,300.050 108.882 C 302.071 108.882,303.201 109.939,303.029 111.668 C 302.920 112.768,303.357 113.206,303.818 112.459 C 304.240 111.778,305.811 111.705,307.086 112.308 L 308.116 112.795 308.057 113.932 L 307.998 115.069 308.626 115.069 C 309.477 115.068,309.677 114.808,309.677 113.702 C 309.677 112.958,309.612 112.740,309.368 112.665 C 309.198 112.613,308.640 112.370,308.129 112.126 C 306.976 111.575,303.922 111.303,303.653 111.727 C 303.547 111.895,303.495 111.735,303.494 111.234 C 303.491 110.420,302.902 109.236,302.501 109.236 C 302.365 109.236,302.253 109.176,302.253 109.103 C 302.248 108.588,299.443 108.040,299.013 108.470 M89.616 111.331 C 89.616 111.713,92.999 111.921,98.564 111.880 C 101.297 111.860,101.666 111.894,102.354 112.226 C 103.297 112.682,103.361 112.683,102.962 112.241 C 102.429 111.653,101.532 111.535,97.563 111.534 C 94.751 111.534,93.489 111.464,92.737 111.268 C 91.227 110.875,89.616 110.907,89.616 111.331 M393.018 111.285 C 392.322 111.488,391.083 111.534,387.185 111.505 C 381.970 111.465,381.094 111.566,380.728 112.251 C 380.563 112.558,380.605 112.553,381.215 112.193 C 381.866 111.808,382.015 111.798,387.274 111.797 C 393.112 111.796,396.518 111.605,396.412 111.285 C 396.315 110.991,394.028 110.991,393.018 111.285 M342.112 111.372 C 341.723 111.460,339.576 111.516,337.340 111.497 C 333.204 111.462,332.264 111.587,331.872 112.222 C 331.699 112.502,331.862 112.465,332.612 112.055 C 333.219 111.724,333.462 111.704,335.516 111.812 C 338.586 111.975,345.420 111.736,345.332 111.469 C 345.249 111.218,343.088 111.153,342.112 111.372 M156.409 111.623 C 155.626 111.857,155.015 112.209,155.015 112.427 C 155.015 112.523,155.341 112.435,155.739 112.232 C 156.831 111.675,198.767 111.677,200.027 112.234 C 200.919 112.629,201.069 112.399,200.221 111.936 C 199.596 111.594,202.379 111.632,167.721 111.489 C 160.889 111.461,156.790 111.510,156.409 111.623 M278.467 111.527 L 272.443 111.622 271.805 112.060 C 270.973 112.630,271.068 112.686,272.094 112.232 C 272.868 111.890,273.233 111.867,277.645 111.882 C 282.960 111.899,287.229 111.732,287.229 111.507 C 287.229 111.424,286.613 111.374,285.859 111.394 C 285.106 111.415,281.779 111.475,278.467 111.527 M321.874 111.614 C 320.767 111.757,319.845 111.996,319.170 112.317 L 318.146 112.804 318.198 113.892 L 318.250 114.980 318.869 115.033 L 319.487 115.085 319.487 113.912 L 319.487 112.739 320.813 112.311 C 323.111 111.568,324.642 111.545,325.880 112.233 L 326.911 112.806 326.438 112.319 C 325.518 111.373,324.711 111.248,321.874 111.614 M114.384 111.710 C 114.057 111.788,113.619 112.023,113.412 112.234 L 113.036 112.616 113.979 112.248 C 115.424 111.684,131.438 111.675,132.602 112.237 C 133.521 112.681,133.585 112.681,133.187 112.241 C 133.011 112.047,132.582 111.809,132.232 111.712 C 131.473 111.501,115.276 111.500,114.384 111.710 M133.980 135.175 C 133.979 135.928,133.927 136.982,133.865 137.517 L 133.752 138.489 134.121 138.161 C 134.646 137.697,134.797 133.804,134.291 133.804 C 134.023 133.805,133.981 133.988,133.980 135.175 M139.418 134.018 C 139.292 134.353,139.548 137.228,139.731 137.527 C 139.955 137.893,140.181 138.164,140.831 138.846 C 141.245 139.281,141.405 139.615,141.405 140.042 C 141.405 140.367,141.516 141.026,141.652 141.506 C 141.788 141.985,141.943 142.577,141.998 142.820 C 142.287 144.109,144.280 145.000,145.082 144.198 C 145.531 143.749,145.294 143.615,144.155 143.674 L 143.016 143.732 142.476 142.662 C 141.635 140.998,141.693 139.074,142.598 138.597 C 143.380 138.186,143.072 137.929,141.813 137.944 L 140.630 137.958 140.155 137.050 C 139.788 136.350,139.679 135.892,139.679 135.053 C 139.679 133.968,139.582 133.584,139.418 134.018 M155.522 134.114 C 155.509 134.284,155.516 134.760,155.538 135.171 C 155.559 135.583,155.402 136.484,155.189 137.174 L 154.801 138.428 153.892 138.306 C 152.842 138.165,152.922 138.401,154.013 138.664 L 154.750 138.842 154.903 139.991 C 154.987 140.623,155.111 141.180,155.178 141.228 C 155.917 141.766,156.043 143.335,155.431 144.395 L 154.964 145.205 155.405 144.801 C 156.112 144.155,156.290 143.275,155.969 142.023 C 155.441 139.966,155.335 138.635,155.630 137.767 C 155.936 136.865,156.008 133.805,155.722 133.805 C 155.625 133.805,155.535 133.944,155.522 134.114 M160.495 135.139 C 160.495 136.669,160.214 137.379,159.453 137.772 C 158.649 138.188,158.643 138.250,158.586 146.885 C 158.529 155.569,158.607 156.649,159.400 158.109 C 159.562 158.409,159.729 159.253,159.782 160.053 C 159.867 161.327,159.914 161.472,160.254 161.521 C 160.615 161.572,160.634 161.495,160.700 159.719 C 160.760 158.080,160.816 157.813,161.174 157.432 C 161.482 157.104,161.566 156.836,161.523 156.317 L 161.467 155.634 160.407 155.634 C 159.024 155.634,159.119 156.198,159.100 147.857 C 159.082 140.076,159.148 138.891,159.592 138.964 C 159.749 138.989,159.976 138.948,160.097 138.872 C 160.219 138.795,160.318 138.806,160.318 138.895 C 160.318 139.138,161.269 139.053,161.433 138.796 C 161.518 138.663,161.464 138.461,161.300 138.297 C 161.082 138.078,161.025 137.586,161.025 135.913 C 161.025 134.157,160.981 133.805,160.760 133.805 C 160.548 133.805,160.495 134.071,160.495 135.139 M275.248 135.600 C 275.288 137.059,275.350 137.428,275.555 137.428 C 276.171 137.428,276.047 134.050,275.424 133.846 C 275.247 133.787,275.208 134.171,275.248 135.600 M12.783 135.219 C 12.783 135.851,12.815 136.109,12.854 135.793 C 12.894 135.477,12.894 134.960,12.854 134.644 C 12.815 134.328,12.783 134.587,12.783 135.219 M86.557 135.123 C 84.997 135.871,84.986 136.462,86.522 137.049 C 87.472 137.411,89.616 137.526,89.616 137.214 C 89.616 137.050,89.273 136.986,88.387 136.986 C 87.204 136.986,86.257 136.738,86.257 136.428 C 86.257 136.346,86.138 136.279,85.992 136.279 C 85.788 136.279,85.809 136.197,86.087 135.919 C 86.616 135.390,87.202 135.219,88.478 135.219 C 89.371 135.219,89.616 135.162,89.616 134.954 C 89.616 134.513,87.596 134.625,86.557 135.123 M195.594 135.049 C 195.212 135.240,194.779 135.395,194.633 135.395 C 194.486 135.395,194.186 135.565,193.965 135.773 L 193.563 136.150 194.351 137.051 L 195.139 137.952 195.139 140.766 C 195.139 143.446,195.117 143.625,194.674 144.530 L 194.209 145.481 194.621 146.669 C 195.262 148.519,195.348 154.896,194.747 156.076 C 194.355 156.845,194.309 156.875,193.370 156.975 C 192.836 157.032,192.618 157.092,192.886 157.108 C 193.956 157.171,194.378 158.214,194.191 160.330 C 194.092 161.451,194.111 161.555,194.415 161.555 C 194.890 161.555,194.962 161.232,194.962 159.100 C 194.962 157.732,195.066 156.812,195.335 155.800 C 195.768 154.172,195.727 149.671,195.254 146.891 C 195.018 145.508,195.024 145.301,195.330 144.151 C 196.043 141.473,195.709 137.653,194.663 136.525 L 194.271 136.102 194.954 135.753 C 195.330 135.562,195.943 135.361,196.316 135.307 C 196.690 135.253,197.194 135.177,197.437 135.139 C 197.680 135.100,198.098 135.062,198.365 135.055 C 198.632 135.048,198.851 134.962,198.851 134.865 C 198.851 134.531,196.348 134.672,195.594 135.049 M353.778 135.016 C 353.389 135.193,352.872 135.387,352.629 135.448 C 351.812 135.654,351.677 136.183,352.286 136.792 C 353.353 137.860,353.336 137.682,353.336 147.925 C 353.336 157.959,353.398 158.668,354.304 159.015 C 354.510 159.094,354.574 159.408,354.574 160.337 C 354.574 161.007,354.637 161.555,354.715 161.555 C 354.792 161.555,354.823 161.047,354.783 160.425 C 354.719 159.405,354.747 159.282,355.075 159.178 C 355.276 159.115,355.488 158.908,355.549 158.718 C 355.609 158.529,355.729 158.374,355.815 158.374 C 355.901 158.374,356.021 158.076,356.082 157.711 C 356.143 157.346,356.342 156.583,356.526 156.015 C 356.781 155.225,356.801 155.031,356.610 155.189 C 356.473 155.303,356.227 155.808,356.064 156.311 C 355.901 156.813,355.698 157.300,355.612 157.393 C 355.527 157.485,355.457 157.695,355.457 157.859 C 355.457 158.565,354.675 158.737,354.255 158.123 C 353.867 157.557,353.867 157.552,353.867 148.020 L 353.867 138.483 353.329 137.381 C 352.988 136.683,352.681 136.276,352.489 136.271 C 352.323 136.267,352.545 136.073,352.983 135.840 C 353.822 135.393,355.004 135.137,356.562 135.065 C 356.829 135.052,357.048 134.962,357.048 134.865 C 357.048 134.550,354.554 134.665,353.778 135.016 M74.787 135.202 C 74.540 135.417,74.321 135.924,74.182 136.601 C 74.063 137.186,73.816 137.830,73.632 138.032 C 73.367 138.325,73.353 138.400,73.561 138.400 C 74.051 138.400,74.585 137.611,74.703 136.711 C 74.887 135.304,75.645 134.950,76.641 135.807 L 77.119 136.218 76.739 137.344 C 76.372 138.431,76.359 138.742,76.364 146.521 C 76.370 157.033,76.564 158.872,77.695 159.156 C 78.046 159.244,78.082 159.339,77.999 159.953 C 77.886 160.802,78.054 161.555,78.357 161.555 C 78.921 161.555,78.493 158.008,77.852 157.367 C 77.611 157.126,77.582 155.852,77.606 146.594 C 77.636 135.000,77.718 135.798,76.428 135.210 C 75.486 134.781,75.274 134.780,74.787 135.202 M325.666 135.299 C 325.356 135.609,325.232 135.927,325.232 136.411 C 325.232 136.783,325.081 137.384,324.898 137.744 C 324.525 138.476,324.677 138.602,325.223 138.016 C 325.425 137.799,325.631 137.260,325.694 136.782 C 325.891 135.298,326.711 134.910,327.856 135.757 C 328.424 136.177,328.416 136.502,327.806 137.723 C 327.425 138.488,327.428 143.101,327.811 145.762 C 328.072 147.570,328.072 147.814,327.813 148.706 C 327.317 150.412,327.412 154.597,327.970 155.572 C 328.211 155.995,328.410 156.527,328.411 156.754 C 328.413 156.981,328.672 157.527,328.988 157.966 C 329.498 158.677,329.569 158.921,329.625 160.161 C 329.730 162.474,330.116 161.993,330.159 159.495 C 330.199 157.148,330.183 157.203,330.890 157.048 C 331.410 156.934,331.418 156.914,331.398 155.841 L 331.377 154.750 331.218 155.711 C 331.058 156.674,330.888 157.103,330.888 156.543 C 330.888 156.283,330.838 156.274,330.490 156.477 C 330.272 156.604,329.973 156.695,329.828 156.678 C 329.682 156.661,329.473 156.638,329.365 156.627 C 328.874 156.576,328.767 154.483,328.792 145.360 C 328.820 135.178,328.883 135.742,327.656 135.175 C 326.741 134.751,326.179 134.786,325.666 135.299 M372.467 135.211 C 372.200 135.434,371.999 135.890,371.867 136.575 C 371.758 137.142,371.507 137.784,371.309 138.003 C 370.872 138.487,371.168 138.529,371.741 138.064 C 372.016 137.842,372.247 137.349,372.424 136.606 C 372.742 135.270,373.362 135.001,374.287 135.797 L 374.777 136.218 374.397 137.344 C 374.030 138.431,374.017 138.742,374.022 146.521 C 374.028 157.067,374.186 158.586,375.332 159.108 C 375.688 159.271,375.733 159.390,375.655 159.973 C 375.541 160.823,375.716 161.555,376.034 161.555 C 376.604 161.555,376.162 158.019,375.510 157.367 C 375.269 157.126,375.240 155.854,375.264 146.615 C 375.293 135.207,375.349 135.779,374.159 135.241 C 373.154 134.786,372.981 134.783,372.467 135.211 M267.609 135.457 C 266.031 136.024,266.350 136.209,268.252 135.828 C 268.810 135.716,269.007 136.084,269.043 137.306 C 269.074 138.316,269.107 138.400,269.477 138.400 C 269.987 138.400,270.023 138.274,269.905 136.870 C 269.769 135.256,269.179 134.892,267.609 135.457 M283.429 135.754 C 281.244 135.957,281.128 136.034,281.130 137.275 L 281.131 138.312 282.545 138.290 C 284.177 138.266,284.684 138.168,284.622 137.891 C 284.598 137.782,284.638 137.693,284.711 137.693 C 284.783 137.693,284.858 137.216,284.876 136.633 C 284.894 136.049,284.894 135.584,284.876 135.598 C 284.858 135.612,284.207 135.682,283.429 135.754 M241.847 136.592 C 238.591 136.638,238.445 136.655,238.445 136.990 C 238.445 137.550,245.076 137.533,245.254 136.973 C 245.404 136.500,245.740 136.537,241.847 136.592 M259.490 136.776 C 259.279 136.847,259.227 137.352,259.434 137.319 C 262.990 136.757,263.067 137.145,262.698 153.778 C 262.522 161.686,262.509 161.555,263.477 161.555 L 264.074 161.555 264.074 160.488 C 264.074 159.685,263.983 159.297,263.709 158.925 C 262.949 157.898,262.662 149.471,263.293 146.699 C 263.548 145.579,263.548 145.362,263.293 144.243 C 263.106 143.419,263.014 142.145,263.014 140.374 C 263.014 137.047,262.978 136.983,261.022 136.824 C 260.283 136.763,259.593 136.742,259.490 136.776 M9.454 137.632 C 9.293 137.793,9.092 138.108,9.007 138.333 C 8.917 138.568,8.493 138.912,8.005 139.145 C 7.201 139.529,7.149 139.598,6.963 140.521 C 6.855 141.056,6.584 141.799,6.361 142.173 L 5.955 142.852 4.745 142.787 C 3.606 142.724,3.535 142.743,3.535 143.099 C 3.535 143.450,3.633 143.480,4.861 143.509 C 5.960 143.534,6.186 143.492,6.186 143.262 C 6.186 143.110,6.302 142.941,6.442 142.887 C 6.583 142.833,6.908 142.158,7.165 141.387 C 7.697 139.789,7.995 139.396,8.547 139.565 C 9.160 139.752,9.368 140.002,9.368 140.549 C 9.368 140.994,10.137 142.819,10.324 142.819 C 10.389 142.819,10.154 141.621,9.969 141.011 C 9.908 140.808,10.145 140.445,10.683 139.922 C 11.584 139.047,11.716 138.422,11.146 137.738 C 10.748 137.261,9.880 137.207,9.454 137.632 M25.633 137.920 C 25.246 138.116,24.427 140.261,24.653 140.488 C 24.752 140.586,25.597 139.394,25.791 138.883 C 26.200 137.808,27.384 137.900,27.404 139.009 C 27.418 139.825,28.546 140.698,29.586 140.698 C 30.204 140.698,30.206 140.701,30.016 141.247 C 29.784 141.912,29.926 143.683,30.299 144.783 C 30.764 146.150,30.683 148.874,30.120 150.850 C 29.984 151.329,29.872 151.990,29.872 152.319 C 29.872 153.146,29.594 153.588,28.889 153.883 C 28.473 154.056,28.254 154.284,28.180 154.619 C 27.947 155.678,27.798 155.980,27.341 156.321 C 26.755 156.759,26.555 156.597,26.368 155.533 C 26.192 154.539,26.438 153.512,26.902 153.305 C 27.260 153.145,27.561 152.490,28.025 150.862 C 28.587 148.888,28.259 144.356,27.430 142.643 C 26.935 141.620,24.407 141.620,24.395 142.643 C 24.392 142.858,24.619 142.897,25.616 142.849 C 27.332 142.768,27.739 143.712,27.737 147.768 C 27.734 151.514,27.297 152.478,25.684 152.305 C 24.681 152.197,24.671 152.200,25.232 152.447 L 25.806 152.701 25.806 154.267 C 25.806 156.447,25.432 156.841,23.439 156.753 C 22.483 156.712,22.094 156.756,22.094 156.905 C 22.095 157.252,22.439 157.365,23.886 157.492 C 25.425 157.627,26.415 158.134,26.602 158.881 C 26.703 159.280,26.766 159.299,27.667 159.206 C 29.024 159.066,28.988 159.134,28.988 156.723 L 28.988 154.563 29.491 154.373 C 29.994 154.183,30.225 153.632,30.225 152.627 C 30.225 152.408,30.338 151.841,30.476 151.368 C 31.326 148.456,31.375 146.831,30.687 144.357 C 30.242 142.758,30.391 141.593,31.136 140.848 C 31.721 140.263,31.543 140.138,30.301 140.264 C 28.961 140.401,28.648 140.213,27.807 138.765 C 27.142 137.618,26.626 137.418,25.633 137.920 M10.980 138.179 C 11.042 139.101,10.662 139.598,10.117 139.306 C 9.605 139.032,9.489 138.579,9.833 138.198 C 10.217 137.774,10.952 137.762,10.980 138.179 M271.498 138.135 C 271.082 138.373,271.125 138.388,272.246 138.394 C 273.399 138.400,273.439 138.415,273.538 138.886 C 273.594 139.154,273.714 139.706,273.806 140.114 C 273.898 140.521,273.973 141.356,273.973 141.970 C 273.973 143.013,274.460 144.775,274.863 145.190 C 274.954 145.284,274.918 145.542,274.775 145.808 C 274.052 147.165,273.973 147.707,273.978 151.263 C 273.985 156.270,274.449 158.872,275.386 159.169 C 275.652 159.254,275.698 159.428,275.653 160.180 C 275.590 161.233,275.679 161.555,276.030 161.555 C 276.534 161.555,276.199 158.040,275.647 157.528 L 275.194 157.108 275.246 152.187 C 275.297 147.362,275.306 147.258,275.696 146.843 C 276.273 146.229,276.251 144.835,275.652 143.951 C 275.235 143.337,275.210 143.167,275.210 140.927 C 275.210 137.845,275.224 137.868,273.392 137.876 C 272.468 137.880,271.779 137.974,271.498 138.135 M94.476 138.712 C 94.315 138.831,94.144 139.284,94.260 139.284 C 94.287 139.284,94.446 139.125,94.612 138.931 C 94.908 138.585,94.827 138.455,94.476 138.712 M238.822 138.879 C 239.590 139.782,240.035 140.866,240.035 141.834 C 240.035 142.376,240.069 142.819,240.109 142.819 C 240.150 142.819,240.322 142.873,240.492 142.938 C 240.674 143.008,240.757 142.985,240.693 142.883 C 240.635 142.788,240.568 142.254,240.545 141.696 C 240.523 141.138,240.401 140.547,240.276 140.381 C 240.150 140.215,240.044 139.984,240.041 139.867 C 240.034 139.597,239.288 138.844,238.870 138.684 C 238.581 138.573,238.577 138.590,238.822 138.879 M244.657 139.191 C 243.969 140.358,243.982 140.931,244.722 141.938 L 245.380 142.835 246.464 142.783 C 247.434 142.736,247.553 142.689,247.604 142.333 C 247.658 141.953,247.606 141.935,246.413 141.935 L 245.166 141.935 244.900 141.300 C 244.626 140.644,244.788 139.336,245.208 138.798 C 245.322 138.653,245.320 138.577,245.200 138.577 C 245.101 138.577,244.857 138.853,244.657 139.191 M133.805 139.107 C 133.805 139.426,133.923 139.461,134.998 139.462 C 136.302 139.463,136.689 139.785,137.013 141.141 C 137.173 141.814,138.025 143.350,138.238 143.350 C 139.457 143.350,139.829 146.588,138.730 147.643 C 138.075 148.271,138.299 148.475,139.643 148.475 C 140.667 148.475,140.905 148.530,140.996 148.785 C 141.056 148.955,141.225 149.233,141.371 149.403 C 141.725 149.816,141.683 150.583,141.250 151.561 L 140.894 152.366 141.322 152.056 C 142.138 151.464,142.200 148.475,141.396 148.475 C 141.317 148.475,141.202 148.316,141.140 148.122 C 141.056 147.856,140.873 147.768,140.403 147.768 L 139.779 147.768 139.890 146.664 C 140.025 145.315,139.637 144.064,138.783 143.091 C 138.335 142.580,136.986 140.052,136.986 139.721 C 136.986 139.684,136.784 139.451,136.536 139.204 C 135.923 138.591,133.805 138.516,133.805 139.107 M97.162 141.055 C 95.342 141.166,95.278 141.223,95.274 142.744 C 95.273 143.334,95.146 144.187,94.991 144.639 C 94.736 145.390,94.736 145.569,94.991 146.694 C 95.620 149.458,95.321 158.504,94.582 159.103 C 94.169 159.436,94.037 160.848,94.417 160.848 C 94.531 160.848,94.571 160.901,94.507 160.965 C 94.443 161.029,94.480 161.188,94.588 161.318 C 94.859 161.645,98.364 161.664,98.163 161.337 C 98.089 161.217,98.004 160.720,97.974 160.233 C 97.944 159.745,97.875 158.726,97.819 157.969 C 97.732 156.785,97.771 156.491,98.094 155.871 C 98.301 155.474,98.433 155.113,98.387 155.067 C 98.217 154.897,97.757 155.853,97.421 157.073 C 96.849 159.145,96.659 159.365,96.023 158.683 C 95.667 158.301,95.648 158.058,95.547 152.364 C 95.489 149.107,95.427 146.045,95.409 145.559 C 95.372 144.508,95.844 142.348,96.187 142.005 C 96.334 141.858,96.862 141.752,97.525 141.737 C 98.443 141.717,98.639 141.657,98.730 141.369 C 98.871 140.926,98.965 140.944,97.162 141.055 M36.525 143.132 C 36.479 143.207,36.446 143.942,36.453 144.767 C 36.459 145.591,36.407 146.544,36.337 146.885 C 36.220 147.459,36.244 147.440,36.675 146.620 C 37.075 145.858,37.132 145.558,37.085 144.454 C 37.053 143.713,37.105 143.141,37.207 143.098 C 37.304 143.057,37.210 143.018,36.997 143.010 C 36.784 143.002,36.572 143.057,36.525 143.132 M39.429 150.110 C 39.548 158.484,39.716 157.833,37.428 157.840 C 36.330 157.843,36.058 157.896,36.058 158.109 C 36.058 158.325,36.359 158.374,37.704 158.374 C 39.694 158.374,40.032 158.200,39.984 157.202 C 39.967 156.826,39.891 153.502,39.817 149.816 C 39.732 145.627,39.616 143.091,39.505 143.055 C 39.388 143.016,39.362 145.401,39.429 150.110 M46.828 143.217 C 46.703 145.516,46.970 147.167,47.501 147.362 C 48.042 147.562,48.072 147.778,48.075 151.428 L 48.078 155.000 46.796 155.052 L 45.515 155.104 45.462 155.727 L 45.410 156.351 46.666 156.398 C 49.239 156.494,49.492 156.031,49.492 151.226 C 49.492 147.234,49.494 147.242,48.255 146.572 C 47.394 146.107,47.176 145.599,47.234 144.189 C 47.269 143.326,47.221 142.995,47.061 142.996 C 46.940 142.996,46.835 143.095,46.828 143.217 M55.333 143.205 C 54.801 143.401,54.743 143.653,54.697 145.983 C 54.673 147.208,54.690 148.035,54.735 147.821 C 54.802 147.504,54.888 147.459,55.203 147.576 C 55.416 147.655,55.749 147.695,55.943 147.664 C 56.866 147.519,57.111 147.751,57.072 148.732 C 57.032 149.699,57.150 150.066,57.500 150.067 C 57.652 150.067,57.695 149.603,57.655 148.398 C 57.587 146.380,57.718 146.074,58.725 145.908 C 59.810 145.729,59.920 145.581,59.920 144.303 C 59.920 143.282,59.884 143.172,59.523 143.092 C 58.973 142.970,55.732 143.057,55.333 143.205 M63.172 143.447 C 62.876 144.629,63.223 146.583,63.816 147.067 C 64.357 147.508,64.370 147.552,64.250 148.513 C 64.129 149.479,63.655 150.002,63.350 149.507 C 63.291 149.413,63.112 149.388,62.952 149.453 C 62.359 149.692,62.125 149.655,61.915 149.291 C 61.713 148.940,61.700 148.951,61.694 149.481 C 61.688 150.016,61.729 150.051,62.496 150.166 C 63.526 150.320,63.575 150.427,64.185 153.842 C 64.303 154.505,64.309 154.940,64.200 155.049 C 63.974 155.274,62.189 155.342,61.909 155.135 C 61.611 154.915,61.602 156.450,61.900 156.748 C 62.065 156.913,62.055 156.963,61.856 156.974 C 61.370 157.001,62.661 157.474,63.243 157.482 C 64.776 157.503,65.753 158.613,65.753 160.332 C 65.753 161.302,65.808 161.555,66.019 161.555 C 66.232 161.555,66.284 161.283,66.284 160.162 C 66.284 157.882,65.724 157.161,63.921 157.120 L 63.190 157.103 64.031 156.899 C 65.485 156.546,65.635 156.056,65.652 151.622 C 65.667 147.426,65.595 147.614,67.263 147.447 C 69.230 147.250,68.960 146.885,66.848 146.885 C 64.765 146.885,64.859 146.981,64.708 144.675 L 64.605 143.084 63.948 143.030 C 63.364 142.981,63.278 143.028,63.172 143.447 M84.652 143.217 C 84.564 144.615,84.726 145.748,85.064 146.099 C 86.212 147.291,86.319 158.154,85.192 159.081 C 84.958 159.274,84.854 159.646,84.812 160.451 L 84.755 161.556 85.506 161.556 C 86.161 161.555,86.260 161.505,86.277 161.158 C 86.469 157.388,86.181 147.069,85.867 146.443 C 85.447 145.606,85.158 143.328,85.447 143.131 C 85.552 143.060,85.420 143.000,85.152 142.999 C 84.885 142.997,84.660 143.095,84.652 143.217 M105.170 144.344 L 105.170 145.691 105.966 146.391 C 107.027 147.326,107.057 149.528,106.013 149.948 C 105.872 150.005,105.901 150.044,106.091 150.052 C 107.496 150.117,107.625 147.386,106.280 146.039 C 105.699 145.458,105.668 145.337,105.629 143.570 C 105.601 142.261,105.170 142.986,105.170 144.344 M109.163 145.781 C 109.171 147.311,109.208 148.962,109.245 149.448 L 109.313 150.331 107.595 150.382 C 106.023 150.428,105.877 150.462,105.877 150.780 C 105.877 151.091,106.002 151.127,107.081 151.127 C 108.907 151.127,109.390 151.863,108.705 153.601 C 108.360 154.478,108.360 154.493,108.693 154.315 C 109.095 154.100,109.589 152.545,109.589 151.494 C 109.589 150.886,109.663 150.732,110.037 150.561 C 110.740 150.241,111.020 150.677,111.275 152.485 C 111.395 153.342,111.550 154.255,111.617 154.514 C 111.842 155.371,111.253 155.722,109.589 155.722 C 108.450 155.722,108.175 155.774,108.175 155.988 C 108.175 156.197,108.426 156.253,109.373 156.253 C 110.674 156.253,110.858 156.365,111.491 157.539 C 112.368 159.166,112.717 159.434,113.954 159.434 C 115.568 159.434,115.556 158.846,113.940 158.762 C 112.977 158.712,112.417 158.454,112.417 158.060 C 112.417 157.971,112.258 157.754,112.064 157.578 C 111.711 157.259,111.614 156.709,111.817 156.179 C 111.994 155.718,113.075 155.838,114.136 156.437 C 114.955 156.899,115.062 156.924,114.899 156.620 C 114.693 156.235,113.426 155.308,112.859 155.129 C 111.653 154.746,111.223 150.715,112.334 150.209 C 113.073 149.872,112.853 149.619,111.880 149.686 C 109.759 149.833,109.501 149.406,109.501 145.752 C 109.501 144.153,109.431 143.094,109.324 143.057 C 109.211 143.019,109.153 143.996,109.163 145.781 M116.485 144.719 C 116.487 145.667,116.546 146.530,116.618 146.637 C 117.143 147.424,118.449 147.228,118.768 146.315 C 119.076 145.431,119.014 143.232,118.678 143.103 C 118.181 142.913,118.161 142.974,118.218 144.479 C 118.271 145.856,118.246 145.984,117.873 146.245 C 117.215 146.706,116.789 145.857,116.866 144.237 C 116.909 143.330,116.865 142.995,116.703 142.996 C 116.542 142.996,116.483 143.457,116.485 144.719 M167.672 143.276 C 167.155 144.624,168.127 147.513,169.053 147.379 C 169.986 147.243,170.251 143.127,169.333 143.045 C 169.090 143.023,168.990 143.050,169.112 143.104 C 169.589 143.317,169.277 146.354,168.778 146.354 C 168.349 146.354,168.068 145.444,168.125 144.241 C 168.182 143.043,167.951 142.550,167.672 143.276 M175.404 143.207 C 175.063 143.369,175.032 143.496,175.105 144.429 C 175.175 145.345,175.147 145.471,174.866 145.471 C 174.326 145.473,173.584 146.221,173.463 146.885 L 173.351 147.503 173.714 147.128 C 174.208 146.618,175.586 145.970,175.913 146.095 C 176.505 146.322,176.580 147.014,176.580 152.258 L 176.580 157.438 176.126 157.928 L 175.672 158.418 175.382 157.998 C 175.222 157.767,174.989 157.473,174.864 157.345 C 174.738 157.216,174.635 156.930,174.635 156.709 C 174.635 156.330,173.701 154.839,173.464 154.839 C 173.404 154.839,173.433 154.938,173.528 155.060 C 173.623 155.181,173.923 155.877,174.196 156.606 C 174.888 158.455,175.738 159.096,176.768 158.544 C 177.097 158.369,177.110 158.107,177.110 151.916 L 177.110 145.471 177.573 145.471 C 178.049 145.471,178.143 143.782,177.692 143.331 C 177.454 143.092,175.831 143.005,175.404 143.207 M186.641 143.217 C 186.634 143.338,186.638 143.955,186.651 144.587 C 186.679 146.009,186.460 146.344,185.411 146.481 C 184.390 146.615,183.884 147.149,183.736 148.251 C 183.673 148.715,183.516 149.452,183.387 149.890 C 182.680 152.289,182.707 152.838,183.676 155.848 C 184.185 157.428,184.562 157.844,185.485 157.844 C 186.804 157.844,186.984 157.561,186.515 156.227 C 186.030 154.845,186.030 154.689,186.507 153.644 C 187.070 152.413,187.070 152.410,186.616 152.940 C 186.037 153.615,185.778 154.724,185.896 156.025 C 185.991 157.075,185.976 157.131,185.541 157.329 C 184.990 157.581,184.535 157.437,184.530 157.010 C 184.527 156.836,184.327 156.217,184.085 155.634 C 183.032 153.095,183.871 146.641,185.211 146.969 C 186.108 147.189,186.209 147.435,185.965 148.802 C 185.698 150.296,185.912 151.215,186.700 151.958 L 187.225 152.452 186.652 151.512 C 186.018 150.471,185.987 149.420,186.557 148.317 C 186.708 148.025,186.832 147.592,186.832 147.354 C 186.832 147.046,186.953 146.893,187.259 146.816 C 187.969 146.638,188.455 145.640,188.408 144.457 C 188.359 143.201,188.209 142.996,187.340 142.996 C 186.917 142.996,186.650 143.081,186.641 143.217 M212.402 143.114 C 212.082 143.435,212.284 145.458,212.657 145.658 C 213.196 145.946,213.350 145.685,213.368 144.455 C 213.386 143.123,212.971 142.546,212.402 143.114 M247.161 143.174 C 245.899 143.683,246.091 146.417,247.488 147.814 C 248.207 148.533,248.343 148.775,248.343 149.333 C 248.343 150.265,249.094 152.689,249.537 153.186 C 250.059 153.772,252.408 153.822,252.408 153.248 C 252.408 152.930,252.290 152.894,251.247 152.894 C 250.530 152.894,249.997 152.806,249.856 152.665 C 248.778 151.587,248.542 148.346,249.509 147.905 C 250.225 147.579,249.987 147.415,248.800 147.415 L 247.666 147.415 247.121 146.528 C 246.399 145.356,246.468 144.354,247.338 143.394 C 247.732 142.957,247.724 142.947,247.161 143.174 M271.258 143.382 C 272.223 144.441,272.372 146.096,271.586 147.029 C 271.056 147.660,271.038 147.763,271.483 147.647 C 273.223 147.192,273.159 143.838,271.397 143.168 L 270.885 142.973 271.258 143.382 M301.636 143.171 C 301.577 143.267,301.539 143.844,301.552 144.453 C 301.565 145.061,301.518 145.957,301.448 146.443 C 301.304 147.435,301.348 147.437,301.890 146.466 C 302.533 145.312,302.287 142.118,301.636 143.171 M304.530 143.143 C 304.735 143.284,304.745 144.703,304.594 152.212 C 304.400 161.814,304.379 161.555,305.369 161.555 L 305.966 161.555 305.966 160.415 C 305.966 159.685,305.885 159.224,305.741 159.134 C 304.925 158.620,304.543 151.887,305.171 149.066 C 305.420 147.944,305.436 147.508,305.269 146.293 C 305.161 145.501,305.054 144.455,305.033 143.970 C 305.000 143.240,304.932 143.078,304.640 143.032 C 304.372 142.990,304.345 143.017,304.530 143.143 M308.780 143.217 C 308.711 144.360,308.855 145.953,309.045 146.147 C 309.547 146.658,310.609 146.605,311.144 146.042 C 311.791 145.362,311.817 143.123,311.180 143.045 C 310.985 143.022,310.926 143.047,311.047 143.102 C 311.320 143.226,311.349 145.166,311.085 145.659 C 310.876 146.050,309.959 146.132,309.734 145.780 C 309.508 145.426,309.385 143.184,309.587 143.099 C 309.685 143.058,309.547 143.018,309.280 143.010 C 309.008 143.002,308.788 143.093,308.780 143.217 M318.738 143.174 C 318.381 143.321,318.345 143.446,318.378 144.448 L 318.415 145.559 317.042 145.671 C 315.412 145.804,315.524 145.720,315.399 146.905 C 315.305 147.790,315.223 147.929,314.229 148.873 C 312.952 150.087,312.984 150.103,314.804 149.150 C 316.069 148.488,316.217 148.357,316.217 147.904 C 316.217 147.334,316.996 146.485,317.440 146.570 C 318.206 146.718,318.121 149.097,317.343 149.293 C 316.678 149.459,316.580 149.977,316.755 152.387 C 316.842 153.590,316.916 154.635,316.919 154.711 C 316.922 154.786,317.125 154.924,317.369 155.017 C 318.394 155.406,318.439 158.020,317.422 158.020 C 317.002 158.020,316.388 157.236,316.279 156.561 C 316.161 155.836,315.850 155.722,313.986 155.722 C 313.102 155.722,312.859 155.780,312.859 155.988 C 312.859 156.196,313.105 156.253,314.008 156.253 C 315.339 156.253,315.662 156.472,316.001 157.604 C 316.189 158.233,316.297 158.341,316.823 158.426 C 318.132 158.638,318.690 158.033,318.695 156.394 C 318.698 155.351,318.779 155.162,319.355 154.859 C 319.704 154.675,319.751 154.516,319.741 153.551 C 319.733 152.713,319.692 152.547,319.570 152.850 C 319.482 153.069,319.348 153.256,319.272 153.265 C 317.901 153.437,317.482 153.339,317.379 152.823 C 317.215 152.006,317.457 150.559,317.738 150.668 C 317.868 150.717,318.015 150.691,318.065 150.609 C 318.361 150.132,319.306 150.531,319.514 151.220 L 319.725 151.922 319.739 150.994 C 319.752 150.116,319.729 150.066,319.306 150.066 C 318.715 150.066,318.515 149.512,318.518 147.890 C 318.521 146.081,318.616 145.825,319.287 145.821 C 320.204 145.817,320.306 145.656,320.247 144.306 C 320.190 142.980,319.841 142.718,318.738 143.174 M334.332 143.196 C 334.042 143.257,333.874 143.317,333.959 143.329 C 334.044 143.340,334.040 143.449,333.951 143.570 C 333.862 143.692,333.774 144.746,333.757 145.913 C 333.736 147.296,333.781 147.911,333.885 147.680 C 333.973 147.486,334.051 147.406,334.057 147.504 C 334.064 147.601,334.448 147.693,334.909 147.709 C 335.371 147.724,335.834 147.744,335.937 147.752 C 336.044 147.761,336.120 148.133,336.113 148.608 C 336.098 149.590,336.273 150.066,336.649 150.066 C 336.813 150.066,336.868 149.984,336.788 149.855 C 336.604 149.557,336.694 146.736,336.899 146.352 C 337.001 146.161,337.373 145.983,337.824 145.908 C 338.909 145.729,339.019 145.581,339.019 144.303 C 339.019 143.282,338.983 143.172,338.621 143.092 C 338.102 142.977,335.011 143.052,334.332 143.196 M342.308 143.276 C 341.933 144.252,342.306 146.866,342.850 147.073 C 343.427 147.292,343.534 147.682,343.281 148.631 C 343.083 149.371,342.707 149.887,342.597 149.572 C 342.572 149.500,342.269 149.455,341.922 149.471 C 341.486 149.492,341.259 149.413,341.183 149.216 C 341.101 149.004,341.038 149.063,340.935 149.447 C 340.780 150.030,340.968 150.234,341.670 150.243 C 342.286 150.251,342.475 150.414,342.695 151.127 C 342.893 151.771,343.438 154.442,343.438 154.770 C 343.438 155.100,342.670 155.299,341.808 155.192 C 340.878 155.077,340.787 155.166,340.787 156.179 C 340.787 156.543,340.874 156.784,341.008 156.786 C 341.171 156.788,341.167 156.827,340.990 156.939 C 340.697 157.125,341.639 157.490,342.413 157.490 C 343.862 157.490,344.852 158.643,344.852 160.332 C 344.852 161.502,345.162 162.029,345.442 161.335 C 345.513 161.158,345.534 161.158,345.545 161.335 C 345.554 161.473,345.828 161.555,346.276 161.555 C 346.806 161.555,346.958 161.498,346.856 161.335 C 346.640 160.987,346.776 159.246,347.065 158.667 C 347.209 158.379,347.327 158.012,347.327 157.852 C 347.327 157.692,347.426 157.454,347.548 157.323 C 347.729 157.127,347.706 157.108,347.415 157.219 C 347.221 157.293,346.942 157.392,346.796 157.438 C 346.258 157.611,345.652 158.613,345.541 159.514 L 345.432 160.407 345.407 159.573 C 345.358 157.925,344.640 157.170,343.072 157.115 L 342.466 157.094 343.179 156.922 C 344.549 156.590,344.741 155.945,344.753 151.622 C 344.765 147.404,344.698 147.575,346.391 147.430 C 348.464 147.251,348.132 146.782,345.983 146.853 C 343.895 146.923,343.920 146.945,343.824 144.898 C 343.780 143.965,343.661 143.205,343.548 143.131 C 343.191 142.898,342.419 142.987,342.308 143.276 M362.916 143.182 C 362.544 143.331,362.512 143.443,362.546 144.489 C 362.567 145.153,362.497 145.737,362.378 145.880 C 362.091 146.226,361.648 147.750,361.648 148.387 C 361.649 148.679,361.708 148.837,361.779 148.738 C 361.851 148.639,362.187 148.572,362.528 148.589 C 362.868 148.605,363.363 148.626,363.628 148.636 C 364.885 148.679,365.450 154.462,364.309 155.603 C 364.073 155.838,361.844 155.865,361.746 155.634 C 361.705 155.537,361.665 155.705,361.658 156.007 L 361.644 156.556 363.157 156.651 C 364.830 156.755,364.987 156.818,364.635 157.242 C 364.369 157.562,362.663 157.493,361.993 157.134 C 361.690 156.972,361.668 156.996,361.796 157.354 C 362.038 158.034,362.972 158.373,364.601 158.374 C 366.005 158.374,366.060 158.389,366.167 158.816 C 366.280 159.266,367.463 159.455,368.258 159.150 C 368.779 158.950,368.648 156.960,368.114 156.960 C 367.505 156.960,367.488 156.824,367.604 152.883 C 367.700 149.658,367.748 149.232,368.104 148.530 C 368.529 147.689,368.335 147.587,367.764 148.351 C 367.458 148.762,367.393 149.236,367.271 151.964 C 367.081 156.222,366.853 156.866,365.752 156.244 C 365.270 155.972,365.267 155.960,365.248 153.946 C 365.196 148.559,365.233 148.903,364.643 148.231 C 363.974 147.469,363.953 147.479,366.460 147.324 C 368.928 147.172,369.167 146.944,366.950 146.858 C 364.847 146.776,364.531 146.500,364.397 144.622 C 364.274 142.902,364.081 142.714,362.916 143.182 M393.106 143.169 C 393.106 143.245,393.266 143.350,393.460 143.401 C 393.654 143.452,393.814 143.430,393.814 143.354 C 393.814 143.277,393.654 143.172,393.460 143.122 C 393.266 143.071,393.106 143.092,393.106 143.169 M98.415 143.482 C 97.605 144.411,97.476 145.787,98.105 146.805 C 98.641 147.672,98.734 147.449,98.310 146.315 C 97.956 145.370,98.094 144.360,98.712 143.360 C 98.893 143.066,98.713 143.141,98.415 143.482 M187.314 144.892 C 187.276 145.259,187.244 145.002,187.243 144.322 C 187.242 143.641,187.274 143.341,187.313 143.655 C 187.352 143.969,187.352 144.525,187.314 144.892 M291.883 144.322 C 291.884 145.002,291.916 145.259,291.954 144.892 C 291.992 144.525,291.992 143.969,291.953 143.655 C 291.914 143.341,291.882 143.641,291.883 144.322 M324.892 143.866 C 325.457 144.949,325.365 145.963,324.565 147.472 C 324.523 147.552,324.658 147.512,324.865 147.384 C 325.996 146.683,326.296 144.559,325.400 143.605 C 324.746 142.909,324.468 143.052,324.892 143.866 M356.545 143.581 C 355.345 145.028,355.439 148.709,356.705 149.801 C 357.115 150.155,357.115 150.154,356.684 149.536 C 356.070 148.655,355.969 146.037,356.489 144.495 C 356.863 143.388,356.876 143.184,356.545 143.581 M259.662 143.564 C 259.658 143.633,259.806 144.072,259.990 144.539 C 260.317 145.370,260.317 145.407,259.994 146.258 C 259.620 147.245,259.640 147.390,260.085 146.899 C 260.433 146.513,260.661 145.606,260.578 144.933 C 260.528 144.530,259.677 143.258,259.662 143.564 M152.367 145.161 C 152.365 145.424,152.517 145.466,153.380 145.439 L 154.397 145.407 153.516 145.339 C 153.032 145.302,152.576 145.177,152.503 145.062 C 152.414 144.921,152.369 144.954,152.367 145.161 M240.742 145.414 C 240.742 145.803,240.804 145.824,241.962 145.824 L 243.182 145.824 243.587 146.487 C 243.907 147.012,244.014 147.517,244.102 148.917 C 244.235 151.046,244.300 151.210,245.165 151.592 C 245.537 151.756,245.885 152.017,245.937 152.171 C 245.990 152.326,246.153 152.771,246.301 153.160 C 246.728 154.282,246.657 155.553,246.123 156.339 C 245.788 156.833,245.746 156.977,245.961 156.894 C 246.120 156.833,246.318 156.783,246.399 156.783 C 247.613 156.783,246.694 151.377,245.421 151.029 C 244.948 150.900,244.715 150.280,244.492 148.564 C 244.260 146.775,244.103 146.155,243.811 145.863 C 243.683 145.735,243.508 145.505,243.423 145.352 C 243.135 144.838,240.742 144.894,240.742 145.414 M281.577 145.425 C 280.498 145.520,280.336 145.702,280.336 146.818 C 280.336 147.712,280.362 147.768,280.774 147.768 C 281.375 147.768,281.472 148.266,281.337 150.666 C 281.138 154.230,281.573 155.960,282.809 156.517 C 283.250 156.716,283.517 156.955,283.517 157.151 C 283.517 158.175,286.036 158.585,286.917 157.704 C 287.359 157.262,287.246 157.021,286.726 157.299 C 286.151 157.607,284.411 157.544,284.283 157.211 C 284.081 156.685,284.685 156.357,285.993 156.283 C 287.817 156.180,287.891 155.497,286.071 155.563 C 284.245 155.630,284.178 155.510,284.187 152.197 C 284.196 148.874,284.287 148.663,285.731 148.630 C 287.149 148.598,287.137 148.602,287.182 148.122 C 287.239 147.519,285.327 146.001,284.509 146.000 C 283.773 145.999,282.634 145.672,282.634 145.462 C 282.634 145.370,282.574 145.308,282.501 145.325 C 282.428 145.342,282.012 145.387,281.577 145.425 M144.819 145.868 C 143.814 146.980,144.356 150.420,145.537 150.420 C 145.953 150.420,146.294 151.015,146.593 152.266 C 146.972 153.848,147.334 154.225,148.700 154.466 C 150.124 154.717,150.123 154.645,148.698 153.988 C 146.973 153.193,146.303 151.380,147.348 150.335 C 147.915 149.769,147.649 149.536,146.435 149.536 L 145.278 149.536 144.862 148.639 C 144.420 147.685,144.461 147.106,145.053 145.957 C 145.356 145.367,145.294 145.343,144.819 145.868 M391.182 145.839 C 390.243 146.023,389.810 146.383,389.710 147.061 L 389.636 147.570 390.090 147.265 C 391.791 146.122,393.304 146.786,392.368 148.265 C 391.990 148.863,391.602 148.826,390.323 148.072 C 389.457 147.562,389.633 147.963,390.588 148.677 C 391.786 149.574,391.922 149.592,392.555 148.939 C 393.397 148.070,393.394 146.136,392.550 145.841 C 392.244 145.735,391.985 145.656,391.975 145.667 C 391.966 145.677,391.608 145.755,391.182 145.839 M214.518 146.544 C 213.754 147.145,213.963 148.744,214.919 149.609 C 215.247 149.906,215.276 149.887,215.751 149.076 C 216.765 147.347,215.859 145.489,214.518 146.544 M293.733 146.521 C 293.365 146.811,293.273 147.065,293.199 147.992 C 293.096 149.265,292.806 149.856,292.207 150.007 C 291.840 150.101,291.807 150.183,291.913 150.743 C 292.027 151.352,292.524 151.936,292.708 151.678 C 292.979 151.296,294.257 151.462,294.365 151.893 C 294.511 152.474,294.312 153.414,294.059 153.338 C 292.892 152.989,292.207 153.087,292.017 153.633 C 291.739 154.430,291.772 154.574,292.294 154.853 C 292.842 155.146,293.239 155.986,293.239 156.854 C 293.239 158.510,294.893 158.390,295.573 156.685 C 295.887 155.898,296.532 155.658,298.060 155.756 C 298.734 155.800,298.894 155.757,298.854 155.546 C 298.814 155.336,298.402 155.262,296.897 155.192 L 294.991 155.104 294.955 152.556 C 294.929 150.759,294.856 149.987,294.706 149.937 C 293.714 149.606,293.240 148.227,293.776 147.227 C 294.196 146.441,295.340 147.231,295.366 148.325 C 295.385 149.143,296.273 149.437,298.009 149.202 C 299.449 149.006,299.137 148.564,297.559 148.564 C 296.067 148.564,295.714 148.338,295.714 147.385 C 295.714 146.518,294.443 145.964,293.733 146.521 M205.227 146.578 C 204.914 146.737,204.696 147.121,204.422 148.002 C 203.971 149.451,203.864 149.530,202.342 149.533 L 201.149 149.536 201.149 150.287 L 201.150 151.038 202.310 151.083 C 203.546 151.130,204.154 150.933,204.154 150.486 C 204.154 150.334,204.313 150.008,204.507 149.761 C 204.734 149.472,204.861 149.044,204.861 148.564 C 204.861 147.791,205.377 146.885,205.818 146.885 C 206.393 146.885,206.661 147.542,206.626 148.861 C 206.553 151.555,206.554 151.561,207.335 152.078 C 208.009 152.524,208.336 152.474,207.778 152.011 C 207.364 151.668,206.982 150.121,206.982 148.788 C 206.982 146.808,206.347 146.008,205.227 146.578 M382.104 146.830 C 381.933 146.874,381.748 147.123,381.692 147.384 C 381.636 147.644,381.425 148.414,381.222 149.094 C 380.717 150.791,380.567 152.168,380.737 153.545 C 380.876 154.663,380.762 155.952,380.458 156.695 C 380.328 157.013,380.344 157.024,380.622 156.797 C 381.335 156.217,381.592 154.823,381.293 153.160 C 381.216 152.730,381.286 151.654,381.471 150.420 C 381.639 149.302,381.781 148.268,381.786 148.122 C 381.791 147.976,381.983 147.622,382.213 147.336 L 382.630 146.815 383.096 147.317 C 383.497 147.750,383.562 147.975,383.562 148.940 C 383.562 150.141,383.934 151.351,384.480 151.922 C 384.801 152.257,384.799 152.231,384.455 151.421 C 384.185 150.785,384.092 150.186,384.092 149.071 C 384.092 147.070,383.545 146.453,382.104 146.830 M215.670 147.315 C 215.875 147.765,215.507 149.094,215.178 149.094 C 214.839 149.094,214.446 147.882,214.622 147.378 C 214.838 146.758,215.401 146.724,215.670 147.315 M173.426 147.857 C 174.542 149.242,174.839 151.513,174.116 153.135 C 173.450 154.628,173.462 154.851,174.152 153.810 C 175.165 152.279,174.976 149.200,173.803 148.116 C 173.439 147.779,173.269 147.662,173.426 147.857 M283.363 148.768 C 283.800 149.294,283.706 155.324,283.256 155.653 C 282.750 156.024,282.411 155.894,282.053 155.192 C 281.648 154.397,281.670 149.261,282.081 148.767 C 282.393 148.392,283.052 148.393,283.363 148.768 M9.777 150.244 C 9.071 150.529,8.882 151.760,9.230 153.793 C 9.432 154.967,9.423 155.068,9.108 155.299 C 8.265 155.915,7.814 155.564,7.076 153.718 C 6.849 153.150,6.556 152.645,6.425 152.594 C 6.294 152.544,6.186 152.399,6.186 152.271 C 6.186 152.105,5.808 152.022,4.860 151.980 C 3.586 151.924,3.534 151.938,3.535 152.320 C 3.535 152.694,3.608 152.718,4.752 152.718 C 6.153 152.718,6.340 152.880,6.982 154.656 C 7.298 155.529,7.410 155.658,8.038 155.863 C 8.911 156.149,9.368 156.549,9.369 157.031 C 9.371 157.633,10.434 158.251,11.148 158.067 C 12.770 157.646,12.651 155.467,10.994 155.245 C 9.605 155.059,8.850 151.977,9.859 150.611 C 10.081 150.312,10.240 150.071,10.213 150.077 C 10.186 150.084,9.989 150.159,9.777 150.244 M164.198 152.620 C 164.106 152.713,164.030 153.756,164.030 154.939 L 164.030 157.091 164.870 157.309 C 166.567 157.750,166.824 157.868,167.472 158.512 C 168.129 159.165,168.132 159.176,168.049 160.362 C 167.969 161.518,168.366 162.126,168.685 161.335 C 168.757 161.158,168.777 161.158,168.789 161.335 C 168.835 162.066,169.611 161.521,169.581 160.778 C 169.534 159.584,169.773 158.598,170.284 157.880 C 170.806 157.146,170.674 156.982,169.886 157.390 C 169.233 157.728,169.144 157.868,168.872 158.986 C 168.744 159.515,168.650 159.697,168.641 159.436 C 168.592 158.016,167.675 157.137,166.242 157.137 C 165.998 157.137,165.798 157.060,165.798 156.965 C 165.798 156.871,165.918 156.840,166.065 156.897 C 166.483 157.057,166.820 156.653,166.942 155.845 C 167.169 154.342,167.232 154.179,167.671 153.979 C 168.288 153.698,168.979 153.724,168.979 154.029 C 168.979 154.166,169.060 154.306,169.158 154.339 C 169.257 154.371,169.415 154.875,169.509 155.458 C 169.676 156.485,169.994 156.960,170.515 156.960 C 170.668 156.960,170.630 156.843,170.405 156.618 C 170.037 156.250,169.689 155.209,169.687 154.475 C 169.685 153.649,169.320 153.388,167.992 153.264 C 166.659 153.141,166.328 153.011,166.328 152.612 C 166.328 152.312,164.499 152.319,164.198 152.620 M206.950 152.939 C 206.413 153.906,206.993 156.960,207.714 156.960 C 208.140 156.960,207.494 157.440,206.780 157.653 C 205.700 157.977,204.861 157.379,204.861 156.285 C 204.861 156.118,204.677 155.704,204.452 155.366 C 204.226 155.027,203.938 154.491,203.811 154.175 L 203.580 153.599 202.364 153.632 L 201.149 153.664 201.149 154.340 L 201.149 155.015 202.359 155.015 C 203.290 155.015,203.632 155.087,203.841 155.325 C 204.179 155.709,204.861 157.121,204.861 157.437 C 204.861 157.833,205.956 158.372,206.761 158.373 C 207.960 158.374,208.285 158.826,208.177 160.340 L 208.090 161.555 209.789 161.555 L 211.489 161.555 211.469 159.390 C 211.452 157.554,211.493 157.207,211.734 157.105 C 211.900 157.035,211.705 156.979,211.268 156.972 C 210.855 156.965,210.517 156.896,210.517 156.819 C 210.517 156.741,210.020 156.709,209.412 156.747 C 207.431 156.871,206.455 154.869,207.524 152.871 C 207.661 152.617,207.640 152.541,207.436 152.541 C 207.290 152.541,207.072 152.720,206.950 152.939 M384.421 152.933 C 383.548 154.344,383.652 155.522,384.720 156.336 C 385.728 157.105,385.417 157.996,384.256 157.663 C 383.339 157.400,380.203 157.437,380.203 157.711 C 380.203 157.870,380.499 157.915,381.254 157.873 C 382.258 157.816,383.869 158.143,384.743 158.581 C 385.494 158.958,385.704 158.674,385.647 157.360 C 385.602 156.349,385.538 156.140,385.229 156.004 C 385.027 155.915,384.692 155.582,384.483 155.264 L 384.103 154.684 384.452 153.672 C 384.828 152.577,384.817 152.293,384.421 152.933 M140.698 153.425 C 140.698 153.815,140.712 153.818,142.146 153.781 C 143.537 153.744,144.115 155.224,143.254 156.618 C 143.198 156.709,143.218 156.783,143.299 156.783 C 143.380 156.783,143.583 156.525,143.751 156.209 C 144.714 154.392,143.943 153.071,141.921 153.071 C 140.816 153.071,140.698 153.105,140.698 153.425 M56.365 153.892 C 55.963 154.354,55.865 154.900,55.844 156.799 C 55.819 159.065,55.828 159.081,57.181 159.081 C 58.478 159.081,58.506 159.045,58.506 157.402 C 58.506 156.667,58.631 155.993,58.868 155.439 L 59.229 154.597 58.795 154.163 C 58.205 153.574,56.781 153.415,56.365 153.892 M335.341 154.007 C 334.998 154.372,334.956 154.631,334.926 156.538 C 334.885 159.120,334.864 159.081,336.290 159.081 L 337.428 159.081 337.428 158.016 C 337.428 157.378,337.576 156.545,337.797 155.939 C 338.307 154.540,338.301 154.475,337.623 154.012 C 336.825 153.467,335.851 153.465,335.341 154.007 M57.677 154.217 C 58.515 154.567,58.518 154.577,58.222 155.993 C 57.768 158.169,57.480 158.653,56.779 158.417 C 55.969 158.145,55.850 155.010,56.623 154.290 C 57.051 153.891,56.917 153.900,57.677 154.217 M336.812 154.232 L 337.476 154.510 337.366 155.514 C 336.966 159.183,334.939 159.629,335.248 155.980 C 335.403 154.144,335.729 153.780,336.812 154.232 M14.221 155.678 C 14.290 157.441,14.291 157.445,14.764 157.564 C 15.519 157.753,15.908 158.289,15.908 159.142 C 15.908 160.058,16.224 160.407,17.340 160.721 C 17.995 160.906,18.172 161.057,18.461 161.678 C 18.651 162.084,18.969 162.491,19.168 162.582 C 19.368 162.672,20.009 162.976,20.592 163.256 L 21.653 163.765 21.705 165.065 C 21.755 166.308,21.774 166.360,22.147 166.260 C 22.361 166.203,22.725 166.155,22.956 166.154 C 23.297 166.152,23.336 166.104,23.168 165.902 C 23.054 165.765,23.030 165.610,23.114 165.558 C 23.532 165.300,23.226 163.965,22.710 163.793 C 22.429 163.700,21.844 163.397,21.409 163.122 C 20.974 162.846,20.361 162.572,20.047 162.513 C 19.607 162.431,19.353 162.209,18.942 161.549 C 18.561 160.935,18.158 160.564,17.525 160.243 C 16.446 159.696,16.347 159.551,16.613 158.910 C 16.886 158.250,17.212 158.187,18.860 158.477 C 19.618 158.611,20.318 158.723,20.415 158.726 C 20.513 158.729,21.105 159.208,21.732 159.790 C 22.359 160.372,22.976 160.848,23.102 160.848 C 23.228 160.848,23.332 160.915,23.332 160.995 C 23.332 161.076,23.531 161.249,23.774 161.379 C 24.074 161.540,24.216 161.765,24.216 162.084 C 24.216 162.510,24.885 163.324,25.233 163.323 C 26.108 163.319,26.867 164.152,26.867 165.116 C 26.867 165.862,26.937 166.140,27.147 166.221 C 27.661 166.418,27.728 166.332,27.717 165.488 C 27.680 162.600,27.709 162.439,28.255 162.439 C 30.010 162.439,30.433 161.500,29.410 159.876 C 29.112 159.403,28.996 159.352,28.321 159.401 C 27.906 159.431,27.609 159.524,27.661 159.609 C 27.714 159.694,27.689 159.805,27.608 159.856 C 27.526 159.906,27.506 160.329,27.565 160.796 C 27.762 162.366,27.272 162.717,26.104 161.840 C 25.795 161.608,25.292 161.365,24.988 161.300 C 24.683 161.236,24.114 160.909,23.722 160.574 C 23.331 160.239,22.896 159.965,22.757 159.965 C 22.432 159.965,21.994 159.480,21.758 158.860 C 21.586 158.408,21.501 158.374,20.552 158.370 C 19.879 158.367,19.171 158.217,18.471 157.929 C 17.888 157.688,17.202 157.491,16.946 157.491 C 16.279 157.490,16.060 157.117,16.096 156.046 C 16.144 154.608,16.182 154.662,15.133 154.662 L 14.181 154.662 14.221 155.678 M155.074 155.281 C 156.103 156.863,156.063 157.914,154.938 158.858 C 154.424 159.289,154.346 159.474,154.261 160.451 L 154.165 161.555 154.844 161.555 C 155.597 161.555,155.731 161.353,155.839 160.053 C 155.871 159.664,155.975 158.869,156.070 158.285 C 156.285 156.964,155.967 155.841,155.164 155.088 L 154.615 154.574 155.074 155.281 M259.866 155.480 C 260.715 156.739,260.737 158.831,259.904 159.151 C 259.725 159.220,259.655 159.571,259.655 160.401 L 259.655 161.555 260.263 161.555 C 261.607 161.555,261.152 155.866,259.734 154.937 C 259.347 154.684,259.358 154.727,259.866 155.480 M301.712 155.413 C 302.227 156.176,302.328 156.632,302.280 157.969 C 302.263 158.446,302.133 158.827,301.917 159.030 C 301.672 159.259,301.563 159.649,301.519 160.451 L 301.458 161.556 302.101 161.556 C 303.490 161.555,303.080 155.890,301.623 154.935 C 301.225 154.675,301.229 154.697,301.712 155.413 M198.088 155.413 C 197.530 156.164,197.418 156.839,197.641 158.121 C 197.741 158.697,197.835 159.685,197.851 160.315 C 197.873 161.229,197.939 161.473,198.173 161.518 C 198.583 161.598,198.467 159.352,197.994 158.038 C 197.624 157.012,197.678 156.616,198.348 155.413 C 198.524 155.097,198.634 154.839,198.592 154.839 C 198.550 154.839,198.323 155.097,198.088 155.413 M251.803 155.236 C 251.123 156.275,251.243 158.972,251.977 159.156 C 252.379 159.257,252.408 159.343,252.408 160.410 C 252.408 161.512,252.425 161.555,252.847 161.555 C 253.593 161.555,253.436 159.076,252.647 158.405 C 251.669 157.574,251.535 156.494,252.244 155.170 C 252.502 154.687,252.125 154.744,251.803 155.236 M325.276 155.590 C 325.678 156.417,325.742 157.989,325.416 159.080 C 325.081 160.202,325.174 161.555,325.586 161.555 C 325.956 161.555,325.990 161.406,325.972 159.876 C 325.968 159.487,325.958 158.354,325.951 157.357 C 325.941 155.791,325.891 155.498,325.586 155.192 C 325.013 154.619,324.884 154.785,325.276 155.590 M147.308 155.537 C 147.105 155.785,146.722 156.385,146.456 156.871 C 145.807 158.060,145.561 158.219,144.410 158.184 C 143.011 158.143,142.995 158.149,143.010 158.683 C 143.018 158.951,143.058 159.087,143.101 158.986 C 143.145 158.879,143.634 158.825,144.280 158.857 C 145.992 158.941,146.885 158.538,146.885 157.680 C 146.885 157.239,147.004 156.907,147.238 156.695 C 147.433 156.519,147.592 156.268,147.592 156.137 C 147.592 155.846,149.205 155.804,149.724 156.082 C 150.109 156.288,150.209 155.868,149.893 155.369 C 149.582 154.877,147.751 154.996,147.308 155.537 M294.830 156.321 C 294.830 157.560,294.445 157.962,293.868 157.324 C 293.357 156.760,293.798 155.192,294.467 155.192 C 294.795 155.192,294.830 155.301,294.830 156.321 M11.210 156.415 C 11.746 156.974,11.699 157.242,11.019 157.501 C 10.114 157.845,9.600 157.110,10.174 156.292 C 10.528 155.785,10.617 155.796,11.210 156.415 M233.480 156.383 C 232.871 157.983,232.321 158.703,231.418 159.082 C 231.064 159.231,231.021 159.373,231.021 160.402 L 231.021 161.555 231.626 161.555 C 232.277 161.555,232.536 161.104,232.590 159.876 C 232.604 159.539,232.767 159.233,233.038 159.034 C 233.346 158.807,233.496 158.479,233.584 157.841 C 233.705 156.962,233.707 156.960,234.352 156.980 C 234.707 156.992,234.867 157.036,234.707 157.078 C 234.074 157.246,234.056 161.434,234.688 161.524 C 235.073 161.578,235.086 161.533,235.088 160.110 C 235.090 158.869,235.159 158.519,235.530 157.870 C 235.772 157.447,235.970 156.830,235.970 156.500 L 235.970 155.899 234.817 155.899 C 233.723 155.899,233.654 155.924,233.480 156.383 M45.426 157.022 C 45.426 157.067,45.784 157.330,46.222 157.606 C 46.659 157.883,47.017 158.168,47.017 158.241 C 47.017 158.314,47.156 158.376,47.327 158.379 C 48.112 158.391,48.667 159.351,48.548 160.491 L 48.437 161.555 48.964 161.555 L 49.492 161.555 49.492 160.150 C 49.492 158.321,49.064 157.842,47.025 157.392 C 46.292 157.230,45.632 157.062,45.559 157.018 C 45.486 156.975,45.426 156.976,45.426 157.022 M245.529 157.246 C 246.133 157.967,246.513 159.304,246.440 160.451 C 246.370 161.539,246.375 161.555,246.825 161.555 C 247.266 161.555,247.283 161.516,247.303 160.451 C 247.340 158.525,247.046 157.823,245.977 157.281 C 245.305 156.941,245.271 156.938,245.529 157.246 M271.490 158.004 C 271.938 158.891,272.028 159.280,272.028 160.313 C 272.028 161.637,272.692 162.320,272.763 161.069 C 272.884 158.911,272.633 158.180,271.471 157.321 L 270.951 156.937 271.490 158.004 M51.280 157.425 C 50.372 158.061,49.906 161.555,50.729 161.555 C 51.051 161.555,51.083 161.438,51.083 160.221 C 51.083 158.893,51.308 158.151,51.927 157.446 C 52.292 157.029,51.865 157.015,51.280 157.425 M67.963 157.306 C 66.951 157.727,66.562 158.476,66.555 160.014 L 66.549 161.467 67.229 161.523 C 67.756 161.566,67.877 161.526,67.765 161.346 C 67.554 161.006,67.666 159.299,67.941 158.659 C 68.651 157.011,68.651 157.020,67.963 157.306 M73.493 157.357 C 73.968 157.931,74.344 159.383,74.294 160.451 C 74.245 161.518,74.258 161.555,74.674 161.555 C 75.677 161.555,75.229 158.525,74.080 157.534 C 73.588 157.110,73.189 156.990,73.493 157.357 M88.998 157.976 C 88.713 158.427,88.337 158.917,88.164 159.066 C 87.944 159.254,87.848 159.588,87.848 160.166 C 87.848 161.391,87.956 161.555,88.757 161.555 C 89.368 161.555,89.431 161.518,89.283 161.240 C 89.108 160.914,89.143 160.326,89.453 158.397 C 89.678 156.995,89.640 156.960,88.998 157.976 M371.177 157.388 C 371.650 157.958,372.005 159.359,371.953 160.451 C 371.902 161.524,371.914 161.555,372.340 161.555 C 372.687 161.555,372.782 161.463,372.793 161.114 C 372.838 159.665,372.822 159.241,372.718 159.138 C 372.655 159.074,372.603 158.879,372.603 158.704 C 372.603 158.360,371.477 157.137,371.161 157.137 C 371.030 157.137,371.035 157.216,371.177 157.388 M134.402 157.701 C 134.330 157.818,134.226 158.733,134.171 159.734 L 134.070 161.556 134.733 161.556 L 135.395 161.555 135.395 160.427 C 135.395 159.426,135.444 159.266,135.826 159.016 C 136.344 158.677,136.541 159.034,136.477 160.198 C 136.425 161.156,136.591 161.555,137.042 161.556 C 137.516 161.556,137.527 158.625,137.056 157.888 C 136.765 157.433,134.659 157.285,134.402 157.701 M40.470 158.772 C 40.467 158.796,40.417 159.432,40.361 160.186 L 40.258 161.555 40.800 161.555 L 41.343 161.555 41.338 160.451 C 41.335 159.699,41.244 159.247,41.055 159.037 C 40.817 158.772,40.493 158.626,40.470 158.772 M177.640 159.043 C 177.212 159.190,177.116 159.463,177.113 160.539 L 177.110 161.555 177.817 161.555 L 178.524 161.555 178.524 160.413 C 178.524 159.223,178.269 158.827,177.640 159.043 M187.191 160.186 C 187.186 161.302,187.235 161.555,187.457 161.555 C 187.659 161.555,187.687 161.477,187.565 161.246 C 187.475 161.076,187.429 160.586,187.463 160.157 C 187.496 159.727,187.450 159.250,187.360 159.096 C 187.249 158.906,187.194 159.258,187.191 160.186 M386.171 159.125 C 385.974 159.277,385.867 159.692,385.828 160.451 L 385.771 161.556 386.434 161.556 C 386.945 161.556,387.098 161.485,387.102 161.246 C 387.108 160.952,387.119 160.952,387.343 161.246 C 387.504 161.458,387.822 161.556,388.354 161.556 L 389.129 161.556 389.072 160.338 C 389.014 159.138,389.005 159.118,388.475 159.012 C 387.589 158.835,386.476 158.889,386.171 159.125 M12.726 160.308 C 12.726 161.312,12.779 161.555,12.998 161.555 C 13.196 161.555,13.228 161.472,13.118 161.246 C 13.035 161.076,12.987 160.560,13.011 160.100 C 13.036 159.640,12.982 159.218,12.891 159.162 C 12.795 159.103,12.726 159.582,12.726 160.308 M58.835 159.567 C 58.821 159.737,58.823 160.107,58.838 160.389 C 58.854 160.671,58.733 161.049,58.571 161.229 C 58.288 161.541,58.302 161.555,58.877 161.556 L 59.479 161.556 59.419 160.407 C 59.364 159.327,58.907 158.671,58.835 159.567 M319.759 159.258 C 319.578 159.643,319.612 161.555,319.801 161.555 C 319.952 161.555,320.004 161.295,319.967 160.716 C 319.906 159.743,319.819 159.131,319.759 159.258 M337.889 159.685 C 337.830 159.921,337.830 160.240,337.890 160.394 C 337.949 160.548,337.867 160.873,337.709 161.115 C 337.421 161.554,337.423 161.555,337.999 161.556 L 338.577 161.556 338.518 160.407 C 338.456 159.214,338.108 158.814,337.889 159.685 M107.068 166.105 C 106.703 166.255,106.414 166.466,106.426 166.574 C 106.536 167.507,106.379 168.431,106.098 168.504 C 105.928 168.548,106.122 168.594,106.528 168.605 C 106.935 168.616,107.490 168.541,107.762 168.438 C 108.111 168.305,108.274 168.305,108.319 168.438 C 108.565 169.177,108.966 168.554,108.910 167.521 C 108.819 165.856,108.421 165.550,107.068 166.105 \",stroke:\"none\",fill:\"#648464\",fillRule:\"evenodd\"}),/*#__PURE__*/React.createElement(\"path\",{id:\"path4\",d:\"M17.791 19.908 C 17.915 19.959,17.948 20.163,17.875 20.435 C 17.570 21.576,17.833 22.253,18.800 22.811 L 19.708 23.336 25.761 23.290 L 31.813 23.243 32.301 22.717 C 32.569 22.427,32.773 22.143,32.755 22.085 C 32.736 22.027,32.703 21.489,32.681 20.888 L 32.642 19.797 25.115 19.811 C 20.975 19.818,17.679 19.862,17.791 19.908 M45.798 22.112 C 45.793 25.043,45.972 24.867,42.902 24.959 C 39.979 25.046,39.565 25.179,38.111 26.495 C 37.241 27.284,37.020 27.397,36.361 27.397 C 34.985 27.397,34.170 28.477,34.391 30.008 C 34.538 31.035,34.889 31.463,35.583 31.463 C 36.078 31.463,36.095 31.442,35.831 31.151 C 34.291 29.449,36.091 27.232,37.874 28.635 C 38.121 28.829,38.589 28.988,38.914 28.988 L 39.505 28.989 39.447 27.865 L 39.389 26.740 40.185 26.273 C 40.766 25.933,41.228 25.806,41.889 25.806 C 43.161 25.806,45.269 25.466,45.701 25.191 C 46.399 24.747,46.806 19.797,46.145 19.797 C 45.823 19.797,45.802 19.941,45.798 22.112 M59.925 20.250 C 60.234 21.062,60.132 22.239,59.702 22.820 C 59.200 23.500,57.281 23.550,57.066 22.890 C 57.003 22.696,56.944 23.173,56.936 23.951 C 56.928 24.728,56.979 25.285,57.051 25.188 C 57.329 24.809,59.229 24.920,60.220 25.373 C 60.741 25.611,61.226 25.806,61.296 25.806 C 62.241 25.799,63.986 26.787,63.986 27.328 C 63.986 27.889,64.009 27.910,64.439 27.746 C 65.948 27.173,67.311 27.823,67.918 29.407 C 68.160 30.036,68.465 30.513,68.695 30.619 C 69.460 30.974,69.639 33.937,68.895 33.937 C 68.507 33.937,67.874 34.835,67.873 35.387 C 67.868 36.760,66.786 38.886,66.091 38.886 C 65.770 38.886,65.400 39.589,65.400 40.199 C 65.400 40.818,64.899 41.892,64.555 42.014 C 64.066 42.186,63.456 42.811,63.456 43.139 C 63.456 43.881,62.524 45.140,61.516 45.760 C 60.812 46.194,60.653 46.391,60.555 46.958 C 60.403 47.828,60.096 48.608,59.905 48.608 C 59.518 48.608,58.506 49.733,58.506 50.164 C 58.506 50.484,58.247 50.866,57.648 51.429 C 57.176 51.872,56.610 52.592,56.390 53.028 C 55.912 53.978,54.823 55.141,54.409 55.145 C 53.890 55.150,53.557 55.663,53.557 56.457 C 53.557 57.243,53.268 57.624,52.099 58.378 C 51.832 58.550,51.613 58.770,51.613 58.866 C 51.613 59.432,50.825 60.626,50.280 60.884 C 49.831 61.097,49.626 61.347,49.469 61.872 C 49.049 63.274,48.141 63.983,46.735 64.006 C 46.064 64.018,45.654 64.063,45.824 64.108 C 46.080 64.175,46.133 64.394,46.133 65.382 C 46.133 66.643,45.938 66.991,44.940 67.505 C 44.679 67.640,44.543 67.871,44.543 68.181 C 44.543 68.760,43.715 69.995,43.325 69.997 C 43.001 69.998,42.349 70.881,42.060 71.711 C 41.752 72.594,41.149 72.879,39.672 72.840 C 38.449 72.808,37.730 73.144,38.441 73.416 C 39.214 73.713,39.058 76.359,38.268 76.359 C 37.914 76.359,37.433 77.141,37.308 77.921 C 37.224 78.446,37.050 78.668,36.387 79.099 C 35.769 79.500,35.477 79.850,35.186 80.539 C 34.928 81.151,34.581 81.603,34.130 81.916 C 33.492 82.358,33.053 83.001,33.053 83.495 C 33.053 83.804,31.275 85.550,30.960 85.550 C 30.820 85.550,30.362 85.722,29.942 85.932 L 29.178 86.313 28.819 85.887 C 28.242 85.203,28.223 84.794,28.710 83.636 C 28.960 83.042,29.165 82.425,29.165 82.265 C 29.165 81.525,29.909 80.634,30.691 80.437 L 31.463 80.242 31.463 78.673 C 31.463 76.887,31.462 76.887,29.990 76.893 C 28.428 76.900,28.249 77.160,28.080 79.659 C 28.002 80.817,27.817 82.343,27.668 83.050 C 27.212 85.216,27.345 85.889,28.500 87.266 C 29.096 87.976,29.137 87.995,29.415 87.688 C 29.732 87.337,31.699 86.257,32.020 86.257 C 32.312 86.257,32.633 85.795,33.352 84.335 C 33.807 83.411,34.192 82.896,34.670 82.567 C 35.156 82.233,35.397 81.906,35.531 81.396 C 35.862 80.138,36.013 79.919,36.625 79.801 C 37.316 79.668,37.852 79.018,37.995 78.137 C 38.077 77.628,38.222 77.449,38.752 77.199 C 39.549 76.824,39.947 76.252,40.144 75.196 C 40.290 74.413,41.291 73.179,41.783 73.176 C 42.091 73.174,42.737 72.097,42.870 71.365 C 42.968 70.832,43.069 70.703,43.388 70.703 C 43.959 70.703,44.658 69.977,44.915 69.117 C 45.096 68.515,45.317 68.260,46.078 67.773 C 46.725 67.359,47.017 67.056,47.017 66.799 C 47.017 66.233,47.569 65.420,48.118 65.177 C 48.387 65.058,48.608 64.906,48.608 64.840 C 48.608 64.774,48.797 64.495,49.028 64.220 C 49.258 63.946,49.590 63.266,49.765 62.711 C 50.008 61.939,50.190 61.661,50.538 61.528 C 51.388 61.205,51.789 60.741,51.928 59.918 C 52.051 59.190,52.134 59.089,52.941 58.683 C 53.705 58.299,53.871 58.115,54.203 57.281 C 54.490 56.558,54.726 56.253,55.160 56.044 C 55.476 55.892,55.819 55.608,55.923 55.413 C 56.027 55.219,56.292 54.777,56.514 54.432 C 56.735 54.086,56.916 53.656,56.916 53.475 C 56.916 53.162,57.884 52.143,58.181 52.143 C 58.358 52.143,58.947 50.983,59.106 50.320 C 59.187 49.983,59.411 49.745,59.798 49.583 C 60.533 49.276,60.861 48.879,61.159 47.933 C 61.329 47.394,61.556 47.089,61.933 46.894 C 62.754 46.469,63.456 45.556,63.456 44.913 C 63.456 44.721,63.528 44.519,63.617 44.464 C 63.706 44.409,63.832 44.046,63.898 43.658 C 63.995 43.082,64.089 42.952,64.410 42.952 C 64.903 42.952,65.695 42.137,65.829 41.494 C 65.885 41.226,65.973 40.803,66.025 40.554 C 66.089 40.249,66.318 40.017,66.727 39.847 C 67.514 39.518,68.228 38.050,68.228 36.760 C 68.228 35.809,68.486 35.416,69.430 34.928 C 70.789 34.225,70.590 30.218,69.175 29.814 C 68.624 29.656,68.228 29.100,68.228 28.483 C 68.228 27.912,67.792 27.565,66.724 27.288 C 65.633 27.005,65.046 26.633,65.046 26.225 C 65.046 25.923,63.765 25.349,62.749 25.195 C 61.860 25.061,60.097 24.595,60.097 24.494 C 60.097 24.458,60.295 24.082,60.537 23.659 C 60.913 23.002,60.977 22.665,60.979 21.343 L 60.981 19.797 60.367 19.797 C 59.780 19.797,59.760 19.817,59.925 20.250 M72.028 21.017 C 72.028 22.162,72.063 22.270,72.601 22.784 L 73.174 23.332 76.720 23.332 C 80.456 23.332,82.461 23.064,82.927 22.502 C 83.200 22.173,83.255 20.151,82.991 20.148 C 82.892 20.146,82.930 20.068,83.076 19.973 C 83.250 19.861,81.402 19.801,77.684 19.799 L 72.028 19.797 72.028 21.017 M90.158 21.697 C 90.150 24.531,90.072 24.745,88.953 25.031 C 87.948 25.289,86.777 25.953,86.405 26.478 C 86.086 26.928,85.614 27.154,84.666 27.311 C 83.755 27.462,83.076 28.070,83.076 28.736 C 83.076 29.174,83.025 29.209,81.727 29.692 C 81.217 29.881,81.080 30.067,80.429 31.454 C 80.363 31.594,80.086 31.769,79.813 31.842 C 79.102 32.032,78.504 32.661,78.294 33.440 C 78.194 33.811,78.021 34.114,77.910 34.114 C 77.430 34.114,76.556 34.930,76.342 35.578 C 76.218 35.955,75.890 36.435,75.614 36.647 C 74.215 37.717,74.199 37.737,74.044 38.718 C 73.887 39.711,73.353 40.370,72.087 41.135 C 71.770 41.327,71.578 41.629,71.503 42.054 C 71.304 43.178,71.216 43.315,70.509 43.598 C 69.714 43.916,69.170 44.582,69.083 45.343 C 69.038 45.741,68.862 45.953,68.353 46.221 C 67.617 46.610,66.994 47.428,66.992 48.007 C 66.990 48.631,66.617 49.492,66.349 49.492 C 66.210 49.492,66.049 49.614,65.992 49.763 C 65.934 49.913,65.660 50.153,65.381 50.297 C 64.809 50.593,64.427 51.231,64.246 52.193 C 64.144 52.738,64.050 52.850,63.693 52.850 C 63.121 52.850,62.471 53.527,62.212 54.393 C 62.083 54.823,61.819 55.203,61.533 55.372 C 60.638 55.901,60.097 56.529,60.097 57.040 C 60.097 57.563,59.512 58.364,58.988 58.559 C 58.816 58.623,58.621 58.816,58.555 58.988 C 58.489 59.161,58.276 59.431,58.082 59.588 C 57.888 59.745,57.606 60.337,57.455 60.903 C 57.210 61.821,57.120 61.947,56.621 62.076 C 55.943 62.251,55.148 63.146,55.148 63.734 C 55.148 64.208,54.586 64.870,54.183 64.870 C 53.756 64.870,53.240 65.567,52.925 66.568 C 52.762 67.087,52.499 67.561,52.341 67.622 C 51.739 67.856,50.513 69.449,50.350 70.212 C 50.207 70.885,50.104 71.003,49.408 71.290 C 48.683 71.591,48.601 71.693,48.250 72.749 C 47.935 73.695,47.793 73.903,47.400 73.996 C 46.841 74.128,46.133 74.730,46.133 75.073 C 46.133 75.572,45.564 76.391,45.106 76.551 C 44.458 76.778,43.836 77.740,43.836 78.514 C 43.836 79.153,43.285 79.748,41.871 80.640 C 41.554 80.840,41.341 81.199,41.195 81.780 C 40.933 82.822,40.734 83.076,40.182 83.076 C 39.606 83.076,38.899 83.904,38.892 84.587 C 38.885 85.229,38.609 85.550,38.063 85.550 C 37.524 85.550,36.835 86.331,36.563 87.250 C 36.417 87.746,36.217 88.039,35.979 88.104 C 35.367 88.273,34.910 88.785,34.680 89.558 C 34.548 90.006,34.236 90.477,33.890 90.753 C 33.223 91.286,33.246 91.264,32.427 92.170 C 32.080 92.554,31.705 93.208,31.594 93.622 C 31.416 94.286,31.307 94.403,30.676 94.603 C 30.016 94.812,29.932 94.912,29.604 95.883 C 29.345 96.650,29.145 96.962,28.867 97.032 C 28.251 97.187,27.397 98.057,27.397 98.530 C 27.397 99.021,27.042 99.435,26.468 99.615 C 25.873 99.800,25.366 100.392,25.024 101.301 C 24.793 101.913,24.543 102.214,24.024 102.506 C 23.613 102.737,23.332 103.026,23.332 103.218 C 23.332 103.396,23.209 103.589,23.059 103.646 C 22.909 103.704,22.664 104.041,22.516 104.396 C 22.135 105.309,21.547 106.054,21.209 106.054 C 20.912 106.054,20.284 107.160,20.079 108.042 C 20.017 108.312,19.846 108.529,19.696 108.529 C 19.016 108.529,18.392 109.074,18.086 109.934 C 17.885 110.502,17.619 110.887,17.328 111.035 C 16.473 111.470,15.908 111.955,15.908 112.254 C 15.908 113.168,15.455 113.317,12.839 113.263 L 10.389 113.213 10.051 112.329 C 9.635 111.237,9.394 110.914,8.869 110.748 L 8.460 110.618 8.914 111.337 C 9.164 111.733,9.368 112.215,9.368 112.408 C 9.368 112.601,9.604 113.000,9.892 113.295 L 10.417 113.831 13.034 113.831 C 15.928 113.831,15.751 113.894,16.892 112.465 C 17.143 112.151,17.558 111.793,17.814 111.669 C 18.118 111.523,18.320 111.249,18.395 110.885 C 18.536 110.190,19.253 109.258,19.655 109.245 C 19.987 109.235,20.855 108.197,20.861 107.805 C 20.866 107.473,21.385 106.849,21.854 106.609 C 22.063 106.503,22.486 105.968,22.795 105.420 C 23.610 103.976,24.112 103.592,25.194 103.585 L 26.083 103.579 26.028 102.386 C 25.968 101.075,26.222 100.567,27.104 100.232 C 27.400 100.119,27.723 99.713,28.050 99.042 C 28.363 98.398,28.736 97.921,29.061 97.746 C 29.344 97.594,29.630 97.353,29.698 97.210 C 30.337 95.854,30.565 95.527,31.108 95.184 C 31.885 94.694,32.071 94.463,32.324 93.675 C 32.682 92.564,33.550 92.048,34.965 92.108 C 35.869 92.146,35.964 92.117,35.915 91.811 C 35.885 91.624,35.816 91.065,35.763 90.569 L 35.665 89.666 36.436 89.149 C 37.097 88.706,37.215 88.534,37.264 87.940 C 37.326 87.184,37.882 86.257,38.273 86.257 C 38.652 86.257,39.226 85.548,39.449 84.806 C 39.598 84.308,39.839 84.026,40.393 83.701 C 40.931 83.386,41.263 83.006,41.597 82.324 C 42.243 81.004,42.782 80.650,44.161 80.643 C 45.527 80.635,45.460 80.714,45.228 79.396 C 44.993 78.064,45.072 77.829,45.863 77.499 C 46.297 77.317,46.511 77.096,46.583 76.755 C 46.640 76.489,46.723 76.089,46.768 75.868 C 46.850 75.461,47.016 75.279,48.010 74.500 C 48.390 74.203,48.595 73.861,48.669 73.402 C 48.771 72.773,49.766 71.586,50.192 71.586 C 50.279 71.586,50.548 71.167,50.791 70.654 C 51.454 69.252,51.770 69.040,53.308 68.963 C 54.721 68.891,54.768 68.864,54.323 68.372 C 53.775 67.766,53.790 66.245,54.348 65.836 C 55.231 65.189,55.417 64.960,55.772 64.081 C 56.019 63.471,56.339 63.059,56.823 62.730 C 57.206 62.470,57.602 62.029,57.704 61.750 C 58.304 60.095,59.129 59.496,60.676 59.592 C 61.712 59.657,61.877 59.554,61.440 59.117 C 60.600 58.276,61.070 56.519,62.243 56.119 C 62.421 56.058,62.578 55.732,62.649 55.275 C 62.757 54.579,63.423 53.557,63.768 53.557 C 64.082 53.557,64.868 52.551,64.976 52.009 C 65.171 51.032,66.072 50.511,67.444 50.582 C 68.741 50.649,68.663 50.819,68.215 48.896 C 67.973 47.861,68.157 47.332,68.880 46.985 C 69.249 46.809,69.471 46.482,69.743 45.714 C 70.037 44.886,70.253 44.588,70.830 44.214 C 71.324 43.894,71.622 43.535,71.778 43.071 C 72.239 41.701,72.749 41.342,74.289 41.305 C 75.607 41.274,76.117 40.962,75.487 40.573 C 75.396 40.517,75.231 40.031,75.119 39.493 C 74.887 38.378,74.969 38.199,75.913 37.751 C 76.410 37.515,76.560 37.303,76.792 36.503 C 76.978 35.864,77.227 35.434,77.532 35.225 C 78.366 34.653,78.817 34.151,78.942 33.656 C 79.082 33.097,79.838 32.360,80.280 32.352 C 80.589 32.346,81.308 31.476,81.308 31.107 C 81.308 30.857,82.035 30.246,82.779 29.872 C 83.068 29.726,83.448 29.338,83.622 29.010 C 84.350 27.638,87.141 27.414,87.141 28.727 C 87.141 28.871,87.280 28.988,87.450 28.988 C 87.718 28.989,87.752 28.840,87.702 27.872 L 87.644 26.755 88.361 26.281 C 88.755 26.020,89.190 25.806,89.327 25.806 C 90.208 25.806,91.062 23.527,91.099 21.079 C 91.118 19.800,91.117 19.798,90.641 19.797 L 90.163 19.797 90.158 21.697 M3.934 22.512 C 4.174 22.734,4.503 23.316,4.665 23.806 C 5.060 24.995,5.553 25.418,6.820 25.656 C 9.253 26.114,10.335 26.596,10.392 27.248 L 10.444 27.839 11.745 27.782 C 13.520 27.703,14.436 28.453,14.253 29.835 C 14.141 30.684,13.533 31.463,12.982 31.463 C 12.669 31.463,12.592 41.787,12.903 41.980 C 13.000 42.040,13.080 42.230,13.080 42.403 C 13.080 42.909,15.011 42.924,15.466 42.422 C 16.611 41.156,16.678 31.024,15.543 30.663 C 15.243 30.568,14.848 29.742,14.848 29.209 C 14.848 28.193,14.196 27.505,12.975 27.232 C 12.201 27.059,11.963 26.918,11.748 26.502 C 11.269 25.576,9.198 24.923,6.737 24.923 C 5.747 24.923,5.303 24.533,5.303 23.666 C 5.303 23.037,4.818 22.481,4.091 22.276 L 3.499 22.109 3.934 22.512 M63.758 28.458 C 63.707 28.652,63.738 28.856,63.826 28.910 C 63.914 28.964,63.986 28.805,63.986 28.557 C 63.986 28.015,63.885 27.971,63.758 28.458 M101.105 30.541 C 101.105 32.119,101.031 32.256,99.202 34.069 C 98.240 35.023,98.062 35.302,97.899 36.117 C 97.611 37.547,96.878 38.073,95.346 37.944 C 94.309 37.857,94.211 37.878,94.211 38.191 C 94.211 38.379,94.284 38.533,94.374 38.533 C 95.180 38.533,95.176 40.985,94.369 41.506 C 93.854 41.839,93.677 42.111,93.449 42.921 C 93.294 43.473,92.916 44.227,92.608 44.597 L 92.048 45.269 90.832 45.158 C 89.601 45.045,89.335 45.166,89.957 45.555 C 90.728 46.036,90.631 48.264,89.823 48.651 C 89.350 48.877,88.830 49.720,88.649 50.552 C 88.420 51.608,87.731 52.052,86.272 52.086 C 85.535 52.104,84.895 52.123,84.850 52.130 C 84.805 52.137,85.025 52.362,85.338 52.629 C 86.439 53.568,86.223 55.411,84.943 55.994 C 84.673 56.118,84.399 56.586,84.069 57.492 C 83.617 58.732,82.872 59.744,82.413 59.744 C 82.080 59.744,81.662 60.492,81.662 61.087 C 81.662 61.718,81.232 62.860,80.821 63.323 C 80.606 63.565,80.262 63.632,79.248 63.632 C 78.002 63.632,77.556 63.849,78.259 64.113 C 79.409 64.544,79.337 66.481,78.126 67.698 C 77.489 68.338,77.243 68.724,77.243 69.079 C 77.243 69.785,76.426 71.327,75.864 71.682 C 75.132 72.145,74.776 72.677,74.772 73.316 C 74.765 74.411,73.747 75.652,72.857 75.652 L 72.245 75.652 72.362 76.800 C 72.564 78.767,71.801 79.594,69.865 79.509 C 68.494 79.448,68.209 79.694,68.819 80.410 C 69.120 80.764,69.642 82.099,69.642 82.515 C 69.642 82.825,68.671 83.959,68.406 83.959 C 68.332 83.959,68.089 84.536,67.865 85.241 C 67.480 86.448,66.284 88.025,65.752 88.025 C 65.667 88.025,65.548 88.403,65.486 88.864 C 65.196 91.038,64.569 91.686,62.876 91.560 C 61.636 91.468,61.220 91.744,62.097 92.078 C 63.069 92.447,63.163 94.755,62.230 95.343 C 61.541 95.777,60.980 96.553,60.968 97.090 C 60.961 97.402,60.801 97.897,60.613 98.188 C 60.424 98.480,60.225 98.838,60.170 98.984 C 60.115 99.129,59.718 99.510,59.288 99.829 C 58.673 100.285,58.506 100.520,58.506 100.927 C 58.506 101.496,57.589 102.696,57.154 102.696 C 56.825 102.696,56.035 103.546,56.022 103.914 C 56.009 104.303,55.064 105.019,54.383 105.158 C 54.027 105.231,53.744 105.435,53.608 105.718 C 52.696 107.613,47.724 108.188,47.724 106.398 L 47.724 105.885 46.614 105.924 L 45.503 105.964 45.454 107.045 L 45.406 108.126 46.123 108.241 C 46.785 108.347,46.842 108.400,46.860 108.928 C 46.953 111.607,46.759 111.499,51.579 111.566 L 55.618 111.622 56.267 112.117 C 56.999 112.676,57.210 112.358,56.547 111.695 C 55.774 110.922,55.193 110.826,51.275 110.826 C 49.005 110.826,47.526 110.758,47.460 110.650 C 47.290 110.377,47.771 109.520,48.200 109.331 C 48.412 109.238,48.666 108.983,48.766 108.765 C 49.042 108.158,49.786 107.877,51.486 107.739 C 53.204 107.599,53.840 107.254,54.262 106.235 C 54.426 105.839,54.659 105.655,55.168 105.518 C 55.944 105.309,56.526 104.770,56.682 104.113 C 56.828 103.496,57.029 103.280,57.586 103.141 C 58.290 102.965,58.634 102.581,58.957 101.610 C 59.187 100.916,59.377 100.675,59.904 100.406 C 60.674 100.013,60.898 99.765,61.030 99.160 C 61.438 97.280,61.805 96.467,62.346 96.239 C 63.043 95.947,63.348 95.450,63.619 94.171 C 63.782 93.397,63.951 93.073,64.335 92.800 C 65.055 92.288,65.930 90.890,65.933 90.248 C 65.937 89.287,66.130 88.904,66.738 88.649 C 67.474 88.342,68.133 87.103,68.303 85.705 C 68.419 84.757,68.457 84.696,69.135 84.391 C 70.699 83.685,71.007 80.733,69.554 80.375 C 69.359 80.328,69.655 80.279,70.211 80.268 C 72.043 80.231,72.464 79.861,72.995 77.818 C 73.137 77.271,73.331 76.995,73.713 76.798 C 74.339 76.474,75.038 75.181,75.211 74.025 C 75.335 73.202,75.822 72.470,76.247 72.470 C 76.571 72.470,77.180 71.754,77.298 71.233 C 77.716 69.393,78.089 68.491,78.453 68.437 C 78.995 68.356,79.717 67.337,79.717 66.653 C 79.717 65.922,79.917 65.564,80.834 64.645 C 81.693 63.785,82.192 62.840,82.192 62.073 C 82.192 61.420,82.348 60.981,82.581 60.981 C 83.370 60.981,84.666 58.904,84.666 57.642 C 84.666 57.003,84.729 56.902,85.290 56.636 C 86.091 56.256,86.572 55.636,86.816 54.668 C 86.951 54.129,87.301 53.588,87.965 52.886 C 88.730 52.077,88.989 51.643,89.275 50.685 C 89.547 49.771,89.707 49.492,89.957 49.492 C 90.537 49.492,91.034 48.900,91.293 47.901 C 91.481 47.180,91.707 46.792,92.172 46.399 C 92.516 46.107,92.797 45.812,92.797 45.744 C 92.797 45.675,92.987 45.430,93.219 45.198 C 93.492 44.925,93.683 44.471,93.761 43.908 C 93.901 42.900,94.105 42.576,94.814 42.230 C 95.564 41.865,95.971 41.213,96.093 40.181 C 96.191 39.360,96.278 39.214,96.992 38.681 C 98.033 37.904,98.433 37.316,98.562 36.373 C 98.646 35.760,98.767 35.552,99.135 35.382 C 99.824 35.065,100.097 34.802,100.451 34.114 C 101.014 33.019,101.172 32.902,102.355 32.710 C 105.710 32.166,106.231 32.427,106.231 34.657 C 106.231 35.335,106.391 37.448,106.587 39.353 C 107.029 43.651,107.303 44.189,109.059 44.189 C 110.365 44.189,110.475 44.039,110.455 42.283 C 110.445 41.371,110.387 40.923,110.315 41.184 C 110.191 41.629,109.727 41.824,108.678 41.870 C 108.128 41.895,107.948 41.504,107.551 39.417 C 107.413 38.688,107.178 37.656,107.030 37.125 C 106.322 34.582,106.806 31.463,107.910 31.463 C 108.317 31.463,108.219 29.986,107.781 29.516 C 107.478 29.191,107.220 29.165,104.279 29.165 L 101.105 29.165 101.105 30.541 M370.520 30.313 C 370.540 31.636,370.321 31.989,369.167 32.501 C 368.284 32.892,368.124 33.090,367.812 34.178 C 367.424 35.530,366.808 36.054,365.575 36.079 C 365.017 36.090,364.700 36.136,364.870 36.180 C 365.781 36.418,365.043 39.597,364.029 39.797 C 363.823 39.838,363.529 40.341,363.166 41.276 C 362.548 42.867,361.901 43.836,361.455 43.836 C 361.161 43.836,361.073 44.007,360.550 45.603 C 360.356 46.193,360.098 46.527,359.553 46.896 C 359.093 47.207,358.780 47.572,358.718 47.868 C 358.496 48.938,357.752 50.141,356.963 50.708 C 356.303 51.181,356.164 51.380,356.164 51.845 C 356.162 53.339,355.135 54.208,353.512 54.087 C 352.134 53.985,352.012 54.104,352.619 54.957 C 353.125 55.668,353.287 57.148,352.892 57.465 C 351.978 58.200,351.591 58.739,351.475 59.437 C 351.221 60.967,350.539 61.687,349.339 61.691 C 348.804 61.692,348.565 61.750,348.710 61.842 C 349.345 62.245,349.154 64.456,348.423 65.144 C 347.988 65.554,347.832 65.589,346.663 65.541 C 345.427 65.490,345.381 65.503,345.382 65.896 C 345.382 66.160,345.455 66.260,345.586 66.178 C 345.708 66.104,345.743 66.130,345.673 66.243 C 345.608 66.348,345.709 66.698,345.897 67.021 C 346.618 68.258,346.569 68.794,345.662 69.592 C 345.216 69.984,344.852 70.415,344.853 70.548 C 344.854 70.943,344.264 72.470,344.110 72.470 C 344.032 72.470,343.968 72.576,343.968 72.705 C 343.968 72.835,343.618 73.192,343.190 73.500 C 342.487 74.004,342.398 74.150,342.285 74.988 C 342.008 77.033,341.283 77.725,339.552 77.596 C 338.301 77.503,337.756 77.803,338.732 78.048 C 339.973 78.360,340.002 80.266,338.784 81.534 C 337.981 82.369,337.766 82.728,337.587 83.529 C 337.413 84.306,337.182 84.706,336.454 85.488 C 335.775 86.218,335.459 86.740,335.225 87.520 C 334.825 88.858,334.109 89.616,333.247 89.616 L 332.628 89.616 332.748 90.739 C 332.843 91.627,332.804 91.988,332.564 92.462 C 331.991 93.593,331.836 93.681,330.419 93.681 C 329.072 93.681,328.803 93.869,329.358 94.423 C 330.361 95.426,330.109 97.746,328.998 97.746 C 328.798 97.746,328.581 98.246,328.250 99.470 C 328.138 99.883,327.982 100.221,327.905 100.221 C 327.827 100.221,327.673 100.420,327.562 100.663 C 327.371 101.082,327.286 101.105,325.907 101.105 C 324.777 101.105,324.501 101.152,324.666 101.317 C 324.783 101.433,324.878 101.981,324.878 102.532 C 324.878 103.806,324.657 104.018,323.512 103.839 C 323.048 103.767,322.351 103.699,321.962 103.688 L 321.255 103.668 321.285 104.817 L 321.315 105.966 320.613 106.266 C 319.760 106.630,319.507 106.551,319.154 105.806 C 318.890 105.251,318.252 104.817,317.698 104.817 C 316.661 104.817,316.230 103.563,316.836 102.308 C 317.428 101.081,317.369 100.948,316.562 101.696 C 315.200 102.959,315.849 105.524,317.532 105.524 C 317.642 105.524,317.884 105.782,318.070 106.098 C 318.675 107.129,319.562 107.725,320.255 107.568 C 321.600 107.263,322.718 106.678,323.127 106.068 C 323.644 105.294,323.798 105.176,324.298 105.173 C 324.851 105.169,325.874 104.212,326.001 103.581 C 326.070 103.232,326.305 102.932,326.686 102.708 C 327.857 102.019,328.599 100.881,328.847 99.397 C 328.946 98.805,329.070 98.621,329.491 98.447 C 330.383 98.077,330.888 97.310,330.888 96.323 C 330.888 95.553,330.959 95.393,331.526 94.878 C 331.878 94.560,332.356 94.124,332.589 93.909 C 333.100 93.437,333.363 92.797,333.363 92.021 C 333.363 91.430,333.765 90.923,334.556 90.515 C 334.775 90.402,334.954 90.154,334.954 89.963 C 334.954 89.772,335.025 89.616,335.111 89.616 C 335.331 89.616,335.837 88.295,335.840 87.712 C 335.844 87.099,335.959 86.948,336.733 86.542 C 337.428 86.178,338.321 84.257,338.315 83.139 C 338.312 82.654,338.402 82.547,339.029 82.297 C 339.808 81.985,340.094 81.506,340.467 79.890 C 340.579 79.406,340.759 79.010,340.868 79.010 C 341.356 79.010,342.324 77.488,342.629 76.241 C 342.891 75.169,343.012 74.945,343.418 74.776 C 344.127 74.483,344.794 73.321,345.038 71.957 C 345.242 70.814,345.281 70.751,345.995 70.371 C 346.913 69.885,347.383 69.014,347.233 68.079 C 347.015 66.716,346.980 66.649,346.396 66.481 C 345.872 66.330,345.910 66.314,346.846 66.300 C 348.708 66.271,349.624 65.540,349.624 64.084 C 349.624 63.550,349.735 63.378,350.376 62.915 C 351.226 62.301,351.822 61.268,352.002 60.097 C 352.196 58.838,352.262 58.714,352.796 58.597 C 353.618 58.416,353.912 57.910,354.299 56.008 C 354.357 55.722,354.731 55.285,355.268 54.875 C 356.012 54.308,356.190 54.050,356.458 53.158 C 356.635 52.566,356.940 51.981,357.157 51.816 C 357.369 51.656,357.745 51.378,357.992 51.198 C 358.314 50.964,358.582 50.428,358.938 49.303 C 359.345 48.017,359.514 47.705,359.876 47.572 C 360.549 47.324,361.114 46.701,361.114 46.206 C 361.114 45.536,361.597 44.738,362.076 44.618 C 362.937 44.402,363.728 42.571,363.761 40.720 C 363.763 40.611,363.997 40.475,364.280 40.418 C 364.992 40.276,365.657 39.555,365.899 38.664 C 366.011 38.252,366.129 37.822,366.160 37.708 C 366.191 37.595,366.436 37.396,366.704 37.267 C 367.347 36.955,368.105 35.680,368.378 34.449 L 368.597 33.458 369.495 33.231 C 369.989 33.106,370.550 32.896,370.742 32.763 C 371.230 32.427,373.487 32.432,373.487 32.769 C 373.487 32.905,373.602 33.060,373.742 33.114 C 374.012 33.217,374.265 34.022,374.448 35.363 C 374.636 36.730,375.372 37.362,376.618 37.227 C 377.883 37.089,377.807 37.217,377.876 35.116 C 377.924 33.655,377.893 33.360,377.708 33.540 C 376.944 34.284,374.194 33.082,374.194 32.003 C 374.194 31.924,374.081 31.766,373.944 31.652 C 373.769 31.507,373.703 31.100,373.723 30.305 L 373.752 29.164 372.127 29.165 L 370.503 29.165 370.520 30.313 M311.906 31.742 C 311.057 33.955,312.595 35.385,316.077 35.620 C 317.826 35.739,318.692 36.150,318.692 36.862 C 318.692 37.184,320.422 38.003,321.101 38.003 C 322.093 38.003,322.550 38.277,322.676 38.949 C 322.808 39.655,323.435 40.268,324.175 40.416 C 324.459 40.473,324.726 40.649,324.767 40.808 C 325.182 42.376,325.364 42.833,325.629 42.975 C 325.800 43.066,325.939 43.259,325.939 43.404 C 325.939 43.548,326.128 43.752,326.359 43.858 C 326.935 44.120,327.137 44.926,327.285 47.548 C 327.431 50.119,327.432 49.733,327.276 53.115 C 327.128 56.311,327.230 56.804,328.053 56.884 L 328.641 56.942 328.218 56.266 C 327.714 55.460,327.654 53.010,328.094 51.166 C 328.255 50.490,328.296 49.909,328.204 49.575 C 327.315 46.333,327.609 43.129,328.795 43.129 C 328.974 43.129,329.121 43.029,329.121 42.908 C 329.121 42.747,328.804 42.703,327.965 42.746 C 326.549 42.819,326.175 42.609,325.618 41.430 C 324.989 40.097,324.956 40.047,324.571 39.852 C 323.987 39.555,323.620 39.199,323.180 38.502 C 322.846 37.973,322.570 37.786,321.745 37.532 C 320.710 37.214,319.408 36.324,319.402 35.932 C 319.398 35.623,318.808 35.352,318.129 35.347 C 317.095 35.339,314.630 34.692,314.001 34.264 C 313.408 33.860,313.392 33.817,313.391 32.656 L 313.389 31.463 312.701 31.463 C 312.237 31.463,311.978 31.554,311.906 31.742 M33.380 31.860 C 32.379 32.675,31.816 35.945,31.816 40.945 C 31.816 43.877,32.198 45.031,33.262 45.309 C 33.581 45.393,33.590 45.372,33.355 45.105 C 32.318 43.923,31.931 39.925,32.616 37.467 C 32.764 36.935,32.961 35.964,33.053 35.309 C 33.307 33.496,33.573 33.198,34.882 33.251 C 36.067 33.299,36.161 33.214,35.980 32.249 L 35.866 31.639 34.758 31.639 C 34.135 31.639,33.533 31.736,33.380 31.860 M310.051 32.058 C 309.269 33.000,310.062 32.973,286.036 32.877 C 265.109 32.793,263.897 32.805,263.897 33.095 C 263.897 33.384,265.155 33.402,286.250 33.406 C 310.642 33.410,309.664 33.450,310.212 32.426 C 310.476 31.934,310.364 31.680,310.051 32.058 M140.250 33.045 C 139.435 33.375,139.101 34.967,139.696 35.686 C 140.085 36.156,139.993 37.946,139.568 38.152 C 139.140 38.359,142.899 38.435,144.274 38.247 L 145.072 38.138 145.094 37.160 C 145.129 35.666,144.152 34.998,141.935 34.998 C 141.190 34.998,140.676 34.915,140.569 34.777 C 140.267 34.392,140.196 33.780,140.430 33.586 C 140.652 33.402,172.822 33.462,176.447 33.653 C 177.840 33.726,177.994 33.703,177.994 33.421 C 177.994 33.142,177.724 33.096,175.475 32.993 C 171.828 32.826,140.677 32.872,140.250 33.045 M191.516 33.042 C 190.998 33.256,190.618 33.755,190.362 34.556 C 189.929 35.913,189.749 36.058,188.503 36.058 C 187.590 36.058,187.373 36.002,187.307 35.749 C 187.263 35.579,187.226 36.036,187.226 36.765 C 187.226 37.494,187.259 37.972,187.298 37.826 C 187.354 37.621,187.592 37.575,188.347 37.622 C 190.171 37.736,190.904 37.096,191.157 35.168 C 191.227 34.637,191.398 34.023,191.537 33.805 L 191.789 33.407 224.458 33.407 C 247.723 33.407,257.288 33.463,257.685 33.601 C 258.344 33.831,258.458 35.225,257.980 37.207 C 257.672 38.481,257.608 45.635,257.892 46.964 C 257.992 47.431,258.092 48.879,258.113 50.183 L 258.153 52.554 257.612 52.777 C 256.996 53.032,255.590 52.557,255.590 52.094 C 255.590 51.479,254.807 51.083,253.590 51.083 L 252.408 51.083 252.408 51.966 L 252.408 52.850 253.695 52.850 C 254.534 52.850,255.109 52.940,255.348 53.107 C 256.467 53.891,258.038 53.856,259.038 53.026 C 259.190 52.899,259.736 52.843,260.444 52.879 L 261.600 52.939 261.580 50.022 C 261.568 48.418,261.524 47.234,261.482 47.392 C 261.418 47.633,259.302 47.911,259.302 47.678 C 259.302 47.652,259.143 47.196,258.948 46.664 C 258.331 44.975,258.502 38.233,259.185 37.293 C 259.439 36.944,260.980 36.825,261.344 37.127 C 261.565 37.310,261.600 37.063,261.600 35.329 L 261.600 33.319 260.495 33.413 C 259.697 33.481,259.243 33.432,258.860 33.236 C 258.267 32.933,192.240 32.743,191.516 33.042 M173.767 34.742 C 173.047 35.180,172.275 35.735,172.052 35.975 C 171.718 36.336,171.481 36.412,170.694 36.412 C 169.373 36.412,167.546 37.322,167.323 38.091 C 167.073 38.955,166.735 39.488,166.259 39.770 C 165.129 40.439,164.657 41.689,164.391 44.725 C 164.251 46.314,164.136 46.843,163.855 47.192 C 162.804 48.494,162.571 49.032,162.329 50.716 C 161.965 53.250,162.253 54.265,163.412 54.536 C 163.884 54.646,163.908 54.633,163.631 54.418 C 162.502 53.538,162.615 50.705,163.837 49.279 C 164.225 48.826,166.088 48.820,166.206 49.271 C 166.250 49.441,166.296 49.230,166.307 48.802 C 166.326 48.105,166.252 47.953,165.599 47.351 L 164.871 46.678 164.952 45.036 C 165.097 42.067,165.819 41.079,167.749 41.211 L 168.653 41.273 168.548 40.742 C 168.175 38.864,168.200 38.538,168.758 37.992 C 170.131 36.650,172.907 36.561,173.165 37.851 C 173.254 38.297,173.341 38.356,173.906 38.351 C 174.427 38.346,174.489 38.312,174.238 38.165 C 174.003 38.029,173.928 37.753,173.928 37.022 C 173.928 35.698,174.912 35.006,176.801 35.001 L 177.994 34.998 177.994 34.468 L 177.994 33.937 176.536 33.941 C 175.121 33.945,175.038 33.969,173.767 34.742 M265.012 34.630 C 266.077 35.808,266.162 36.027,266.033 37.256 L 265.916 38.365 268.478 38.316 C 271.039 38.268,271.041 38.267,271.143 37.832 C 271.350 36.954,273.366 36.839,274.186 37.659 C 274.698 38.170,274.720 38.251,274.610 39.185 C 274.468 40.392,274.450 40.422,273.794 40.566 C 273.185 40.700,272.998 41.751,273.545 41.961 C 274.726 42.414,276.454 41.858,276.660 40.958 C 276.721 40.693,276.034 39.770,275.776 39.770 C 275.546 39.770,275.210 38.804,275.210 38.139 C 275.210 37.430,274.397 36.646,273.513 36.503 C 272.222 36.294,272.028 36.228,272.028 36.000 C 272.028 35.285,271.062 34.998,268.656 34.998 L 266.330 34.998 265.726 34.468 C 264.763 33.622,264.214 33.746,265.012 34.630 M207.746 36.593 C 204.201 36.804,202.755 37.181,202.257 38.023 C 201.914 38.606,201.797 38.648,199.927 38.877 C 198.492 39.053,197.855 39.400,197.452 40.228 C 197.123 40.902,196.792 41.140,195.939 41.315 C 195.314 41.443,195.182 41.566,194.758 42.415 C 194.468 42.996,194.084 43.471,193.782 43.625 C 192.937 44.057,192.728 44.335,192.483 45.359 C 192.303 46.110,192.105 46.460,191.660 46.815 C 191.337 47.072,191.074 47.384,191.074 47.509 C 191.074 47.633,190.962 47.778,190.825 47.831 C 190.478 47.964,190.247 48.654,190.038 50.178 C 189.899 51.185,189.756 51.590,189.406 51.955 C 188.921 52.461,188.740 54.112,189.142 54.360 C 189.296 54.455,190.759 54.479,191.516 54.399 C 191.892 54.359,191.824 52.355,191.439 52.150 C 190.865 51.842,190.477 50.279,190.810 49.613 C 190.955 49.322,191.074 49.010,191.074 48.919 C 191.074 48.238,193.885 47.670,194.138 48.299 C 194.187 48.420,194.234 48.346,194.241 48.134 C 194.250 47.892,194.120 47.705,193.892 47.633 C 193.470 47.499,193.194 46.881,193.197 46.078 C 193.201 45.099,193.384 44.763,194.187 44.255 C 194.782 43.879,195.013 43.599,195.151 43.083 C 195.351 42.343,195.985 41.842,197.112 41.533 C 197.564 41.409,197.869 41.169,198.125 40.735 C 198.629 39.880,200.338 39.168,201.812 39.199 C 203.585 39.235,203.447 39.172,203.447 39.947 C 203.447 40.568,203.495 40.652,203.844 40.633 C 204.144 40.618,204.166 40.593,203.933 40.532 C 203.416 40.397,203.490 38.481,204.021 38.224 C 205.308 37.603,209.121 37.138,213.045 37.126 C 216.312 37.115,216.651 37.454,216.475 40.561 C 216.388 42.103,216.286 42.573,215.827 43.555 L 215.283 44.719 214.049 44.719 L 212.815 44.719 212.815 45.559 L 212.816 46.399 213.977 46.455 C 216.210 46.563,217.234 44.486,217.234 39.844 C 217.234 36.381,216.359 36.082,207.746 36.593 M235.882 36.499 C 235.784 36.531,235.479 36.608,235.203 36.669 C 234.660 36.789,233.215 38.195,232.471 39.328 C 231.460 40.867,231.720 44.600,232.876 45.149 C 233.708 45.544,233.803 45.495,233.284 44.940 C 231.977 43.542,232.391 40.241,234.020 39.068 C 234.217 38.925,234.379 38.682,234.379 38.527 C 234.379 37.346,235.862 37.010,239.793 37.302 C 244.245 37.633,244.683 37.906,244.252 40.080 C 244.100 40.846,245.285 40.972,245.681 40.232 C 246.272 39.127,248.468 39.388,249.061 40.633 C 249.213 40.952,249.596 41.338,249.911 41.491 C 250.803 41.923,251.525 42.683,251.525 43.191 C 251.525 43.789,251.878 44.543,252.159 44.543 C 253.507 44.543,254.126 48.153,253.007 49.484 C 252.494 50.092,252.554 50.137,253.366 49.752 C 254.886 49.031,254.467 44.596,252.803 43.797 C 252.506 43.655,252.263 43.341,252.149 42.952 C 251.864 41.987,251.378 41.395,250.760 41.263 C 250.042 41.110,249.757 40.876,249.757 40.438 C 249.757 39.671,248.649 38.886,247.566 38.886 C 246.648 38.886,246.522 38.834,245.824 38.164 C 244.636 37.021,243.881 36.777,240.935 36.586 C 238.390 36.421,236.226 36.384,235.882 36.499 M295.219 36.609 C 292.650 37.037,291.912 38.521,293.455 40.162 C 294.128 40.877,294.260 40.627,293.854 39.407 C 293.571 38.554,293.572 38.495,293.881 38.154 C 295.315 36.569,303.970 36.940,304.612 38.613 C 304.670 38.763,304.899 38.886,305.120 38.886 C 305.638 38.884,307.203 39.442,307.203 39.628 C 307.203 39.706,307.294 39.770,307.405 39.770 C 307.643 39.770,309.677 41.867,309.677 42.112 C 309.677 42.650,310.287 44.225,310.661 44.656 C 311.276 45.363,311.299 45.534,311.236 48.889 C 311.163 52.775,311.101 52.919,309.468 52.991 C 308.361 53.039,308.285 53.018,308.212 52.637 C 308.170 52.414,308.124 52.766,308.111 53.420 C 308.087 54.570,308.104 54.617,308.614 54.881 C 310.201 55.702,309.879 58.636,308.080 59.748 C 307.436 60.146,307.380 60.246,307.271 61.212 C 307.146 62.319,306.738 62.886,305.780 63.282 C 305.510 63.394,305.153 63.792,304.940 64.217 C 304.578 64.941,304.141 65.260,302.828 65.756 C 302.512 65.875,302.254 66.066,302.254 66.179 C 302.254 67.754,297.139 68.372,296.691 66.851 C 296.359 65.721,295.845 66.157,295.822 67.589 C 295.807 68.484,295.732 68.840,295.537 68.932 C 295.391 69.001,295.094 69.149,294.876 69.261 C 294.659 69.373,294.016 69.465,293.447 69.465 C 292.878 69.465,291.624 69.584,290.661 69.729 C 287.676 70.179,286.875 70.114,286.094 69.355 C 285.623 68.898,285.489 68.660,285.625 68.524 C 285.730 68.420,285.815 68.209,285.815 68.055 C 285.815 67.902,286.124 67.463,286.501 67.079 L 287.186 66.381 286.773 65.838 C 285.996 64.820,285.833 64.210,286.092 63.297 C 286.441 62.067,286.772 61.231,287.036 60.913 C 287.331 60.557,289.271 60.504,289.410 60.848 C 289.459 60.970,289.506 60.720,289.513 60.293 C 289.525 59.612,289.448 59.448,288.888 58.964 L 288.249 58.411 288.265 56.752 C 288.294 53.696,288.974 52.497,290.678 52.497 L 291.825 52.497 291.825 51.981 C 291.825 50.998,291.708 50.906,290.463 50.906 C 288.526 50.906,287.823 52.267,287.634 56.385 C 287.543 58.366,287.526 58.434,286.978 59.037 C 286.057 60.048,285.977 60.201,285.702 61.457 C 285.139 64.029,285.410 65.532,286.542 66.117 L 287.106 66.409 286.593 66.536 C 286.029 66.675,285.108 67.462,285.108 67.804 C 285.108 67.924,284.896 68.177,284.636 68.366 L 284.163 68.710 284.636 69.020 C 284.896 69.190,285.108 69.430,285.108 69.554 C 285.108 70.432,286.767 70.715,290.748 70.516 C 295.628 70.272,296.328 70.130,297.237 69.201 C 297.955 68.468,297.986 68.456,299.447 68.365 C 301.358 68.245,302.484 67.748,302.961 66.812 C 303.308 66.133,303.601 65.930,304.236 65.930 C 304.684 65.930,305.435 65.089,305.435 64.588 C 305.435 64.107,305.934 63.665,306.634 63.525 C 307.254 63.401,307.910 62.337,307.910 61.455 C 307.910 61.157,308.006 60.981,308.169 60.981 C 309.179 60.981,310.053 59.118,310.276 56.488 C 310.348 55.646,310.452 55.370,310.811 55.074 C 311.935 54.148,312.148 53.153,312.150 48.823 C 312.152 44.396,312.056 44.011,310.779 43.327 C 310.514 43.185,310.384 42.952,310.384 42.617 C 310.384 40.825,308.826 39.138,306.779 38.714 C 305.965 38.544,305.737 38.415,305.521 37.998 C 304.848 36.695,299.241 35.940,295.219 36.609 M146.412 37.246 C 145.774 37.326,145.570 37.525,145.400 38.238 C 145.316 38.586,145.340 38.702,145.477 38.617 C 145.800 38.418,147.791 38.508,148.063 38.734 C 148.202 38.849,148.505 39.348,148.738 39.843 L 149.160 40.742 148.759 42.869 C 148.217 45.739,148.048 45.979,146.602 45.926 C 145.766 45.895,145.464 45.815,145.409 45.611 C 145.368 45.461,145.326 45.818,145.314 46.404 L 145.294 47.470 146.550 47.517 C 148.725 47.598,149.217 46.868,149.508 43.129 C 149.825 39.036,148.987 36.889,147.172 37.147 C 147.063 37.163,146.720 37.207,146.412 37.246 M187.755 38.842 C 188.698 39.917,188.796 40.890,188.134 42.568 C 187.491 44.196,187.499 44.189,186.103 44.189 L 184.887 44.189 184.891 44.764 C 184.895 45.232,185.000 45.389,185.462 45.617 C 186.616 46.186,186.704 48.846,185.658 51.538 C 185.067 53.061,185.068 54.618,185.661 54.618 C 186.453 54.618,186.474 54.512,186.805 49.001 C 186.966 46.303,186.902 46.490,188.095 45.238 C 188.759 44.541,189.423 41.214,189.122 40.097 C 188.908 39.301,188.251 38.533,187.784 38.533 C 187.513 38.533,187.510 38.563,187.755 38.842 M376.899 38.798 C 375.849 39.533,375.732 41.835,376.458 47.480 C 376.877 50.738,377.087 51.058,378.813 51.073 C 380.167 51.084,380.197 51.045,380.201 49.237 C 380.203 48.355,380.168 48.235,379.982 48.487 C 379.562 49.057,377.867 48.814,377.715 48.162 C 377.647 47.873,377.386 46.761,377.134 45.692 C 376.365 42.423,376.510 38.886,377.413 38.886 C 377.490 38.886,377.552 38.807,377.552 38.710 C 377.552 38.461,377.339 38.490,376.899 38.798 M291.337 43.006 C 289.760 44.609,289.525 48.892,290.969 49.745 C 291.642 50.143,291.826 49.969,291.310 49.420 C 290.496 48.553,290.529 46.385,291.381 44.861 L 291.835 44.048 292.935 44.055 C 294.118 44.062,294.303 43.870,294.056 42.887 C 293.879 42.181,292.072 42.261,291.337 43.006 M273.986 43.582 C 274.894 44.543,274.886 47.329,273.970 49.459 L 273.576 50.376 272.272 50.376 L 270.968 50.376 270.968 51.044 L 270.968 51.712 272.206 51.763 C 274.546 51.858,275.210 50.648,275.210 46.288 C 275.210 44.174,275.207 44.159,274.693 43.645 C 274.014 42.966,273.348 42.907,273.986 43.582 M109.637 45.641 C 108.961 45.967,108.529 47.137,108.529 48.638 C 108.529 51.729,109.018 56.117,109.472 57.091 C 109.755 57.698,110.492 58.515,110.662 58.410 C 110.739 58.363,111.197 58.315,111.680 58.304 C 112.509 58.285,112.565 58.254,112.665 57.755 C 112.833 56.912,112.780 55.335,112.598 55.784 C 112.348 56.404,110.551 56.343,110.224 55.705 C 109.812 54.898,109.244 51.069,109.217 48.910 L 109.191 46.860 109.758 46.143 C 110.342 45.406,110.319 45.311,109.637 45.641 M230.759 46.660 C 229.993 47.506,229.304 50.986,229.464 53.197 C 229.554 54.442,229.542 54.426,230.424 54.562 L 231.109 54.668 230.736 54.245 C 229.887 53.283,229.945 51.093,230.880 48.829 L 231.263 47.901 232.364 47.901 C 233.077 47.901,233.499 47.979,233.561 48.122 C 233.613 48.243,233.639 47.905,233.620 47.371 L 233.584 46.399 232.336 46.347 C 231.263 46.303,231.042 46.347,230.759 46.660 M13.343 48.107 C 14.219 48.797,14.317 49.323,14.317 53.336 C 14.317 56.167,14.253 57.238,14.037 57.982 C 13.862 58.587,13.711 60.103,13.632 62.042 C 13.469 66.063,13.341 66.348,11.734 66.238 L 10.652 66.165 10.541 67.488 C 10.386 69.317,10.439 73.968,10.605 73.177 C 10.677 72.837,10.746 72.646,10.759 72.752 C 10.791 73.017,12.704 73.063,13.014 72.805 C 13.530 72.377,13.964 71.030,13.967 69.841 C 13.969 69.197,14.051 68.153,14.150 67.521 C 14.369 66.109,14.666 59.877,14.789 54.111 C 14.895 49.119,14.770 48.426,13.683 47.971 C 12.861 47.628,12.776 47.662,13.343 48.107 M145.647 47.826 C 147.048 48.269,147.147 51.525,145.826 53.690 C 145.443 54.317,144.760 54.441,143.569 54.100 L 142.996 53.935 143.017 55.116 C 143.028 55.766,143.073 56.159,143.117 55.991 C 143.186 55.728,143.355 55.699,144.335 55.784 L 145.473 55.883 146.152 55.154 C 146.988 54.258,147.327 52.793,147.327 50.075 C 147.327 48.051,147.288 47.976,146.178 47.840 C 145.740 47.787,145.502 47.780,145.647 47.826 M213.410 48.316 C 214.271 49.487,214.247 51.098,213.343 52.820 L 212.942 53.585 211.774 53.527 L 210.605 53.469 210.551 54.033 C 210.505 54.503,210.581 54.642,211.002 54.860 C 211.967 55.359,212.256 56.685,211.856 58.772 C 211.140 62.498,211.101 62.558,209.412 62.566 L 208.219 62.572 208.219 63.108 C 208.219 63.716,208.296 63.758,209.623 63.876 C 211.544 64.047,212.195 62.981,212.364 59.390 C 212.519 56.075,212.587 55.738,213.243 54.995 C 215.188 52.794,215.243 48.346,213.332 47.846 C 213.034 47.768,213.042 47.816,213.410 48.316 M31.071 51.392 C 30.553 51.986,30.402 52.481,30.402 53.591 C 30.402 54.206,30.314 54.986,30.206 55.326 C 30.025 55.897,29.921 57.601,29.592 65.413 C 29.424 69.399,29.684 70.440,30.932 70.782 C 31.189 70.852,31.285 70.840,31.161 70.753 C 30.064 69.982,29.736 65.935,30.500 62.605 C 30.640 61.991,30.756 60.716,30.756 59.770 C 30.756 58.528,30.850 57.783,31.095 57.086 L 31.434 56.120 32.496 56.068 C 33.539 56.017,33.560 56.025,33.633 56.510 C 33.674 56.782,33.719 55.920,33.734 54.596 C 33.773 51.050,33.785 51.083,32.440 51.083 C 31.614 51.083,31.274 51.159,31.071 51.392 M93.749 52.235 C 93.472 52.492,93.161 52.755,93.059 52.820 C 92.669 53.068,92.090 53.974,92.090 54.337 C 92.090 54.608,91.880 54.814,91.348 55.064 C 90.489 55.468,90.451 55.529,89.972 57.205 C 89.706 58.138,89.521 58.490,89.261 58.558 C 89.068 58.608,88.859 58.784,88.795 58.949 C 88.732 59.114,88.505 59.424,88.292 59.637 C 88.047 59.882,87.860 60.353,87.786 60.908 C 87.652 61.917,87.265 62.572,86.801 62.572 C 86.424 62.572,85.550 63.761,85.550 64.275 C 85.550 65.622,85.155 66.602,84.492 66.901 C 83.681 67.267,83.076 68.267,83.076 69.241 C 83.076 69.868,82.969 70.038,82.031 70.897 C 81.073 71.774,80.967 71.947,80.755 72.974 C 80.553 73.948,80.438 74.155,79.863 74.563 C 79.082 75.118,78.340 76.612,78.182 77.948 C 78.098 78.660,78.001 78.858,77.704 78.933 C 77.499 78.984,77.162 79.318,76.956 79.674 L 76.581 80.321 76.956 80.901 C 77.162 81.220,77.414 81.481,77.515 81.483 C 77.616 81.484,78.010 81.644,78.392 81.838 C 79.059 82.178,79.434 82.192,88.356 82.192 L 97.627 82.192 98.424 81.725 C 99.861 80.883,100.062 80.535,100.005 78.986 C 99.931 76.991,99.321 76.420,97.562 76.698 C 96.777 76.822,96.697 76.802,96.630 76.464 C 96.590 76.260,96.546 76.513,96.533 77.026 C 96.510 77.929,96.526 77.962,97.043 78.065 C 98.308 78.318,99.021 80.096,98.162 80.856 C 97.269 81.647,96.824 81.681,87.961 81.625 L 79.598 81.573 78.862 81.063 C 78.106 80.539,77.971 80.160,78.314 79.521 C 78.417 79.328,78.643 78.637,78.816 77.986 C 79.212 76.491,79.900 75.652,80.729 75.652 L 81.308 75.652 81.308 74.266 C 81.308 72.233,81.868 71.586,83.628 71.586 C 84.993 71.586,85.126 71.424,84.476 70.546 C 83.662 69.444,84.082 67.521,85.138 67.521 C 85.264 67.521,85.414 67.302,85.472 67.035 C 85.829 65.390,86.365 64.267,87.078 63.671 C 87.615 63.222,87.875 62.833,88.036 62.239 C 88.581 60.221,89.240 59.565,90.676 59.608 C 91.211 59.624,91.707 59.720,91.778 59.823 C 91.855 59.933,91.909 59.883,91.911 59.700 C 91.912 59.529,91.837 59.390,91.744 59.390 C 90.301 59.390,90.488 56.512,91.999 55.480 C 92.337 55.249,92.700 54.851,92.805 54.597 C 93.533 52.845,94.827 52.778,95.344 54.467 C 96.001 56.613,95.814 58.104,94.774 59.007 L 94.300 59.419 94.741 59.302 C 95.963 58.977,96.063 58.762,96.117 56.324 C 96.167 54.071,96.015 53.348,95.373 52.770 C 95.260 52.668,94.962 52.401,94.710 52.176 L 94.253 51.768 93.749 52.235 M363.376 52.252 C 363.041 52.490,362.454 52.729,362.073 52.782 C 360.658 52.979,360.035 53.679,359.825 55.310 C 359.741 55.970,359.576 56.229,358.760 56.989 C 358.091 57.612,357.755 58.078,357.665 58.506 C 357.438 59.587,357.026 60.434,356.671 60.546 C 356.179 60.703,355.547 61.790,355.125 63.207 C 354.813 64.254,354.674 64.477,354.155 64.756 C 353.439 65.142,353.112 65.748,352.699 67.458 C 352.427 68.585,352.332 68.750,351.813 68.998 C 351.060 69.357,350.662 69.984,350.488 71.083 C 350.372 71.815,350.211 72.099,349.566 72.706 C 348.637 73.582,348.244 74.299,348.094 75.394 C 347.996 76.103,347.904 76.240,347.354 76.502 C 345.643 77.314,345.316 81.268,346.899 81.989 C 347.648 82.330,366.458 82.271,367.127 81.925 C 368.384 81.275,368.733 75.504,367.736 71.849 C 367.577 71.267,367.324 70.275,367.173 69.644 C 366.845 68.274,366.613 68.064,365.414 68.057 C 363.934 68.048,363.942 68.038,363.942 69.926 L 363.942 71.586 365.189 71.586 L 366.436 71.586 366.808 72.426 C 367.259 73.445,367.552 75.773,367.559 78.398 L 367.565 80.349 366.993 80.961 L 366.421 81.573 356.960 81.573 L 347.499 81.573 346.971 81.008 C 346.353 80.347,346.349 80.312,346.751 79.037 C 346.955 78.389,347.304 77.812,347.788 77.320 C 348.333 76.768,348.574 76.339,348.739 75.630 C 349.095 74.098,349.737 73.554,351.147 73.590 C 352.306 73.620,352.612 73.409,351.878 73.087 C 351.070 72.732,351.014 70.671,351.794 70.001 C 352.011 69.815,352.354 69.519,352.558 69.343 C 352.762 69.167,352.983 68.735,353.048 68.383 C 353.235 67.378,353.912 66.199,354.718 65.475 C 355.261 64.988,355.457 64.676,355.457 64.303 C 355.457 63.158,356.386 61.968,357.431 61.774 L 358.080 61.654 357.984 60.724 C 357.887 59.785,358.170 58.506,358.476 58.506 C 358.566 58.506,358.639 58.390,358.639 58.247 C 358.639 57.828,359.245 57.623,360.483 57.623 C 361.685 57.623,361.876 57.479,361.404 56.930 C 360.360 55.716,360.834 53.288,362.044 53.655 C 362.616 53.829,363.588 54.596,363.588 54.873 C 363.588 55.003,363.710 55.157,363.858 55.214 C 365.316 55.773,365.889 64.685,364.544 65.886 C 364.034 66.342,364.046 66.352,364.790 66.093 C 366.183 65.607,366.518 59.429,365.375 55.325 C 365.171 54.596,364.886 53.550,364.739 53.002 C 364.421 51.809,364.183 51.678,363.376 52.252 M379.496 52.630 C 378.235 53.260,378.069 54.316,378.449 59.292 C 378.856 64.620,379.735 65.959,382.280 65.130 C 382.810 64.957,382.555 62.925,382.015 63.014 C 381.748 63.059,381.234 63.127,380.874 63.166 L 380.218 63.238 379.864 62.154 C 378.630 58.376,378.605 53.715,379.813 52.725 C 380.395 52.248,380.311 52.222,379.496 52.630 M271.510 52.915 C 272.431 53.872,272.434 56.394,271.516 57.637 C 271.311 57.913,271.144 58.202,271.144 58.280 C 271.144 58.358,270.588 58.380,269.907 58.330 L 268.670 58.238 268.670 58.814 C 268.670 59.192,268.756 59.390,268.919 59.390 C 269.977 59.390,270.448 61.362,269.917 63.567 C 269.709 64.429,269.504 65.301,269.462 65.504 C 269.256 66.485,268.699 66.846,267.489 66.784 L 266.356 66.726 266.408 67.521 L 266.460 68.316 267.861 68.316 L 269.261 68.316 269.737 67.453 C 270.140 66.719,270.244 66.225,270.422 64.183 C 270.758 60.330,270.754 60.349,271.368 59.708 C 273.340 57.646,273.388 52.524,271.435 52.501 C 271.138 52.497,271.144 52.535,271.510 52.915 M229.445 54.984 C 228.020 55.180,227.481 56.593,227.147 61.013 C 226.986 63.151,226.954 63.277,226.466 63.753 C 225.454 64.738,225.109 65.913,224.917 69.023 C 224.727 72.118,224.659 72.471,224.157 73.004 C 222.964 74.269,222.980 74.232,222.724 76.324 C 222.477 78.341,222.707 79.398,223.499 79.888 C 224.217 80.332,224.451 80.350,224.073 79.932 C 223.916 79.758,223.626 79.252,223.429 78.807 L 223.072 77.998 223.429 76.632 C 223.956 74.620,224.297 74.238,225.562 74.238 C 226.379 74.238,226.592 74.298,226.657 74.547 C 226.701 74.717,226.747 74.520,226.758 74.110 C 226.776 73.462,226.713 73.329,226.286 73.108 C 224.965 72.425,225.135 67.876,226.567 65.621 C 226.900 65.097,228.594 65.032,228.886 65.532 C 229.025 65.772,229.067 65.640,229.071 64.944 C 229.076 64.157,229.020 64.015,228.621 63.802 C 227.429 63.164,227.611 58.380,228.885 56.845 C 229.179 56.491,231.119 56.440,231.257 56.783 C 231.382 57.093,231.392 55.849,231.268 55.387 C 231.149 54.945,230.602 54.824,229.445 54.984 M161.158 55.812 C 160.890 55.978,160.672 56.202,160.672 56.311 C 160.672 56.419,160.538 56.776,160.375 57.103 C 160.061 57.731,159.821 59.808,159.800 62.073 C 159.786 63.624,159.997 63.988,160.905 63.982 L 161.467 63.978 161.085 63.673 C 160.048 62.843,160.112 60.131,161.222 57.937 L 161.644 57.102 162.837 57.097 L 164.030 57.092 164.030 56.297 L 164.030 55.502 162.837 55.506 C 162.027 55.509,161.488 55.608,161.158 55.812 M143.388 57.419 C 144.521 58.765,144.571 59.571,143.655 61.743 L 143.297 62.594 142.042 62.552 L 140.787 62.510 140.732 63.056 C 140.669 63.693,140.834 63.776,142.289 63.841 C 144.012 63.919,144.671 63.026,144.889 60.316 C 145.023 58.644,144.663 57.759,143.637 57.236 L 142.930 56.875 143.388 57.419 M326.372 57.367 C 325.668 57.714,325.302 58.369,325.142 59.567 C 325.004 60.596,324.068 61.864,323.446 61.865 C 323.171 61.865,322.227 62.849,322.227 63.135 C 322.227 63.421,321.447 64.163,321.145 64.163 C 320.458 64.163,318.819 65.205,318.400 65.908 C 318.051 66.493,317.862 66.626,317.233 66.729 C 316.287 66.883,314.842 67.651,314.491 68.187 C 314.061 68.843,313.590 68.996,311.622 69.119 C 309.514 69.250,308.182 69.709,307.475 70.549 C 306.929 71.198,306.547 71.334,304.817 71.494 C 301.020 71.845,300.954 74.534,304.726 75.189 C 306.253 75.454,306.269 75.464,307.098 76.608 C 307.283 76.864,307.640 77.124,307.890 77.187 C 309.006 77.467,310.337 78.292,310.566 78.845 C 310.693 79.151,311.298 79.916,311.910 80.543 C 312.663 81.315,313.054 81.867,313.116 82.248 C 313.167 82.557,313.331 83.765,313.481 84.932 C 313.632 86.098,313.831 87.633,313.925 88.341 C 314.019 89.050,314.096 90.666,314.096 91.932 C 314.096 95.098,314.382 95.580,316.199 95.478 C 317.513 95.404,317.449 95.637,317.452 90.897 L 317.455 87.141 316.309 87.141 L 315.164 87.141 314.807 86.441 C 314.611 86.056,314.447 85.599,314.444 85.425 C 314.441 85.251,314.284 84.671,314.096 84.136 C 313.475 82.371,313.711 80.770,314.639 80.446 C 315.470 80.157,315.239 79.978,314.116 80.041 C 312.870 80.112,311.268 79.338,311.268 78.666 C 311.268 78.187,310.647 77.600,309.756 77.239 C 309.227 77.024,308.794 76.778,308.794 76.692 C 308.794 76.606,308.691 76.536,308.566 76.536 C 308.441 76.536,308.039 76.178,307.673 75.740 C 307.079 75.029,306.930 74.945,306.266 74.945 C 304.552 74.944,302.604 73.556,303.365 72.877 C 305.018 71.402,308.087 71.507,308.087 73.039 C 308.087 73.288,308.169 73.360,308.366 73.284 C 308.520 73.225,308.679 73.177,308.720 73.177 C 308.760 73.177,308.794 72.620,308.794 71.940 C 308.794 71.112,308.862 70.703,309.001 70.703 C 309.115 70.703,309.335 70.588,309.490 70.447 C 310.655 69.393,314.791 69.396,315.056 70.450 C 315.263 71.276,315.510 70.869,315.520 69.686 C 315.532 68.247,315.927 67.820,317.652 67.386 C 318.384 67.202,318.805 66.985,319.011 66.688 C 319.569 65.886,320.423 65.198,321.488 64.694 C 322.313 64.304,322.619 64.048,322.858 63.544 C 323.331 62.546,324.276 62.042,325.670 62.042 C 326.957 62.042,326.959 62.039,326.477 61.259 C 325.386 59.494,326.026 58.258,327.979 58.359 C 329.198 58.422,329.248 58.380,329.009 57.490 C 328.878 57.001,327.266 56.925,326.372 57.367 M111.790 59.590 C 110.857 60.043,110.692 61.340,110.970 66.030 C 111.268 71.044,112.009 72.879,113.767 72.964 L 114.843 73.016 114.954 72.345 C 115.106 71.423,115.092 69.866,114.933 70.093 C 114.724 70.392,112.748 70.310,112.598 69.996 C 112.529 69.850,112.371 69.539,112.248 69.304 C 112.125 69.069,111.918 67.638,111.787 66.122 C 111.656 64.607,111.499 62.999,111.439 62.549 C 111.299 61.507,111.644 60.307,112.232 59.788 C 112.708 59.368,112.468 59.260,111.790 59.590 M94.232 61.953 C 94.243 62.828,94.289 63.405,94.333 63.235 C 94.471 62.707,96.647 62.786,96.771 63.323 C 96.822 63.542,97.059 64.563,97.299 65.592 C 97.972 68.492,97.991 71.499,97.340 72.414 C 96.756 73.234,97.040 73.437,97.757 72.712 C 98.648 71.813,98.743 70.978,98.396 67.125 C 97.845 61.009,97.561 60.369,95.404 60.365 L 94.212 60.362 94.232 61.953 M141.333 64.394 C 142.393 65.286,142.381 68.596,141.312 70.211 L 140.851 70.907 139.625 70.849 L 138.400 70.791 138.400 71.606 L 138.400 72.420 139.779 72.454 C 141.939 72.506,142.680 71.095,142.713 66.869 C 142.733 64.280,142.723 64.255,141.586 64.070 L 140.795 63.941 141.333 64.394 M208.426 64.116 C 209.425 64.575,209.866 65.984,209.528 67.640 C 208.777 71.321,208.582 71.633,207.086 71.555 C 205.913 71.493,205.732 71.692,205.998 72.753 C 206.145 73.336,208.180 73.394,208.742 72.831 C 209.680 71.893,210.338 68.459,210.130 65.589 C 210.038 64.308,209.960 64.211,208.926 64.080 C 208.489 64.025,208.263 64.041,208.426 64.116 M158.730 64.602 C 158.013 65.365,157.637 66.721,157.553 68.847 C 157.442 71.649,157.384 71.885,156.621 72.620 C 154.679 74.492,154.543 79.587,156.420 80.161 L 156.853 80.294 156.393 79.746 C 155.555 78.751,155.551 77.402,156.379 75.254 L 156.839 74.061 157.945 74.061 C 158.665 74.061,159.083 74.138,159.141 74.282 C 159.190 74.403,159.236 74.205,159.244 73.840 C 159.256 73.244,159.212 73.177,158.807 73.177 C 157.903 73.177,157.667 71.844,158.087 69.112 C 158.526 66.263,159.082 65.701,161.246 65.921 C 161.504 65.947,161.555 65.804,161.555 65.058 L 161.555 64.163 160.349 64.163 C 159.293 64.163,159.091 64.217,158.730 64.602 M266.240 65.665 C 266.242 66.054,266.278 66.192,266.320 65.972 C 266.363 65.752,266.361 65.434,266.317 65.265 C 266.273 65.096,266.238 65.276,266.240 65.665 M381.839 66.481 C 380.725 66.803,380.684 67.014,380.781 71.895 C 380.904 78.158,381.547 79.957,383.624 79.858 L 384.711 79.806 384.762 78.524 L 384.814 77.243 383.687 77.243 L 382.559 77.243 382.088 76.312 C 381.723 75.591,381.617 75.124,381.616 74.235 C 381.615 73.605,381.492 72.174,381.343 71.056 C 380.991 68.423,381.190 67.368,382.187 66.601 C 382.639 66.253,382.634 66.252,381.839 66.481 M266.756 68.917 C 267.818 69.761,267.980 71.154,267.281 73.409 C 266.798 74.969,266.568 75.160,265.258 75.091 C 264.496 75.052,264.126 74.953,264.042 74.769 C 263.969 74.605,263.918 74.724,263.910 75.077 C 263.900 75.542,263.966 75.652,264.259 75.652 C 264.458 75.652,264.826 75.857,265.076 76.107 C 265.909 76.940,265.329 82.174,264.285 83.238 C 263.985 83.544,261.937 83.509,261.737 83.194 C 261.664 83.080,261.604 83.368,261.602 83.834 C 261.600 84.593,261.673 84.750,262.307 85.353 C 262.842 85.863,263.019 86.172,263.037 86.628 C 263.095 88.182,262.946 89.091,262.414 90.411 L 261.845 91.825 260.617 91.825 L 259.390 91.825 259.332 92.436 C 259.220 93.614,261.388 94.025,262.361 93.010 C 263.923 91.379,264.224 85.020,262.739 85.020 C 262.501 85.020,262.307 84.960,262.307 84.887 C 262.307 84.814,262.793 84.752,263.386 84.750 C 265.279 84.740,265.675 83.907,266.003 79.237 C 266.176 76.779,266.234 76.536,266.651 76.536 C 266.794 76.536,267.001 76.337,267.111 76.094 C 267.222 75.851,267.367 75.652,267.433 75.652 C 268.081 75.652,268.571 69.902,268.000 68.999 C 267.931 68.891,267.517 68.743,267.079 68.671 L 266.284 68.541 266.756 68.917 M138.984 73.848 C 139.840 74.741,139.793 76.980,138.888 78.399 L 138.489 79.025 137.295 78.974 L 136.102 78.922 136.102 79.580 C 136.102 80.122,136.190 80.284,136.598 80.495 C 137.664 81.046,137.848 82.254,137.256 84.824 C 136.639 87.504,136.516 87.659,134.998 87.666 L 133.805 87.671 133.805 88.290 L 133.805 88.909 134.998 88.906 C 137.280 88.901,137.759 88.207,137.947 84.639 C 138.094 81.845,138.268 81.068,138.861 80.552 C 140.351 79.256,140.872 74.936,139.669 73.861 C 138.897 73.171,138.325 73.160,138.984 73.848 M206.586 73.752 C 207.450 74.674,207.537 75.799,206.907 77.904 C 206.244 80.120,206.122 80.247,204.664 80.247 L 203.447 80.247 203.461 81.175 C 203.468 81.686,203.510 82.019,203.552 81.916 C 203.599 81.804,204.024 81.758,204.613 81.800 C 206.635 81.943,207.115 81.400,207.573 78.447 C 208.143 74.768,207.919 73.354,206.764 73.354 L 206.213 73.354 206.586 73.752 M284.224 73.947 C 283.312 74.245,283.158 74.383,282.782 75.233 C 282.594 75.658,282.366 76.005,282.274 76.005 C 281.546 76.005,280.958 78.094,280.700 81.602 C 280.536 83.828,280.377 84.356,279.710 84.880 C 277.946 86.268,278.015 91.311,279.806 91.828 L 280.247 91.955 279.786 91.448 C 278.873 90.446,278.877 88.256,279.794 86.655 L 280.224 85.904 281.429 85.904 L 282.634 85.904 282.634 85.373 C 282.634 85.013,282.546 84.843,282.360 84.843 C 280.637 84.843,280.788 79.616,282.567 77.673 C 283.012 77.187,283.259 76.701,283.399 76.036 C 283.713 74.537,284.374 74.236,287.333 74.243 C 289.824 74.249,292.146 74.488,292.426 74.768 C 292.523 74.865,292.705 74.945,292.831 74.945 C 293.628 74.945,294.273 77.540,293.548 77.833 C 293.285 77.939,293.857 77.991,295.183 77.980 C 296.864 77.967,297.279 78.237,297.914 79.757 C 298.182 80.398,297.679 81.779,296.985 82.307 C 296.517 82.662,296.976 82.583,297.605 82.199 C 299.298 81.167,298.380 76.989,296.371 76.588 C 296.050 76.523,295.695 76.227,295.368 75.751 C 294.509 74.503,293.752 74.111,291.788 73.896 C 289.583 73.654,285.025 73.685,284.224 73.947 M114.538 75.783 C 114.392 75.819,114.047 76.142,113.771 76.501 L 113.268 77.154 113.344 80.159 C 113.407 82.635,113.484 83.335,113.785 84.136 C 113.985 84.671,114.197 85.496,114.255 85.971 C 114.428 87.380,114.892 87.958,115.811 87.911 C 116.229 87.889,116.753 87.866,116.975 87.860 C 117.372 87.848,117.378 87.817,117.328 86.036 L 117.278 84.224 116.191 84.278 L 115.103 84.332 114.644 83.361 C 114.336 82.711,114.182 82.081,114.176 81.452 C 114.171 80.935,114.105 79.956,114.029 79.275 C 113.872 77.858,114.066 76.810,114.593 76.227 C 114.978 75.802,114.962 75.678,114.538 75.783 M11.422 78.789 L 11.928 79.452 11.873 83.959 C 11.842 86.438,11.748 88.786,11.662 89.176 C 11.577 89.565,11.456 90.957,11.394 92.269 C 11.293 94.403,10.981 96.670,10.679 97.455 C 10.568 97.745,9.478 97.766,8.815 97.491 C 8.304 97.279,8.131 98.305,8.134 101.529 C 8.135 103.191,8.196 104.457,8.269 104.342 C 8.354 104.209,8.809 104.149,9.521 104.177 C 11.146 104.240,11.404 103.742,11.664 100.044 C 11.749 98.829,11.903 97.159,12.004 96.332 C 12.505 92.259,12.720 80.289,12.309 79.307 C 12.018 78.609,11.560 78.126,11.190 78.126 C 10.985 78.126,11.042 78.291,11.422 78.789 M47.017 80.071 L 46.575 80.212 47.051 80.230 C 47.313 80.240,47.576 80.168,47.636 80.071 C 47.760 79.870,47.645 79.870,47.017 80.071 M153.982 81.633 C 152.932 82.757,152.235 88.426,153.046 89.237 L 153.425 89.616 152.991 89.616 C 151.369 89.616,150.687 91.079,150.475 95.013 C 150.343 97.455,150.664 98.429,151.703 98.748 L 152.333 98.941 151.733 98.340 C 151.402 98.010,151.080 97.534,151.017 97.283 C 150.695 95.998,151.422 92.132,152.133 91.345 C 152.474 90.969,154.109 90.902,154.461 91.251 C 154.641 91.428,154.673 91.316,154.629 90.677 C 154.579 89.954,154.526 89.872,154.043 89.770 C 153.527 89.660,153.526 89.657,153.982 89.636 L 154.450 89.616 153.948 89.078 C 153.223 88.302,153.159 85.501,153.835 84.147 C 153.998 83.820,154.132 83.473,154.132 83.377 C 154.132 82.804,156.626 82.405,156.843 82.943 C 156.971 83.260,156.976 82.004,156.848 81.529 C 156.671 80.867,154.628 80.941,153.982 81.633 M221.552 82.059 C 220.028 83.862,219.790 88.664,221.191 89.329 C 222.008 89.717,222.135 89.689,221.704 89.218 C 220.555 87.961,220.575 85.604,221.750 83.651 C 222.167 82.958,223.920 82.775,224.305 83.385 C 224.458 83.627,224.484 83.487,224.426 82.747 C 224.339 81.631,224.175 81.491,222.950 81.487 C 222.137 81.485,221.985 81.547,221.552 82.059 M204.007 83.028 C 204.989 84.080,205.155 85.621,204.484 87.444 C 203.932 88.945,203.712 89.139,202.670 89.039 C 201.355 88.912,201.149 89.014,201.149 89.792 C 201.149 90.577,201.326 90.659,202.932 90.616 C 203.735 90.595,204.044 90.513,204.170 90.287 C 204.263 90.122,204.456 89.869,204.600 89.725 C 204.743 89.582,204.862 89.359,204.863 89.230 C 204.865 89.102,204.976 88.679,205.111 88.290 C 205.987 85.759,205.527 83.227,204.100 82.730 L 203.551 82.538 204.007 83.028 M383.862 83.121 C 382.921 83.875,382.822 89.652,383.716 91.648 C 384.736 93.925,384.575 93.763,385.879 93.821 L 387.047 93.873 387.160 93.045 C 387.286 92.127,387.279 90.409,387.152 90.897 C 387.086 91.150,386.870 91.206,385.975 91.206 L 384.880 91.206 384.496 90.455 C 384.234 89.941,384.050 89.091,383.913 87.760 C 383.804 86.690,383.679 85.640,383.637 85.427 C 383.540 84.941,384.187 83.266,384.588 82.961 C 384.835 82.773,384.841 82.732,384.622 82.729 C 384.476 82.726,384.134 82.902,383.862 83.121 M296.634 85.410 L 296.686 86.876 297.719 86.935 C 298.926 87.004,299.480 86.636,299.779 85.563 C 300.085 84.463,299.613 84.060,297.942 83.996 L 296.583 83.944 296.634 85.410 M74.879 85.497 C 73.418 85.662,71.855 87.226,71.493 88.887 C 71.194 90.260,71.093 90.452,70.603 90.575 C 69.980 90.731,69.182 92.231,69.036 93.518 C 68.926 94.490,68.871 94.591,68.263 94.942 C 67.250 95.527,66.650 97.125,66.642 99.262 C 66.638 100.176,66.571 100.398,66.195 100.751 C 65.491 101.413,65.542 103.362,66.284 104.137 C 66.575 104.443,66.814 104.867,66.814 105.082 C 66.814 106.661,67.736 107.557,69.534 107.726 C 72.030 107.959,73.188 107.570,73.172 106.501 C 73.167 106.202,73.140 106.188,73.006 106.416 C 72.918 106.567,72.448 106.876,71.962 107.104 L 71.079 107.518 69.724 107.085 C 67.883 106.497,67.676 106.169,68.101 104.509 C 68.563 102.709,68.515 101.331,67.977 100.907 C 66.825 100.001,67.320 96.718,68.739 95.850 C 68.942 95.726,69.146 95.347,69.216 94.966 C 69.510 93.348,70.543 91.643,71.402 91.356 C 71.506 91.322,71.665 90.835,71.756 90.276 C 71.939 89.151,72.372 88.248,72.912 87.859 C 73.106 87.719,73.521 87.339,73.833 87.014 C 74.909 85.895,74.807 85.904,86.058 85.902 C 100.086 85.901,100.666 86.017,99.427 88.587 C 98.902 89.674,98.941 89.778,99.649 89.182 C 100.873 88.152,100.924 86.550,99.758 85.785 C 99.284 85.475,77.333 85.221,74.879 85.497 M343.235 85.533 C 342.057 85.659,341.577 86.025,341.408 86.924 C 341.327 87.355,341.015 87.842,340.462 88.399 C 339.210 89.663,339.145 89.769,338.985 90.834 C 338.773 92.234,338.549 92.697,337.977 92.913 C 337.294 93.171,336.544 94.757,336.544 95.944 C 336.544 96.839,335.956 97.746,335.376 97.746 C 333.784 97.746,333.783 105.167,335.374 105.902 C 335.580 105.997,335.982 106.388,336.268 106.770 C 337.386 108.268,340.610 107.908,340.610 106.285 C 340.610 106.031,340.557 106.040,340.212 106.350 C 339.459 107.026,338.472 107.295,337.867 106.988 C 337.342 106.722,336.544 105.994,336.544 105.781 C 336.544 105.719,336.186 105.321,335.749 104.896 L 334.954 104.123 334.954 102.242 C 334.954 100.307,335.505 98.631,336.142 98.630 C 336.423 98.630,336.898 97.708,336.898 97.164 C 336.898 95.996,338.061 93.912,338.862 93.645 C 338.951 93.615,339.106 93.087,339.205 92.471 C 339.494 90.680,340.292 89.616,341.348 89.616 L 342.024 89.616 342.024 88.502 C 342.024 85.871,341.279 86.020,354.827 85.944 C 367.013 85.875,367.462 85.905,367.746 86.799 C 367.805 86.987,367.928 87.141,368.019 87.141 C 368.110 87.141,368.184 87.280,368.185 87.450 C 368.185 87.620,368.424 88.014,368.715 88.324 C 369.006 88.635,369.244 89.008,369.244 89.154 C 369.244 89.299,369.312 89.460,369.394 89.511 C 369.477 89.562,369.641 90.461,369.760 91.510 C 369.879 92.558,370.012 93.598,370.057 93.821 C 370.148 94.274,369.390 95.942,368.936 96.288 C 368.559 96.576,368.708 96.567,369.448 96.258 C 371.050 95.589,371.026 89.152,369.415 87.411 C 369.053 87.019,368.566 86.473,368.333 86.196 C 368.048 85.859,367.648 85.644,367.118 85.541 C 366.238 85.371,344.808 85.364,343.235 85.533 M192.553 87.580 C 192.497 87.724,192.487 88.191,192.530 88.618 C 192.572 89.044,192.540 89.940,192.458 90.609 C 192.240 92.394,192.537 93.580,193.292 93.938 C 194.080 94.312,194.203 94.281,193.783 93.814 C 193.044 92.992,192.825 92.051,193.113 90.945 C 193.524 89.366,193.468 87.318,193.013 87.318 C 192.815 87.318,192.608 87.436,192.553 87.580 M116.264 90.132 L 115.687 90.648 115.734 93.684 C 115.785 97.047,116.012 97.976,117.055 99.095 C 117.611 99.691,117.886 100.570,117.892 101.778 C 117.903 103.699,118.261 104.946,119.031 105.741 C 119.433 106.156,119.899 106.711,120.066 106.975 C 120.804 108.138,123.524 108.069,124.193 106.871 L 124.575 106.186 124.694 106.726 C 125.097 108.561,130.178 107.983,130.538 106.061 C 130.623 105.608,130.957 105.151,131.767 104.377 C 133.018 103.182,133.451 102.041,133.451 99.943 C 133.451 98.626,133.691 97.771,134.150 97.449 C 135.750 96.329,136.282 91.046,134.905 89.962 C 134.185 89.396,133.895 89.523,134.386 90.190 C 135.466 91.657,135.354 93.778,134.098 95.696 C 133.726 96.263,131.721 96.344,131.475 95.802 C 131.395 95.625,131.351 95.694,131.343 96.009 C 131.332 96.397,131.441 96.518,131.950 96.686 C 132.797 96.966,132.921 97.287,132.919 99.193 C 132.916 102.050,132.077 103.322,130.280 103.192 C 129.195 103.114,128.955 103.241,129.213 103.756 C 130.536 106.404,127.052 108.642,124.923 106.513 L 124.392 105.982 124.075 106.374 C 123.779 106.739,122.362 107.495,122.147 107.402 C 121.256 107.018,120.725 106.594,120.379 105.989 C 120.149 105.587,119.813 105.154,119.633 105.026 C 118.141 103.966,117.881 99.929,119.252 99.120 C 119.787 98.804,119.840 98.697,119.836 97.950 C 119.832 97.354,119.785 97.206,119.665 97.410 C 119.440 97.795,117.366 97.883,117.366 97.508 C 117.366 97.371,117.257 97.169,117.123 97.058 C 116.078 96.190,115.956 91.152,116.954 90.075 C 117.564 89.418,117.012 89.463,116.264 90.132 M188.007 90.596 C 188.811 92.351,188.090 93.396,186.146 93.298 C 185.046 93.243,184.972 93.263,184.919 93.637 C 184.888 93.856,184.888 94.038,184.919 94.043 C 188.063 94.501,189.335 93.599,189.076 91.092 C 188.957 89.943,188.731 89.616,188.057 89.616 L 187.558 89.616 188.007 90.596 M220.242 90.467 C 218.602 90.584,217.943 92.219,217.942 96.181 C 217.941 98.818,217.936 98.807,219.035 98.807 C 219.565 98.807,219.567 98.803,219.210 98.498 C 218.463 97.856,218.292 96.786,218.636 94.895 C 219.091 92.394,219.517 91.911,221.194 91.997 L 222.006 92.039 222.006 91.269 C 222.006 90.846,221.947 90.493,221.874 90.485 C 221.314 90.422,220.930 90.418,220.242 90.467 M38.200 91.148 C 38.189 91.261,38.128 91.500,38.065 91.678 C 37.976 91.929,38.000 91.956,38.170 91.800 C 38.291 91.688,38.351 91.450,38.305 91.269 C 38.258 91.089,38.211 91.034,38.200 91.148 M98.874 93.098 C 98.913 95.225,98.868 95.157,100.211 95.116 C 101.501 95.078,101.700 95.345,101.900 97.393 C 101.971 98.122,102.172 99.279,102.346 99.964 C 102.751 101.557,102.513 104.286,101.970 104.286 C 101.883 104.286,101.812 104.401,101.812 104.541 C 101.812 104.682,101.672 104.901,101.502 105.028 C 101.331 105.155,100.973 105.595,100.706 106.006 C 99.763 107.458,98.626 107.660,97.234 106.621 L 96.633 106.172 96.759 106.688 C 96.974 107.564,97.251 107.706,98.766 107.719 C 100.186 107.731,101.105 107.402,101.105 106.882 C 101.105 106.759,101.455 106.314,101.883 105.894 C 102.376 105.410,102.737 104.858,102.869 104.385 C 103.405 102.472,102.992 95.819,102.225 94.007 C 101.511 92.320,101.399 92.230,100.101 92.298 L 98.999 92.355 98.920 91.825 C 98.877 91.533,98.856 92.106,98.874 93.098 M201.679 92.202 C 201.679 92.263,201.850 92.590,202.058 92.927 C 202.624 93.843,202.559 95.539,201.906 96.848 L 201.414 97.835 200.133 97.835 C 198.641 97.835,198.239 98.481,199.367 99.064 C 200.851 99.832,200.402 103.901,198.779 104.392 C 198.211 104.564,197.614 105.189,197.614 105.612 C 197.614 106.628,196.349 107.025,195.115 106.395 C 194.252 105.955,194.127 106.020,194.622 106.649 C 195.774 108.113,198.316 107.753,198.320 106.125 C 198.321 105.668,198.846 105.170,199.327 105.170 C 200.144 105.170,200.698 103.893,200.797 101.783 L 200.886 99.867 201.605 99.190 C 203.264 97.627,203.731 93.937,202.445 92.550 C 202.044 92.117,201.679 91.952,201.679 92.202 M277.300 93.106 C 275.595 95.113,275.627 101.105,277.343 101.105 C 277.722 101.105,277.723 101.104,277.370 100.795 C 276.628 100.147,276.452 99.045,276.792 97.176 C 277.259 94.606,277.567 94.296,279.585 94.361 C 280.150 94.380,280.159 94.367,280.159 93.589 L 280.159 92.797 278.861 92.797 C 277.842 92.797,277.506 92.864,277.300 93.106 M185.022 94.432 C 185.707 95.284,185.554 97.216,184.802 97.216 C 184.430 97.216,183.858 97.997,183.733 98.677 C 183.603 99.380,183.053 99.901,182.084 100.239 C 181.749 100.355,181.483 100.623,181.341 100.984 C 181.042 101.742,180.500 102.157,179.800 102.161 C 179.025 102.167,177.994 101.720,177.994 101.379 C 177.994 101.212,177.839 101.106,177.596 101.107 C 177.319 101.109,177.268 101.154,177.428 101.256 C 177.589 101.358,177.642 101.764,177.605 102.617 L 177.552 103.833 176.779 104.351 C 175.671 105.094,174.386 104.904,173.525 103.870 C 173.214 103.496,173.211 103.501,173.327 104.198 C 173.528 105.411,174.581 105.754,176.633 105.275 C 177.561 105.058,177.874 104.876,178.570 104.145 C 179.316 103.364,179.557 103.207,180.397 102.963 C 181.353 102.685,182.059 102.045,182.059 101.455 C 182.059 101.258,182.415 100.967,183.045 100.648 C 183.995 100.168,184.534 99.533,184.534 98.897 C 184.534 98.743,184.883 98.401,185.310 98.137 C 186.281 97.538,186.700 96.813,186.559 95.978 C 186.338 94.668,186.303 94.600,185.746 94.406 C 185.006 94.148,184.799 94.155,185.022 94.432 M260.040 94.997 C 260.790 96.061,260.797 97.611,260.059 99.171 L 259.567 100.212 258.389 100.217 C 257.608 100.220,257.180 100.146,257.121 100.000 C 257.072 99.878,257.026 100.100,257.018 100.492 C 257.006 101.097,257.081 101.251,257.510 101.504 C 258.718 102.218,258.454 104.282,257.066 104.979 C 256.760 105.133,256.365 105.526,256.187 105.854 C 256.010 106.181,255.614 106.641,255.306 106.875 L 254.747 107.302 253.754 106.930 C 253.207 106.726,252.678 106.405,252.578 106.218 C 252.422 105.926,252.198 105.877,251.023 105.877 L 249.650 105.877 249.770 107.038 C 249.870 108.004,249.831 108.322,249.534 108.935 C 248.834 110.385,248.830 110.599,249.496 111.107 L 250.095 111.563 255.008 111.523 C 260.106 111.481,260.535 111.530,261.239 112.233 C 261.648 112.642,261.667 112.618,261.431 111.996 C 261.041 110.971,260.774 110.923,254.980 110.826 C 250.373 110.750,249.678 110.703,249.739 110.473 C 249.778 110.327,249.847 109.989,249.892 109.722 C 249.943 109.416,250.084 109.236,250.272 109.236 C 250.436 109.236,250.909 109.017,251.324 108.749 L 252.078 108.263 252.022 107.158 C 251.982 106.362,252.028 106.053,252.187 106.054 C 252.318 106.054,252.409 106.288,252.411 106.628 C 252.415 107.569,252.574 107.669,254.107 107.699 C 255.754 107.730,256.283 107.465,256.575 106.462 C 256.769 105.794,256.878 105.697,257.810 105.354 C 258.551 105.082,258.948 104.338,258.948 103.227 C 258.948 102.374,259.003 102.257,259.738 101.543 C 261.708 99.629,261.906 95.201,260.055 94.445 L 259.488 94.214 260.040 94.997 M386.125 94.339 C 385.405 94.516,385.329 94.726,385.329 96.545 C 385.329 101.860,385.962 103.403,388.144 103.403 C 389.249 103.403,389.363 103.368,389.460 103.005 C 389.580 102.557,389.586 101.623,389.466 101.908 C 389.352 102.182,387.281 102.072,386.985 101.776 C 386.687 101.478,386.100 99.495,385.848 97.930 C 385.600 96.393,385.764 95.575,386.471 94.825 C 387.051 94.211,386.991 94.126,386.125 94.339 M193.018 95.051 C 191.370 95.177,191.283 95.225,190.781 96.287 C 190.019 97.897,189.729 103.003,190.376 103.412 C 190.575 103.538,190.544 103.575,190.234 103.577 C 189.642 103.581,189.609 103.592,189.125 103.936 C 188.879 104.111,188.498 104.615,188.277 105.056 L 187.877 105.859 188.282 106.734 C 188.563 107.339,188.878 107.710,189.306 107.936 C 189.646 108.116,190.255 108.482,190.658 108.749 C 192.095 109.703,193.105 109.051,192.993 107.241 C 192.961 106.734,192.999 106.220,193.076 106.098 C 193.325 105.706,191.946 105.827,191.510 106.236 C 190.878 106.830,189.445 106.905,189.201 106.357 C 188.806 105.471,189.309 104.993,190.638 104.993 L 191.781 104.993 191.781 104.386 C 191.781 103.860,191.716 103.770,191.295 103.706 L 190.809 103.632 191.277 103.606 L 191.746 103.579 191.256 103.055 C 190.556 102.306,190.381 101.426,190.674 100.133 C 190.806 99.549,190.957 98.873,191.010 98.630 C 191.388 96.877,192.929 95.995,194.034 96.901 C 194.206 97.042,194.255 96.867,194.255 96.109 C 194.255 95.036,194.170 94.963,193.018 95.051 M151.358 99.195 C 150.046 99.829,150.239 103.424,151.652 104.687 C 152.633 105.563,154.644 105.029,154.658 103.889 C 154.660 103.719,154.637 103.579,154.606 103.579 C 154.575 103.579,154.101 103.662,153.551 103.764 C 151.448 104.153,150.171 101.692,151.474 99.760 C 152.020 98.953,152.005 98.882,151.358 99.195 M216.891 99.708 C 216.616 100.009,216.339 100.546,216.275 100.901 C 215.808 103.523,215.803 103.598,216.079 104.151 C 216.228 104.450,216.351 104.781,216.352 104.888 C 216.353 104.995,216.612 105.249,216.927 105.453 C 217.274 105.678,217.595 106.094,217.742 106.513 C 218.087 107.491,218.204 107.592,219.140 107.723 C 220.482 107.912,221.036 108.148,221.451 108.709 L 221.840 109.236 224.398 109.236 C 226.450 109.236,226.955 109.284,226.955 109.479 C 226.955 109.612,227.005 109.970,227.066 110.274 L 227.176 110.826 221.005 110.826 C 213.969 110.826,213.556 110.900,213.027 112.240 L 212.783 112.859 213.298 112.369 C 214.117 111.591,214.650 111.533,220.965 111.533 C 226.789 111.533,226.917 111.526,227.394 111.151 C 227.926 110.732,227.941 109.742,227.431 108.720 C 227.303 108.463,227.207 107.727,227.216 107.067 L 227.233 105.877 224.620 105.877 L 222.006 105.877 222.006 106.315 C 222.006 106.831,221.488 107.214,220.559 107.384 C 219.378 107.600,217.941 106.446,217.941 105.282 C 217.941 105.034,217.792 104.688,217.611 104.514 C 217.037 103.963,216.884 103.504,217.058 102.855 C 217.146 102.524,217.265 102.028,217.322 101.753 C 217.424 101.257,217.437 101.253,218.567 101.311 L 219.709 101.370 219.709 100.545 C 219.708 99.238,219.638 99.160,218.442 99.160 C 217.492 99.160,217.342 99.213,216.891 99.708 M369.089 100.071 C 368.612 100.247,368.510 103.367,368.970 103.748 C 369.110 103.865,369.319 104.379,369.434 104.891 C 369.829 106.659,368.905 107.222,367.107 106.311 C 366.144 105.823,366.087 106.066,366.974 106.871 C 368.619 108.364,370.104 107.755,370.482 105.434 C 370.596 104.730,370.775 104.346,371.155 103.984 C 372.177 103.010,372.230 100.565,371.239 100.123 C 370.810 99.931,369.549 99.901,369.089 100.071 M275.137 102.679 C 274.548 103.294,274.557 103.811,275.166 104.288 C 275.818 104.800,276.080 105.307,276.087 106.072 C 276.096 106.993,276.710 107.587,277.796 107.729 C 279.199 107.911,279.369 107.969,279.866 108.430 C 280.457 108.977,281.210 109.174,283.301 109.329 C 284.605 109.426,284.974 109.514,285.106 109.762 C 285.198 109.934,285.644 110.168,286.096 110.282 C 287.028 110.516,287.246 110.459,286.644 110.137 C 285.736 109.651,285.062 108.249,285.141 107.007 L 285.213 105.877 282.686 105.877 C 280.611 105.877,280.159 105.922,280.159 106.130 C 280.159 106.896,278.056 107.542,277.401 106.978 C 276.355 106.077,276.378 103.913,277.437 103.647 C 277.877 103.537,278.004 103.017,277.705 102.546 C 277.393 102.053,275.650 102.144,275.137 102.679 M296.715 102.283 C 296.650 102.348,296.597 102.666,296.597 102.990 L 296.597 103.579 297.716 103.579 C 298.659 103.579,298.894 103.644,299.222 103.993 C 300.181 105.014,300.189 107.788,299.234 108.091 C 298.565 108.304,298.914 108.439,299.976 108.379 C 301.018 108.321,302.254 108.711,302.254 109.099 C 302.254 109.174,302.365 109.236,302.501 109.236 C 302.902 109.236,303.491 110.420,303.494 111.234 C 303.495 111.735,303.547 111.895,303.653 111.727 C 303.922 111.303,306.976 111.575,308.129 112.126 C 308.640 112.370,309.198 112.613,309.368 112.665 C 309.740 112.779,309.816 114.506,309.465 114.856 C 309.300 115.021,310.253 115.069,313.752 115.069 L 318.250 115.069 318.192 113.940 L 318.133 112.810 319.164 112.322 C 321.494 111.218,325.179 111.158,326.326 112.206 C 327.030 112.848,326.803 112.102,326.086 111.419 L 325.559 110.915 322.877 110.943 C 320.874 110.964,319.948 111.050,319.222 111.281 C 317.617 111.792,310.850 111.849,308.918 111.368 C 308.121 111.169,306.912 110.946,306.233 110.872 C 305.109 110.750,304.976 110.693,304.757 110.236 C 304.625 109.959,304.244 109.572,303.911 109.376 C 303.578 109.179,303.225 108.868,303.127 108.685 C 303.029 108.502,302.792 108.352,302.601 108.352 C 302.410 108.352,302.254 108.263,302.254 108.155 C 302.254 108.047,301.927 107.668,301.527 107.313 C 300.835 106.699,300.795 106.606,300.668 105.345 C 300.517 103.839,300.022 102.830,299.236 102.424 C 298.733 102.164,296.935 102.063,296.715 102.283 M154.946 103.859 C 154.809 104.216,154.811 105.668,154.950 106.185 C 155.012 106.418,155.431 106.796,155.964 107.101 L 156.873 107.621 161.203 107.737 C 167.396 107.903,170.761 107.670,172.007 106.990 L 172.956 106.472 173.008 105.026 L 173.059 103.579 172.256 103.579 L 171.454 103.579 171.454 104.797 L 171.454 106.016 170.750 106.297 C 170.362 106.452,169.706 106.626,169.291 106.684 C 168.877 106.742,167.946 106.913,167.224 107.065 C 164.601 107.616,156.606 106.974,156.606 106.212 C 156.606 106.125,156.487 106.054,156.341 106.054 C 156.131 106.054,156.076 105.799,156.076 104.817 L 156.076 103.579 155.565 103.579 C 155.261 103.579,155.010 103.693,154.946 103.859 M388.184 103.889 C 386.752 106.615,389.649 109.005,391.513 106.636 C 391.989 106.031,391.739 105.923,390.960 106.398 C 389.216 107.461,388.123 106.057,389.149 104.072 C 389.400 103.586,389.396 103.579,388.875 103.579 C 388.551 103.579,388.284 103.699,388.184 103.889 M73.748 108.131 C 73.819 109.370,73.842 110.484,73.798 110.605 C 73.738 110.773,72.787 110.826,69.862 110.826 C 65.755 110.826,64.820 111.010,64.268 111.923 C 63.969 112.419,64.275 112.476,64.870 112.035 C 65.407 111.637,65.581 111.618,69.457 111.533 C 73.372 111.447,73.502 111.433,74.039 111.021 L 74.591 110.597 74.591 108.237 L 74.591 105.877 74.104 105.877 L 73.617 105.877 73.748 108.131 M93.731 107.129 C 93.781 108.342,93.765 108.396,93.227 108.853 C 92.036 109.862,92.051 109.856,90.809 109.802 L 89.616 109.750 89.616 110.376 L 89.616 111.003 90.667 111.003 C 91.246 111.003,92.177 111.122,92.737 111.268 C 93.490 111.464,94.749 111.533,97.564 111.533 C 101.569 111.533,102.316 111.634,102.989 112.267 C 103.555 112.798,103.569 112.258,103.005 111.660 C 102.307 110.919,101.667 110.827,97.234 110.824 C 92.974 110.821,92.090 110.702,93.072 110.265 C 93.358 110.137,93.738 109.853,93.915 109.634 C 94.092 109.415,94.337 109.236,94.460 109.236 C 95.059 109.236,95.538 108.291,95.483 107.219 C 95.446 106.504,95.502 106.129,95.660 106.029 C 95.796 105.943,95.437 105.881,94.785 105.880 L 93.679 105.877 93.731 107.129 M342.174 106.034 C 342.329 106.132,342.427 106.612,342.455 107.401 C 342.531 109.591,343.255 110.610,344.610 110.435 L 345.117 110.369 344.646 110.134 C 343.971 109.798,343.438 108.415,343.438 107.003 L 343.438 105.877 342.687 105.880 C 342.202 105.882,342.020 105.936,342.174 106.034 M359.567 106.142 C 359.114 106.656,359.288 108.128,359.832 108.388 C 360.232 108.580,360.350 108.793,360.495 109.591 C 360.603 110.182,360.845 110.758,361.114 111.063 L 361.555 111.565 366.416 111.522 C 371.671 111.476,372.085 111.521,372.834 112.218 C 373.256 112.610,373.309 112.626,373.187 112.322 C 372.610 110.876,372.387 110.826,366.405 110.826 C 361.466 110.826,361.290 110.815,361.290 110.484 C 361.290 109.728,361.619 109.236,362.126 109.235 C 363.956 109.231,364.681 108.624,364.575 107.183 C 364.520 106.427,364.561 106.049,364.704 105.991 C 364.819 105.944,363.760 105.902,362.351 105.898 C 360.352 105.892,359.739 105.946,359.567 106.142 M393.416 105.990 C 393.605 106.070,393.773 110.545,393.593 110.683 C 393.568 110.702,390.870 110.762,387.595 110.816 C 380.932 110.927,380.938 110.925,380.428 112.254 L 380.196 112.859 380.597 112.384 C 381.321 111.528,381.678 111.480,387.016 111.523 C 391.152 111.556,392.159 111.514,393.103 111.269 C 393.774 111.095,394.697 110.999,395.370 111.034 L 396.506 111.091 396.409 108.882 C 396.269 105.701,396.427 105.972,394.681 105.931 C 393.864 105.912,393.294 105.939,393.416 105.990 M337.575 110.815 C 332.113 110.926,332.063 110.939,331.607 112.306 L 331.423 112.859 331.781 112.385 C 332.381 111.587,333.081 111.478,337.958 111.417 C 345.081 111.327,345.399 111.309,345.341 111.003 C 345.280 110.686,344.663 110.671,337.575 110.815 M114.273 111.097 C 113.884 111.237,113.548 111.352,113.525 111.354 C 113.503 111.355,113.315 111.695,113.107 112.108 L 112.729 112.859 113.261 112.359 C 114.083 111.585,114.607 111.542,123.377 111.538 C 132.075 111.533,132.479 111.567,133.317 112.369 L 133.829 112.859 133.629 112.331 C 133.374 111.660,132.982 111.297,132.229 111.035 C 131.277 110.703,115.212 110.758,114.273 111.097 M156.341 110.954 C 155.720 111.112,155.056 111.693,154.863 112.247 L 154.676 112.784 155.188 112.271 C 155.956 111.504,155.364 111.523,177.908 111.531 C 199.644 111.539,199.926 111.548,200.645 112.267 C 200.841 112.463,201.031 112.594,201.066 112.559 C 201.207 112.418,200.680 111.636,200.208 111.285 L 199.709 110.915 178.202 110.890 C 166.373 110.876,156.536 110.905,156.341 110.954 M272.209 111.224 C 271.433 111.621,270.969 112.123,271.181 112.336 C 271.243 112.398,271.545 112.262,271.852 112.035 C 272.411 111.622,272.414 111.622,279.736 111.515 C 283.764 111.456,287.106 111.362,287.162 111.306 C 287.838 110.630,273.524 110.552,272.209 111.224 M134.630 133.923 C 134.565 133.987,134.512 134.890,134.512 135.928 C 134.512 137.591,134.470 137.853,134.158 138.135 C 133.594 138.646,133.732 138.754,134.946 138.754 C 135.988 138.754,136.986 139.227,136.986 139.721 C 136.986 140.052,138.335 142.580,138.783 143.091 C 139.637 144.064,140.025 145.315,139.890 146.664 L 139.779 147.768 140.403 147.768 C 140.873 147.768,141.056 147.856,141.140 148.122 C 141.202 148.316,141.317 148.475,141.396 148.475 C 142.266 148.475,142.128 151.501,141.230 152.099 C 140.275 152.735,140.514 153.071,141.921 153.071 C 144.171 153.071,145.071 155.675,143.221 156.836 C 143.097 156.914,142.996 157.236,142.996 157.552 L 142.996 158.126 144.199 158.162 C 145.600 158.204,145.788 158.097,146.456 156.871 C 147.327 155.274,147.546 155.101,148.703 155.103 C 149.419 155.103,149.776 155.183,149.893 155.369 C 150.024 155.575,150.061 155.529,150.064 155.164 C 150.066 154.720,149.999 154.683,148.848 154.488 C 147.326 154.232,146.984 153.895,146.593 152.266 C 146.294 151.015,145.953 150.420,145.537 150.420 C 144.335 150.420,143.820 146.998,144.845 145.824 C 145.275 145.331,145.514 143.782,145.096 144.189 C 144.270 144.994,142.289 144.119,141.998 142.820 C 141.943 142.577,141.788 141.985,141.652 141.506 C 141.516 141.026,141.405 140.367,141.405 140.042 C 141.405 139.615,141.245 139.281,140.831 138.846 C 139.574 137.527,139.497 137.333,139.429 135.316 C 139.352 133.042,138.842 133.190,138.842 135.487 C 138.842 137.969,139.681 140.137,140.651 140.162 C 140.901 140.169,140.991 140.528,141.126 142.067 C 141.335 144.451,142.046 145.280,143.916 145.324 C 144.625 145.340,144.907 145.384,144.543 145.423 C 143.614 145.520,143.477 145.874,143.580 147.919 C 143.726 150.806,144.059 151.657,145.041 151.657 C 145.591 151.657,145.813 152.006,146.002 153.165 C 146.093 153.724,146.300 154.327,146.462 154.506 C 146.723 154.795,146.725 154.843,146.484 154.936 C 146.334 154.993,146.035 155.512,145.819 156.088 L 145.428 157.137 144.256 157.107 C 143.554 157.089,143.345 157.050,143.734 157.009 C 144.643 156.913,144.851 156.578,144.851 155.210 C 144.852 153.998,144.438 152.785,143.962 152.602 C 143.827 152.551,143.671 152.365,143.616 152.190 C 143.560 152.015,143.358 151.831,143.167 151.781 C 142.881 151.706,142.819 151.537,142.819 150.828 C 142.819 150.008,142.594 149.005,142.083 147.553 C 141.929 147.114,141.655 146.791,141.257 146.581 C 140.566 146.215,140.345 145.752,140.345 144.669 C 140.345 143.522,139.624 142.020,138.856 141.567 C 138.258 141.214,137.874 140.450,137.871 139.607 C 137.871 139.444,137.671 139.075,137.428 138.786 C 137.185 138.497,136.986 138.216,136.986 138.160 C 136.986 138.105,136.649 137.745,136.237 137.361 C 135.491 136.665,135.487 136.655,135.423 135.233 C 135.359 133.834,135.118 133.434,134.630 133.923 M155.899 135.376 C 155.899 136.342,155.793 137.287,155.630 137.767 C 155.335 138.637,155.442 139.979,155.972 142.024 C 156.292 143.262,156.137 144.021,155.403 144.808 C 155.016 145.223,154.995 145.294,155.265 145.294 C 155.439 145.294,155.799 145.060,156.066 144.775 L 156.550 144.256 156.534 139.077 C 156.519 134.293,156.494 133.893,156.209 133.838 C 155.932 133.785,155.899 133.950,155.899 135.376 M159.788 135.030 C 159.788 136.252,159.336 136.986,158.585 136.986 C 157.725 136.986,157.649 137.891,157.674 147.834 C 157.696 156.906,157.644 157.972,157.165 158.268 C 156.940 158.407,156.607 157.427,156.605 156.624 C 156.604 155.886,156.082 155.188,155.281 154.854 L 154.750 154.633 155.230 155.136 C 156.002 155.947,156.276 156.962,156.071 158.252 C 155.975 158.854,155.870 159.664,155.838 160.053 C 155.806 160.442,155.722 160.939,155.651 161.158 L 155.522 161.555 157.699 161.556 L 159.876 161.556 159.780 160.097 C 159.725 159.267,159.560 158.410,159.397 158.109 C 158.607 156.642,158.529 155.564,158.586 146.885 C 158.643 138.250,158.649 138.188,159.453 137.772 C 160.475 137.243,161.072 133.805,160.141 133.805 C 159.822 133.805,159.788 133.923,159.788 135.030 M196.592 135.255 C 196.078 135.332,195.346 135.553,194.965 135.748 L 194.271 136.102 194.663 136.525 C 195.709 137.653,196.043 141.473,195.330 144.151 C 195.024 145.300,195.019 145.509,195.253 146.891 C 195.729 149.696,195.777 154.040,195.350 155.746 C 195.102 156.737,194.963 157.940,194.927 159.390 L 194.874 161.556 195.336 161.556 L 195.798 161.555 195.937 158.418 C 196.094 154.898,196.143 149.723,196.049 146.796 C 196.014 145.727,196.040 143.420,196.107 141.670 C 196.201 139.173,196.172 138.230,195.968 137.284 L 195.708 136.079 196.142 135.914 C 196.381 135.823,196.909 135.748,197.316 135.747 C 198.319 135.743,198.851 135.581,198.851 135.279 C 198.851 135.006,198.297 135.000,196.592 135.255 M354.510 135.317 C 353.549 135.514,351.974 136.258,352.489 136.271 C 352.681 136.276,352.988 136.683,353.329 137.381 L 353.867 138.483 353.867 148.020 C 353.867 157.552,353.867 157.557,354.255 158.123 C 354.682 158.747,355.457 158.561,355.457 157.834 C 355.457 157.656,355.526 157.469,355.610 157.417 C 355.694 157.365,355.866 156.953,355.992 156.502 C 356.118 156.051,356.416 155.451,356.653 155.169 L 357.084 154.657 356.586 154.847 C 355.826 155.135,355.657 155.337,355.372 156.297 C 354.514 159.187,354.403 158.208,354.400 147.761 C 354.397 139.902,354.352 138.124,354.130 137.274 C 353.766 135.876,353.917 135.784,356.916 135.581 C 356.989 135.576,357.048 135.450,357.048 135.300 C 357.048 134.989,356.077 134.995,354.510 135.317 M86.841 135.398 C 86.278 135.624,85.647 136.279,85.992 136.279 C 86.138 136.279,86.257 136.346,86.257 136.428 C 86.257 136.739,87.206 136.986,88.401 136.986 C 89.879 136.986,90.073 136.574,88.630 136.500 C 86.413 136.387,86.009 135.768,88.143 135.755 C 89.133 135.749,89.616 135.625,89.616 135.377 C 89.616 135.174,87.353 135.191,86.841 135.398 M326.346 135.410 C 325.946 135.558,325.854 135.765,325.675 136.922 C 325.566 137.623,325.051 138.400,324.695 138.400 C 324.595 138.400,324.525 139.378,324.525 140.787 C 324.525 142.650,324.576 143.173,324.759 143.173 C 326.187 143.173,326.313 146.001,324.943 147.321 L 324.437 147.808 325.383 147.706 C 325.904 147.650,326.441 147.512,326.576 147.399 C 326.776 147.233,326.823 147.282,326.823 147.658 C 326.823 148.111,326.796 148.122,325.674 148.122 L 324.525 148.122 324.525 151.401 L 324.525 154.680 325.059 154.866 C 325.860 155.146,325.928 155.431,325.961 158.620 L 325.991 161.555 327.839 161.555 L 329.688 161.555 329.625 160.161 C 329.569 158.921,329.498 158.677,328.988 157.966 C 328.672 157.527,328.413 156.981,328.411 156.754 C 328.410 156.527,328.211 155.995,327.970 155.572 C 327.412 154.597,327.317 150.412,327.813 148.706 C 328.072 147.814,328.072 147.570,327.811 145.762 C 327.428 143.101,327.425 138.488,327.806 137.723 C 328.400 136.534,328.419 136.173,327.909 135.799 C 327.308 135.358,326.817 135.236,326.346 135.410 M74.991 135.616 C 74.895 135.738,74.765 136.231,74.703 136.711 C 74.588 137.591,74.054 138.400,73.588 138.400 C 73.397 138.400,73.354 140.107,73.354 147.768 C 73.354 152.921,73.414 157.137,73.487 157.137 C 74.295 157.138,75.185 158.928,75.134 160.451 L 75.097 161.555 76.568 161.555 L 78.038 161.555 78.038 160.399 C 78.038 159.372,77.997 159.232,77.667 159.149 C 76.567 158.873,76.370 156.961,76.364 146.521 C 76.359 138.742,76.372 138.431,76.739 137.344 L 77.119 136.218 76.641 135.807 C 76.122 135.361,75.270 135.262,74.991 135.616 M372.666 135.661 C 372.610 135.807,372.472 136.344,372.359 136.853 C 372.195 137.590,372.038 137.852,371.589 138.134 L 371.026 138.489 371.021 147.768 L 371.016 157.048 371.589 157.419 C 372.482 157.997,372.833 158.872,372.805 160.451 L 372.786 161.555 374.241 161.555 L 375.696 161.555 375.696 160.415 C 375.696 159.411,375.649 159.253,375.307 159.097 C 374.189 158.587,374.028 157.011,374.022 146.521 C 374.017 138.742,374.030 138.431,374.397 137.344 L 374.777 136.218 374.299 135.807 C 373.754 135.339,372.822 135.255,372.666 135.661 M267.963 135.865 C 266.248 136.128,266.372 136.047,266.372 136.906 C 266.372 137.995,266.743 138.326,268.020 138.378 C 269.125 138.423,269.073 138.490,269.024 137.075 C 268.995 136.258,268.783 135.715,268.516 135.773 C 268.455 135.786,268.206 135.828,267.963 135.865 M75.881 136.025 C 76.088 136.104,76.100 136.208,75.939 136.554 C 75.686 137.101,75.538 137.100,75.433 136.549 C 75.322 135.971,75.426 135.850,75.881 136.025 M327.242 136.030 C 327.465 136.116,327.476 136.202,327.301 136.516 C 326.873 137.285,326.478 137.193,326.472 136.323 C 326.469 135.925,326.720 135.830,327.242 136.030 M373.539 136.025 C 373.746 136.104,373.758 136.208,373.597 136.554 C 373.344 137.101,373.196 137.100,373.091 136.549 C 372.980 135.971,373.084 135.850,373.539 136.025 M245.190 137.119 C 245.168 137.287,244.357 137.340,241.803 137.340 L 238.445 137.340 238.445 137.782 C 238.445 138.025,238.544 138.225,238.665 138.226 C 238.825 138.228,238.819 138.272,238.642 138.384 C 238.451 138.505,238.481 138.565,238.780 138.660 C 239.237 138.805,240.033 139.567,240.041 139.867 C 240.044 139.984,240.150 140.215,240.276 140.381 C 240.401 140.547,240.523 141.138,240.545 141.696 C 240.608 143.241,240.823 143.339,241.452 142.107 C 242.327 140.393,241.808 138.878,240.269 138.656 C 238.577 138.412,239.052 138.312,241.903 138.312 C 243.500 138.312,244.807 138.331,244.807 138.354 C 244.808 138.377,244.534 138.510,244.199 138.650 C 243.372 138.995,243.227 141.386,243.949 142.769 C 244.335 143.507,243.894 143.735,242.205 143.671 L 240.726 143.615 240.778 144.318 L 240.831 145.021 242.047 145.044 C 242.958 145.061,243.303 145.138,243.421 145.348 C 243.507 145.503,243.683 145.735,243.811 145.863 C 244.103 146.155,244.260 146.775,244.492 148.564 C 244.715 150.280,244.948 150.900,245.421 151.029 C 247.027 151.468,247.529 156.545,245.999 156.881 L 245.443 157.004 246.074 157.327 C 246.976 157.790,247.336 158.652,247.299 160.261 L 247.269 161.555 249.839 161.555 L 252.408 161.555 252.408 160.410 C 252.408 159.343,252.379 159.257,251.977 159.156 C 251.136 158.945,251.139 155.915,251.981 155.074 C 252.240 154.814,252.408 154.440,252.408 154.124 L 252.408 153.601 251.158 153.601 C 249.460 153.601,248.343 151.907,248.343 149.333 C 248.343 148.775,248.207 148.533,247.488 147.814 C 246.065 146.391,245.899 143.665,247.205 143.169 C 247.956 142.883,247.674 142.729,246.513 142.789 L 245.389 142.847 244.726 141.944 C 243.886 140.800,244.044 139.527,245.139 138.621 C 245.364 138.435,245.366 138.400,245.151 138.398 C 244.945 138.395,244.941 138.366,245.130 138.247 C 245.277 138.154,245.337 137.873,245.291 137.498 C 245.251 137.168,245.205 136.997,245.190 137.119 M259.342 137.490 C 259.200 137.860,259.652 138.041,260.725 138.044 C 261.264 138.046,261.801 138.142,261.918 138.259 C 262.241 138.582,262.205 157.195,261.880 157.932 L 261.646 158.462 261.535 157.799 C 261.473 157.435,261.381 156.866,261.330 156.536 C 261.210 155.764,260.684 155.101,260.003 154.863 L 259.465 154.676 259.975 155.186 C 260.684 155.895,260.922 156.922,260.954 159.413 L 260.981 161.555 261.931 161.555 C 262.665 161.555,262.841 161.505,262.708 161.335 C 262.596 161.191,262.592 158.538,262.698 153.778 C 263.047 138.052,262.969 137.416,260.687 137.310 C 259.754 137.266,259.409 137.313,259.342 137.490 M9.833 138.198 C 9.489 138.579,9.605 139.032,10.117 139.306 C 10.662 139.598,11.042 139.101,10.980 138.179 C 10.952 137.762,10.217 137.774,9.833 138.198 M26.291 138.239 C 26.120 138.338,25.871 138.680,25.738 138.997 C 25.606 139.315,25.249 139.858,24.945 140.204 C 24.505 140.705,24.393 140.990,24.395 141.605 C 24.397 142.079,24.454 142.289,24.543 142.148 C 24.903 141.581,27.098 141.958,27.430 142.643 C 28.259 144.356,28.587 148.888,28.025 150.862 C 27.561 152.490,27.260 153.145,26.902 153.305 C 26.438 153.512,26.192 154.539,26.368 155.533 C 26.555 156.597,26.755 156.759,27.341 156.321 C 27.798 155.980,27.947 155.678,28.180 154.619 C 28.254 154.284,28.473 154.056,28.889 153.883 C 29.594 153.588,29.872 153.146,29.872 152.319 C 29.872 151.990,29.984 151.329,30.120 150.850 C 30.683 148.874,30.764 146.150,30.299 144.783 C 29.926 143.683,29.784 141.912,30.016 141.247 C 30.206 140.701,30.204 140.698,29.586 140.698 C 28.572 140.698,27.419 139.828,27.404 139.052 C 27.387 138.227,26.910 137.878,26.291 138.239 M270.968 140.703 L 270.968 143.005 271.439 143.184 C 273.220 143.861,273.186 147.219,271.393 147.668 L 270.968 147.775 270.968 152.303 L 270.968 156.830 271.852 157.700 C 272.773 158.607,272.788 158.653,272.769 160.451 L 272.757 161.555 274.204 161.555 L 275.652 161.555 275.663 160.408 C 275.672 159.471,275.618 159.243,275.369 159.164 C 274.450 158.872,273.985 156.233,273.978 151.263 C 273.973 147.707,274.052 147.165,274.775 145.808 C 274.918 145.542,274.954 145.284,274.863 145.190 C 274.460 144.775,273.973 143.013,273.973 141.970 C 273.973 141.356,273.898 140.521,273.806 140.114 C 273.714 139.706,273.594 139.154,273.538 138.886 C 273.438 138.412,273.405 138.400,272.202 138.400 L 270.968 138.400 270.968 140.703 M7.900 139.717 C 7.752 139.865,7.421 140.616,7.165 141.387 C 6.908 142.158,6.583 142.833,6.442 142.887 C 6.302 142.941,6.186 143.112,6.186 143.268 C 6.186 143.500,5.988 143.546,5.082 143.525 C 4.474 143.510,3.878 143.505,3.756 143.512 C 3.624 143.521,3.535 143.775,3.535 144.145 L 3.535 144.764 4.841 144.764 C 6.884 144.764,6.948 144.856,6.948 147.768 C 6.948 150.713,6.863 150.832,4.817 150.742 L 3.518 150.685 3.571 151.304 L 3.624 151.922 4.905 151.974 C 5.837 152.012,6.186 152.091,6.186 152.265 C 6.186 152.396,6.294 152.544,6.425 152.594 C 6.556 152.645,6.849 153.150,7.076 153.718 C 7.814 155.564,8.265 155.915,9.108 155.299 C 9.423 155.068,9.432 154.967,9.230 153.793 C 8.855 151.603,9.063 150.508,9.910 150.212 L 10.429 150.032 10.429 147.500 C 10.429 144.292,10.479 144.410,9.104 144.410 C 7.823 144.410,7.276 143.934,7.509 143.021 C 7.574 142.764,7.683 142.101,7.752 141.547 C 7.941 140.020,8.411 139.886,8.792 141.251 C 9.044 142.155,9.477 142.735,10.020 142.897 C 10.393 143.009,10.388 142.979,9.891 142.077 C 9.607 141.561,9.373 140.891,9.371 140.587 C 9.366 139.753,8.422 139.195,7.900 139.717 M27.041 140.742 C 27.043 140.815,26.467 140.866,25.762 140.854 L 24.481 140.834 25.448 140.673 C 25.981 140.585,26.493 140.436,26.587 140.341 C 26.752 140.177,27.035 140.426,27.041 140.742 M98.644 141.515 C 98.636 141.635,98.199 141.722,97.530 141.737 C 96.863 141.752,96.334 141.858,96.187 142.005 C 95.844 142.348,95.372 144.508,95.409 145.559 C 95.427 146.045,95.489 149.107,95.547 152.364 C 95.648 158.058,95.667 158.301,96.023 158.683 C 96.659 159.365,96.910 159.053,97.483 156.871 C 97.714 155.991,97.959 155.493,98.331 155.143 L 98.854 154.653 98.345 154.846 C 97.376 155.215,97.144 155.588,96.775 157.373 C 96.689 157.789,96.627 157.838,96.413 157.661 C 96.103 157.403,96.024 143.896,96.328 143.096 C 96.487 142.679,96.585 142.643,97.562 142.643 C 98.656 142.643,99.045 142.282,98.750 141.545 C 98.697 141.413,98.652 141.400,98.644 141.515 M29.538 143.726 C 29.873 146.305,29.712 151.011,29.236 152.582 C 28.883 153.746,28.695 152.312,28.767 149.013 C 28.809 147.113,28.771 144.986,28.683 144.286 C 28.553 143.248,28.574 142.930,28.795 142.566 C 29.171 141.945,29.342 142.211,29.538 143.726 M37.207 143.098 C 37.105 143.141,37.055 143.697,37.090 144.421 C 37.140 145.481,37.079 145.813,36.692 146.605 C 36.109 147.797,36.118 147.876,36.782 147.403 C 37.595 146.824,38.015 145.690,37.960 144.217 C 37.914 143.002,37.809 142.846,37.207 143.098 M38.798 150.106 L 38.798 157.225 37.428 157.277 C 36.370 157.316,36.058 157.387,36.058 157.586 C 36.058 157.988,38.672 157.941,39.163 157.530 C 39.648 157.124,39.552 143.132,39.063 143.038 C 38.831 142.993,38.798 143.873,38.798 150.106 M47.312 143.114 C 46.710 143.715,47.357 146.087,48.255 146.572 C 49.494 147.242,49.492 147.234,49.492 151.226 C 49.492 156.011,49.221 156.514,46.712 156.397 C 44.816 156.309,44.965 156.897,46.964 157.395 C 49.133 157.934,49.492 158.324,49.492 160.143 C 49.492 161.516,49.504 161.555,49.916 161.555 C 50.328 161.555,50.342 161.508,50.402 159.977 C 50.473 158.176,50.797 157.523,51.765 157.231 L 52.331 157.060 52.313 150.450 L 52.296 143.840 51.874 143.418 C 51.455 142.999,47.679 142.747,47.312 143.114 M85.447 143.131 C 85.157 143.328,85.448 145.607,85.870 146.449 C 86.210 147.124,86.231 147.539,86.279 154.358 L 86.330 161.555 87.144 161.555 L 87.959 161.555 87.880 160.465 C 87.821 159.653,87.866 159.327,88.055 159.184 C 88.403 158.921,89.492 157.308,89.390 157.206 C 89.261 157.077,88.344 157.521,87.760 157.995 L 87.229 158.426 87.118 157.914 C 87.056 157.632,86.992 155.214,86.975 152.541 C 86.957 149.867,86.865 147.282,86.770 146.796 C 86.465 145.242,86.326 143.181,86.520 143.099 C 86.618 143.058,86.460 143.019,86.169 143.013 C 85.877 143.006,85.552 143.060,85.447 143.131 M98.100 143.306 C 96.535 144.088,96.676 147.004,98.307 147.575 L 98.780 147.741 98.248 146.987 C 97.427 145.821,97.524 144.473,98.506 143.394 C 98.942 142.915,98.900 142.906,98.100 143.306 M105.617 143.217 C 105.578 143.338,105.570 143.637,105.600 143.880 C 105.631 144.123,105.665 144.578,105.678 144.890 C 105.693 145.278,105.885 145.644,106.280 146.039 C 107.601 147.363,107.505 150.066,106.135 150.066 C 105.993 150.066,105.877 150.149,105.877 150.249 C 105.877 150.367,106.495 150.414,107.595 150.382 L 109.313 150.331 109.243 149.448 C 109.205 148.962,109.168 147.331,109.160 145.824 C 109.148 143.224,109.129 143.082,108.794 143.033 C 108.455 142.984,108.442 143.067,108.497 145.066 C 108.601 148.830,108.188 150.167,107.780 147.393 C 107.669 146.643,107.456 145.939,107.278 145.736 C 106.856 145.253,106.729 143.214,107.114 143.109 C 107.260 143.069,106.999 143.028,106.534 143.017 C 105.999 143.004,105.663 143.077,105.617 143.217 M116.962 143.105 C 116.685 143.382,116.833 145.551,117.163 146.052 C 117.783 146.992,118.280 146.258,118.214 144.498 L 118.162 143.084 117.625 143.032 C 117.330 143.003,117.032 143.036,116.962 143.105 M168.213 143.114 C 167.766 143.561,168.258 146.354,168.784 146.354 C 169.327 146.354,169.580 143.305,169.053 143.103 C 168.688 142.963,168.360 142.967,168.213 143.114 M302.241 143.129 C 302.234 143.202,302.238 143.824,302.251 144.512 C 302.272 145.613,302.207 145.888,301.707 146.798 L 301.140 147.832 301.741 147.487 C 303.013 146.756,303.774 143.003,302.651 142.998 C 302.433 142.997,302.248 143.056,302.241 143.129 M303.877 150.376 C 303.846 154.435,303.774 157.914,303.717 158.109 C 303.573 158.599,303.169 157.485,303.151 156.548 C 303.136 155.796,302.363 154.834,301.781 154.844 C 301.494 154.849,301.490 154.868,301.744 155.016 C 302.429 155.417,302.803 156.868,302.838 159.269 L 302.872 161.555 303.822 161.555 C 304.559 161.555,304.732 161.506,304.593 161.335 C 304.472 161.186,304.473 158.210,304.594 152.212 C 304.780 142.971,304.782 143.007,304.110 142.999 C 303.995 142.998,303.913 145.611,303.877 150.376 M309.587 143.099 C 309.385 143.184,309.508 145.426,309.734 145.780 C 309.959 146.132,310.876 146.050,311.085 145.659 C 311.389 145.092,311.318 143.230,310.989 143.103 C 310.679 142.985,309.865 142.982,309.587 143.099 M356.689 143.141 C 354.847 143.957,354.414 148.549,356.072 149.685 C 356.794 150.180,357.032 150.172,356.563 149.669 C 355.323 148.337,355.418 144.797,356.731 143.399 C 357.130 142.974,357.126 142.947,356.689 143.141 M117.495 144.892 C 117.457 145.259,117.425 145.002,117.424 144.322 C 117.424 143.641,117.455 143.341,117.494 143.655 C 117.533 143.969,117.534 144.525,117.495 144.892 M187.243 144.322 C 187.244 145.002,187.276 145.259,187.314 144.892 C 187.352 144.525,187.352 143.969,187.313 143.655 C 187.274 143.341,187.242 143.641,187.243 144.322 M259.655 143.273 C 259.655 143.328,259.861 143.643,260.112 143.972 C 260.650 144.678,260.738 145.958,260.290 146.584 C 260.137 146.798,259.886 147.146,259.732 147.358 C 259.314 147.933,260.005 147.716,260.586 147.090 C 261.547 146.053,261.527 144.663,260.536 143.673 C 260.079 143.216,259.655 143.024,259.655 143.273 M310.537 144.366 C 310.512 145.602,310.438 145.465,310.346 144.012 C 310.317 143.551,310.354 143.173,310.427 143.173 C 310.501 143.173,310.550 143.710,310.537 144.366 M245.713 144.777 C 245.779 145.013,245.841 145.568,245.851 146.011 C 245.884 147.538,246.606 149.262,247.238 149.325 C 247.896 149.391,247.897 149.393,248.160 151.487 C 248.482 154.045,248.996 154.643,250.906 154.678 C 251.756 154.693,251.768 154.700,251.215 154.860 C 250.650 155.023,250.641 155.043,250.641 156.075 C 250.641 158.457,249.670 158.856,248.779 156.841 C 248.539 156.299,248.248 155.899,248.094 155.899 C 247.666 155.899,247.511 155.392,247.417 153.690 C 247.293 151.456,246.718 150.243,245.785 150.243 C 245.337 150.243,244.985 148.923,244.985 147.244 C 244.985 146.826,244.893 146.180,244.782 145.808 C 244.612 145.239,244.627 145.061,244.882 144.672 C 245.235 144.134,245.545 144.173,245.713 144.777 M174.704 146.457 C 173.367 147.147,173.243 147.465,173.988 148.291 C 175.235 149.671,175.021 153.278,173.625 154.425 C 173.416 154.596,173.479 154.764,174.005 155.454 C 174.352 155.908,174.635 156.467,174.635 156.696 C 174.635 156.924,174.738 157.216,174.864 157.345 C 174.989 157.473,175.222 157.767,175.382 157.998 L 175.672 158.418 176.126 157.928 L 176.580 157.438 176.580 152.238 C 176.580 147.109,176.519 146.497,175.979 146.136 C 175.700 145.950,175.680 145.955,174.704 146.457 M316.692 146.958 C 316.387 147.241,316.217 147.581,316.217 147.912 C 316.217 148.383,316.080 148.496,314.600 149.247 L 312.982 150.066 314.128 150.066 L 315.275 150.066 315.554 151.216 C 315.800 152.230,315.803 152.505,315.583 153.558 C 315.446 154.214,315.334 154.770,315.334 154.794 C 315.334 154.819,314.777 154.839,314.096 154.839 C 312.894 154.839,312.859 154.851,312.859 155.281 C 312.859 155.706,312.902 155.722,313.986 155.722 C 315.850 155.722,316.161 155.836,316.279 156.561 C 316.388 157.236,317.002 158.020,317.422 158.020 C 318.439 158.020,318.394 155.406,317.369 155.017 C 317.125 154.924,316.922 154.786,316.919 154.711 C 316.916 154.635,316.842 153.590,316.755 152.387 C 316.580 149.977,316.678 149.459,317.343 149.293 C 317.711 149.200,317.808 149.041,317.910 148.358 C 318.143 146.805,317.569 146.145,316.692 146.958 M391.064 146.773 C 390.767 146.883,390.300 147.120,390.026 147.300 L 389.529 147.628 390.225 148.023 C 391.608 148.809,391.983 148.863,392.333 148.330 C 392.709 147.758,392.696 147.311,392.293 146.865 C 391.957 146.494,391.842 146.485,391.064 146.773 M184.530 147.246 C 183.577 149.026,183.324 153.799,184.085 155.634 C 184.327 156.217,184.527 156.836,184.530 157.010 C 184.535 157.437,184.990 157.581,185.541 157.329 C 185.977 157.131,185.991 157.076,185.893 156.025 C 185.781 154.826,185.998 153.791,186.522 153.027 C 186.801 152.621,186.811 152.541,186.588 152.541 C 186.152 152.541,185.442 153.640,185.328 154.491 C 185.270 154.925,185.177 155.559,185.122 155.899 L 185.022 156.518 184.770 155.811 C 184.490 155.024,184.417 149.161,184.676 148.222 C 184.981 147.113,185.241 147.510,185.241 149.085 C 185.241 151.024,185.485 151.622,186.496 152.156 L 187.274 152.566 186.720 151.979 C 185.882 151.090,185.695 150.310,185.962 148.816 C 186.209 147.434,186.110 147.189,185.211 146.969 C 184.837 146.877,184.696 146.935,184.530 147.246 M205.227 147.350 C 204.988 147.655,204.861 148.075,204.861 148.564 C 204.861 149.044,204.734 149.472,204.507 149.761 C 204.313 150.008,204.154 150.334,204.154 150.486 C 204.154 150.934,203.470 151.179,202.529 151.067 C 201.221 150.912,201.149 150.981,201.149 152.383 C 201.149 153.744,201.062 153.674,202.668 153.609 C 203.536 153.574,203.577 153.594,203.805 154.161 C 203.936 154.485,204.226 155.027,204.452 155.366 C 204.677 155.704,204.861 156.118,204.861 156.285 C 204.861 157.379,205.700 157.977,206.780 157.653 C 207.494 157.440,208.140 156.960,207.714 156.960 C 206.581 156.960,206.385 152.805,207.506 152.542 C 207.933 152.442,207.929 152.432,207.285 152.034 C 206.560 151.586,206.553 151.553,206.626 148.861 C 206.675 147.029,206.029 146.331,205.227 147.350 M214.622 147.378 C 214.446 147.882,214.839 149.094,215.178 149.094 C 215.507 149.094,215.875 147.765,215.670 147.315 C 215.401 146.724,214.838 146.758,214.622 147.378 M293.776 147.227 C 293.240 148.227,293.714 149.606,294.706 149.937 C 294.856 149.987,294.929 150.759,294.955 152.556 L 294.991 155.104 296.952 155.192 L 298.912 155.281 298.801 154.840 C 298.654 154.255,298.431 154.138,297.459 154.134 C 296.651 154.132,296.637 154.122,296.274 153.279 C 295.911 152.434,295.911 152.277,296.278 150.817 L 296.467 150.066 297.574 150.066 C 298.420 150.066,298.706 150.000,298.788 149.787 C 299.033 149.149,298.923 149.058,298.067 149.187 C 296.320 149.453,295.385 149.154,295.366 148.325 C 295.340 147.231,294.196 146.441,293.776 147.227 M382.174 147.379 C 381.739 147.989,381.109 152.129,381.294 153.160 C 381.601 154.877,381.302 156.358,380.554 156.826 C 379.776 157.311,380.146 157.490,381.928 157.490 C 382.876 157.490,383.924 157.568,384.256 157.663 C 385.417 157.996,385.728 157.105,384.720 156.336 C 383.642 155.514,383.548 154.591,384.383 153.027 C 384.611 152.600,384.611 152.541,384.383 152.541 C 383.824 152.541,383.242 153.551,383.114 154.740 C 382.798 157.696,382.144 156.447,382.130 152.859 C 382.113 148.412,382.854 145.723,383.080 149.413 C 383.200 151.378,383.262 151.552,383.998 152.007 C 384.755 152.475,384.946 152.460,384.503 151.966 C 383.938 151.338,383.562 150.150,383.562 148.996 C 383.562 147.340,382.818 146.473,382.174 147.379 M175.869 147.409 C 176.132 147.899,176.033 157.348,175.764 157.438 C 175.656 157.474,175.471 157.242,175.354 156.922 C 174.898 155.685,174.546 155.156,174.026 154.929 L 173.487 154.694 174.029 154.475 C 175.958 153.694,175.828 148.466,173.863 147.835 C 173.547 147.733,173.628 147.664,174.370 147.401 C 175.521 146.994,175.648 146.995,175.869 147.409 M67.277 147.426 C 65.591 147.621,65.667 147.426,65.652 151.622 C 65.635 156.056,65.485 156.546,64.031 156.899 L 63.190 157.103 63.921 157.120 C 65.724 157.161,66.284 157.882,66.284 160.162 C 66.284 160.928,66.343 161.555,66.416 161.555 C 66.489 161.554,66.549 160.883,66.549 160.062 C 66.549 158.442,67.083 157.506,68.161 157.235 L 68.582 157.130 68.582 152.184 C 68.582 149.464,68.562 147.249,68.537 147.261 C 68.513 147.274,67.946 147.348,67.277 147.426 M346.393 147.410 C 344.696 147.583,344.765 147.406,344.753 151.622 C 344.741 155.945,344.549 156.590,343.179 156.922 L 342.466 157.094 343.072 157.115 C 344.640 157.170,345.358 157.925,345.407 159.573 L 345.432 160.407 345.541 159.514 C 345.670 158.464,346.261 157.638,347.106 157.326 L 347.680 157.114 347.680 152.176 C 347.680 149.460,347.660 147.249,347.636 147.263 C 347.612 147.277,347.052 147.343,346.393 147.410 M365.532 147.364 C 364.058 147.456,364.006 147.505,364.631 148.218 C 365.235 148.905,365.196 148.547,365.248 153.946 C 365.267 155.960,365.270 155.972,365.752 156.244 C 366.813 156.844,367.093 156.157,367.224 152.629 C 367.357 149.049,367.422 148.680,368.022 148.080 C 368.896 147.206,368.751 147.164,365.532 147.364 M54.722 148.087 C 54.487 149.623,54.831 150.066,56.258 150.066 C 57.001 150.066,57.254 150.008,57.162 149.859 C 57.092 149.746,57.051 149.238,57.072 148.732 C 57.111 147.751,56.866 147.519,55.943 147.664 C 55.749 147.695,55.417 147.655,55.206 147.577 C 54.864 147.450,54.811 147.505,54.722 148.087 M205.950 148.699 L 205.782 149.448 205.769 148.387 C 205.759 147.582,205.799 147.402,205.937 147.638 C 206.056 147.844,206.061 148.204,205.950 148.699 M215.357 148.023 C 215.248 148.307,215.221 148.310,215.077 148.052 C 214.886 147.710,215.076 147.308,215.315 147.547 C 215.405 147.636,215.424 147.851,215.357 148.023 M294.341 148.160 C 294.159 148.539,294.146 148.527,294.135 147.954 C 294.126 147.489,294.172 147.393,294.329 147.551 C 294.482 147.703,294.485 147.862,294.341 148.160 M333.876 147.592 C 333.783 148.698,333.796 149.684,333.904 149.618 C 333.975 149.574,334.078 149.657,334.134 149.802 C 334.209 149.996,334.520 150.066,335.308 150.066 C 336.265 150.066,336.365 150.033,336.240 149.757 C 336.163 149.587,336.106 149.070,336.113 148.608 C 336.120 148.131,336.044 147.763,335.937 147.756 C 335.834 147.749,335.391 147.729,334.954 147.712 C 334.516 147.694,334.100 147.601,334.028 147.503 C 333.951 147.398,333.889 147.434,333.876 147.592 M282.081 148.767 C 281.670 149.261,281.648 154.397,282.053 155.192 C 282.411 155.894,282.750 156.024,283.256 155.653 C 283.706 155.324,283.800 149.294,283.363 148.768 C 283.052 148.393,282.393 148.392,282.081 148.767 M366.659 149.028 C 367.073 151.095,366.678 155.854,366.153 155.136 C 365.950 154.859,365.955 149.340,366.159 148.696 C 366.286 148.294,366.547 148.467,366.659 149.028 M282.948 152.188 C 282.993 154.511,282.873 155.313,282.530 154.971 C 282.366 154.807,282.212 150.538,282.350 149.988 C 282.652 148.784,282.900 149.694,282.948 152.188 M109.898 150.611 C 109.684 150.735,109.589 151.011,109.589 151.506 C 109.589 152.636,109.104 154.062,108.609 154.386 C 108.309 154.582,108.175 154.833,108.175 155.196 L 108.175 155.722 109.589 155.722 C 111.253 155.722,111.842 155.371,111.617 154.514 C 111.550 154.255,111.397 153.351,111.278 152.506 C 111.004 150.561,110.700 150.144,109.898 150.611 M8.467 151.683 C 8.719 152.406,8.720 154.781,8.469 154.937 C 8.174 155.119,7.951 154.790,7.850 154.028 C 7.800 153.648,7.674 153.049,7.571 152.698 C 7.244 151.585,8.096 150.620,8.467 151.683 M110.821 153.160 C 110.822 154.784,110.774 154.841,109.436 154.819 C 108.278 154.800,108.273 154.798,109.039 154.648 C 110.000 154.459,109.933 154.541,110.061 153.404 C 110.269 151.555,110.821 151.378,110.821 153.160 M206.267 155.193 C 206.271 155.632,206.347 156.242,206.436 156.550 C 206.562 156.990,206.539 157.133,206.333 157.212 C 205.843 157.400,205.770 157.315,205.561 156.307 C 205.446 155.754,205.271 155.172,205.172 155.014 C 205.037 154.798,205.098 154.564,205.413 154.078 L 205.833 153.430 206.046 153.913 C 206.163 154.179,206.262 154.755,206.267 155.193 M167.618 153.990 C 167.236 154.175,167.164 154.371,166.942 155.845 C 166.820 156.653,166.483 157.057,166.065 156.897 C 165.918 156.840,165.798 156.871,165.798 156.965 C 165.798 157.060,165.998 157.137,166.242 157.137 C 167.675 157.137,168.592 158.016,168.641 159.436 C 168.649 159.685,168.755 159.466,168.884 158.932 C 169.150 157.833,169.383 157.556,170.323 157.221 C 170.746 157.070,170.871 156.972,170.648 156.968 C 169.988 156.953,169.688 156.555,169.509 155.458 C 169.415 154.875,169.257 154.371,169.158 154.339 C 169.060 154.306,168.979 154.166,168.979 154.029 C 168.979 153.732,168.198 153.710,167.618 153.990 M56.623 154.290 C 55.850 155.010,55.969 158.145,56.779 158.417 C 57.480 158.653,57.768 158.169,58.222 155.993 C 58.518 154.577,58.515 154.567,57.677 154.217 C 56.917 153.900,57.051 153.891,56.623 154.290 M335.721 154.290 C 335.229 154.748,335.009 157.097,335.390 157.833 C 336.125 159.254,337.081 158.132,337.366 155.514 L 337.476 154.510 336.812 154.232 C 336.010 153.897,336.150 153.890,335.721 154.290 M168.865 155.392 C 168.700 155.763,168.691 155.761,168.373 155.274 C 168.058 154.794,168.058 154.773,168.380 154.537 C 168.808 154.225,169.132 154.795,168.865 155.392 M57.319 154.583 C 57.520 154.660,57.556 154.951,57.490 155.953 C 57.397 157.362,57.025 158.077,56.817 157.249 C 56.708 156.814,56.865 154.485,57.004 154.485 C 57.037 154.485,57.178 154.529,57.319 154.583 M336.508 155.886 C 336.559 157.126,336.356 157.790,335.994 157.566 C 335.811 157.453,335.779 154.779,335.959 154.599 C 336.276 154.282,336.461 154.713,336.508 155.886 M197.934 154.959 C 196.882 155.236,196.474 161.556,197.508 161.555 C 197.934 161.555,197.987 160.156,197.639 158.121 C 197.419 156.838,197.531 156.163,198.088 155.413 C 198.514 154.841,198.502 154.809,197.934 154.959 M293.849 155.805 C 293.408 156.859,293.731 157.736,294.486 157.539 C 295.021 157.399,295.003 155.192,294.467 155.192 C 294.221 155.192,294.023 155.388,293.849 155.805 M10.174 156.292 C 9.600 157.110,10.114 157.845,11.019 157.501 C 11.699 157.242,11.746 156.974,11.210 156.415 C 10.617 155.796,10.528 155.785,10.174 156.292 M111.817 156.179 C 111.614 156.709,111.711 157.259,112.064 157.578 C 112.258 157.754,112.417 157.971,112.417 158.060 C 112.417 158.453,112.967 158.697,113.978 158.754 C 114.998 158.812,115.069 158.791,115.069 158.432 C 115.068 157.600,114.913 157.490,113.743 157.490 C 112.906 157.490,112.606 157.423,112.527 157.218 C 112.379 156.832,112.810 156.719,113.972 156.839 C 115.033 156.949,115.016 156.892,113.794 156.246 C 112.989 155.821,111.968 155.786,111.817 156.179 M327.440 157.676 C 327.299 158.511,326.876 158.730,326.703 158.058 C 326.542 157.428,326.543 156.599,326.707 156.173 C 326.946 155.550,327.580 156.849,327.440 157.676 M284.755 156.482 C 283.922 156.903,284.181 157.394,285.268 157.456 C 286.501 157.526,287.229 157.235,287.229 156.673 C 287.229 156.181,285.598 156.055,284.755 156.482 M317.671 157.236 C 317.531 157.487,317.495 157.487,317.287 157.236 C 317.099 157.010,317.099 156.910,317.287 156.683 C 317.586 156.323,317.916 156.798,317.671 157.236 M361.644 156.752 C 361.644 157.320,364.220 157.742,364.635 157.242 C 364.767 157.082,364.829 156.905,364.773 156.848 C 364.564 156.639,361.644 156.549,361.644 156.752 M233.584 157.841 C 233.497 158.474,233.345 158.809,233.042 159.034 C 232.737 159.260,232.600 159.565,232.545 160.141 C 232.503 160.579,232.413 161.076,232.344 161.246 C 232.235 161.520,232.340 161.555,233.256 161.555 L 234.291 161.554 234.285 159.655 C 234.278 157.428,234.319 157.181,234.707 157.078 C 234.867 157.036,234.707 156.992,234.352 156.980 C 233.707 156.960,233.705 156.962,233.584 157.841 M17.119 158.320 C 16.117 158.571,16.343 159.644,17.525 160.243 C 18.158 160.564,18.561 160.935,18.942 161.549 C 19.353 162.209,19.607 162.431,20.047 162.513 C 20.361 162.572,20.974 162.846,21.409 163.122 C 21.844 163.397,22.431 163.700,22.715 163.795 C 23.251 163.974,23.494 165.049,23.114 165.561 C 23.021 165.685,23.052 165.824,23.191 165.913 C 23.346 166.013,23.221 166.096,22.802 166.171 C 22.461 166.232,23.336 166.286,24.746 166.291 C 26.156 166.296,27.209 166.260,27.088 166.211 C 26.948 166.154,26.867 165.756,26.867 165.120 C 26.867 164.152,26.110 163.319,25.233 163.323 C 24.885 163.324,24.216 162.510,24.216 162.084 C 24.216 161.765,24.074 161.540,23.774 161.379 C 23.531 161.249,23.332 161.076,23.332 160.995 C 23.332 160.915,23.228 160.848,23.102 160.848 C 22.976 160.848,22.368 160.382,21.752 159.812 C 20.571 158.719,20.670 158.756,17.764 158.302 C 17.570 158.272,17.279 158.280,17.119 158.320 M135.793 159.034 C 135.450 159.264,135.395 159.456,135.395 160.428 L 135.395 161.555 135.972 161.555 L 136.549 161.555 136.509 160.403 C 136.458 158.923,136.329 158.675,135.793 159.034 M28.458 159.081 L 28.016 159.222 28.502 159.240 C 28.769 159.250,28.988 159.178,28.988 159.081 C 28.988 158.984,28.968 158.912,28.944 158.922 C 28.920 158.931,28.701 159.003,28.458 159.081 M20.047 159.188 C 20.201 159.247,20.327 159.400,20.327 159.527 C 20.327 160.138,20.944 160.817,21.594 160.921 C 21.957 160.979,22.318 161.134,22.396 161.265 C 22.473 161.396,22.643 161.538,22.773 161.579 C 22.956 161.637,22.933 161.749,22.674 162.069 C 21.962 162.948,19.665 162.077,19.349 160.807 C 19.180 160.128,19.105 160.057,18.354 159.866 C 17.379 159.617,17.106 159.465,17.241 159.245 C 17.354 159.064,19.604 159.018,20.047 159.188 M107.733 168.449 C 107.420 168.584,107.435 168.602,107.866 168.613 C 108.133 168.620,108.352 168.546,108.352 168.449 C 108.352 168.241,108.216 168.241,107.733 168.449 \",stroke:\"none\",fill:\"#3c643c\",fillRule:\"evenodd\"}))));}var ForwardRef=/*#__PURE__*/React.forwardRef(SvgValtraLogo);export default __webpack_public_path__+\"static/media/valtra_logo.058bdf3b721ef5ef6122660167256f43.svg\";export{ForwardRef as ReactComponent};","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\n *\n * @export\n * @enum {number}\n */\nexport enum PerformanceEvents {\n\n    /**\n     * acquireTokenByCode API (msal-browser and msal-node).\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\n     */\n    AcquireTokenByCode = \"acquireTokenByCode\",\n\n    /**\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\n     * Used to renew an access token using a refresh token against the token endpoint.\n     */\n    AcquireTokenByRefreshToken = \"acquireTokenByRefreshToken\",\n\n    /**\n     * acquireTokenSilent API (msal-browser and msal-node).\n     * Used to silently acquire a new access token (from the cache or the network).\n     */\n    AcquireTokenSilent = \"acquireTokenSilent\",\n\n    /**\n     * acquireTokenSilentAsync (msal-browser).\n     * Internal API for acquireTokenSilent.\n     */\n    AcquireTokenSilentAsync = \"acquireTokenSilentAsync\",\n\n    /**\n     * acquireTokenPopup (msal-browser).\n     * Used to acquire a new access token interactively through pop ups\n     */\n    AcquireTokenPopup = \"acquireTokenPopup\",\n\n    /**\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\n     */\n    CryptoOptsGetPublicKeyThumbprint = \"cryptoOptsGetPublicKeyThumbprint\",\n\n    /**\n     * signJwt API in CryptoOpts class (msal-browser).\n     * Used to signed a pop token.\n     */\n    CryptoOptsSignJwt = \"cryptoOptsSignJwt\",\n\n    /**\n     * acquireToken API in the SilentCacheClient class (msal-browser).\n     * Used to read access tokens from the cache.\n     */\n    SilentCacheClientAcquireToken = \"silentCacheClientAcquireToken\",\n\n    /**\n     * acquireToken API in the SilentIframeClient class (msal-browser).\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\n     */\n    SilentIframeClientAcquireToken = \"silentIframeClientAcquireToken\",\n\n    /**\n     * acquireToken API in SilentRereshClient (msal-browser).\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\n     */\n    SilentRefreshClientAcquireToken = \"silentRefreshClientAcquireToken\",\n\n    /**\n     * ssoSilent API (msal-browser).\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\n     */\n    SsoSilent = \"ssoSilent\",\n\n    /**\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\n     * Used to load authority metadata for a request.\n     */\n    StandardInteractionClientGetDiscoveredAuthority = \"standardInteractionClientGetDiscoveredAuthority\",\n\n    /**\n     * acquireToken APIs in msal-browser.\n     * Used to make an /authorize endpoint call with native brokering enabled.\n     */\n    FetchAccountIdWithNativeBroker = \"fetchAccountIdWithNativeBroker\",\n\n    /**\n     * acquireToken API in NativeInteractionClient class (msal-browser).\n     * Used to acquire a token from Native component when native brokering is enabled.\n     */\n    NativeInteractionClientAcquireToken = \"nativeInteractionClientAcquireToken\",\n}\n\n/**\n * State of the performance event.\n *\n * @export\n * @enum {number}\n */\nexport enum PerformanceEventStatus {\n    NotStarted,\n    InProgress,\n    Completed\n}\n\n/**\n * Performance measurement taken by the library, including metadata about the request and application.\n *\n * @export\n * @typedef {PerformanceEvent}\n */\nexport type PerformanceEvent = {\n    /**\n     * Unique id for the event\n     *\n     * @type {string}\n     */\n    eventId: string,\n\n    /**\n     * State of the perforance measure.\n     *\n     * @type {PerformanceEventStatus}\n     */\n    status: PerformanceEventStatus,\n\n    /**\n     * Login authority used for the request\n     *\n     * @type {string}\n     */\n    authority: string,\n\n    /**\n     * Client id for the application\n     *\n     * @type {string}\n     */\n    clientId: string\n\n    /**\n     * Correlation ID used for the request\n     *\n     * @type {string}\n     */\n    correlationId: string,\n\n    /**\n     * End-to-end duration in milliseconds.\n     * @date 3/22/2022 - 3:40:05 PM\n     *\n     * @type {number}\n     */\n    durationMs?: number,\n\n    /**\n     * Visibility of the page when the event completed.\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\n     *\n     * @type {?(string | null)}\n     */\n    endPageVisibility?: string | null,\n\n    /**\n     * Whether the result was retrieved from the cache.\n     *\n     * @type {(boolean | null)}\n     */\n    fromCache?: boolean | null,\n\n    /**\n     * Event name (usually in the form of classNameFunctionName)\n     *\n     * @type {PerformanceEvents}\n     */\n    name: PerformanceEvents,\n\n    /**\n     * Visibility of the page when the event completed.\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\n     *\n     * @type {?(string | null)}\n     */\n    startPageVisibility?: string | null,\n\n    /**\n     * Unix millisecond timestamp when the event was initiated.\n     *\n     * @type {number}\n     */\n    startTimeMs: number,\n\n    /**\n     * Whether or the operation completed successfully.\n     *\n     * @type {(boolean | null)}\n     */\n    success?: boolean | null,\n\n    /**\n     * Add specific error code in case of failure\n     *\n     * @type {string}\n     */\n    errorCode?: string,\n\n    /**\n     * Add specific sub error code in case of failure\n     *\n     * @type {string}\n     */\n    subErrorCode?: string,\n\n    /**\n     * Name of the library used for the operation.\n     *\n     * @type {string}\n     */\n    libraryName: string,\n\n    /**\n     * Version of the library used for the operation.\n     *\n     * @type {string}\n     */\n    libraryVersion: string,\n\n    /**\n     * Application name as specified by the app.\n     *\n     * @type {?string}\n     */\n    appName?: string,\n\n    /**\n     * Application version as specified by the app.\n     *\n     * @type {?string}\n     */\n    appVersion?: string,\n\n    /**\n     * Whether the response is from a native component (e.g., WAM)\n     *\n     * @type {?boolean}\n     */\n    isNativeBroker?: boolean\n};\n","//React\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//Other Files\r\nimport \"../assets/css/App.css\";\r\n// import logo from '../assets/images/logo.svg'\r\nimport valtra_logo from \"../assets/images/valtra_logo.svg\";\r\nimport \"../App.jsx\";\r\n//Bootstrap\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\n//components;\r\nimport { Version } from \"../components/structure/Version\";\r\n//Azure auth\r\n// import { useIsAuthenticated } from \"@azure/msal-react\";\r\n\r\nconst SignOutPage = (props) => {\r\n  let navigate = useNavigate();\r\n  const redirect = () => {\r\n    navigate(\"/\");\r\n  };\r\n  const redirectUn = () => {\r\n    navigate(\"/Documentation\");\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar bg=\"primary\" variant=\"dark\">\r\n        <a\r\n          style={{ marginLeft: \".7rem\", marginRight: \".5rem\" }}\r\n          className=\"navbar-brand\"\r\n          href=\"/\"\r\n        >\r\n          Welome to Valtra Automation!\r\n        </a>\r\n      </Navbar>\r\n\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img\r\n            src={valtra_logo}\r\n            className=\"App-logo\"\r\n            alt=\"logo\"\r\n            width={450}\r\n            height={450}\r\n          />\r\n          <p>You are signed Out</p>\r\n          <p>Please go back to Sign in page to gain access</p>\r\n          <p></p>\r\n          <a href=\"/#\">\r\n            <button\r\n              style={{ background: \"#0693E3\" }}\r\n              className=\"px-4\"\r\n              onClick={() => redirect()}\r\n            >\r\n              Go to Login page\r\n            </button>\r\n            <button className=\"px-4\" onClick={() => redirectUn()}>\r\n              Proceed to Unresticted pages\r\n            </button>\r\n          </a>\r\n          <Version />\r\n        </header>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignOutPage;\r\n","import React from 'react'\r\nimport Container from 'react-bootstrap/esm/Container'\r\nimport NavBar from '../components/structure/NavBar' \r\n \r\nimport Photo from '../dowloadableFiles/valtra_logo.gif'  \r\nimport zip from '../dowloadableFiles/Testzip.zip' \r\nimport inforInvoicesZip from '../dowloadableFiles/Testzip.zip'//'../dowloadableFiles/shopify_InForOrders (2).zip'\r\n//TODO actaully app conent that can be downloaded \r\n//Allows users to have a centalized place to \r\n//downlaod content such as infor apps  \r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Downloads---------------------------------------- \r\nconst ValtraImg = Photo; \r\nconst ValtraImgDescription = '.gif file of Valtra.inc logo'; \r\nconst testZip = zip; \r\nconst testZipDescription = 'Test zip folder with .txt File';\r\n\r\nconst inforInvoices = inforInvoicesZip;\r\nconst inforInvoicesDescription = 'Version 1.0.0 '; \r\nconst inforOrders = zip;  \r\nconst inforOrdersDescription = 'Version 1.0.0'; \r\n\r\nconst ApiValtraImg = Photo; \r\nconst ApiValtraImgDescription = 'For Api testing';   \r\n\r\nconst Downloads = () => {  \r\n\r\n  let navigate = useNavigate();\r\n  const goToDocum = () => {\r\n  navigate(`../Documentation`); \r\n  }\r\n\r\n  return (  \r\n    <>\r\n    <div>\r\n      <NavBar/> \r\n      <Container>\r\n        <h1 style={{textAlign: \"center\", fontSize: '40px'}}>Welcome to Downloads</h1> \r\n        <p style={{ textAlign: \"center\" }}>Scroll to find your Application</p>\r\n      </Container>\r\n      <Container>\r\n          <div className=\"box\">\r\n            <h2 style={{ textAlign: \"left\", marginLeft: '.2rem' }}>Infor Invoices</h2>\r\n            <p style={{ textAlign: \"left\", marginLeft: '.2rem' }}>{inforInvoicesDescription}</p> \r\n            <a href={inforInvoices} download={inforInvoices}><button\r\n              type=\"button\"  \r\n              style = {{marginLeft: '.5rem', marginRight: '.7rem', marginTop: '.5rem'}}\r\n              className=\"btn btn-primary\"> \r\n              Download\r\n            </button></a>  \r\n            <button\r\n              type=\"button\" \r\n              style = {{marginLeft: '.5rem', marginRight: '.7rem', marginTop: '.5rem'}}\r\n              className=\"btn btn-outline-secondary\" onClick={() => goToDocum()}>\r\n              See Documentation\r\n            </button > \r\n          </div>  \r\n\r\n          <div className=\"box\">\r\n            <h2 style={{ textAlign: \"left\", marginLeft: '.2rem' }}>Infor Orders</h2>\r\n            <p style={{ textAlign: \"left\", marginLeft: '.2rem' }}>{inforOrdersDescription}</p> \r\n            <a href={inforOrders} download={inforOrders}><button\r\n              type=\"button\"  \r\n              style = {{marginLeft: '.5rem', marginRight: '.7rem', marginTop: '.5rem'}}\r\n              className=\"btn btn-primary\"> \r\n              Download\r\n            </button ></a>  \r\n            <button\r\n              type=\"button\" \r\n              style = {{marginLeft: '.5rem', marginRight: '.7rem', marginTop: '.5rem'}}\r\n              className=\"btn btn-outline-secondary\" onClick={() => goToDocum()}>\r\n              See Documentation\r\n            </button > \r\n          </div>  \r\n\r\n          <div className=\"box\">\r\n            <h2 style={{ textAlign: \"left\", marginLeft: '.2rem' }}>API Valtra IMAGE</h2>\r\n            <p style={{ textAlign: \"left\", marginLeft: '.2rem' }}>{ApiValtraImgDescription}</p> \r\n            <a href={ApiValtraImg} download={ApiValtraImg}><button\r\n              type=\"button\"  \r\n              style = {{marginLeft: '.5rem', marginRight: '.7rem', marginTop: '.5rem'}}\r\n              className=\"btn btn-primary\"> \r\n              Download\r\n            </button ></a>  \r\n            <button\r\n              type=\"button\" \r\n              style = {{marginLeft: '.5rem', marginRight: '.7rem', marginTCSop: '.5rem'}}\r\n              className=\"btn btn-outline-secondary\" onClick={() => goToDocum()}>\r\n              See Documentation\r\n            </button > \r\n          </div> \r\n        <div className=\"title\">\r\n          <div className=\"box\">\r\n            <h2 style={{ textAlign: \"left\", marginLeft: '.2rem' }}>Valtra Image</h2>\r\n            <p style={{ textAlign: \"left\", marginLeft: '.2rem' }}>{ValtraImgDescription}</p> \r\n            <a href={ValtraImg} download={ValtraImg}><button\r\n              type=\"button\"  \r\n              style = {{marginLeft: '.5rem', marginRight: '.7rem', marginTop: '.5rem'}}\r\n              className=\"btn btn-primary\"> \r\n              Download\r\n            </button ></a>  \r\n            <button\r\n              type=\"button\" \r\n              style = {{marginLeft: '.5rem', marginRight: '.7rem', marginTop: '.5rem'}}\r\n              className=\"btn btn-outline-secondary\" onClick={() => goToDocum()}>\r\n              See Documentation\r\n            </button> \r\n          </div> \r\n\r\n          <div className=\"box\">\r\n            <h2 style={{ textAlign: \"left\", marginLeft: '.2rem' }}>Test</h2>\r\n            <p style={{ textAlign: \"left\", marginLeft: '.2rem' }}>{testZipDescription}</p> \r\n            <a href={testZip} download={testZip}><button\r\n              type=\"button\"  \r\n              style = {{marginLeft: '.5rem', marginRight: '.7rem', marginTop: '.5rem'}}\r\n              className=\"btn btn-primary\"> \r\n              Download\r\n            </button></a>  \r\n            <button\r\n              type=\"button\" \r\n              style = {{marginLeft: '.5rem', marginRight: '.7rem', marginTop: '.5rem'}}\r\n              className=\"btn btn-outline-secondary\" onClick={() => goToDocum()}>\r\n              See Documentation\r\n            </button> \r\n          </div>  \r\n\r\n        </div>\r\n      </Container>\r\n    </div></>\r\n  )\r\n}\r\n\r\nexport default Downloads","import React from 'react'\r\nimport Container from 'react-bootstrap/esm/Container'\r\nimport NavBar from '../components/structure/NavBar' \r\n\r\nimport invoiceDoc from '../dowloadableFiles/ReadMeFile.pdf'\r\n\r\n//TODO put actual documentation\r\n//Holds the documentation for the website itself such as how to use it \r\n//and holds documentation for other relevent apps such as infor macros \r\nlet inforInvoicesDescription = 'Version 1.0.0' \r\nlet inforDoc = invoiceDoc\r\nconst Documentation = () => {  \r\n  return (   \r\n    <div>\r\n      <NavBar/> \r\n      <Container> \r\n        <h1 style={{textAlign: \"center\", fontSize: '40px'}}>Welcome to Documentation</h1> \r\n        <p style={{ textAlign: \"center\" }}>Scroll to find your Application</p>\r\n        <div className=\"box\">\r\n              <h2 style={{ textAlign: \"left\", marginLeft: '.2rem' }}>Infor Invoices</h2>\r\n              <p style={{ textAlign: \"left\", marginLeft: '.2rem' }}>{inforInvoicesDescription}</p> \r\n              <a href={inforDoc} download={inforDoc}><button\r\n                type=\"button\"  \r\n                style = {{marginLeft: '.5rem', marginRight: '.7rem', marginTop: '.5rem'}}\r\n                className=\"btn btn-primary\"> \r\n                Download Documentation\r\n              </button></a>  \r\n          </div>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Documentation","import React from 'react'\r\nimport Container from 'react-bootstrap/esm/Container'\r\nimport NavBar from '../components/structure/NavBar'\r\n//TODO put actual documentation\r\n//Holds the documentation for the website itself such as how to use it \r\n//and holds documentation for other relevent apps such as infor macros \r\n// however this is a restricted version that does not reuire a sign in, \r\n// this is done to enable easy access from other documentation pageXOffset, so that \r\n// users of already distributed applications can view updated documentation\r\nconst DocumentationRestricted = () => { \r\n  return ( \r\n    <div>\r\n      <NavBar/> \r\n      <Container>\r\n      <h1 style={{textAlign: \"center\", fontSize: '40px'}}>Welcome to Documentation</h1> \r\n      <p style={{ textAlign: \"center\" }}>Scroll to find your Application</p>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DocumentationRestricted","import React from 'react'\r\nimport Container from 'react-bootstrap/esm/Container'\r\nimport NavBar from '../components/structure/NavBar' \r\nimport {Version} from '../components/structure/Version'\r\n\r\nconst Updates = () => { \r\n  return ( \r\n    <div>\r\n      <NavBar/> \r\n      <Container>\r\n        <p>Updates 1.0.0 - 1.0.14 development phases with 1.0.14 being the first functional version</p> \r\n        <p>First official update: TBD</p> \r\n        <p>Current: <Version/></p>  \r\n      </Container>\r\n    </div> \r\n    \r\n  )\r\n}\r\n\r\nexport default Updates","import { protectedResources } from \"../authentication/authConfig\";\r\n\r\nexport const ProfileData = (props) => {\r\n    const tableRows = Object.entries(props.graphData).map((entry, index) => {\r\n        return (<tr key={index}>\r\n            <td><b>{entry[0]}: </b></td>\r\n            <td>{entry[1]}</td>\r\n        </tr>)\r\n    });\r\n\r\n    return (\r\n        <>\r\n        <div className=\"data-area-div\">\r\n            <p>Calling <strong>Microsoft Graph API</strong>...</p>\r\n            <ul>\r\n                <li><strong>resource:</strong> <mark>User</mark> object</li>\r\n                <li><strong>endpoint:</strong> <mark>https://graph.microsoft.com/v1.0/me</mark></li>\r\n                <li><strong>scope:</strong> <mark>user.read</mark></li>\r\n            </ul>\r\n            <p>Contents of the <strong>response</strong> is below:</p>\r\n        </div>\r\n        <div className=\"data-area-div\">\r\n            <table>\r\n                <thead>\r\n                </thead>\r\n                <tbody>\r\n                    {tableRows}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport const HelloData = (props) => {\r\n    const tableRows = Object.entries(props.helloData).map((entry, index) => {\r\n        return (<tr key={index}>\r\n            <td><b>{entry[0]}: </b></td>\r\n            <td>{entry[1]}</td>\r\n        </tr>)\r\n    });\r\n\r\n    return (\r\n        <>\r\n        <div className=\"data-area-div\">\r\n            <p>Calling <strong>custom protected web API</strong>...</p>\r\n            <ul>\r\n                <li><strong>endpoint:</strong> <mark>{protectedResources.apiHello.endpoint}</mark></li>\r\n                <li><strong>scope:</strong> <mark>{protectedResources.apiHello.scopes[0]}</mark></li>\r\n            </ul>\r\n            <p>Contents of the <strong>response</strong> is below:</p>\r\n        </div>\r\n        <div className=\"data-area-div\">\r\n            <table>\r\n                <thead>\r\n                </thead>\r\n                <tbody>\r\n                    {tableRows}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </>\r\n    );\r\n}","import { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  MsalAuthenticationTemplate,\r\n  useMsal,\r\n  useAccount,\r\n} from \"@azure/msal-react\";\r\nimport {\r\n  InteractionRequiredAuthError,\r\n  InteractionType,\r\n} from \"@azure/msal-browser\";\r\n\r\nimport { loginRequest, protectedResources } from \"../authentication/authConfig\";\r\nimport { callApiWithToken } from \"../fetch\";\r\nimport { HelloData } from \"../components/DataDisplay\";\r\n\r\nconst HelloContent = () => {\r\n  /**\r\n   * useMsal is hook that returns the PublicClientApplication instance,\r\n   * an array of all accounts currently signed in and an inProgress value\r\n   * that tells you what msal is currently doing. For more, visit:\r\n   * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/hooks.md\r\n   */\r\n  const { instance, accounts, inProgress } = useMsal();\r\n  const account = useAccount(accounts[0] || {});\r\n  const [helloData, setHelloData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (account && inProgress === \"none\" && !helloData) {\r\n      instance\r\n        .acquireTokenSilent({\r\n          scopes: protectedResources.apiHello.scopes,\r\n          account: account,\r\n        })\r\n        .then((response) => {\r\n          callApiWithToken(\r\n            response.accessToken,\r\n            protectedResources.apiHello.endpoint,\r\n            \"GET\"\r\n          )\r\n          .then((response) => setHelloData(response));\r\n        })\r\n        .catch((error) => {\r\n          // in case if silent token acquisition fails, fallback to an interactive method\r\n          if (error instanceof InteractionRequiredAuthError) {\r\n            if (account && inProgress === \"none\") {\r\n              instance\r\n                .acquireTokenPopup({\r\n                  scopes: protectedResources.apiHello.scopes,\r\n                })\r\n                .then((response) => {\r\n                  callApiWithToken(\r\n                    response.accessToken,\r\n                    protectedResources.apiHello.endpoint\r\n                  ).then((response) => setHelloData(response));\r\n                })\r\n                .catch((error) => console.log(error));\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }, [account, inProgress, instance,helloData]);\r\n\r\n  return <>{helloData ? <HelloData helloData={helloData} /> : null}</>;\r\n};\r\n\r\n/**\r\n * The `MsalAuthenticationTemplate` component will render its children if a user is authenticated\r\n * or attempt to sign a user in. Just provide it with the interaction type you would like to use\r\n * (redirect or popup) and optionally a [request object](https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/request-response-object.md)\r\n * to be passed to the login API, a component to display while authentication is in progress or a component to display if an error occurs. For more, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/getting-started.md\r\n */\r\nexport const Hello = () => {\r\n  const authRequest = {\r\n    ...loginRequest,\r\n  };\r\n\r\n  return (\r\n    <MsalAuthenticationTemplate\r\n      interactionType={InteractionType.Redirect}\r\n      authenticationRequest={authRequest}\r\n    >\r\n      <HelloContent />\r\n    </MsalAuthenticationTemplate>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Home from \"./routes/Home\";\r\nimport UpdateProducts from \"./routes/UpdateProducts\";\r\n\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport { ProductsContextProvider } from \"./context/ProductsContext\";\r\nimport OrderPage from \"./routes/OrderPage\";\r\nimport { OrdersContextProvider } from \"./context/OrdersContext\";\r\nimport FulfillingOrders from \"./routes/FulfillingOrders\";\r\nimport { VariantsContextProvider } from \"./context/VariantsContext\";\r\n\r\n//authentication\r\nimport {\r\n  AuthenticatedTemplate,\r\n  UnauthenticatedTemplate,\r\n} from \"@azure/msal-react\";\r\n\r\n//more pages\r\nimport SignInPage from \"./routes/SignInPage\";\r\nimport ShopifyProducts from \"./routes/ShopifyProducts\";\r\nimport Variants from \"./routes/Variants\";\r\nimport SignOutPage from \"./routes/SignOut\"; \r\nimport Downloads from \"./routes/Downloads\";\r\nimport Documentation from \"./routes/Documentation\";\r\nimport DocumentationRestricted from \"./routes/DocumentationRestricted\"; \r\nimport Updates from\"./routes/Updates\";\r\nimport { Hello } from \"./routes/Hello\";\r\n\r\n//version num\r\nconst App = () => { \r\n\r\n  return ( \r\n    <React.StrictMode>\r\n      <AuthenticatedTemplate>  \r\n      <VariantsContextProvider>\r\n        <ProductsContextProvider>\r\n          <OrdersContextProvider>\r\n            <Router>\r\n              <Routes> \r\n                <Route exact path=\"/\" element={<Home />} />\r\n                <Route\r\n                  exact\r\n                  path=\"/products/:id/update\"\r\n                  element={<UpdateProducts />}\r\n                />\r\n                <Route path=\"/orders\" element={<OrderPage />} />\r\n                <Route path=\"/fulfill\" element={<FulfillingOrders />} />\r\n                <Route path='/products' element={<ShopifyProducts/>}/> \r\n                <Route path=\"/downloads\" element={<Downloads/>} />\r\n                <Route path=\"/documentation\" element={<Documentation/>} />\r\n                <Route path=\"/product/gid://shopify/Product/:id\" element={<Variants/>}/> \r\n                <Route path=\"/updates\" element={<Updates/>} />\r\n                <Route path=\"/hello\" element={<Hello/>}/>\r\n                </Routes>\r\n              </Router>\r\n\r\n          </OrdersContextProvider>\r\n        </ProductsContextProvider>\r\n        </VariantsContextProvider>\r\n      </AuthenticatedTemplate>\r\n      <UnauthenticatedTemplate>\r\n        <Router>\r\n          <Routes>\r\n            <Route exact path=\"/\" element={<SignInPage />} />\r\n            <Route exact path=\"/products/:id/update\" element={<SignOutPage/>} />\r\n            <Route exact path=\"/products/:id\" element={<SignOutPage/>} />\r\n            <Route path=\"/orders\" element={<SignOutPage />} /> \r\n            <Route path=\"/products\" element={<SignOutPage />} />\r\n            <Route path=\"/fulfill\" element={<SignOutPage />} />  \r\n            <Route path = \"/SignedOut\" element = {<SignOutPage/>}/> \r\n            <Route path=\"/downloads\" element={<SignOutPage/>} />\r\n            <Route path=\"/documentation\" element={<DocumentationRestricted/>} />\r\n          </Routes>\r\n        </Router>\r\n      </UnauthenticatedTemplate>\r\n    </React.StrictMode>\r\n  ); \r\n}; \r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, IPerformanceClient, JoseHeader, Logger, PerformanceEvents, PkceCodes, SignedHttpRequest, SignedHttpRequestParameters } from \"@azure/msal-common\";\nimport { GuidGenerator } from \"./GuidGenerator\";\nimport { Base64Encode } from \"../encode/Base64Encode\";\nimport { Base64Decode } from \"../encode/Base64Decode\";\nimport { PkceGenerator } from \"./PkceGenerator\";\nimport { BrowserCrypto } from \"./BrowserCrypto\";\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { AsyncMemoryStorage } from \"../cache/AsyncMemoryStorage\";\n\nexport type CachedKeyPair = {\n    publicKey: CryptoKey,\n    privateKey: CryptoKey,\n    requestMethod?: string,\n    requestUri?: string\n};\n\n/**\n * MSAL CryptoKeyStore DB Version 2\n */\nexport type CryptoKeyStore = {\n    asymmetricKeys: AsyncMemoryStorage<CachedKeyPair>;\n    symmetricKeys: AsyncMemoryStorage<CryptoKey>;\n};\n\nexport enum CryptoKeyStoreNames {\n    asymmetricKeys = \"asymmetricKeys\",\n    symmetricKeys = \"symmetricKeys\"\n}\n\n/**\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and \n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\n */\nexport class CryptoOps implements ICrypto {\n\n    private browserCrypto: BrowserCrypto;\n    private guidGenerator: GuidGenerator;\n    private b64Encode: Base64Encode;\n    private b64Decode: Base64Decode;\n    private pkceGenerator: PkceGenerator;\n    private logger: Logger;\n\n    /**\n     * CryptoOps can be used in contexts outside a PCA instance,\n     * meaning there won't be a performance manager available.\n     */\n    private performanceClient: IPerformanceClient | undefined;\n\n    private static POP_KEY_USAGES: Array<KeyUsage> = [\"sign\", \"verify\"];\n    private static EXTRACTABLE: boolean = true;\n    private cache: CryptoKeyStore;\n\n    constructor(logger: Logger, performanceClient?: IPerformanceClient) {\n        this.logger = logger;\n        // Browser crypto needs to be validated first before any other classes can be set.\n        this.browserCrypto = new BrowserCrypto(this.logger);\n        this.b64Encode = new Base64Encode();\n        this.b64Decode = new Base64Decode();\n        this.guidGenerator = new GuidGenerator(this.browserCrypto);\n        this.pkceGenerator = new PkceGenerator(this.browserCrypto);\n        this.cache = {\n            asymmetricKeys: new AsyncMemoryStorage<CachedKeyPair>(this.logger, CryptoKeyStoreNames.asymmetricKeys),\n            symmetricKeys: new AsyncMemoryStorage<CryptoKey>(this.logger, CryptoKeyStoreNames.symmetricKeys)\n        };\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Creates a new random GUID - used to populate state and nonce.\n     * @returns string (GUID)\n     */\n    createNewGuid(): string {\n        return this.guidGenerator.generateGuid();\n    }\n\n    /**\n     * Encodes input string to base64.\n     * @param input \n     */\n    base64Encode(input: string): string {\n        return this.b64Encode.encode(input);\n    }    \n    \n    /**\n     * Decodes input string from base64.\n     * @param input \n     */\n    base64Decode(input: string): string {\n        return this.b64Decode.decode(input);\n    }\n\n    /**\n     * Generates PKCE codes used in Authorization Code Flow.\n     */\n    async generatePkceCodes(): Promise<PkceCodes> {\n        return this.pkceGenerator.generateCodes();\n    }\n\n    /**\n     * Generates a keypair, stores it and returns a thumbprint\n     * @param request\n     */\n    async getPublicKeyThumbprint(request: SignedHttpRequestParameters): Promise<string> {\n        const publicKeyThumbMeasurement = this.performanceClient?.startMeasurement(PerformanceEvents.CryptoOptsGetPublicKeyThumbprint, request.correlationId);\n\n        // Generate Keypair\n        const keyPair: CryptoKeyPair = await this.browserCrypto.generateKeyPair(CryptoOps.EXTRACTABLE, CryptoOps.POP_KEY_USAGES);\n\n        // Generate Thumbprint for Public Key\n        const publicKeyJwk: JsonWebKey = await this.browserCrypto.exportJwk(keyPair.publicKey);\n        \n        const pubKeyThumprintObj: JsonWebKey = {\n            e: publicKeyJwk.e,\n            kty: publicKeyJwk.kty,\n            n: publicKeyJwk.n\n        };\n\n        const publicJwkString: string = BrowserCrypto.getJwkString(pubKeyThumprintObj);\n        const publicJwkHash = await this.hashString(publicJwkString);\n\n        // Generate Thumbprint for Private Key\n        const privateKeyJwk: JsonWebKey = await this.browserCrypto.exportJwk(keyPair.privateKey);\n        // Re-import private key to make it unextractable\n        const unextractablePrivateKey: CryptoKey = await this.browserCrypto.importJwk(privateKeyJwk, false, [\"sign\"]);\n\n        // Store Keypair data in keystore\n        await this.cache.asymmetricKeys.setItem(\n            publicJwkHash, \n            {\n                privateKey: unextractablePrivateKey,\n                publicKey: keyPair.publicKey,\n                requestMethod: request.resourceRequestMethod,\n                requestUri: request.resourceRequestUri\n            }\n        );\n\n        if (publicKeyThumbMeasurement) {\n            publicKeyThumbMeasurement.endMeasurement({\n                success: true\n            });\n        }\n\n        return publicJwkHash;\n    }\n\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid \n     */\n    async removeTokenBindingKey(kid: string): Promise<boolean> {\n        await this.cache.asymmetricKeys.removeItem(kid);\n        const keyFound = await this.cache.asymmetricKeys.containsKey(kid);\n        return !keyFound;\n    }\n\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    async clearKeystore(): Promise<boolean> {\n        try {\n            this.logger.verbose(\"Deleting in-memory and persistent asymmetric key stores\");\n            await this.cache.asymmetricKeys.clear();\n            this.logger.verbose(\"Successfully deleted asymmetric key stores\");\n            this.logger.verbose(\"Deleting in-memory and persistent symmetric key stores\");\n            await this.cache.symmetricKeys.clear();\n            this.logger.verbose(\"Successfully deleted symmetric key stores\");\n            return true;\n        } catch (e) {\n            if (e instanceof Error) {\n                this.logger.error(`Clearing keystore failed with error: ${e.message}`);\n            } else {\n                this.logger.error(\"Clearing keystore failed with unknown error\");\n            }\n            \n            return false;\n        }\n    }\n\n    /**\n     * Signs the given object as a jwt payload with private key retrieved by given kid.\n     * @param payload \n     * @param kid \n     */\n    async signJwt(payload: SignedHttpRequest, kid: string, correlationId?: string): Promise<string> {\n        const signJwtMeasurement = this.performanceClient?.startMeasurement(PerformanceEvents.CryptoOptsSignJwt, correlationId);\n        const cachedKeyPair = await this.cache.asymmetricKeys.getItem(kid);\n        \n        if (!cachedKeyPair) {\n            throw BrowserAuthError.createSigningKeyNotFoundInStorageError(kid);\n        }\n\n        // Get public key as JWK\n        const publicKeyJwk = await this.browserCrypto.exportJwk(cachedKeyPair.publicKey);\n        const publicKeyJwkString = BrowserCrypto.getJwkString(publicKeyJwk);\n        \n        // Base64URL encode public key thumbprint with keyId only: BASE64URL({ kid: \"FULL_PUBLIC_KEY_HASH\" })\n        const encodedKeyIdThumbprint = this.b64Encode.urlEncode(JSON.stringify({ kid: kid }));\n\n        // Generate header\n        const shrHeader = JoseHeader.getShrHeaderString({ kid: encodedKeyIdThumbprint, alg: publicKeyJwk.alg });\n        const encodedShrHeader = this.b64Encode.urlEncode(shrHeader);\n\n        // Generate payload\n        payload.cnf = {\n            jwk: JSON.parse(publicKeyJwkString)\n        };\n        const encodedPayload = this.b64Encode.urlEncode(JSON.stringify(payload));\n\n        // Form token string\n        const tokenString = `${encodedShrHeader}.${encodedPayload}`;\n\n        // Sign token\n        const tokenBuffer = BrowserStringUtils.stringToArrayBuffer(tokenString);\n        const signatureBuffer = await this.browserCrypto.sign(cachedKeyPair.privateKey, tokenBuffer);\n        const encodedSignature = this.b64Encode.urlEncodeArr(new Uint8Array(signatureBuffer));\n\n        const signedJwt = `${tokenString}.${encodedSignature}`;\n\n        if (signJwtMeasurement) {\n            signJwtMeasurement.endMeasurement({\n                success: true\n            });\n        }\n\n        return signedJwt;\n    }\n\n    /**\n     * Returns the SHA-256 hash of an input string\n     * @param plainText\n     */\n    async hashString(plainText: string): Promise<string> {\n        const hashBuffer: ArrayBuffer = await this.browserCrypto.sha256Digest(plainText);\n        const hashBytes = new Uint8Array(hashBuffer);\n        return this.b64Encode.urlEncodeArr(hashBytes);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\n\n/**\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const JoseHeaderErrorMessage = {\n    missingKidError: {\n        code: \"missing_kid_error\",\n        desc: \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\"\n    },\n    missingAlgError: {\n        code: \"missing_alg_error\",\n        desc: \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\"\n    },\n};\n\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nexport class JoseHeaderError extends AuthError {\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"JoseHeaderError\";\n\n        Object.setPrototypeOf(this, JoseHeaderError.prototype);\n    }\n\n    /**\n     * Creates an error thrown when keyId isn't set on JOSE header.\n     */\n    static createMissingKidError(): JoseHeaderError {\n        return new JoseHeaderError(JoseHeaderErrorMessage.missingKidError.code, JoseHeaderErrorMessage.missingKidError.desc);\n    }\n\n    /**\n     * Creates an error thrown when algorithm isn't set on JOSE header.\n     */\n    static createMissingAlgError(): JoseHeaderError {\n        return new JoseHeaderError(JoseHeaderErrorMessage.missingAlgError.code, JoseHeaderErrorMessage.missingAlgError.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { JoseHeaderError } from \"../error/JoseHeaderError\";\nimport { JsonTypes } from \"../utils/Constants\";\n\nexport type JoseHeaderOptions = {\n    typ?: JsonTypes,\n    alg?: string,\n    kid?: string\n};\n\nexport class JoseHeader {\n    public typ?: JsonTypes;\n    public alg?: string;\n    public kid?: string;\n\n    constructor (options: JoseHeaderOptions) {\n        this.typ = options.typ;\n        this.alg = options.alg;\n        this.kid = options.kid;\n    }\n\n    /**\n     * Builds SignedHttpRequest formatted JOSE Header from the\n     * JOSE Header options provided or previously set on the object and returns\n     * the stringified header object.\n     * Throws if keyId or algorithm aren't provided since they are required for Access Token Binding.\n     * @param shrHeaderOptions \n     * @returns \n     */\n    static getShrHeaderString(shrHeaderOptions: JoseHeaderOptions): string {\n        // KeyID is required on the SHR header\n        if (!shrHeaderOptions.kid) {\n            throw JoseHeaderError.createMissingKidError();\n        }\n\n        // Alg is required on the SHR header\n        if (!shrHeaderOptions.alg) {\n            throw JoseHeaderError.createMissingAlgError();\n        }\n\n        const shrHeader = new JoseHeader({\n            // Access Token PoP headers must have type JWT, but the type header can be overriden for special cases\n            typ: shrHeaderOptions.typ || JsonTypes.Jwt,\n            kid: shrHeaderOptions.kid,\n            alg: shrHeaderOptions.alg\n        });\n\n        return JSON.stringify(shrHeader);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Utility class for math specific functions in browser.\n */\nexport class MathUtils {\n\n    /**\n     * Decimal to Hex\n     *\n     * @param num\n     */\n    static decimalToHex(num: number): string {\n        let hex: string = num.toString(16);\n        while (hex.length < 2) {\n            hex = \"0\" + hex;\n        }\n        return hex;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants , IGuidGenerator } from \"@azure/msal-common\";\nimport { MathUtils } from \"../utils/MathUtils\";\nimport { BrowserCrypto } from \"./BrowserCrypto\";\nexport class GuidGenerator implements IGuidGenerator {\n\n    // browser crypto object used to generate random values\n    private cryptoObj: BrowserCrypto;\n\n    constructor(cryptoObj: BrowserCrypto) {\n        this.cryptoObj = cryptoObj;\n    }\n\n    /*\n     * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\n     * pseudo-random numbers.\n     * The algorithm is as follows:\n     *     Set the two most significant bits (bits 6 and 7) of the\n     *        clock_seq_hi_and_reserved to zero and one, respectively.\n     *     Set the four most significant bits (bits 12 through 15) of the\n     *        time_hi_and_version field to the 4-bit version number from\n     *        Section 4.1.3. Version4\n     *     Set all the other bits to randomly (or pseudo-randomly) chosen\n     *     values.\n     * UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\n     * time-low               = 4hexOctet\n     * time-mid               = 2hexOctet\n     * time-high-and-version  = 2hexOctet\n     * clock-seq-and-reserved = hexOctet:\n     * clock-seq-low          = hexOctet\n     * node                   = 6hexOctet\n     * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\n     * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\n     * y values are 8, 9, A, B\n     */\n    generateGuid(): string {\n        try {\n            const buffer: Uint8Array = new Uint8Array(16);\n            this.cryptoObj.getRandomValues(buffer);\n\n            // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\n            buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.\n            buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\n\n            // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\n            buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.\n            buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.\n\n            return MathUtils.decimalToHex(buffer[0]) + MathUtils.decimalToHex(buffer[1])\n                + MathUtils.decimalToHex(buffer[2]) + MathUtils.decimalToHex(buffer[3])\n                + \"-\" + MathUtils.decimalToHex(buffer[4]) + MathUtils.decimalToHex(buffer[5])\n                + \"-\" + MathUtils.decimalToHex(buffer[6]) + MathUtils.decimalToHex(buffer[7])\n                + \"-\" + MathUtils.decimalToHex(buffer[8]) + MathUtils.decimalToHex(buffer[9])\n                + \"-\" + MathUtils.decimalToHex(buffer[10]) + MathUtils.decimalToHex(buffer[11])\n                + MathUtils.decimalToHex(buffer[12]) + MathUtils.decimalToHex(buffer[13])\n                + MathUtils.decimalToHex(buffer[14]) + MathUtils.decimalToHex(buffer[15]);\n        }\n        catch (err) {\n            const guidHolder: string = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\n            const hex: string = \"0123456789abcdef\";\n            let r: number = 0;\n            let guidResponse: string = Constants.EMPTY_STRING;\n            for (let i: number = 0; i < 36; i++) {\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\n                    // each x and y needs to be random\n                    r = Math.random() * 16 | 0;\n                }\n                if (guidHolder[i] === \"x\") {\n                    guidResponse += hex[r];\n                } else if (guidHolder[i] === \"y\") {\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\n                    r |= 0x8; // set pos 3 to 1 as 1???\n                    guidResponse += hex[r];\n                } else {\n                    guidResponse += guidHolder[i];\n                }\n            }\n            return guidResponse;\n        }\n    }\n\n    /**\n     * verifies if a string is  GUID\n     * @param guid\n     */\n    isGuid(guid: string): boolean {\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n        return regexGuid.test(guid);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"@azure/msal-common\";\n\n/**\n * Utility functions for strings in a browser. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nexport class BrowserStringUtils {\n\n    /**\n     * Converts string to Uint8Array\n     * @param sDOMStr \n     */\n    static stringToUtf8Arr (sDOMStr: string): Uint8Array {\n        let nChr;\n        let nArrLen = 0;\n        const nStrLen = sDOMStr.length;\n        /* mapping... */\n        for (let nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\n            nChr = sDOMStr.charCodeAt(nMapIdx);\n            nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\n        }\n\n        const aBytes = new Uint8Array(nArrLen);\n\n        /* transcription... */\n\n        for (let nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\n            nChr = sDOMStr.charCodeAt(nChrIdx);\n            if (nChr < 128) {\n                /* one byte */\n                aBytes[nIdx++] = nChr;\n            } else if (nChr < 0x800) {\n                /* two bytes */\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else if (nChr < 0x10000) {\n                /* three bytes */\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else if (nChr < 0x200000) {\n                /* four bytes */\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else if (nChr < 0x4000000) {\n                /* five bytes */\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else /* if (nChr <= 0x7fffffff) */ {\n                /* six bytes */\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\n                aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            }\n        }\n\n        return aBytes;      \n    }\n\n    /**\n     * Converst string to ArrayBuffer\n     * @param dataString \n     */\n    static stringToArrayBuffer(dataString: string): ArrayBuffer {\n        const data = new ArrayBuffer(dataString.length);\n        const dataView = new Uint8Array(data);\n        for (let i: number = 0; i < dataString.length; i++) {\n            dataView[i] = dataString.charCodeAt(i);\n        }\n        return data;\n    }\n\n    /**\n     * Converts Uint8Array to a string\n     * @param aBytes \n     */\n    static utf8ArrToString (aBytes: Uint8Array): string {\n        let sView = Constants.EMPTY_STRING;\n        for (let nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\n            nPart = aBytes[nIdx];\n            sView += String.fromCharCode(\n                nPart > 251 && nPart < 254 && nIdx + 5 < nLen ? /* six bytes */\n                    /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\n                    (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\n                    : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ? /* five bytes */\n                        (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\n                        : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ? /* four bytes */\n                            (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\n                            : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ? /* three bytes */\n                                (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\n                                : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ? /* two bytes */\n                                    (nPart - 192 << 6) + aBytes[++nIdx] - 128\n                                    : /* nPart < 127 ? */ /* one byte */\n                                    nPart\n            );\n        }\n        return sView;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"@azure/msal-common\";\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\n\n/**\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nexport class Base64Encode {\n    \n    /**\n     * Returns URL Safe b64 encoded string from a plaintext string.\n     * @param input \n     */\n    urlEncode(input: string): string {\n        return encodeURIComponent(this.encode(input)\n            .replace(/=/g, Constants.EMPTY_STRING)\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\"));\n    }\n\n    /**\n     * Returns URL Safe b64 encoded string from an int8Array.\n     * @param inputArr \n     */\n    urlEncodeArr(inputArr: Uint8Array): string {\n        return this.base64EncArr(inputArr)\n            .replace(/=/g, Constants.EMPTY_STRING)\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\");\n    }\n\n    /**\n     * Returns b64 encoded string from plaintext string.\n     * @param input \n     */\n    encode(input: string): string {\n        const inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(input);\n        return this.base64EncArr(inputUtf8Arr);\n    }\n\n    /**\n     * Base64 encode byte array\n     * @param aBytes \n     */\n    private base64EncArr(aBytes: Uint8Array): string {  \n        const eqLen = (3 - (aBytes.length % 3)) % 3;\n        let sB64Enc = Constants.EMPTY_STRING;\n      \n        for (let nMod3, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\n            nMod3 = nIdx % 3;\n            /* Uncomment the following line in order to split the output in lines 76-character long: */\n            /*\n             *if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\n             */\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\n                sB64Enc += String.fromCharCode(\n                    this.uint6ToB64(nUint24 >>> 18 & 63), \n                    this.uint6ToB64(nUint24 >>> 12 & 63), \n                    this.uint6ToB64(nUint24 >>> 6 & 63), \n                    this.uint6ToB64(nUint24 & 63)\n                );\n                nUint24 = 0;\n            }\n        }\n\n        return  eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\n    }\n\n    /**\n     * Base64 string to array encoding helper\n     * @param nUint6 \n     */\n    private uint6ToB64 (nUint6: number): number {\n        return nUint6 < 26 ?\n            nUint6 + 65\n            : nUint6 < 52 ?\n                nUint6 + 71\n                : nUint6 < 62 ?\n                    nUint6 - 4\n                    : nUint6 === 62 ?\n                        43\n                        : nUint6 === 63 ?\n                            47\n                            :\n                            65;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"@azure/msal-common\";\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\n\n/**\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nexport class Base64Decode {\n\n    /**\n     * Returns a URL-safe plaintext decoded string from b64 encoded input.\n     * @param input \n     */\n    decode(input: string): string {\n        let encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\n        switch (encodedString.length % 4) {\n            case 0:\n                break;\n            case 2:\n                encodedString += \"==\";\n                break;\n            case 3:\n                encodedString += \"=\";\n                break;\n            default:\n                throw new Error(\"Invalid base64 string\");\n        }\n\n        const inputUtf8Arr = this.base64DecToArr(encodedString);\n        return BrowserStringUtils.utf8ArrToString(inputUtf8Arr);\n    }\n\n    /**\n     * Decodes base64 into Uint8Array\n     * @param base64String \n     * @param nBlockSize \n     */\n    private base64DecToArr(base64String: string, nBlockSize?: number): Uint8Array {\n        const sB64Enc = base64String.replace(/[^A-Za-z0-9\\+\\/]/g, Constants.EMPTY_STRING);\n        const nInLen = sB64Enc.length;\n        const nOutLen = nBlockSize ? Math.ceil((nInLen * 3 + 1 >>> 2) / nBlockSize) * nBlockSize : nInLen * 3 + 1 >>> 2;\n        const aBytes = new Uint8Array(nOutLen);\n\n        for (let nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n            nMod4 = nInIdx & 3;\n            nUint24 |= this.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\n            if (nMod4 === 3 || nInLen - nInIdx === 1) {\n                for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\n                    aBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\n                }\n                nUint24 = 0;\n            }\n        }\n\n        return aBytes;\n    }\n\n    /**\n     * Base64 string to array decoding helper\n     * @param charNum \n     */\n    private b64ToUint6(charNum: number): number {\n        return charNum > 64 && charNum < 91 ?\n            charNum - 65\n            : charNum > 96 && charNum < 123 ? \n                charNum - 71\n                : charNum > 47 && charNum < 58 ?\n                    charNum + 4\n                    : charNum === 43 ?\n                        62\n                        : charNum === 47 ?\n                            63\n                            :\n                            0;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError, StringUtils } from \"@azure/msal-common\";\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const BrowserAuthErrorMessage = {\n    pkceNotGenerated: {\n        code: \"pkce_not_created\",\n        desc: \"The PKCE code challenge and verifier could not be generated.\"\n    },\n    cryptoDoesNotExist: {\n        code: \"crypto_nonexistent\",\n        desc: \"The crypto object or function is not available.\"\n    },\n    httpMethodNotImplementedError: {\n        code: \"http_method_not_implemented\",\n        desc: \"The HTTP method given has not been implemented in this library.\"\n    },\n    emptyNavigateUriError: {\n        code: \"empty_navigate_uri\",\n        desc: \"Navigation URI is empty. Please check stack trace for more info.\"\n    },\n    hashEmptyError: {\n        code: \"hash_empty_error\",\n        desc: \"Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    hashDoesNotContainStateError: {\n        code: \"no_state_in_hash\",\n        desc: \"Hash does not contain state. Please verify that the request originated from msal.\"\n    },\n    hashDoesNotContainKnownPropertiesError: {\n        code: \"hash_does_not_contain_known_properties\",\n        desc: \"Hash does not contain known properites. Please verify that your redirectUri is not changing the hash. For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    unableToParseStateError: {\n        code: \"unable_to_parse_state\",\n        desc: \"Unable to parse state. Please verify that the request originated from msal.\"\n    },\n    stateInteractionTypeMismatchError: {\n        code: \"state_interaction_type_mismatch\",\n        desc: \"Hash contains state but the interaction type does not match the caller.\"\n    },\n    interactionInProgress: {\n        code: \"interaction_in_progress\",\n        desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.  For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    popupWindowError: {\n        code: \"popup_window_error\",\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\n    },\n    emptyWindowError: {\n        code: \"empty_window_error\",\n        desc: \"window.open returned null or undefined window object.\"\n    },\n    userCancelledError: {\n        code: \"user_cancelled\",\n        desc: \"User cancelled the flow.\"\n    },\n    monitorPopupTimeoutError: {\n        code: \"monitor_window_timeout\",\n        desc: \"Token acquisition in popup failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    monitorIframeTimeoutError: {\n        code: \"monitor_window_timeout\",\n        desc: \"Token acquisition in iframe failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    redirectInIframeError: {\n        code: \"redirect_in_iframe\",\n        desc: \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\n    },\n    blockTokenRequestsInHiddenIframeError: {\n        code: \"block_iframe_reload\",\n        desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. For more visit: aka.ms/msaljs/browser-errors\"\n    },\n    blockAcquireTokenInPopupsError: {\n        code: \"block_nested_popups\",\n        desc: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\"\n    },\n    iframeClosedPrematurelyError: {\n        code: \"iframe_closed_prematurely\",\n        desc: \"The iframe being monitored was closed prematurely.\"\n    },\n    silentLogoutUnsupportedError: {\n        code: \"silent_logout_unsupported\",\n        desc: \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\"\n    },\n    noAccountError: {\n        code: \"no_account_error\",\n        desc: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\"\n    },\n    silentPromptValueError: {\n        code: \"silent_prompt_value_error\",\n        desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none'.\"\n    },\n    noTokenRequestCacheError: {\n        code: \"no_token_request_cache_error\",\n        desc: \"No token request found in cache.\"\n    },\n    unableToParseTokenRequestCacheError: {\n        code: \"unable_to_parse_token_request_cache_error\",\n        desc: \"The cached token request could not be parsed.\"\n    },\n    noCachedAuthorityError: {\n        code: \"no_cached_authority_error\",\n        desc: \"No cached authority found.\"\n    },\n    authRequestNotSet: {\n        code: \"auth_request_not_set_error\",\n        desc: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\"\n    },\n    invalidCacheType: {\n        code: \"invalid_cache_type\",\n        desc: \"Invalid cache type\"\n    },\n    notInBrowserEnvironment: {\n        code: \"non_browser_environment\",\n        desc: \"Login and token requests are not supported in non-browser environments.\"\n    },\n    databaseNotOpen: {\n        code: \"database_not_open\",\n        desc: \"Database is not open!\"\n    },\n    noNetworkConnectivity: {\n        code: \"no_network_connectivity\",\n        desc: \"No network connectivity. Check your internet connection.\"\n    },\n    postRequestFailed: {\n        code: \"post_request_failed\",\n        desc: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\"\n    },\n    getRequestFailed: {\n        code: \"get_request_failed\",\n        desc: \"Network request failed. Please check the network trace to determine root cause.\"\n    },\n    failedToParseNetworkResponse: {\n        code: \"failed_to_parse_response\",\n        desc: \"Failed to parse network response. Check network trace.\"\n    },\n    unableToLoadTokenError: {\n        code: \"unable_to_load_token\",\n        desc: \"Error loading token to cache.\"\n    },\n    signingKeyNotFoundInStorage: {\n        code: \"crypto_key_not_found\",\n        desc: \"Cryptographic Key or Keypair not found in browser storage.\"\n    },\n    authCodeRequired: {\n        code: \"auth_code_required\",\n        desc: \"An authorization code must be provided (as the `code` property on the request) to this flow.\"\n    },\n    authCodeOrNativeAccountRequired: {\n        code: \"auth_code_or_nativeAccountId_required\",\n        desc: \"An authorization code or nativeAccountId must be provided to this flow.\"\n    },\n    databaseUnavailable: {\n        code: \"database_unavailable\",\n        desc: \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\"\n    },\n    unableToAcquireTokenFromNativePlatform: {\n        code: \"unable_to_acquire_token_from_native_platform\",\n        desc: \"Unable to acquire token from native platform. For a list of possible reasons visit aka.ms/msaljs/browser-errors.\"\n    },\n    nativeHandshakeTimeout: {\n        code: \"native_handshake_timeout\",\n        desc: \"Timed out while attempting to establish connection to browser extension\"\n    },\n    nativeExtensionNotInstalled: {\n        code: \"native_extension_not_installed\",\n        desc: \"Native extension is not installed. If you think this is a mistake call the initialize function.\"\n    },\n    nativeConnectionNotEstablished: {\n        code: \"native_connection_not_established\",\n        desc: \"Connection to native platform has not been established. Please install a compatible browser extension and run initialize(). For more please visit aka.ms/msaljs/browser-errors.\"\n    },\n    nativeBrokerCalledBeforeInitialize: {\n        code: \"native_broker_called_before_initialize\",\n        desc: \"You must call and await the initialize function before attempting to call any other MSAL API when native brokering is enabled. For more please visit aka.ms/msaljs/browser-errors.\"\n    },\n    nativePromptNotSupported: {\n        code: \"native_prompt_not_supported\",\n        desc: \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\"\n    }\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserAuthError extends AuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\n        this.name = \"BrowserAuthError\";\n    }\n\n    /**\n     * Creates an error thrown when PKCE is not implemented.\n     * @param errDetail\n     */\n    static createPkceNotGeneratedError(errDetail: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code,\n            `${BrowserAuthErrorMessage.pkceNotGenerated.desc} Detail:${errDetail}`);\n    }\n\n    /**\n     * Creates an error thrown when the crypto object is unavailable.\n     * @param errDetail\n     */\n    static createCryptoNotAvailableError(errDetail: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code,\n            `${BrowserAuthErrorMessage.cryptoDoesNotExist.desc} Detail:${errDetail}`);\n    }\n\n    /**\n     * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\n     * @param method\n     */\n    static createHttpMethodNotImplementedError(method: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code,\n            `${BrowserAuthErrorMessage.httpMethodNotImplementedError.desc} Given Method: ${method}`);\n    }\n\n    /**\n     * Creates an error thrown when the navigation URI is empty.\n     */\n    static createEmptyNavigationUriError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value is unexpectedly empty.\n     * @param hashValue\n     */\n    static createEmptyHashError(hashValue: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, `${BrowserAuthErrorMessage.hashEmptyError.desc} Given Url: ${hashValue}`);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value is unexpectedly empty.\n     */\n    static createHashDoesNotContainStateError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainStateError.code, BrowserAuthErrorMessage.hashDoesNotContainStateError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value does not contain known properties\n     */\n    static createHashDoesNotContainKnownPropertiesError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.code, BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value is unexpectedly empty.\n     */\n    static createUnableToParseStateError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseStateError.code, BrowserAuthErrorMessage.unableToParseStateError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the state value in the hash does not match the interaction type of the API attempting to consume it.\n     */\n    static createStateInteractionTypeMismatchError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.stateInteractionTypeMismatchError.code, BrowserAuthErrorMessage.stateInteractionTypeMismatchError.desc);\n    }\n\n    /**\n     * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\n     */\n    static createInteractionInProgressError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\n    }\n\n    /**\n     * Creates an error thrown when the popup window could not be opened.\n     * @param errDetail\n     */\n    static createPopupWindowError(errDetail?: string): BrowserAuthError {\n        let errorMessage = BrowserAuthErrorMessage.popupWindowError.desc;\n        errorMessage = !StringUtils.isEmpty(errDetail) ? `${errorMessage} Details: ${errDetail}` : errorMessage;\n        return new BrowserAuthError(BrowserAuthErrorMessage.popupWindowError.code, errorMessage);\n    }\n\n    /**\n     * Creates an error thrown when window.open returns an empty window object.\n     * @param errDetail\n     */\n    static createEmptyWindowCreatedError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the user closes a popup.\n     */\n    static createUserCancelledError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code,\n            BrowserAuthErrorMessage.userCancelledError.desc);\n    }\n\n    /**\n     * Creates an error thrown when monitorPopupFromHash times out for a given popup.\n     */\n    static createMonitorPopupTimeoutError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorPopupTimeoutError.code,\n            BrowserAuthErrorMessage.monitorPopupTimeoutError.desc);\n    }\n\n    /**\n     * Creates an error thrown when monitorIframeFromHash times out for a given iframe.\n     */\n    static createMonitorIframeTimeoutError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorIframeTimeoutError.code,\n            BrowserAuthErrorMessage.monitorIframeTimeoutError.desc);\n    }\n\n    /**\n     * Creates an error thrown when navigateWindow is called inside an iframe or brokered applications.\n     * @param windowParentCheck\n     */\n    static createRedirectInIframeError(windowParentCheck: boolean): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code,\n            `${BrowserAuthErrorMessage.redirectInIframeError.desc} (window.parent !== window) => ${windowParentCheck}`);\n    }\n\n    /**\n     * Creates an error thrown when an auth reload is done inside an iframe.\n     */\n    static createBlockReloadInHiddenIframeError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code,\n            BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\n    }\n\n    /**\n     * Creates an error thrown when a popup attempts to call an acquireToken API\n     * @returns\n     */\n    static createBlockAcquireTokenInPopupsError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.code,\n            BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.desc);\n    }\n\n    /**\n     * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\n     */\n    static createIframeClosedPrematurelyError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the logout API is called on any of the silent interaction clients\n     */\n    static createSilentLogoutUnsupportedError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentLogoutUnsupportedError.code, BrowserAuthErrorMessage.silentLogoutUnsupportedError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the account object is not provided in the acquireTokenSilent API.\n     */\n    static createNoAccountError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noAccountError.code, BrowserAuthErrorMessage.noAccountError.desc);\n    }\n\n    /**\n     * Creates an error thrown when a given prompt value is invalid for silent requests.\n     */\n    static createSilentPromptValueError(givenPrompt: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, `${BrowserAuthErrorMessage.silentPromptValueError.desc} Given value: ${givenPrompt}`);\n    }\n\n    /**\n     * Creates an error thrown when the cached token request could not be retrieved from the cache\n     */\n    static createUnableToParseTokenRequestCacheError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.code,\n            BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the token request could not be retrieved from the cache\n     */\n    static createNoTokenRequestCacheError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noTokenRequestCacheError.code,\n            BrowserAuthErrorMessage.noTokenRequestCacheError.desc);\n    }\n\n    /**\n     * Creates an error thrown when handleCodeResponse is called before initiateAuthRequest (InteractionHandler)\n     */\n    static createAuthRequestNotSetError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.authRequestNotSet.code,\n            BrowserAuthErrorMessage.authRequestNotSet.desc);\n    }\n\n    /**\n     * Creates an error thrown when the authority could not be retrieved from the cache\n     */\n    static createNoCachedAuthorityError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noCachedAuthorityError.code,\n            BrowserAuthErrorMessage.noCachedAuthorityError.desc);\n    }\n\n    /**\n     * Creates an error thrown if cache type is invalid.\n     */\n    static createInvalidCacheTypeError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, `${BrowserAuthErrorMessage.invalidCacheType.desc}`);\n    }\n\n    /**\n     * Create an error thrown when login and token requests are made from a non-browser environment\n     */\n    static createNonBrowserEnvironmentError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.notInBrowserEnvironment.code, BrowserAuthErrorMessage.notInBrowserEnvironment.desc);\n    }\n\n    /**\n     * Create an error thrown when indexDB database is not open\n     */\n    static createDatabaseNotOpenError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.databaseNotOpen.code, BrowserAuthErrorMessage.databaseNotOpen.desc);\n    }\n\n    /**\n     * Create an error thrown when token fetch fails due to no internet\n     */\n    static createNoNetworkConnectivityError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noNetworkConnectivity.code, BrowserAuthErrorMessage.noNetworkConnectivity.desc);\n    }\n\n    /**\n     * Create an error thrown when token fetch fails due to reasons other than internet connectivity\n     */\n    static createPostRequestFailedError(errorDesc: string, endpoint: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.postRequestFailed.code, `${BrowserAuthErrorMessage.postRequestFailed.desc} | Network client threw: ${errorDesc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n\n    /**\n     * Create an error thrown when get request fails due to reasons other than internet connectivity\n     */\n    static createGetRequestFailedError(errorDesc: string, endpoint: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.getRequestFailed.code, `${BrowserAuthErrorMessage.getRequestFailed.desc} | Network client threw: ${errorDesc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n\n    /**\n     * Create an error thrown when network client fails to parse network response\n     */\n    static createFailedToParseNetworkResponseError(endpoint: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.failedToParseNetworkResponse.code, `${BrowserAuthErrorMessage.failedToParseNetworkResponse.desc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n\n    /**\n     * Create an error thrown when the necessary information is not available to sideload tokens\n     */\n    static createUnableToLoadTokenError(errorDetail: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToLoadTokenError.code, `${BrowserAuthErrorMessage.unableToLoadTokenError.desc} | ${errorDetail}`);\n    }\n\n    /**\n     * Create an error thrown when the queried cryptographic key is not found in IndexedDB\n     */\n    static createSigningKeyNotFoundInStorageError(keyId: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code, `${BrowserAuthErrorMessage.signingKeyNotFoundInStorage.desc} | No match found for KeyId: ${keyId}`);\n    }\n\n    /**\n     * Create an error when an authorization code is required but not provided\n     */\n    static createAuthCodeRequiredError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.authCodeRequired.code, BrowserAuthErrorMessage.authCodeRequired.desc);\n    }\n\n    /**\n     * Create an error when an authorization code or native account ID is required but not provided\n     */\n    static createAuthCodeOrNativeAccountIdRequiredError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.code, BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.desc);\n    }\n\n    /**\n     * Create an error when IndexedDB is unavailable\n     */\n    static createDatabaseUnavailableError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.databaseUnavailable.code, BrowserAuthErrorMessage.databaseUnavailable.desc);\n    }\n\n    /**\n     * Create an error when native token acquisition is not possible\n     */\n    static createUnableToAcquireTokenFromNativePlatformError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.code, BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.desc);\n    }\n\n    /**\n     * Create an error thrown when Handshake with browser extension times out\n     */\n    static createNativeHandshakeTimeoutError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeHandshakeTimeout.code, BrowserAuthErrorMessage.nativeHandshakeTimeout.desc);\n    }\n\n    /**\n     * Create an error thrown when browser extension is not installed\n     */\n    static createNativeExtensionNotInstalledError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeExtensionNotInstalled.code, BrowserAuthErrorMessage.nativeExtensionNotInstalled.desc);\n    }\n\n    /**\n     * Create an error when native connection has not been established\n     * @returns\n     */\n    static createNativeConnectionNotEstablishedError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeConnectionNotEstablished.code, BrowserAuthErrorMessage.nativeConnectionNotEstablished.desc);\n    }\n\n    /**\n     * Create an error thrown when the initialize function hasn't been called\n     */\n    static createNativeBrokerCalledBeforeInitialize(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeBrokerCalledBeforeInitialize.code, BrowserAuthErrorMessage.nativeBrokerCalledBeforeInitialize.desc);\n    }\n\n    /**\n     * Create an error thrown when requesting a token directly from the native platform with an unsupported prompt parameter e.g. select_account, login or create\n     * These requests must go through eSTS to ensure eSTS is aware of the new account\n     */\n    static createNativePromptParameterNotSupportedError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativePromptNotSupported.code, BrowserAuthErrorMessage.nativePromptNotSupported.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { PkceCodes } from \"@azure/msal-common\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { Base64Encode } from \"../encode/Base64Encode\";\nimport { BrowserCrypto } from \"./BrowserCrypto\";\n\n// Constant byte array length\nconst RANDOM_BYTE_ARR_LENGTH = 32;\n\n/**\n * Class which exposes APIs to generate PKCE codes and code verifiers.\n */\nexport class PkceGenerator {\n\n    private base64Encode: Base64Encode;\n    private cryptoObj: BrowserCrypto;\n\n    constructor(cryptoObj: BrowserCrypto) {\n        this.base64Encode = new Base64Encode();\n        this.cryptoObj = cryptoObj;\n    }\n\n    /**\n     * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\n     */\n    async generateCodes(): Promise<PkceCodes> {\n        const codeVerifier = this.generateCodeVerifier();\n        const codeChallenge = await this.generateCodeChallengeFromVerifier(codeVerifier);\n        return {\n            verifier: codeVerifier,\n            challenge: codeChallenge\n        };\n    }\n\n    /**\n     * Generates a random 32 byte buffer and returns the base64\n     * encoded string to be used as a PKCE Code Verifier\n     */\n    private generateCodeVerifier(): string {\n        try {\n            // Generate random values as utf-8\n            const buffer: Uint8Array = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\n            this.cryptoObj.getRandomValues(buffer);\n            // encode verifier as base64\n            const pkceCodeVerifierB64: string = this.base64Encode.urlEncodeArr(buffer);\n            return pkceCodeVerifierB64;\n        } catch (e) {\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\n        }\n    }\n\n    /**\n     * Creates a base64 encoded PKCE Code Challenge string from the\n     * hash created from the PKCE Code Verifier supplied\n     */\n    private async generateCodeChallengeFromVerifier(pkceCodeVerifier: string): Promise<string> {\n        try {\n            // hashed verifier\n            const pkceHashedCodeVerifier = await this.cryptoObj.sha256Digest(pkceCodeVerifier);\n            // encode hash as base64\n            return this.base64Encode.urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier));\n        } catch (e) {\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { KEY_FORMAT_JWK } from \"../utils/BrowserConstants\";\nimport { Logger } from \"..\";\nimport { Constants } from \"@azure/msal-common\";\n/**\n * See here for more info on RsaHashedKeyGenParams: https://developer.mozilla.org/en-US/docs/Web/API/RsaHashedKeyGenParams\n */\n// RSA KeyGen Algorithm\nconst PKCS1_V15_KEYGEN_ALG = \"RSASSA-PKCS1-v1_5\";\n// SHA-256 hashing algorithm\nconst S256_HASH_ALG = \"SHA-256\";\n// MOD length for PoP tokens\nconst MODULUS_LENGTH = 2048;\n// Public Exponent\nconst PUBLIC_EXPONENT: Uint8Array = new Uint8Array([0x01, 0x00, 0x01]);\n\n/**\n * This class implements functions used by the browser library to perform cryptography operations such as\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\n */\nexport class BrowserCrypto {\n\n    private _keygenAlgorithmOptions: RsaHashedKeyGenParams;\n    private logger: Logger;\n\n    constructor(logger: Logger) {\n        this.logger = logger;\n        \n        if (!(this.hasCryptoAPI())) {\n            throw BrowserAuthError.createCryptoNotAvailableError(\"Browser crypto or msCrypto object not available.\");\n        }\n\n        this._keygenAlgorithmOptions = {\n            name: PKCS1_V15_KEYGEN_ALG,\n            hash: S256_HASH_ALG,\n            modulusLength: MODULUS_LENGTH,\n            publicExponent: PUBLIC_EXPONENT\n        };\n    }\n\n    /**\n     * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\n     * @param dataString \n     */\n    async sha256Digest(dataString: string): Promise<ArrayBuffer> {\n        const data = BrowserStringUtils.stringToUtf8Arr(dataString);\n\n        return this.hasIECrypto() ? this.getMSCryptoDigest(S256_HASH_ALG, data) : this.getSubtleCryptoDigest(S256_HASH_ALG, data);\n    }\n\n    /**\n     * Populates buffer with cryptographically random values.\n     * @param dataBuffer \n     */\n    getRandomValues(dataBuffer: Uint8Array): void {\n        const cryptoObj = window[\"msCrypto\"] || window.crypto;\n        if (!cryptoObj.getRandomValues) {\n            throw BrowserAuthError.createCryptoNotAvailableError(\"getRandomValues does not exist.\");\n        }\n        cryptoObj.getRandomValues(dataBuffer);\n    }\n\n    /**\n     * Generates a keypair based on current keygen algorithm config.\n     * @param extractable \n     * @param usages \n     */\n    async generateKeyPair(extractable: boolean, usages: Array<KeyUsage>): Promise<CryptoKeyPair> {\n        return (\n            this.hasIECrypto() ? \n                this.msCryptoGenerateKey(extractable, usages) \n                : window.crypto.subtle.generateKey(this._keygenAlgorithmOptions, extractable, usages)\n        ) as Promise<CryptoKeyPair>;\n    }\n\n    /**\n     * Export key as Json Web Key (JWK)\n     * @param key \n     * @param format \n     */\n    async exportJwk(key: CryptoKey): Promise<JsonWebKey> {\n        return this.hasIECrypto() ? this.msCryptoExportJwk(key) : window.crypto.subtle.exportKey(KEY_FORMAT_JWK, key);\n    }\n\n    /**\n     * Imports key as Json Web Key (JWK), can set extractable and usages.\n     * @param key \n     * @param format \n     * @param extractable \n     * @param usages \n     */\n    async importJwk(key: JsonWebKey, extractable: boolean, usages: Array<KeyUsage>): Promise<CryptoKey> {\n        const keyString = BrowserCrypto.getJwkString(key);\n        const keyBuffer = BrowserStringUtils.stringToArrayBuffer(keyString);\n\n        return this.hasIECrypto() ? \n            this.msCryptoImportKey(keyBuffer, extractable, usages) \n            : window.crypto.subtle.importKey(KEY_FORMAT_JWK, key, this._keygenAlgorithmOptions, extractable, usages);\n    }\n\n    /**\n     * Signs given data with given key\n     * @param key \n     * @param data \n     */\n    async sign(key: CryptoKey, data: ArrayBuffer): Promise<ArrayBuffer> {\n        return this.hasIECrypto() ?\n            this.msCryptoSign(key, data)\n            : window.crypto.subtle.sign(this._keygenAlgorithmOptions, key, data);\n    }\n\n    /**\n     * Check whether IE crypto or other browser cryptography is available.\n     */\n    private hasCryptoAPI(): boolean {\n        return this.hasIECrypto() || this.hasBrowserCrypto();\n    }\n\n    /**\n     * Checks whether IE crypto (AKA msCrypto) is available.\n     */\n    private hasIECrypto(): boolean {\n        return \"msCrypto\" in window;\n    }\n\n    /**\n     * Check whether browser crypto is available.\n     */\n    private hasBrowserCrypto(): boolean {\n        return \"crypto\" in window;\n    }\n\n    /**\n     * Helper function for SHA digest.\n     * @param algorithm \n     * @param data \n     */\n    private async getSubtleCryptoDigest(algorithm: string, data: Uint8Array): Promise<ArrayBuffer> {\n        return window.crypto.subtle.digest(algorithm, data);\n    }\n\n    /**\n     * IE Helper function for SHA digest.\n     * @param algorithm \n     * @param data \n     */\n    private async getMSCryptoDigest(algorithm: string, data: Uint8Array): Promise<ArrayBuffer> {\n        return new Promise((resolve, reject) => {\n            const digestOperation = window[\"msCrypto\"].subtle.digest(algorithm, data.buffer);\n            digestOperation.addEventListener(\"complete\", (e: { target: { result: ArrayBuffer | PromiseLike<ArrayBuffer>; }; }) => {\n                resolve(e.target.result);\n            });\n            digestOperation.addEventListener(\"error\", (error: string) => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * IE Helper function for generating a keypair\n     * @param extractable \n     * @param usages \n     */\n    private async msCryptoGenerateKey(extractable: boolean, usages: Array<KeyUsage>): Promise<CryptoKeyPair> {\n        return new Promise((resolve: Function, reject: Function) => {\n            const msGenerateKey = window[\"msCrypto\"].subtle.generateKey(this._keygenAlgorithmOptions, extractable, usages);\n            msGenerateKey.addEventListener(\"complete\", (e: { target: { result: CryptoKeyPair | PromiseLike<CryptoKeyPair>; }; }) => {\n                resolve(e.target.result);\n            });\n\n            msGenerateKey.addEventListener(\"error\", (error: string) => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * IE Helper function for exportKey\n     * @param key \n     * @param format \n     */\n    private async msCryptoExportJwk(key: CryptoKey): Promise<JsonWebKey> {\n        return new Promise((resolve: Function, reject: Function) => {\n            const msExportKey = window[\"msCrypto\"].subtle.exportKey(KEY_FORMAT_JWK, key);\n            msExportKey.addEventListener(\"complete\", (e: { target: { result: ArrayBuffer; }; }) => {\n                const resultBuffer: ArrayBuffer = e.target.result;\n\n                const resultString = BrowserStringUtils.utf8ArrToString(new Uint8Array(resultBuffer))\n                    .replace(/\\r/g, Constants.EMPTY_STRING)\n                    .replace(/\\n/g, Constants.EMPTY_STRING)\n                    .replace(/\\t/g, Constants.EMPTY_STRING)\n                    .split(\" \").join(Constants.EMPTY_STRING)\n                    .replace(\"\\u0000\", Constants.EMPTY_STRING);\n\n                try {\n                    resolve(JSON.parse(resultString));\n                } catch (e) {\n                    reject(e);\n                }\n            });\n\n            msExportKey.addEventListener(\"error\", (error: string) => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * IE Helper function for importKey\n     * @param key \n     * @param format \n     * @param extractable \n     * @param usages \n     */\n    private async msCryptoImportKey(keyBuffer: ArrayBuffer, extractable: boolean, usages: Array<KeyUsage>): Promise<CryptoKey> {\n        return new Promise((resolve: Function, reject: Function) => {\n            const msImportKey = window[\"msCrypto\"].subtle.importKey(KEY_FORMAT_JWK, keyBuffer, this._keygenAlgorithmOptions, extractable, usages);\n            msImportKey.addEventListener(\"complete\", (e: { target: { result: CryptoKey | PromiseLike<CryptoKey>; }; }) => {\n                resolve(e.target.result);\n            });\n\n            msImportKey.addEventListener(\"error\", (error: string) => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * IE Helper function for sign JWT\n     * @param key \n     * @param data \n     */\n    private async msCryptoSign(key: CryptoKey, data: ArrayBuffer): Promise<ArrayBuffer> {\n        return new Promise((resolve: Function, reject: Function) => {\n            const msSign = window[\"msCrypto\"].subtle.sign(this._keygenAlgorithmOptions, key, data);\n            msSign.addEventListener(\"complete\", (e: { target: { result: ArrayBuffer | PromiseLike<ArrayBuffer>; }; }) => {\n                resolve(e.target.result);\n            });\n\n            msSign.addEventListener(\"error\", (error: string) => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * Returns stringified jwk.\n     * @param jwk \n     */\n    static getJwkString(jwk: JsonWebKey): string {\n        return JSON.stringify(jwk, Object.keys(jwk).sort());\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { DB_NAME, DB_TABLE_NAME, DB_VERSION } from \"../utils/BrowserConstants\";\nimport { IAsyncStorage } from \"./IAsyncMemoryStorage\";\n\ninterface IDBOpenDBRequestEvent extends Event {\n    target: IDBOpenDBRequest & EventTarget;\n}\n\ninterface IDBOpenOnUpgradeNeededEvent extends IDBVersionChangeEvent {\n    target: IDBOpenDBRequest & EventTarget;\n}\n\ninterface IDBRequestEvent extends Event {\n    target: IDBRequest & EventTarget;\n}\n\ninterface IDBDatabaseInfo {\n    name?: string;\n    version?: number;\n}\n\n/**\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\n */\nexport class DatabaseStorage<T> implements IAsyncStorage<T> {\n    private db: IDBDatabase|undefined;\n    private dbName: string;\n    private tableName: string;\n    private version: number;\n    private dbOpen: boolean;\n\n    constructor() {\n        this.dbName = DB_NAME;\n        this.version = DB_VERSION;\n        this.tableName = DB_TABLE_NAME;\n        this.dbOpen = false;\n    }\n\n    /**\n     * Opens IndexedDB instance.\n     */\n    async open(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const openDB = window.indexedDB.open(this.dbName, this.version);\n            openDB.addEventListener(\"upgradeneeded\", (e: IDBVersionChangeEvent) => {\n                const event = e as IDBOpenOnUpgradeNeededEvent;\n                event.target.result.createObjectStore(this.tableName);\n            });\n            openDB.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBOpenDBRequestEvent;\n                this.db = event.target.result;\n                this.dbOpen = true;\n                resolve();\n            });\n            openDB.addEventListener(\"error\",  () => reject(BrowserAuthError.createDatabaseUnavailableError()));\n        });\n    }\n\n    /**\n     * Closes the connection to IndexedDB database when all pending transactions\n     * complete.\n     */\n    closeConnection(): void {\n        const db = this.db;\n        if (db && this.dbOpen) {\n            db.close();\n            this.dbOpen = false;\n        }\n    }\n\n    /**\n     * Opens database if it's not already open\n     */\n    private async validateDbIsOpen(): Promise<void> {\n        if (!this.dbOpen) {\n            return await this.open();\n        }\n    }\n\n    /**\n     * Retrieves item from IndexedDB instance.\n     * @param key \n     */\n    async getItem(key: string): Promise<T | null> {\n        await this.validateDbIsOpen();\n        return new Promise<T>((resolve, reject) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n            }\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGet = objectStore.get(key);\n            \n            dbGet.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n\n            dbGet.addEventListener(\"error\", (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Adds item to IndexedDB under given key\n     * @param key \n     * @param payload \n     */\n    async setItem(key: string, payload: T): Promise<void> {\n        await this.validateDbIsOpen();\n        return new Promise<void>((resolve: Function, reject: Function) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n            }\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\n\n            const objectStore = transaction.objectStore(this.tableName);\n\n            const dbPut = objectStore.put(payload, key);\n\n            dbPut.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n\n            dbPut.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Removes item from IndexedDB under given key\n     * @param key\n     */\n    async removeItem(key: string): Promise<void> {\n        await this.validateDbIsOpen();\n        return new Promise<void>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n            }\n\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbDelete = objectStore.delete(key);\n\n            dbDelete.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n\n            dbDelete.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Get all the keys from the storage object as an iterable array of strings.\n     */\n    async getKeys(): Promise<string[]> {\n        await this.validateDbIsOpen();\n        return new Promise<string[]>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n            }\n\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGetKeys = objectStore.getAllKeys();\n\n            dbGetKeys.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n\n            dbGetKeys.addEventListener(\"error\",  (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * \n     * Checks whether there is an object under the search key in the object store\n     */\n    async containsKey(key: string): Promise<boolean> {\n        await this.validateDbIsOpen();\n\n        return new Promise<boolean>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n            }\n\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbContainsKey = objectStore.count(key);\n\n            dbContainsKey.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result === 1);\n            });\n\n            dbContainsKey.addEventListener(\"error\", (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\n     * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\n     * with IndexedDB database versions.\n     */\n    async deleteDatabase(): Promise<boolean> {\n        // Check if database being deleted exists\n\n        if (this.db && this.dbOpen) {\n            this.closeConnection();\n        }\n        \n        // @ts-ignore\n        const existingDatabases = await window.indexedDB.databases();\n        const database = existingDatabases.find((database: IDBDatabaseInfo) => database.name === DB_NAME );\n\n        // If database exists, delete it\n        if (database) {\n            return new Promise<boolean>((resolve: Function, reject: Function) => {\n                const deleteDbRequest = window.indexedDB.deleteDatabase(DB_NAME);\n                deleteDbRequest.addEventListener(\"success\", () => resolve(true));\n                deleteDbRequest.addEventListener(\"error\", () => reject(false));\n            });\n        }\n\n        // Database doesn't exist, return true\n        return true;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IWindowStorage } from \"./IWindowStorage\";\n\nexport class MemoryStorage<T> implements IWindowStorage<T> {\n\n    private cache: Map<string, T>;\n\n    constructor() {\n        this.cache = new Map<string, T>();\n    }\n\n    getItem(key: string): T | null {\n        return this.cache.get(key) || null;\n    }\n\n    setItem(key: string, value: T): void {\n        this.cache.set(key, value);\n    }\n\n    removeItem(key: string): void {\n        this.cache.delete(key);\n    }\n\n    getKeys(): string[] {\n        const cacheKeys: string[] = [];\n        this.cache.forEach((value: T, key: string) => {\n            cacheKeys.push(key);\n        });\n        return cacheKeys;\n    }\n\n    containsKey(key: string): boolean {\n        return this.cache.has(key);\n    }\n\n    clear() :void {\n        this.cache.clear();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"@azure/msal-common\";\nimport { BrowserAuthError, BrowserAuthErrorMessage } from \"../error/BrowserAuthError\";\nimport { DatabaseStorage } from \"./DatabaseStorage\";\nimport { IAsyncStorage } from \"./IAsyncMemoryStorage\";\nimport { MemoryStorage } from \"./MemoryStorage\";\n\n/**\n * This class allows MSAL to store artifacts asynchronously using the DatabaseStorage IndexedDB wrapper,\n * backed up with the more volatile MemoryStorage object for cases in which IndexedDB may be unavailable.\n */\nexport class AsyncMemoryStorage<T> implements IAsyncStorage<T> {\n    private inMemoryCache: MemoryStorage<T>;\n    private indexedDBCache: DatabaseStorage<T>;\n    private logger: Logger;\n    private storeName: string;\n\n    constructor(logger: Logger, storeName: string) {\n        this.inMemoryCache = new MemoryStorage<T>();\n        this.indexedDBCache = new DatabaseStorage<T>();\n        this.logger = logger;\n        this.storeName = storeName;\n    }\n\n    private handleDatabaseAccessError(error: unknown): void {\n        if (error instanceof BrowserAuthError && error.errorCode === BrowserAuthErrorMessage.databaseUnavailable.code) {\n            this.logger.error(\"Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.\");\n        } else {\n            throw error;\n        }\n    }\n    /**\n     * Get the item matching the given key. Tries in-memory cache first, then in the asynchronous\n     * storage object if item isn't found in-memory.\n     * @param key \n     */\n    async getItem(key: string): Promise<T | null> {\n        const item = this.inMemoryCache.getItem(key);\n        if(!item) {\n            try {\n                this.logger.verbose(\"Queried item not found in in-memory cache, now querying persistent storage.\");\n                return await this.indexedDBCache.getItem(key);\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return item;\n    }\n\n    /**\n     * Sets the item in the in-memory cache and then tries to set it in the asynchronous\n     * storage object with the given key.\n     * @param key \n     * @param value \n     */\n    async setItem(key: string, value: T): Promise<void> {\n        this.inMemoryCache.setItem(key, value);\n        try {\n            await this.indexedDBCache.setItem(key, value);\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n\n    /**\n     * Removes the item matching the key from the in-memory cache, then tries to remove it from the asynchronous storage object.\n     * @param key \n     */\n    async removeItem(key: string): Promise<void> {\n        this.inMemoryCache.removeItem(key);\n        try {\n            await this.indexedDBCache.removeItem(key);\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n\n    /**\n     * Get all the keys from the in-memory cache as an iterable array of strings. If no keys are found, query the keys in the \n     * asynchronous storage object.\n     */\n    async getKeys(): Promise<string[]> {\n        const cacheKeys = this.inMemoryCache.getKeys();\n        if (cacheKeys.length === 0) {\n            try {\n                this.logger.verbose(\"In-memory cache is empty, now querying persistent storage.\");\n                return await this.indexedDBCache.getKeys();\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return cacheKeys;\n    }\n\n    /**\n     * Returns true or false if the given key is present in the cache.\n     * @param key \n     */\n    async containsKey(key: string): Promise<boolean> {\n        const containsKey = this.inMemoryCache.containsKey(key);\n        if(!containsKey) {\n            try {\n                this.logger.verbose(\"Key not found in in-memory cache, now querying persistent storage.\");\n                return await this.indexedDBCache.containsKey(key);\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return containsKey;\n    }\n\n    /**\n     * Clears in-memory Map and tries to delete the IndexedDB database.\n     */\n    async clear(): Promise<boolean> {\n        // InMemory cache is a Map instance, clear is straightforward\n        this.logger.verbose(`Deleting in-memory keystore ${this.storeName}`);\n        this.inMemoryCache.clear();\n        this.logger.verbose(`In-memory keystore ${this.storeName} deleted`);\n        this.logger.verbose(`Deleting persistent keystore ${this.storeName}`);\n        \n        try {\n            const dbDeleted = await this.indexedDBCache.deleteDatabase();\n            \n            if (dbDeleted) {\n                this.logger.verbose(`Persistent keystore ${this.storeName} deleted`);\n            }\n            \n            return dbDeleted;\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n            return false;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport type CcsCredential = {\n    credential: string,\n    type: CcsCredentialType\n};\n\nexport enum CcsCredentialType {\n    HOME_ACCOUNT_ID = \"home_account_id\",\n    UPN = \"UPN\"\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ApplicationTelemetry } from \"../../config/ClientConfiguration\";\nimport { Logger } from \"../../logger/Logger\";\nimport { InProgressPerformanceEvent, IPerformanceClient, PerformanceCallbackFunction } from \"./IPerformanceClient\";\nimport { IPerformanceMeasurement } from \"./IPerformanceMeasurement\";\nimport { PerformanceEvent, PerformanceEvents, PerformanceEventStatus } from \"./PerformanceEvent\";\n\nexport abstract class PerformanceClient implements IPerformanceClient {\n    protected authority: string;\n    protected libraryName: string;\n    protected libraryVersion: string;\n    protected applicationTelemetry: ApplicationTelemetry;\n    protected clientId: string;\n    protected logger: Logger;\n    protected callbacks: Map<string, PerformanceCallbackFunction>;\n    \n    /**\n     * Multiple events with the same correlation id.\n     * Double keyed by correlation id and event id.\n     * @protected\n     * @type {Map<string, Map<string, PerformanceEvent>>}\n     */\n    protected eventsByCorrelationId: Map<string, Map<string, PerformanceEvent>>;\n    \n    /**\n     * Underlying performance measurements for each operation\n     *\n     * @protected\n     * @type {Map<string, IPerformanceMeasurement>}\n     */\n    protected measurementsById: Map<string, IPerformanceMeasurement>;\n    \n    /**\n     * Creates an instance of PerformanceClient, \n     * an abstract class containing core performance telemetry logic.\n     *\n     * @constructor\n     * @param {string} clientId Client ID of the application\n     * @param {string} authority Authority used by the application\n     * @param {Logger} logger Logger used by the application\n     * @param {string} libraryName Name of the library\n     * @param {string} libraryVersion Version of the library\n     */\n    constructor(clientId: string, authority: string, logger: Logger, libraryName: string, libraryVersion: string, applicationTelemetry: ApplicationTelemetry) {\n        this.authority = authority;\n        this.libraryName = libraryName;\n        this.libraryVersion = libraryVersion;\n        this.applicationTelemetry = applicationTelemetry;\n        this.clientId = clientId;\n        this.logger = logger;\n        this.callbacks = new Map();\n        this.eventsByCorrelationId = new Map();\n        this.measurementsById = new Map();\n    }\n    \n    /**\n     * Starts and returns an platform-specific implementation of IPerformanceMeasurement.\n     *\n     * @abstract\n     * @param {string} measureName\n     * @param {string} correlationId\n     * @returns {IPerformanceMeasurement}\n     */\n    abstract startPerformanceMeasuremeant(measureName: string, correlationId: string): IPerformanceMeasurement;\n    \n    /**\n     * Generates and returns a unique id, typically a guid.\n     *\n     * @abstract\n     * @returns {string}\n     */\n    abstract generateId(): string;\n    \n    /**\n     * Starts measuring performance for a given operation. Returns a function that should be used to end the measurement.\n     *\n     * @param {PerformanceEvents} measureName\n     * @param {?string} [correlationId]\n     * @returns {InProgressPerformanceEvent}\n     */\n    startMeasurement(measureName: PerformanceEvents, correlationId?: string): InProgressPerformanceEvent {\n        // Generate a placeholder correlation if the request does not provide one\n        const eventCorrelationId = correlationId || this.generateId();\n        if (!correlationId) {\n            this.logger.info(`PerformanceClient: No correlation id provided for ${measureName}, generating`, eventCorrelationId);\n        }\n\n        this.logger.trace(`PerformanceClient: Performance measurement started for ${measureName}`, eventCorrelationId);\n        const performanceMeasurement = this.startPerformanceMeasuremeant(measureName, eventCorrelationId);\n        performanceMeasurement.startMeasurement();\n\n        const inProgressEvent: PerformanceEvent = {\n            eventId: this.generateId(),\n            status: PerformanceEventStatus.InProgress,\n            authority: this.authority,\n            libraryName: this.libraryName,\n            libraryVersion: this.libraryVersion,\n            appName: this.applicationTelemetry?.appName,\n            appVersion: this.applicationTelemetry?.appVersion,\n            clientId: this.clientId,\n            name: measureName,\n            startTimeMs: Date.now(),\n            correlationId: eventCorrelationId\n        };\n\n        // Store in progress events so they can be discarded if not ended properly\n        this.cacheEventByCorrelationId(inProgressEvent);\n        this.cacheMeasurement(inProgressEvent, performanceMeasurement);\n\n        // Return the event and functions the caller can use to properly end/flush the measurement\n        return {\n            endMeasurement: (event?: Partial<PerformanceEvent>): PerformanceEvent | null => {\n                const completedEvent = this.endMeasurement({\n                    // Initial set of event properties\n                    ...inProgressEvent,\n                    // Properties set when event ends\n                    ...event\n                });\n    \n                if (completedEvent) {\n                    // Cache event so that submeasurements can be added downstream\n                    this.cacheEventByCorrelationId(completedEvent);\n                }\n    \n                return completedEvent;\n            },\n            flushMeasurement: () => {\n                return this.flushMeasurements(inProgressEvent.name, inProgressEvent.correlationId);\n            },\n            discardMeasurement: () => {\n                return this.discardMeasurements(inProgressEvent.correlationId);\n            },\n            measurement: performanceMeasurement,\n            event: inProgressEvent\n        };\n        \n    }\n    \n    /**\n     * Stops measuring the performance for an operation. Should only be called directly by PerformanceClient classes,\n     * as consumers should instead use the function returned by startMeasurement.\n     *\n     * @param {PerformanceEvent} event\n     * @returns {(PerformanceEvent | null)}\n     */\n    endMeasurement(event: PerformanceEvent): PerformanceEvent | null {\n        const performanceMeasurement = this.measurementsById.get(event.eventId);\n        if (performanceMeasurement) {\n            // Immediately delete so that the same event isnt ended twice\n            this.measurementsById.delete(event.eventId);\n            performanceMeasurement.endMeasurement();\n            const durationMs = performanceMeasurement.flushMeasurement();\n            // null indicates no measurement was taken (e.g. needed performance APIs not present)\n            if (durationMs !== null) {\n                this.logger.trace(`PerformanceClient: Performance measurement ended for ${event.name}: ${durationMs} ms`, event.correlationId);\n    \n                const completedEvent: PerformanceEvent = {\n                    // Allow duration to be overwritten when event ends (e.g. testing), but not status\n                    durationMs: Math.round(durationMs),\n                    ...event,\n                    status: PerformanceEventStatus.Completed,\n                };\n        \n                return completedEvent;\n            } else {\n                this.logger.trace(\"PerformanceClient: Performance measurement not taken\", event.correlationId);\n            }\n        } else {\n            this.logger.trace(`PerformanceClient: Measurement not found for ${event.eventId}`, event.correlationId);\n        }\n\n        return null;\n    }\n    \n    /**\n     * Upserts event into event cache.\n     * First key is the correlation id, second key is the event id.\n     * Allows for events to be grouped by correlation id,\n     * and to easily allow for properties on them to be updated.\n     *\n     * @private\n     * @param {PerformanceEvent} event\n     */\n    private cacheEventByCorrelationId(event: PerformanceEvent) {\n        const existingEvents = this.eventsByCorrelationId.get(event.correlationId);\n        if (existingEvents) {\n            this.logger.trace(`PerformanceClient: Performance measurement for ${event.name} added/updated`, event.correlationId);\n            existingEvents.set(event.eventId, event);\n        } else {\n            this.logger.trace(`PerformanceClient: Performance measurement for ${event.name} started`, event.correlationId);\n            this.eventsByCorrelationId.set(event.correlationId, new Map().set(event.eventId, event));\n        }\n    }\n    \n    /**\n     * Cache measurements by their id.\n     *\n     * @private\n     * @param {PerformanceEvent} event\n     * @param {IPerformanceMeasurement} measurement\n     */\n    private cacheMeasurement(event: PerformanceEvent, measurement: IPerformanceMeasurement) {\n        this.measurementsById.set(event.eventId, measurement);\n    }\n    \n    /**\n     * Gathers and emits performance events for measurements taked for the given top-level API and correlation ID.\n     *\n     * @param {PerformanceEvents} measureName\n     * @param {string} correlationId\n     */\n    flushMeasurements(measureName: PerformanceEvents, correlationId: string): void {\n        this.logger.trace(`PerformanceClient: Performance measurements flushed for ${measureName}`, correlationId);\n        const eventsForCorrelationId = this.eventsByCorrelationId.get(correlationId);\n        if (eventsForCorrelationId) {\n            this.discardMeasurements(correlationId);\n            \n            /*\n             * Manually end incomplete submeasurements to ensure there arent orphaned/never ending events.\n             * Incomplete submeasurements are likely an instrumentation bug that should be fixed.\n             * IE only supports Map.forEach.\n             */\n            const completedEvents: PerformanceEvent[] = [];\n            eventsForCorrelationId.forEach(event => {\n                if (event.name !== measureName && event.status !== PerformanceEventStatus.Completed) {\n                    this.logger.trace(`PerformanceClient: Incomplete submeasurement ${event.name} found for ${measureName}`, correlationId);\n\n                    const completedEvent = this.endMeasurement(event);\n                    if (completedEvent) {\n                        completedEvents.push(completedEvent);\n                    }\n                }\n\n                completedEvents.push(event);\n            });\n\n            // Sort events by start time (earliest first)\n            const sortedCompletedEvents = completedEvents.sort((eventA, eventB) => eventA.startTimeMs - eventB.startTimeMs);\n\n            // Take completed top level event and add completed submeasurements durations as properties\n            const topLevelEvents = sortedCompletedEvents.filter(event => event.name === measureName && event.status === PerformanceEventStatus.Completed);\n            if (topLevelEvents.length > 0) {\n                /*\n                 * Only take the first top-level event if there are multiple events with the same correlation id.\n                 * This greatly simplifies logic for submeasurements.\n                 */\n                if (topLevelEvents.length > 1) {\n                    this.logger.verbose(\"PerformanceClient: Multiple distinct top-level performance events found, using the first\", correlationId);\n                }\n                const topLevelEvent = topLevelEvents[0];\n\n                this.logger.verbose(`PerformanceClient: Measurement found for ${measureName}`, correlationId);\n\n                // Build event object with top level and sub measurements\n                const eventToEmit = sortedCompletedEvents.reduce((previous, current) => {\n                    if (current.name !== measureName) {\n                        this.logger.trace(`PerformanceClient: Complete submeasurement found for ${current.name}`, correlationId);\n                        // TODO: Emit additional properties for each subMeasurement\n                        const subMeasurementName = `${current.name}DurationMs`;\n                        /*\n                         * Some code paths, such as resolving an authority, can occur multiple times.\n                         * Only take the first measurement, since the second could be read from the cache,\n                         * or due to the same correlation id being used for two distinct requests.\n                         */\n                        if (!previous[subMeasurementName]) {\n                            previous[subMeasurementName] = current.durationMs;\n                        } else {\n                            this.logger.verbose(`PerformanceClient: Submeasurement for ${measureName} already exists for ${current.name}, ignoring`, correlationId);\n                        }\n                    }\n\n                    return previous;\n                }, topLevelEvent);\n\n                this.emitEvents([eventToEmit], eventToEmit.correlationId);\n            } else {\n                this.logger.verbose(`PerformanceClient: No completed top-level measurements found for ${measureName}`, correlationId);\n            }\n        } else {\n            this.logger.verbose(\"PerformanceClient: No measurements found\", correlationId);\n        }\n    }\n    \n    /**\n     * Removes measurements for a given correlation id.\n     *\n     * @param {string} correlationId\n     */\n    discardMeasurements(correlationId: string): void {\n        this.logger.trace(\"PerformanceClient: Performance measurements discarded\", correlationId);\n        this.eventsByCorrelationId.delete(correlationId);\n    }\n    \n    /**\n     * Registers a callback function to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string {\n        const callbackId = this.generateId();\n        this.callbacks.set(callbackId, callback);\n        this.logger.verbose(`PerformanceClient: Performance callback registered with id: ${callbackId}`);\n\n        return callbackId;\n    }\n    \n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId: string): boolean {\n        const result = this.callbacks.delete(callbackId);\n\n        if (result) {\n            this.logger.verbose(`PerformanceClient: Performance callback ${callbackId} removed.`);\n        } else {\n            this.logger.verbose(`PerformanceClient: Performance callback ${callbackId} not removed.`);\n        }\n        \n        return result;\n    }\n    \n    /**\n     * Emits events to all registered callbacks.\n     *\n     * @param {PerformanceEvent[]} events\n     * @param {?string} [correlationId]\n     */\n    emitEvents(events: PerformanceEvent[], correlationId: string): void {\n        this.logger.verbose(\"PerformanceClient: Emitting performance events\", correlationId);\n\n        this.callbacks.forEach((callback: PerformanceCallbackFunction, callbackId: string) => {\n            this.logger.trace(`PerformanceClient: Emitting event to callback ${callbackId}`, correlationId);\n            callback.apply(null, [events]);\n        });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IPerformanceClient } from \"./IPerformanceClient\";\nimport { IPerformanceMeasurement } from \"./IPerformanceMeasurement\";\nimport { PerformanceClient } from \"./PerformanceClient\";\n\nexport class StubPerformanceMeasurement implements IPerformanceMeasurement {\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n    startMeasurement(): void { }\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n    endMeasurement(): void { }\n    flushMeasurement(): number | null {\n        return null;\n    }\n    \n}\n\nexport class StubPerformanceClient extends PerformanceClient implements IPerformanceClient {\n    generateId(): string {\n        return \"callback-id\";\n    }\n    \n    startPerformanceMeasuremeant(): IPerformanceMeasurement {\n        return new StubPerformanceMeasurement();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"../error/AuthError\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\nimport { SignedHttpRequest } from \"./SignedHttpRequest\";\n\n/**\n * The PkceCodes type describes the structure\n * of objects that contain PKCE code\n * challenge and verifier pairs\n */\nexport type PkceCodes = {\n    verifier: string,\n    challenge: string\n};\n\nexport type SignedHttpRequestParameters = Pick<BaseAuthRequest, \"resourceRequestMethod\" | \"resourceRequestUri\" | \"shrClaims\" | \"shrNonce\" > & {\n    correlationId?: string\n};\n\n/**\n * Interface for crypto functions used by library\n */\nexport interface ICrypto {\n    /**\n     * Creates a guid randomly.\n     */\n    createNewGuid(): string;\n    /**\n     * base64 Encode string\n     * @param input \n     */\n    base64Encode(input: string): string;\n    /**\n     * base64 decode string\n     * @param input \n     */\n    base64Decode(input: string): string;\n    /**\n     * Generate PKCE codes for OAuth. See RFC here: https://tools.ietf.org/html/rfc7636\n     */\n    generatePkceCodes(): Promise<PkceCodes>;\n    /**\n     * Generates an JWK RSA S256 Thumbprint\n     * @param request\n     */\n    getPublicKeyThumbprint(request: SignedHttpRequestParameters): Promise<string>;\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid \n     */\n    removeTokenBindingKey(kid: string): Promise<boolean>;\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    clearKeystore(): Promise<boolean>;\n    /** \n     * Returns a signed proof-of-possession token with a given acces token that contains a cnf claim with the required kid.\n     * @param accessToken \n     */\n    signJwt(payload: SignedHttpRequest, kid: string, correlationId?: string): Promise<string>;\n    /**\n     * Returns the SHA-256 hash of an input string\n     * @param plainText\n     */\n    hashString(plainText: string): Promise<string>;\n}\n\nexport const DEFAULT_CRYPTO_IMPLEMENTATION: ICrypto = {\n    createNewGuid: (): string => {\n        const notImplErr = \"Crypto interface - createNewGuid() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    base64Decode: (): string => {\n        const notImplErr = \"Crypto interface - base64Decode() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    base64Encode: (): string => {\n        const notImplErr = \"Crypto interface - base64Encode() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async generatePkceCodes(): Promise<PkceCodes> {\n        const notImplErr = \"Crypto interface - generatePkceCodes() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async getPublicKeyThumbprint(): Promise<string> {\n        const notImplErr = \"Crypto interface - getPublicKeyThumbprint() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async removeTokenBindingKey(): Promise<boolean> {\n        const notImplErr = \"Crypto interface - removeTokenBindingKey() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async clearKeystore(): Promise<boolean> {\n        const notImplErr = \"Crypto interface - clearKeystore() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async signJwt(): Promise<string> {\n        const notImplErr = \"Crypto interface - signJwt() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async hashString(): Promise<string> {\n        const notImplErr = \"Crypto interface - hashString() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\n\n/**\n * Error thrown when there is an error with the server code, for example, unavailability.\n */\nexport class ServerError extends AuthError {\n\n    constructor(errorCode?: string, errorMessage?: string, subError?: string) {\n        super(errorCode, errorMessage, subError);\n        this.name = \"ServerError\";\n\n        Object.setPrototypeOf(this, ServerError.prototype);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Separators, CredentialType, CacheType, Constants, AuthenticationScheme } from \"../../utils/Constants\";\nimport { ClientAuthError } from \"../../error/ClientAuthError\";\n\n/**\n * Base type for credentials to be stored in the cache: eg: ACCESS_TOKEN, ID_TOKEN etc\n *\n * Key:Value Schema:\n *\n * Key: <home_account_id*>-<environment>-<credential_type>-<client_id>-<realm*>-<target*>-<requestedClaims*>-<scheme*>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, usually only used for refresh tokens\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n *      tokenType: Matches the authentication scheme for which the token was issued (i.e. Bearer or pop)\n *      requestedClaimsHash: Matches the SHA 256 hash of the claims object included in the token request\n *      userAssertionHash: Matches the SHA 256 hash of the obo_assertion for the OBO flow\n * }\n */\nexport class CredentialEntity {\n    homeAccountId: string;\n    environment: string;\n    credentialType: CredentialType;\n    clientId: string;\n    secret: string;\n    familyId?: string;\n    realm?: string;\n    target?: string;\n    userAssertionHash?: string;\n    tokenType?: AuthenticationScheme;\n    keyId?: string;\n    requestedClaimsHash?: string;\n\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId(): string {\n        return CredentialEntity.generateAccountIdForCacheKey(this.homeAccountId, this.environment);\n    }\n\n    /**\n     * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\n     */\n    generateCredentialId(): string {\n        return CredentialEntity.generateCredentialIdForCacheKey(\n            this.credentialType,\n            this.clientId,\n            this.realm,\n            this.familyId\n        );\n    }\n\n    /**\n     * Generate target key component as per schema: <target>\n     */\n    generateTarget(): string {\n        return CredentialEntity.generateTargetForCacheKey(this.target);\n    }\n\n    /**\n     * generates credential key\n     */\n    generateCredentialKey(): string {\n        return CredentialEntity.generateCredentialCacheKey(\n            this.homeAccountId,\n            this.environment,\n            this.credentialType,\n            this.clientId,\n            this.realm,\n            this.target,\n            this.familyId,\n            this.tokenType,\n            this.requestedClaimsHash,\n        );\n    }\n\n    /**\n     * returns the type of the cache (in this case credential)\n     */\n    generateType(): number {\n        switch (this.credentialType) {\n            case CredentialType.ID_TOKEN:\n                return CacheType.ID_TOKEN;\n            case CredentialType.ACCESS_TOKEN:\n            case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\n                return CacheType.ACCESS_TOKEN;\n            case CredentialType.REFRESH_TOKEN:\n                return CacheType.REFRESH_TOKEN;\n            default: {\n                throw ClientAuthError.createUnexpectedCredentialTypeError();\n            }\n        }\n    }\n\n    /**\n     * helper function to return `CredentialType`\n     * @param key\n     */\n    static getCredentialType(key: string): string {\n        // First keyword search will match all \"AccessToken\" and \"AccessToken_With_AuthScheme\" credentials\n        if (key.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) !== -1) {\n            // Perform second search to differentiate between \"AccessToken\" and \"AccessToken_With_AuthScheme\" credential types\n            if (key.indexOf(CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) !== -1) {\n                return CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n            }\n            return CredentialType.ACCESS_TOKEN;\n        } else if (key.indexOf(CredentialType.ID_TOKEN.toLowerCase()) !== -1) {\n            return CredentialType.ID_TOKEN;\n        } else if (key.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) !== -1) {\n            return CredentialType.REFRESH_TOKEN;\n        }\n\n        return Constants.NOT_DEFINED;\n    }\n\n    /**\n     * generates credential key\n     * <home_account_id*>-\\<environment>-<credential_type>-<client_id>-<realm\\*>-<target\\*>-<scheme\\*>\n     */\n    static generateCredentialCacheKey(\n        homeAccountId: string,\n        environment: string,\n        credentialType: CredentialType,\n        clientId: string,\n        realm?: string,\n        target?: string,\n        familyId?: string,\n        tokenType?: AuthenticationScheme,\n        requestedClaimsHash?: string\n    ): string {\n        const credentialKey = [\n            this.generateAccountIdForCacheKey(homeAccountId, environment),\n            this.generateCredentialIdForCacheKey(credentialType, clientId, realm, familyId),\n            this.generateTargetForCacheKey(target),\n            this.generateClaimsHashForCacheKey(requestedClaimsHash),\n            this.generateSchemeForCacheKey(tokenType)\n        ];\n\n        return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * generates Account Id for keys\n     * @param homeAccountId\n     * @param environment\n     */\n    private static generateAccountIdForCacheKey(\n        homeAccountId: string,\n        environment: string\n    ): string {\n        const accountId: Array<string> = [homeAccountId, environment];\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Generates Credential Id for keys\n     * @param credentialType\n     * @param realm\n     * @param clientId\n     * @param familyId\n     */\n    private static generateCredentialIdForCacheKey(\n        credentialType: CredentialType,\n        clientId: string,\n        realm?: string,\n        familyId?: string\n    ): string {\n        const clientOrFamilyId =\n            credentialType === CredentialType.REFRESH_TOKEN\n                ? familyId || clientId\n                : clientId;\n        const credentialId: Array<string> = [\n            credentialType,\n            clientOrFamilyId,\n            realm || Constants.EMPTY_STRING,\n        ];\n\n        return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Generate target key component as per schema: <target>\n     */\n    private static generateTargetForCacheKey(scopes?: string): string {\n        return (scopes || Constants.EMPTY_STRING).toLowerCase();\n    }\n\n    /**\n     * Generate requested claims key component as per schema: <requestedClaims>\n     */\n    private static generateClaimsHashForCacheKey(requestedClaimsHash?: string): string {\n        return(requestedClaimsHash || Constants.EMPTY_STRING).toLowerCase();\n    }\n\n    /**\n     * Generate scheme key componenet as per schema: <scheme>\n     */\n    private static generateSchemeForCacheKey(tokenType?: string): string {\n        /*\n         * PoP Tokens and SSH certs include scheme in cache key\n         * Cast to lowercase to handle \"bearer\" from ADFS\n         */\n        return (tokenType && tokenType.toLowerCase() !== AuthenticationScheme.BEARER.toLowerCase()) ? tokenType.toLowerCase() : Constants.EMPTY_STRING;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientAuthError } from \"./ClientAuthError\";\n\n/**\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\n */\nexport const ClientConfigurationErrorMessage = {\n    redirectUriNotSet: {\n        code: \"redirect_uri_empty\",\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\n    },\n    postLogoutUriNotSet: {\n        code: \"post_logout_uri_empty\",\n        desc: \"A post logout redirect has not been set.\"\n    },\n    claimsRequestParsingError: {\n        code: \"claims_request_parsing_error\",\n        desc: \"Could not parse the given claims request object.\"\n    },\n    authorityUriInsecure: {\n        code: \"authority_uri_insecure\",\n        desc: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\"\n    },\n    urlParseError: {\n        code: \"url_parse_error\",\n        desc: \"URL could not be parsed into appropriate segments.\"\n    },\n    urlEmptyError: {\n        code: \"empty_url_error\",\n        desc: \"URL was empty or null.\"\n    },\n    emptyScopesError: {\n        code: \"empty_input_scopes_error\",\n        desc: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\"\n    },\n    nonArrayScopesError: {\n        code: \"nonarray_input_scopes_error\",\n        desc: \"Scopes cannot be passed as non-array.\"\n    },\n    clientIdSingleScopeError: {\n        code: \"clientid_input_scopes_error\",\n        desc: \"Client ID can only be provided as a single scope.\"\n    },\n    invalidPrompt: {\n        code: \"invalid_prompt_value\",\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent', 'create' and 'none'.  Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\n    },\n    invalidClaimsRequest: {\n        code: \"invalid_claims\",\n        desc: \"Given claims parameter must be a stringified JSON object.\"\n    },\n    tokenRequestEmptyError: {\n        code: \"token_request_empty\",\n        desc: \"Token request was empty and not found in cache.\"\n    },\n    logoutRequestEmptyError: {\n        code: \"logout_request_empty\",\n        desc: \"The logout request was null or undefined.\"\n    },\n    invalidCodeChallengeMethod: {\n        code: \"invalid_code_challenge_method\",\n        desc: \"code_challenge_method passed is invalid. Valid values are \\\"plain\\\" and \\\"S256\\\".\"\n    },\n    invalidCodeChallengeParams: {\n        code: \"pkce_params_missing\",\n        desc: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\"\n    },\n    invalidCloudDiscoveryMetadata: {\n        code: \"invalid_cloud_discovery_metadata\",\n        desc: \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\"\n    },\n    invalidAuthorityMetadata: {\n        code: \"invalid_authority_metadata\",\n        desc: \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\"\n    },\n    untrustedAuthority: {\n        code: \"untrusted_authority\",\n        desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\"\n    },\n    invalidAzureCloudInstance: {\n        code: \"invalid_azure_cloud_instance\",\n        desc: \"Invalid AzureCloudInstance provided. Please refer MSAL JS docs: aks.ms/msaljs/azure_cloud_instance for valid values\"\n    },\n    missingSshJwk: {\n        code: \"missing_ssh_jwk\",\n        desc: \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\"\n    },\n    missingSshKid: {\n        code: \"missing_ssh_kid\",\n        desc: \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\"\n    },\n    missingNonceAuthenticationHeader: {\n        code: \"missing_nonce_authentication_header\",\n        desc: \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\"\n    },\n    invalidAuthenticationHeader: {\n        code: \"invalid_authentication_header\",\n        desc: \"Invalid authentication header provided\"\n    }\n};\n\n/**\n * Error thrown when there is an error in configuration of the MSAL.js library.\n */\nexport class ClientConfigurationError extends ClientAuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"ClientConfigurationError\";\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\n    }\n\n    /**\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\n     */\n    static createRedirectUriEmptyError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.redirectUriNotSet.code,\n            ClientConfigurationErrorMessage.redirectUriNotSet.desc);\n    }\n\n    /**\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\n     */\n    static createPostLogoutRedirectUriEmptyError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.postLogoutUriNotSet.code,\n            ClientConfigurationErrorMessage.postLogoutUriNotSet.desc);\n    }\n\n    /**\n     * Creates an error thrown when the claims request could not be successfully parsed\n     */\n    static createClaimsRequestParsingError(claimsRequestParseError: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code,\n            `${ClientConfigurationErrorMessage.claimsRequestParsingError.desc} Given value: ${claimsRequestParseError}`);\n    }\n\n    /**\n     * Creates an error thrown if authority uri is given an insecure protocol.\n     * @param urlString\n     */\n    static createInsecureAuthorityUriError(urlString: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityUriInsecure.code,\n            `${ClientConfigurationErrorMessage.authorityUriInsecure.desc} Given URI: ${urlString}`);\n    }\n\n    /**\n     * Creates an error thrown if URL string does not parse into separate segments.\n     * @param urlString\n     */\n    static createUrlParseError(urlParseError: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlParseError.code,\n            `${ClientConfigurationErrorMessage.urlParseError.desc} Given Error: ${urlParseError}`);\n    }\n\n    /**\n     * Creates an error thrown if URL string is empty or null.\n     * @param urlString\n     */\n    static createUrlEmptyError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlEmptyError.code,\n            ClientConfigurationErrorMessage.urlEmptyError.desc);\n    }\n\n    /**\n     * Error thrown when scopes are empty.\n     * @param scopesValue\n     */\n    static createEmptyScopesArrayError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopesError.code,\n            `${ClientConfigurationErrorMessage.emptyScopesError.desc}`);\n    }\n\n    /**\n     * Error thrown when client id scope is not provided as single scope.\n     * @param inputScopes\n     */\n    static createClientIdSingleScopeError(inputScopes: Array<string>): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientIdSingleScopeError.code,\n            `${ClientConfigurationErrorMessage.clientIdSingleScopeError.desc} Given Scopes: ${inputScopes}`);\n    }\n\n    /**\n     * Error thrown when prompt is not an allowed type.\n     * @param promptValue\n     */\n    static createInvalidPromptError(promptValue: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code,\n            `${ClientConfigurationErrorMessage.invalidPrompt.desc} Given value: ${promptValue}`);\n    }\n\n    /**\n     * Creates error thrown when claims parameter is not a stringified JSON object\n     */\n    static createInvalidClaimsRequestError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidClaimsRequest.code,\n            ClientConfigurationErrorMessage.invalidClaimsRequest.desc);\n    }\n\n    /**\n     * Throws error when token request is empty and nothing cached in storage.\n     */\n    static createEmptyLogoutRequestError(): ClientConfigurationError {\n        return new ClientConfigurationError(\n            ClientConfigurationErrorMessage.logoutRequestEmptyError.code,\n            ClientConfigurationErrorMessage.logoutRequestEmptyError.desc\n        );\n    }\n\n    /**\n     * Throws error when token request is empty and nothing cached in storage.\n     */\n    static createEmptyTokenRequestError(): ClientConfigurationError {\n        return new ClientConfigurationError(\n            ClientConfigurationErrorMessage.tokenRequestEmptyError.code,\n            ClientConfigurationErrorMessage.tokenRequestEmptyError.desc\n        );\n    }\n\n    /**\n     * Throws error when an invalid code_challenge_method is passed by the user\n     */\n    static createInvalidCodeChallengeMethodError(): ClientConfigurationError {\n        return new ClientConfigurationError(\n            ClientConfigurationErrorMessage.invalidCodeChallengeMethod.code,\n            ClientConfigurationErrorMessage.invalidCodeChallengeMethod.desc\n        );\n    }\n\n    /**\n     * Throws error when both params: code_challenge and code_challenge_method are not passed together\n     */\n    static createInvalidCodeChallengeParamsError(): ClientConfigurationError {\n        return new ClientConfigurationError(\n            ClientConfigurationErrorMessage.invalidCodeChallengeParams.code,\n            ClientConfigurationErrorMessage.invalidCodeChallengeParams.desc\n        );\n    }\n\n    /**\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\n     */\n    static createInvalidCloudDiscoveryMetadataError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.code,\n            ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.desc);\n    }\n\n    /**\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\n     */\n    static createInvalidAuthorityMetadataError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityMetadata.code,\n            ClientConfigurationErrorMessage.invalidAuthorityMetadata.desc);\n    }\n\n    /**\n     * Throws error when provided authority is not a member of the trusted host list\n     */\n    static createUntrustedAuthorityError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code,\n            ClientConfigurationErrorMessage.untrustedAuthority.desc);\n    }\n\n    /**\n     * Throws error when the AzureCloudInstance is set to an invalid value\n     */\n    static createInvalidAzureCloudInstanceError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAzureCloudInstance.code,\n            ClientConfigurationErrorMessage.invalidAzureCloudInstance.desc);\n    }\n\n    /**\n     * Throws an error when the authentication scheme is set to SSH but the SSH public key is omitted from the request\n     */\n    static createMissingSshJwkError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingSshJwk.code,\n            ClientConfigurationErrorMessage.missingSshJwk.desc);\n    }\n\n    /**\n     * Throws an error when the authentication scheme is set to SSH but the SSH public key ID is omitted from the request\n     */\n    static createMissingSshKidError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingSshKid.code,\n            ClientConfigurationErrorMessage.missingSshKid.desc);\n    }\n\n    /**\n     * Throws error when provided headers don't contain a header that a server nonce can be extracted from\n     */\n    static createMissingNonceAuthenticationHeadersError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingNonceAuthenticationHeader.code,\n            ClientConfigurationErrorMessage.missingNonceAuthenticationHeader.desc);\n    }\n\n    /**\n     * Throws error when a provided header is invalid in any way\n     */\n    static createInvalidAuthenticationHeaderError(invalidHeaderName: string, details: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthenticationHeader.code,\n            `${ClientConfigurationErrorMessage.invalidAuthenticationHeader.desc}. Invalid header: ${invalidHeaderName}. Details: ${details}`);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { Constants, OIDC_SCOPES } from \"../utils/Constants\";\n\n/**\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\n * to ensure uniqueness of strings.\n */\nexport class ScopeSet {\n    // Scopes as a Set of strings\n    private scopes: Set<string>;\n\n    constructor(inputScopes: Array<string>) {\n        // Filter empty string and null/undefined array items\n        const scopeArr = inputScopes ? StringUtils.trimArrayEntries([...inputScopes]) : [];\n        const filteredInput = scopeArr ? StringUtils.removeEmptyStringsFromArray(scopeArr) : [];\n\n        // Validate and filter scopes (validate function throws if validation fails)\n        this.validateInputScopes(filteredInput);\n\n        this.scopes = new Set<string>(); // Iterator in constructor not supported by IE11\n        filteredInput.forEach(scope => this.scopes.add(scope));\n    }\n\n    /**\n     * Factory method to create ScopeSet from space-delimited string\n     * @param inputScopeString\n     * @param appClientId\n     * @param scopesRequired\n     */\n    static fromString(inputScopeString: string): ScopeSet {\n        const scopeString = inputScopeString || Constants.EMPTY_STRING;\n        const inputScopes: Array<string> = scopeString.split(\" \");\n        return new ScopeSet(inputScopes);\n    }\n\n    /**\n     * Used to validate the scopes input parameter requested  by the developer.\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\n     */\n    private validateInputScopes(inputScopes: Array<string>): void {\n        // Check if scopes are required but not given or is an empty array\n        if (!inputScopes || inputScopes.length < 1) {\n            throw ClientConfigurationError.createEmptyScopesArrayError();\n        }\n    }\n\n    /**\n     * Check if a given scope is present in this set of scopes.\n     * @param scope\n     */\n    containsScope(scope: string): boolean {\n        const lowerCaseScopes = this.printScopesLowerCase().split(\" \");\n        const lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\n        // compare lowercase scopes\n        return !StringUtils.isEmpty(scope) ? lowerCaseScopesSet.scopes.has(scope.toLowerCase()) : false;\n    }\n\n    /**\n     * Check if a set of scopes is present in this set of scopes.\n     * @param scopeSet\n     */\n    containsScopeSet(scopeSet: ScopeSet): boolean {\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\n            return false;\n        }\n\n        return (this.scopes.size >= scopeSet.scopes.size && scopeSet.asArray().every(scope => this.containsScope(scope)));\n    }\n\n    /**\n     * Check if set of scopes contains only the defaults\n     */\n    containsOnlyOIDCScopes(): boolean {\n        let defaultScopeCount = 0;\n        OIDC_SCOPES.forEach((defaultScope: string) => {\n            if (this.containsScope(defaultScope)) {\n                defaultScopeCount += 1;\n            }\n        });\n\n        return this.scopes.size === defaultScopeCount;\n    }\n\n    /**\n     * Appends single scope if passed\n     * @param newScope\n     */\n    appendScope(newScope: string): void {\n        if (!StringUtils.isEmpty(newScope)) {\n            this.scopes.add(newScope.trim());\n        }\n    }\n\n    /**\n     * Appends multiple scopes if passed\n     * @param newScopes\n     */\n    appendScopes(newScopes: Array<string>): void {\n        try {\n            newScopes.forEach(newScope => this.appendScope(newScope));\n        } catch (e) {\n            throw ClientAuthError.createAppendScopeSetError(e);\n        }\n    }\n\n    /**\n     * Removes element from set of scopes.\n     * @param scope\n     */\n    removeScope(scope: string): void {\n        if (StringUtils.isEmpty(scope)) {\n            throw ClientAuthError.createRemoveEmptyScopeFromSetError(scope);\n        }\n        this.scopes.delete(scope.trim());\n    }\n\n    /**\n     * Removes default scopes from set of scopes\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\n     */\n    removeOIDCScopes(): void {\n        OIDC_SCOPES.forEach((defaultScope: string) => {\n            this.scopes.delete(defaultScope);\n        });\n    }\n\n    /**\n     * Combines an array of scopes with the current set of scopes.\n     * @param otherScopes\n     */\n    unionScopeSets(otherScopes: ScopeSet): Set<string> {\n        if (!otherScopes) {\n            throw ClientAuthError.createEmptyInputScopeSetError();\n        }\n        const unionScopes = new Set<string>(); // Iterator in constructor not supported in IE11\n        otherScopes.scopes.forEach(scope => unionScopes.add(scope.toLowerCase()));\n        this.scopes.forEach(scope => unionScopes.add(scope.toLowerCase()));\n        return unionScopes;\n    }\n\n    /**\n     * Check if scopes intersect between this set and another.\n     * @param otherScopes\n     */\n    intersectingScopeSets(otherScopes: ScopeSet): boolean {\n        if (!otherScopes) {\n            throw ClientAuthError.createEmptyInputScopeSetError();\n        }\n        \n        // Do not allow OIDC scopes to be the only intersecting scopes\n        if (!otherScopes.containsOnlyOIDCScopes()) {\n            otherScopes.removeOIDCScopes();\n        }\n        const unionScopes = this.unionScopeSets(otherScopes);\n        const sizeOtherScopes = otherScopes.getScopeCount();\n        const sizeThisScopes = this.getScopeCount();\n        const sizeUnionScopes = unionScopes.size;\n        return sizeUnionScopes < (sizeThisScopes + sizeOtherScopes);\n    }\n\n    /**\n     * Returns size of set of scopes.\n     */\n    getScopeCount(): number {\n        return this.scopes.size;\n    }\n\n    /**\n     * Returns the scopes as an array of string values\n     */\n    asArray(): Array<string> {\n        const array: Array<string> = [];\n        this.scopes.forEach(val => array.push(val));\n        return array;\n    }\n\n    /**\n     * Prints scopes into a space-delimited string\n     */\n    printScopes(): string {\n        if (this.scopes) {\n            const scopeArr = this.asArray();\n            return scopeArr.join(\" \");\n        }\n        return Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Prints scopes into a space-delimited lower-case string (used for caching)\n     */\n    printScopesLowerCase(): string {\n        return this.printScopes().toLowerCase();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { TokenClaims } from \"./TokenClaims\";\nimport { DecodedAuthToken } from \"./DecodedAuthToken\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ICrypto } from \"../crypto/ICrypto\";\n\n/**\n * JWT Token representation class. Parses token string and generates claims object.\n */\nexport class AuthToken {\n\n    // Raw Token string\n    rawToken: string;\n    // Claims inside token\n    claims: TokenClaims;\n    constructor(rawToken: string, crypto: ICrypto) {\n        if (StringUtils.isEmpty(rawToken)) {\n            throw ClientAuthError.createTokenNullOrEmptyError(rawToken);\n        }\n\n        this.rawToken = rawToken;\n        this.claims = AuthToken.extractTokenClaims(rawToken, crypto);\n    }\n\n    /**\n     * Extract token by decoding the rawToken\n     *\n     * @param encodedToken\n     */\n    static extractTokenClaims(encodedToken: string, crypto: ICrypto): TokenClaims {\n\n        const decodedToken: DecodedAuthToken = StringUtils.decodeAuthToken(encodedToken);\n\n        // token will be decoded to get the username\n        try {\n            const base64TokenPayload = decodedToken.JWSPayload;\n\n            // base64Decode() should throw an error if there is an issue\n            const base64Decoded = crypto.base64Decode(base64TokenPayload);\n            return JSON.parse(base64Decoded) as TokenClaims;\n        } catch (err) {\n            throw ClientAuthError.createTokenParsingError(err);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccountCache, AccountFilter, CredentialFilter, CredentialCache, ValidCredentialType, AppMetadataFilter, AppMetadataCache } from \"./utils/CacheTypes\";\nimport { CacheRecord } from \"./entities/CacheRecord\";\nimport { CacheSchemaType, CredentialType, Constants, APP_METADATA, THE_FAMILY_ID, AUTHORITY_METADATA_CONSTANTS, AuthenticationScheme } from \"../utils/Constants\";\nimport { CredentialEntity } from \"./entities/CredentialEntity\";\nimport { ScopeSet } from \"../request/ScopeSet\";\nimport { AccountEntity } from \"./entities/AccountEntity\";\nimport { AccessTokenEntity } from \"./entities/AccessTokenEntity\";\nimport { IdTokenEntity } from \"./entities/IdTokenEntity\";\nimport { RefreshTokenEntity } from \"./entities/RefreshTokenEntity\";\nimport { AuthError } from \"../error/AuthError\";\nimport { ICacheManager } from \"./interface/ICacheManager\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { AccountInfo } from \"../account/AccountInfo\";\nimport { AppMetadataEntity } from \"./entities/AppMetadataEntity\";\nimport { ServerTelemetryEntity } from \"./entities/ServerTelemetryEntity\";\nimport { ThrottlingEntity } from \"./entities/ThrottlingEntity\";\nimport { AuthToken } from \"../account/AuthToken\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { AuthorityMetadataEntity } from \"./entities/AuthorityMetadataEntity\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\n\n/**\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\n */\nexport abstract class CacheManager implements ICacheManager {\n    protected clientId: string;\n    protected cryptoImpl: ICrypto;\n\n    constructor(clientId: string, cryptoImpl: ICrypto) {\n        this.clientId = clientId;\n        this.cryptoImpl = cryptoImpl;\n    }\n\n    /**\n     * fetch the account entity from the platform cache\n     *  @param accountKey\n     */\n    abstract getAccount(accountKey: string): AccountEntity | null;\n\n    /**\n     * set account entity in the platform cache\n     * @param account\n     */\n    abstract setAccount(account: AccountEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param idTokenKey\n     */\n    abstract getIdTokenCredential(idTokenKey: string): IdTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param idToken\n     */\n    abstract setIdTokenCredential(idToken: IdTokenEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param accessTokenKey\n     */\n    abstract getAccessTokenCredential(accessTokenKey: string): AccessTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param accessToken\n     */\n    abstract setAccessTokenCredential(accessToken: AccessTokenEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param refreshTokenKey\n     */\n    abstract getRefreshTokenCredential(refreshTokenKey: string): RefreshTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param refreshToken\n     */\n    abstract setRefreshTokenCredential(refreshToken: RefreshTokenEntity): void;\n\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    abstract getAppMetadata(appMetadataKey: string): AppMetadataEntity | null;\n\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    abstract setAppMetadata(appMetadata: AppMetadataEntity): void;\n\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    abstract getServerTelemetry(serverTelemetryKey: string): ServerTelemetryEntity | null;\n\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    abstract setServerTelemetry(serverTelemetryKey: string, serverTelemetry: ServerTelemetryEntity): void;\n\n    /**\n     * fetch cloud discovery metadata entity from the platform cache\n     * @param key\n     */\n    abstract getAuthorityMetadata(key: string): AuthorityMetadataEntity | null;\n\n    /**\n     *\n     */\n    abstract getAuthorityMetadataKeys(): Array<string>;\n\n    /**\n     * set cloud discovery metadata entity to the platform cache\n     * @param key\n     * @param value\n     */\n    abstract setAuthorityMetadata(key: string, value: AuthorityMetadataEntity): void;\n\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    abstract getThrottlingCache(throttlingCacheKey: string): ThrottlingEntity | null;\n\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    abstract setThrottlingCache(throttlingCacheKey: string, throttlingCache: ThrottlingEntity): void;;\n\n    /**\n     * Function to remove an item from cache given its key.\n     * @param key\n     */\n    abstract removeItem(key: string, type?: string): boolean;\n\n    /**\n     * Function which returns boolean whether cache contains a specific key.\n     * @param key\n     */\n    abstract containsKey(key: string, type?: string): boolean;\n\n    /**\n     * Function which retrieves all current keys from the cache.\n     */\n    abstract getKeys(): string[];\n\n    /**\n     * Function which clears cache.\n     */\n    abstract clear(): Promise<void>;\n\n    /**\n     * Function which updates an outdated credential cache key\n     */\n    abstract updateCredentialCacheKey(currentCacheKey: string, credential: ValidCredentialType): string;\n\n    /**\n     * Returns all accounts in cache\n     */\n    getAllAccounts(): AccountInfo[] {\n        const currentAccounts: AccountCache = this.getAccountsFilteredBy();\n        const accountValues: AccountEntity[] = Object.keys(currentAccounts).map(accountKey => currentAccounts[accountKey]);\n        const numAccounts = accountValues.length;\n        if (numAccounts < 1) {\n            return [];\n        } else {\n            const allAccounts = accountValues.map<AccountInfo>((value) => {\n                const accountEntity = CacheManager.toObject<AccountEntity>(new AccountEntity(), value);\n                const accountInfo = accountEntity.getAccountInfo();\n                const idToken = this.readIdTokenFromCache(this.clientId, accountInfo);\n                if (idToken && !accountInfo.idTokenClaims) {\n                    accountInfo.idTokenClaims = new AuthToken(idToken.secret, this.cryptoImpl).claims;\n                }\n\n                return accountInfo;\n\n            });\n            return allAccounts;\n        }\n    }\n\n    /**\n     * saves a cache record\n     * @param cacheRecord\n     */\n    async saveCacheRecord(cacheRecord: CacheRecord): Promise<void> {\n        if (!cacheRecord) {\n            throw ClientAuthError.createNullOrUndefinedCacheRecord();\n        }\n\n        if (!!cacheRecord.account) {\n            this.setAccount(cacheRecord.account);\n        }\n\n        if (!!cacheRecord.idToken) {\n            this.setIdTokenCredential(cacheRecord.idToken);\n        }\n\n        if (!!cacheRecord.accessToken) {\n            await this.saveAccessToken(cacheRecord.accessToken);\n        }\n\n        if (!!cacheRecord.refreshToken) {\n            this.setRefreshTokenCredential(cacheRecord.refreshToken);\n        }\n\n        if (!!cacheRecord.appMetadata) {\n            this.setAppMetadata(cacheRecord.appMetadata);\n        }\n    }\n\n    /**\n     * saves access token credential\n     * @param credential\n     */\n    private async saveAccessToken(credential: AccessTokenEntity): Promise<void> {\n        const currentTokenCache = this.getCredentialsFilteredBy({\n            clientId: credential.clientId,\n            credentialType: credential.credentialType,\n            environment: credential.environment,\n            homeAccountId: credential.homeAccountId,\n            realm: credential.realm,\n            tokenType: credential.tokenType,\n            requestedClaimsHash: credential.requestedClaimsHash\n        });\n\n        const currentScopes = ScopeSet.fromString(credential.target);\n        const currentAccessTokens: AccessTokenEntity[] = Object.keys(currentTokenCache.accessTokens).map(key => currentTokenCache.accessTokens[key]);\n\n        if (currentAccessTokens) {\n            const removedAccessTokens: Array<Promise<boolean>> = [];\n            currentAccessTokens.forEach((tokenEntity) => {\n                const tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\n                    removedAccessTokens.push(this.removeCredential(tokenEntity));\n                }\n            });\n            await Promise.all(removedAccessTokens);\n        }\n        this.setAccessTokenCredential(credential);\n    }\n\n    /**\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\n     * @param homeAccountId\n     * @param environment\n     * @param realm\n     */\n    getAccountsFilteredBy(accountFilter?: AccountFilter): AccountCache {\n        return this.getAccountsFilteredByInternal(\n            accountFilter ? accountFilter.homeAccountId : Constants.EMPTY_STRING,\n            accountFilter ? accountFilter.environment : Constants.EMPTY_STRING,\n            accountFilter ? accountFilter.realm : Constants.EMPTY_STRING\n        );\n    }\n\n    /**\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\n     * @param homeAccountId\n     * @param environment\n     * @param realm\n     */\n    private getAccountsFilteredByInternal(\n        homeAccountId?: string,\n        environment?: string,\n        realm?: string\n    ): AccountCache {\n        const allCacheKeys = this.getKeys();\n        const matchingAccounts: AccountCache = {};\n\n        allCacheKeys.forEach((cacheKey) => {\n            const entity: AccountEntity | null = this.getAccount(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (!!homeAccountId && !this.matchHomeAccountId(entity, homeAccountId)) {\n                return;\n            }\n\n            if (!!environment && !this.matchEnvironment(entity, environment)) {\n                return;\n            }\n\n            if (!!realm && !this.matchRealm(entity, realm)) {\n                return;\n            }\n\n            matchingAccounts[cacheKey] = entity;\n        });\n\n        return matchingAccounts;\n    }\n\n    /**\n     * retrieve credentails matching all provided filters; if no filter is set, get all credentials\n     * @param homeAccountId\n     * @param environment\n     * @param credentialType\n     * @param clientId\n     * @param realm\n     * @param target\n     */\n    getCredentialsFilteredBy(filter: CredentialFilter): CredentialCache {\n        return this.getCredentialsFilteredByInternal(\n            filter.homeAccountId,\n            filter.environment,\n            filter.credentialType,\n            filter.clientId,\n            filter.familyId,\n            filter.realm,\n            filter.target,\n            filter.userAssertionHash,\n            filter.tokenType,\n            filter.keyId,\n            filter.requestedClaimsHash\n        );\n    }\n\n    /**\n     * Support function to help match credentials\n     * @param homeAccountId\n     * @param environment\n     * @param credentialType\n     * @param clientId\n     * @param realm\n     * @param target\n     * @param userAssertionHash\n     * @param tokenType\n     */\n    private getCredentialsFilteredByInternal(\n        homeAccountId?: string,\n        environment?: string,\n        credentialType?: string,\n        clientId?: string,\n        familyId?: string,\n        realm?: string,\n        target?: string,\n        userAssertionHash?: string,\n        tokenType?: AuthenticationScheme,\n        keyId?: string,\n        requestedClaimsHash?: string\n    ): CredentialCache {\n        const allCacheKeys = this.getKeys();\n        const matchingCredentials: CredentialCache = {\n            idTokens: {},\n            accessTokens: {},\n            refreshTokens: {},\n        };\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-credential type cache entities\n            const credType = CredentialEntity.getCredentialType(cacheKey);\n\n            if (credType === Constants.NOT_DEFINED) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getSpecificCredential(cacheKey, credType);\n\n            if (!entity) {\n                return;\n            }\n\n            if (!!userAssertionHash && !this.matchUserAssertionHash(entity, userAssertionHash)) {\n                return;\n            }\n\n            if (!!homeAccountId && !this.matchHomeAccountId(entity, homeAccountId)) {\n                return;\n            }\n\n            if (!!environment && !this.matchEnvironment(entity, environment)) {\n                return;\n            }\n\n            if (!!realm && !this.matchRealm(entity, realm)) {\n                return;\n            }\n\n            if (!!credentialType && !this.matchCredentialType(entity, credentialType)) {\n                return;\n            }\n\n            if (!!clientId && !this.matchClientId(entity, clientId)) {\n                return;\n            }\n\n            if (!!familyId && !this.matchFamilyId(entity, familyId)) {\n                return;\n            }\n\n            /*\n             * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\n             * Resource specific refresh tokens case will be added when the support is deemed necessary\n             */\n            if (!!target && !this.matchTarget(entity, target)) {\n                return;\n            }\n\n            // If request OR cached entity has requested Claims Hash, check if they match\n            if (requestedClaimsHash || entity.requestedClaimsHash) {\n                // Don't match if either is undefined or they are different\n                if (entity.requestedClaimsHash !== requestedClaimsHash) {\n                    return;\n                }\n            }\n\n            // Access Token with Auth Scheme specific matching\n            if (credentialType === CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME) {\n                if(!!tokenType && !this.matchTokenType(entity, tokenType)) {\n                    return;\n                }\n\n                // KeyId (sshKid) in request must match cached SSH certificate keyId because SSH cert is bound to a specific key\n                if (tokenType === AuthenticationScheme.SSH) {\n                    if(keyId && !this.matchKeyId(entity, keyId)) {\n                        return;\n                    }\n                }\n            }\n\n            // At this point, the entity matches the request, update cache key if key schema has changed\n            const updatedCacheKey = this.updateCredentialCacheKey(cacheKey, entity);\n\n            switch (credType) {\n                case CredentialType.ID_TOKEN:\n                    matchingCredentials.idTokens[updatedCacheKey] = entity as IdTokenEntity;\n                    break;\n                case CredentialType.ACCESS_TOKEN:\n                case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\n                    matchingCredentials.accessTokens[updatedCacheKey] = entity as AccessTokenEntity;\n                    break;\n                case CredentialType.REFRESH_TOKEN:\n                    matchingCredentials.refreshTokens[updatedCacheKey] = entity as RefreshTokenEntity;\n                    break;\n            }\n        });\n\n        return matchingCredentials;\n    }\n\n    /**\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\n     * @param filter\n     */\n    getAppMetadataFilteredBy(filter: AppMetadataFilter): AppMetadataCache {\n        return this.getAppMetadataFilteredByInternal(\n            filter.environment,\n            filter.clientId,\n        );\n    }\n\n    /**\n     * Support function to help match appMetadata\n     * @param environment\n     * @param clientId\n     */\n    private getAppMetadataFilteredByInternal(\n        environment?: string,\n        clientId?: string\n    ): AppMetadataCache {\n\n        const allCacheKeys = this.getKeys();\n        const matchingAppMetadata: AppMetadataCache = {};\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-appMetadata type cache entities\n            if (!this.isAppMetadata(cacheKey)) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getAppMetadata(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (!!environment && !this.matchEnvironment(entity, environment)) {\n                return;\n            }\n\n            if (!!clientId && !this.matchClientId(entity, clientId)) {\n                return;\n            }\n\n            matchingAppMetadata[cacheKey] = entity;\n\n        });\n\n        return matchingAppMetadata;\n    }\n\n    /**\n     * retrieve authorityMetadata that contains a matching alias\n     * @param filter\n     */\n    getAuthorityMetadataByAlias(host: string): AuthorityMetadataEntity | null {\n        const allCacheKeys = this.getAuthorityMetadataKeys();\n        let matchedEntity = null;\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-authorityMetadata type cache entities\n            if (!this.isAuthorityMetadata(cacheKey) || cacheKey.indexOf(this.clientId) === -1) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getAuthorityMetadata(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (entity.aliases.indexOf(host) === -1) {\n                return;\n            }\n\n            matchedEntity = entity;\n\n        });\n\n        return matchedEntity;\n    }\n\n    /**\n     * Removes all accounts and related tokens from cache.\n     */\n    async removeAllAccounts(): Promise<boolean> {\n        const allCacheKeys = this.getKeys();\n        const removedAccounts: Array<Promise<boolean>> = [];\n\n        allCacheKeys.forEach((cacheKey) => {\n            const entity = this.getAccount(cacheKey);\n            if (!entity) {\n                return;\n            }\n            removedAccounts.push(this.removeAccount(cacheKey));\n        });\n\n        await Promise.all(removedAccounts);\n        return true;\n    }\n\n    /**\n     * returns a boolean if the given account is removed\n     * @param account\n     */\n    async removeAccount(accountKey: string): Promise<boolean> {\n        const account = this.getAccount(accountKey);\n        if (!account) {\n            throw ClientAuthError.createNoAccountFoundError();\n        }\n        return (await this.removeAccountContext(account) && this.removeItem(accountKey, CacheSchemaType.ACCOUNT));\n    }\n\n    /**\n     * Removes credentials associated with the provided account\n     * @param account\n     */\n    async removeAccountContext(account: AccountEntity): Promise<boolean> {\n        const allCacheKeys = this.getKeys();\n        const accountId = account.generateAccountId();\n        const removedCredentials: Array<Promise<boolean>> = [];\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-credential type cache entities\n            const credType = CredentialEntity.getCredentialType(cacheKey);\n            if (credType === Constants.NOT_DEFINED) {\n                return;\n            }\n\n            const cacheEntity = this.getSpecificCredential(cacheKey, credType);\n            if (!!cacheEntity && accountId === cacheEntity.generateAccountId()) {\n                removedCredentials.push(this.removeCredential(cacheEntity));\n            }\n        });\n\n        await Promise.all(removedCredentials);\n        return true;\n    }\n\n    /**\n     * returns a boolean if the given credential is removed\n     * @param credential\n     */\n    async removeCredential(credential: CredentialEntity): Promise<boolean> {\n        const key = credential.generateCredentialKey();\n\n        // Remove Token Binding Key from key store for PoP Tokens Credentials\n        if (credential.credentialType.toLowerCase() === CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) {\n            if(credential.tokenType === AuthenticationScheme.POP) {\n                const accessTokenWithAuthSchemeEntity = credential as AccessTokenEntity;\n                const kid = accessTokenWithAuthSchemeEntity.keyId;\n\n                if (kid) {\n                    try {\n                        await this.cryptoImpl.removeTokenBindingKey(kid);\n                    } catch (error) {\n                        throw ClientAuthError.createBindingKeyNotRemovedError();\n                    }\n                }\n            }\n        }\n\n        return this.removeItem(key, CacheSchemaType.CREDENTIAL);\n    }\n\n    /**\n     * Removes all app metadata objects from cache.\n     */\n    removeAppMetadata(): boolean {\n        const allCacheKeys = this.getKeys();\n        allCacheKeys.forEach((cacheKey) => {\n            if (this.isAppMetadata(cacheKey)) {\n                this.removeItem(cacheKey, CacheSchemaType.APP_METADATA);\n            }\n        });\n\n        return true;\n    }\n\n    /**\n     * Retrieve the cached credentials into a cacherecord\n     * @param account\n     * @param clientId\n     * @param scopes\n     * @param environment\n     * @param authScheme\n     */\n    readCacheRecord(account: AccountInfo, clientId: string, request: BaseAuthRequest, environment: string): CacheRecord {\n\n        const cachedAccount = this.readAccountFromCache(account);\n        const cachedIdToken = this.readIdTokenFromCache(clientId, account);\n        const cachedAccessToken = this.readAccessTokenFromCache(clientId, account, request);\n        const cachedRefreshToken = this.readRefreshTokenFromCache(clientId, account, false);\n        const cachedAppMetadata = this.readAppMetadataFromCache(environment, clientId);\n\n        if (cachedAccount && cachedIdToken) {\n            cachedAccount.idTokenClaims = new AuthToken(cachedIdToken.secret, this.cryptoImpl).claims;\n        }\n\n        return {\n            account: cachedAccount,\n            idToken: cachedIdToken,\n            accessToken: cachedAccessToken,\n            refreshToken: cachedRefreshToken,\n            appMetadata: cachedAppMetadata,\n        };\n    }\n\n    /**\n     * Retrieve AccountEntity from cache\n     * @param account\n     */\n    readAccountFromCache(account: AccountInfo): AccountEntity | null {\n        const accountKey: string = AccountEntity.generateAccountCacheKey(account);\n        return this.getAccount(accountKey);\n    }\n\n    /**\n     * Retrieve IdTokenEntity from cache\n     * @param clientId\n     * @param account\n     * @param inputRealm\n     */\n    readIdTokenFromCache(clientId: string, account: AccountInfo): IdTokenEntity | null {\n        const idTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.ID_TOKEN,\n            clientId: clientId,\n            realm: account.tenantId,\n        };\n\n        const credentialCache: CredentialCache = this.getCredentialsFilteredBy(idTokenFilter);\n        const idTokens = Object.keys(credentialCache.idTokens).map((key) => credentialCache.idTokens[key]);\n        const numIdTokens = idTokens.length;\n\n        if (numIdTokens < 1) {\n            return null;\n        } else if (numIdTokens > 1) {\n            throw ClientAuthError.createMultipleMatchingTokensInCacheError();\n        }\n\n        return idTokens[0] as IdTokenEntity;\n    }\n\n    /**\n     * Retrieve AccessTokenEntity from cache\n     * @param clientId\n     * @param account\n     * @param scopes\n     * @param authScheme\n     */\n    readAccessTokenFromCache(clientId: string, account: AccountInfo, request: BaseAuthRequest): AccessTokenEntity | null {\n        const scopes =  new ScopeSet(request.scopes || []);\n        const authScheme = request.authenticationScheme || AuthenticationScheme.BEARER;\n        /*\n         * Distinguish between Bearer and PoP/SSH token cache types\n         * Cast to lowercase to handle \"bearer\" from ADFS\n         */\n        const credentialType = (authScheme && authScheme.toLowerCase() !== AuthenticationScheme.BEARER.toLowerCase()) ? CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME : CredentialType.ACCESS_TOKEN;\n\n        const accessTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: credentialType,\n            clientId,\n            realm: account.tenantId,\n            target: scopes.printScopesLowerCase(),\n            tokenType: authScheme,\n            keyId: request.sshKid,\n            requestedClaimsHash: request.requestedClaimsHash,\n        };\n\n        const credentialCache: CredentialCache = this.getCredentialsFilteredBy(accessTokenFilter);\n\n        const accessTokens = Object.keys(credentialCache.accessTokens).map((key) => credentialCache.accessTokens[key]);\n\n        const numAccessTokens = accessTokens.length;\n        if (numAccessTokens < 1) {\n            return null;\n        } else if (numAccessTokens > 1) {\n            throw ClientAuthError.createMultipleMatchingTokensInCacheError();\n        }\n\n        return accessTokens[0] as AccessTokenEntity;\n    }\n\n    /**\n     * Helper to retrieve the appropriate refresh token from cache\n     * @param clientId\n     * @param account\n     * @param familyRT\n     */\n    readRefreshTokenFromCache(clientId: string, account: AccountInfo, familyRT: boolean): RefreshTokenEntity | null {\n        const id = familyRT ? THE_FAMILY_ID : undefined;\n        const refreshTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.REFRESH_TOKEN,\n            clientId: clientId,\n            familyId: id,\n        };\n\n        const credentialCache: CredentialCache = this.getCredentialsFilteredBy(refreshTokenFilter);\n        const refreshTokens = Object.keys(credentialCache.refreshTokens).map((key) => credentialCache.refreshTokens[key]);\n\n        const numRefreshTokens = refreshTokens.length;\n        if (numRefreshTokens < 1) {\n            return null;\n        }\n        // address the else case after remove functions address environment aliases\n\n        return refreshTokens[0] as RefreshTokenEntity;\n    }\n\n    /**\n     * Retrieve AppMetadataEntity from cache\n     */\n    readAppMetadataFromCache(environment: string, clientId: string): AppMetadataEntity | null {\n        const appMetadataFilter: AppMetadataFilter = {\n            environment,\n            clientId,\n        };\n\n        const appMetadata: AppMetadataCache = this.getAppMetadataFilteredBy(appMetadataFilter);\n        const appMetadataEntries: AppMetadataEntity[] = Object.keys(appMetadata).map((key) => appMetadata[key]);\n\n        const numAppMetadata = appMetadataEntries.length;\n        if (numAppMetadata < 1) {\n            return null;\n        } else if (numAppMetadata > 1) {\n            throw ClientAuthError.createMultipleMatchingAppMetadataInCacheError();\n        }\n\n        return appMetadataEntries[0] as AppMetadataEntity;\n    }\n\n    /**\n     * Return the family_id value associated  with FOCI\n     * @param environment\n     * @param clientId\n     */\n    isAppMetadataFOCI(environment: string, clientId: string): boolean {\n        const appMetadata = this.readAppMetadataFromCache(environment, clientId);\n        return !!(appMetadata && appMetadata.familyId === THE_FAMILY_ID);\n    }\n\n    /**\n     * helper to match account ids\n     * @param value\n     * @param homeAccountId\n     */\n    private matchHomeAccountId(entity: AccountEntity | CredentialEntity, homeAccountId: string): boolean {\n        return !!(entity.homeAccountId && homeAccountId === entity.homeAccountId);\n    }\n\n    /**\n     * helper to match assertion\n     * @param value\n     * @param oboAssertion\n     */\n    private matchUserAssertionHash(entity: CredentialEntity, userAssertionHash: string): boolean {\n        return !!(entity.userAssertionHash && userAssertionHash === entity.userAssertionHash);\n    }\n\n    /**\n     * helper to match environment\n     * @param value\n     * @param environment\n     */\n    private matchEnvironment(entity: AccountEntity | CredentialEntity | AppMetadataEntity, environment: string): boolean {\n        const cloudMetadata = this.getAuthorityMetadataByAlias(environment);\n        if (cloudMetadata && cloudMetadata.aliases.indexOf(entity.environment) > -1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * helper to match credential type\n     * @param entity\n     * @param credentialType\n     */\n    private matchCredentialType(entity: CredentialEntity, credentialType: string): boolean {\n        return (entity.credentialType && credentialType.toLowerCase() === entity.credentialType.toLowerCase());\n    }\n\n    /**\n     * helper to match client ids\n     * @param entity\n     * @param clientId\n     */\n    private matchClientId(entity: CredentialEntity | AppMetadataEntity, clientId: string): boolean {\n        return !!(entity.clientId && clientId === entity.clientId);\n    }\n\n    /**\n     * helper to match family ids\n     * @param entity\n     * @param familyId\n     */\n    private matchFamilyId(entity: CredentialEntity | AppMetadataEntity, familyId: string): boolean {\n        return !!(entity.familyId && familyId === entity.familyId);\n    }\n\n    /**\n     * helper to match realm\n     * @param entity\n     * @param realm\n     */\n    private matchRealm(entity: AccountEntity | CredentialEntity, realm: string): boolean {\n        return !!(entity.realm && realm === entity.realm);\n    }\n\n    /**\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\n     * @param entity\n     * @param target\n     */\n    private matchTarget(entity: CredentialEntity, target: string): boolean {\n        const isNotAccessTokenCredential = (entity.credentialType !== CredentialType.ACCESS_TOKEN && entity.credentialType !== CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME);\n\n        if ( isNotAccessTokenCredential || !entity.target) {\n            return false;\n        }\n\n        const entityScopeSet: ScopeSet = ScopeSet.fromString(entity.target);\n        const requestTargetScopeSet: ScopeSet = ScopeSet.fromString(target);\n\n        if (!requestTargetScopeSet.containsOnlyOIDCScopes()) {\n            requestTargetScopeSet.removeOIDCScopes(); // ignore OIDC scopes\n        } else {\n            requestTargetScopeSet.removeScope(Constants.OFFLINE_ACCESS_SCOPE);\n        }\n        return entityScopeSet.containsScopeSet(requestTargetScopeSet);\n    }\n\n    /**\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    private matchTokenType(entity: CredentialEntity, tokenType: AuthenticationScheme): boolean {\n        return !!(entity.tokenType && entity.tokenType === tokenType);\n    }\n\n    /**\n     * Returns true if the credential's keyId matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    private matchKeyId(entity: CredentialEntity, keyId: string): boolean {\n        return !!(entity.keyId && entity.keyId === keyId);\n    }\n\n    /**\n     * returns if a given cache entity is of the type appmetadata\n     * @param key\n     */\n    private isAppMetadata(key: string): boolean {\n        return key.indexOf(APP_METADATA) !== -1;\n    }\n\n    /**\n     * returns if a given cache entity is of the type authoritymetadata\n     * @param key\n     */\n    protected isAuthorityMetadata(key: string): boolean {\n        return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\n    }\n\n    /**\n     * returns cache key used for cloud instance metadata\n     */\n    generateAuthorityMetadataCacheKey(authority: string): string {\n        return `${AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;\n    }\n\n    /**\n     * Returns the specific credential (IdToken/AccessToken/RefreshToken) from the cache\n     * @param key\n     * @param credType\n     */\n    private getSpecificCredential(key: string, credType: string): ValidCredentialType | null {\n        switch (credType) {\n            case CredentialType.ID_TOKEN: {\n                return this.getIdTokenCredential(key);\n            }\n            case CredentialType.ACCESS_TOKEN:\n            case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME: {\n                return this.getAccessTokenCredential(key);\n            }\n            case CredentialType.REFRESH_TOKEN: {\n                return this.getRefreshTokenCredential(key);\n            }\n            default:\n                return null;\n        }\n    }\n\n    /**\n     * Helper to convert serialized data to object\n     * @param obj\n     * @param json\n     */\n    static toObject<T>(obj: T, json: object): T {\n        for (const propertyName in json) {\n            obj[propertyName] = json[propertyName];\n        }\n        return obj;\n    }\n}\n\nexport class DefaultStorageClass extends CacheManager {\n    setAccount(): void {\n        const notImplErr = \"Storage interface - setAccount() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getAccount(): AccountEntity {\n        const notImplErr = \"Storage interface - getAccount() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setIdTokenCredential(): void {\n        const notImplErr = \"Storage interface - setIdTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getIdTokenCredential(): IdTokenEntity {\n        const notImplErr = \"Storage interface - getIdTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setAccessTokenCredential(): void {\n        const notImplErr = \"Storage interface - setAccessTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getAccessTokenCredential(): AccessTokenEntity {\n        const notImplErr = \"Storage interface - getAccessTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setRefreshTokenCredential(): void {\n        const notImplErr = \"Storage interface - setRefreshTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getRefreshTokenCredential(): RefreshTokenEntity {\n        const notImplErr = \"Storage interface - getRefreshTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setAppMetadata(): void {\n        const notImplErr = \"Storage interface - setAppMetadata() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getAppMetadata(): AppMetadataEntity {\n        const notImplErr = \"Storage interface - getAppMetadata() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setServerTelemetry(): void {\n        const notImplErr = \"Storage interface - setServerTelemetry() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getServerTelemetry(): ServerTelemetryEntity {\n        const notImplErr = \"Storage interface - getServerTelemetry() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setAuthorityMetadata(): void {\n        const notImplErr = \"Storage interface - setAuthorityMetadata() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getAuthorityMetadata(): AuthorityMetadataEntity | null {\n        const notImplErr = \"Storage interface - getAuthorityMetadata() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getAuthorityMetadataKeys(): Array<string> {\n        const notImplErr = \"Storage interface - getAuthorityMetadataKeys() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setThrottlingCache(): void {\n        const notImplErr = \"Storage interface - setThrottlingCache() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getThrottlingCache(): ThrottlingEntity {\n        const notImplErr = \"Storage interface - getThrottlingCache() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    removeItem(): boolean {\n        const notImplErr = \"Storage interface - removeItem() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    containsKey(): boolean {\n        const notImplErr = \"Storage interface - containsKey() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getKeys(): string[] {\n        const notImplErr = \"Storage interface - getKeys() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    async clear(): Promise<void> {\n        const notImplErr = \"Storage interface - clear() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    updateCredentialCacheKey(): string {\n        const notImplErr = \"Storage interface - updateCredentialCacheKey() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CredentialEntity } from \"./CredentialEntity\";\nimport { CredentialType } from \"../../utils/Constants\";\n\n/**\n * ID_TOKEN Cache\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-idtoken-clientId-contoso.com-\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      realm: Full tenant or organizational identifier that the account belongs to\n * }\n */\nexport class IdTokenEntity extends CredentialEntity {\n    realm: string;\n\n    /**\n     * Create IdTokenEntity\n     * @param homeAccountId\n     * @param authenticationResult\n     * @param clientId\n     * @param authority\n     */\n    static createIdTokenEntity(\n        homeAccountId: string,\n        environment: string,\n        idToken: string,\n        clientId: string,\n        tenantId: string,\n    ): IdTokenEntity {\n        const idTokenEntity = new IdTokenEntity();\n\n        idTokenEntity.credentialType = CredentialType.ID_TOKEN;\n        idTokenEntity.homeAccountId = homeAccountId;\n        idTokenEntity.environment = environment;\n        idTokenEntity.clientId = clientId;\n        idTokenEntity.secret = idToken;\n        idTokenEntity.realm = tenantId;\n\n        return idTokenEntity;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isIdTokenEntity(entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity[\"credentialType\"] === CredentialType.ID_TOKEN\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Utility class which exposes functions for managing date and time operations.\n */\nexport class TimeUtils {\n\n    /**\n     * return the current time in Unix time (seconds).\n     */\n    static nowSeconds(): number {\n        // Date.getTime() returns in milliseconds.\n        return Math.round(new Date().getTime() / 1000.0);\n    }\n    \n    /**\n     * check if a token is expired based on given UTC time in seconds.\n     * @param expiresOn\n     */\n    static isTokenExpired(expiresOn: string, offset: number): boolean {\n        // check for access token expiry\n        const expirationSec = Number(expiresOn) || 0;\n        const offsetCurrentTimeSec = TimeUtils.nowSeconds() + offset;\n\n        // If current time + offset is greater than token expiration time, then token is expired.\n        return (offsetCurrentTimeSec > expirationSec);\n    }\n\n    /**\n     * If the current time is earlier than the time that a token was cached at, we must discard the token\n     * i.e. The system clock was turned back after acquiring the cached token\n     * @param cachedAt \n     * @param offset \n     */\n    static wasClockTurnedBack(cachedAt: string): boolean {\n        const cachedAtSec = Number(cachedAt);\n\n        return cachedAtSec > TimeUtils.nowSeconds();\n    }\n\n    /**\n     * Waits for t number of milliseconds\n     * @param t number\n     * @param value T\n     */\n    static delay<T>(t: number, value?: T): Promise<T | void> {\n        return new Promise((resolve) => setTimeout(() => resolve(value), t));\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CredentialEntity } from \"./CredentialEntity\";\nimport { CredentialType, AuthenticationScheme } from \"../../utils/Constants\";\nimport { TimeUtils } from \"../../utils/TimeUtils\";\nimport { StringUtils } from \"../../utils/StringUtils\";\nimport { ICrypto } from \"../../crypto/ICrypto\";\nimport { TokenClaims } from \"../../account/TokenClaims\";\nimport { AuthToken } from \"../../account/AuthToken\";\nimport { ClientAuthError } from \"../../error/ClientAuthError\";\n\n/**\n * ACCESS_TOKEN Credential Type\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-accesstoken-clientId-contoso.com-user.read\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, usually only used for refresh tokens\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n *      cachedAt: Absolute device time when entry was created in the cache.\n *      expiresOn: Token expiry time, calculated based on current UTC time in seconds. Represented as a string.\n *      extendedExpiresOn: Additional extended expiry time until when token is valid in case of server-side outage. Represented as string in UTC seconds.\n *      keyId: used for POP and SSH tokenTypes\n *      tokenType: Type of the token issued. Usually \"Bearer\"\n * }\n */\nexport class AccessTokenEntity extends CredentialEntity {\n    realm: string;\n    target: string;\n    cachedAt: string;\n    expiresOn: string;\n    extendedExpiresOn?: string;\n    refreshOn?: string;\n    keyId?: string; // for POP and SSH tokenTypes\n    tokenType?: AuthenticationScheme;\n    requestedClaims?: string;\n    requestedClaimsHash?: string;\n\n    /**\n     * Create AccessTokenEntity\n     * @param homeAccountId\n     * @param environment\n     * @param accessToken\n     * @param clientId\n     * @param tenantId\n     * @param scopes\n     * @param expiresOn\n     * @param extExpiresOn\n     */\n    static createAccessTokenEntity(\n        homeAccountId: string,\n        environment: string,\n        accessToken: string,\n        clientId: string,\n        tenantId: string,\n        scopes: string,\n        expiresOn: number,\n        extExpiresOn: number,\n        cryptoUtils: ICrypto,\n        refreshOn?: number,\n        tokenType?: AuthenticationScheme,\n        userAssertionHash?:string,\n        keyId?: string,\n        requestedClaims?: string,\n        requestedClaimsHash?: string\n    ): AccessTokenEntity {\n        const atEntity: AccessTokenEntity = new AccessTokenEntity();\n\n        atEntity.homeAccountId = homeAccountId;\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN;\n        atEntity.secret = accessToken;\n\n        const currentTime = TimeUtils.nowSeconds();\n        atEntity.cachedAt = currentTime.toString();\n\n        /*\n         * Token expiry time.\n         * This value should be  calculated based on the current UTC time measured locally and the value  expires_in Represented as a string in JSON.\n         */\n        atEntity.expiresOn = expiresOn.toString();\n        atEntity.extendedExpiresOn = extExpiresOn.toString();\n        if (refreshOn) {\n            atEntity.refreshOn = refreshOn.toString();\n        }\n\n        atEntity.environment = environment;\n        atEntity.clientId = clientId;\n        atEntity.realm = tenantId;\n        atEntity.target = scopes;\n        atEntity.userAssertionHash = userAssertionHash;\n\n        atEntity.tokenType = StringUtils.isEmpty(tokenType) ? AuthenticationScheme.BEARER : tokenType;\n\n        if (requestedClaims) {\n            atEntity.requestedClaims = requestedClaims;\n            atEntity.requestedClaimsHash = requestedClaimsHash;\n        }\n\n        /*\n         * Create Access Token With Auth Scheme instead of regular access token\n         * Cast to lower to handle \"bearer\" from ADFS\n         */\n        if (atEntity.tokenType?.toLowerCase() !== AuthenticationScheme.BEARER.toLowerCase()) {\n            atEntity.credentialType = CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n            switch (atEntity.tokenType) {\n                case AuthenticationScheme.POP:\n                    // Make sure keyId is present and add it to credential\n                    const tokenClaims: TokenClaims | null = AuthToken.extractTokenClaims(accessToken, cryptoUtils);\n                    if (!tokenClaims?.cnf?.kid) {\n                        throw ClientAuthError.createTokenClaimsRequiredError();\n                    }\n                    atEntity.keyId = tokenClaims.cnf.kid;\n                    break;\n                case AuthenticationScheme.SSH:\n                    atEntity.keyId = keyId;\n            }\n        }\n\n        return atEntity;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccessTokenEntity(entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity.hasOwnProperty(\"target\") &&\n            (entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN || entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME)\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CredentialEntity } from \"./CredentialEntity\";\nimport { CredentialType } from \"../../utils/Constants\";\n\n/**\n * REFRESH_TOKEN Cache\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-refreshtoken-clientId--\n *\n * Value:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, '1' represents Microsoft Family\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n * }\n */\nexport class RefreshTokenEntity extends CredentialEntity {\n    familyId?: string;\n\n    /**\n     * Create RefreshTokenEntity\n     * @param homeAccountId\n     * @param authenticationResult\n     * @param clientId\n     * @param authority\n     */\n    static createRefreshTokenEntity(\n        homeAccountId: string,\n        environment: string,\n        refreshToken: string,\n        clientId: string,\n        familyId?: string,\n        userAssertionHash?: string\n    ): RefreshTokenEntity {\n        const rtEntity = new RefreshTokenEntity();\n\n        rtEntity.clientId = clientId;\n        rtEntity.credentialType = CredentialType.REFRESH_TOKEN;\n        rtEntity.environment = environment;\n        rtEntity.homeAccountId = homeAccountId;\n        rtEntity.secret = refreshToken;\n        rtEntity.userAssertionHash = userAssertionHash;\n\n        if (familyId)\n            rtEntity.familyId = familyId;\n\n        return rtEntity;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isRefreshTokenEntity(entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity[\"credentialType\"] === CredentialType.REFRESH_TOKEN\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { APP_METADATA, Separators } from \"../../utils/Constants\";\n\n/**\n * APP_METADATA Cache\n *\n * Key:Value Schema:\n *\n * Key: appmetadata-<environment>-<client_id>\n *\n * Value:\n * {\n *      clientId: client ID of the application\n *      environment: entity that issued the token, represented as a full host\n *      familyId: Family ID identifier, '1' represents Microsoft Family\n * }\n */\nexport class AppMetadataEntity {\n    clientId: string;\n    environment: string;\n    familyId?: string;\n\n    /**\n     * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\n     */\n    generateAppMetadataKey(): string {\n        return AppMetadataEntity.generateAppMetadataCacheKey(this.environment, this.clientId);\n    }\n\n    /**\n     * Generate AppMetadata Cache Key\n     */\n    static generateAppMetadataCacheKey(environment: string, clientId: string): string {\n        const appMetaDataKeyArray: Array<string> = [\n            APP_METADATA,\n            environment,\n            clientId,\n        ];\n        return appMetaDataKeyArray.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Creates AppMetadataEntity\n     * @param clientId\n     * @param environment\n     * @param familyId\n     */\n    static createAppMetadataEntity(clientId: string, environment: string, familyId?: string): AppMetadataEntity {\n        const appMetadata = new AppMetadataEntity();\n\n        appMetadata.clientId = clientId;\n        appMetadata.environment = environment;\n        if (familyId) {\n            appMetadata.familyId = familyId;\n        }\n\n        return appMetadata;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAppMetadataEntity(key: string, entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            key.indexOf(APP_METADATA) === 0 &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"environment\")\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { SERVER_TELEM_CONSTANTS } from \"../../utils/Constants\";\n\nexport class ServerTelemetryEntity {\n    failedRequests: Array<string|number>;\n    errors: string[];\n    cacheHits: number;\n\n    constructor() {\n        this.failedRequests = [];\n        this.errors = [];\n        this.cacheHits = 0;\n    }\n\n    /**\n     * validates if a given cache entry is \"Telemetry\", parses <key,value>\n     * @param key\n     * @param entity\n     */\n    static isServerTelemetryEntity(key: string, entity?: object): boolean {\n\n        const validateKey: boolean = key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\n        let validateEntity: boolean = true;\n\n        if (entity) {\n            validateEntity =\n                entity.hasOwnProperty(\"failedRequests\") &&\n                entity.hasOwnProperty(\"errors\") &&\n                entity.hasOwnProperty(\"cacheHits\");\n        }\n\n        return validateKey && validateEntity;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CloudDiscoveryMetadata } from \"../../authority/CloudDiscoveryMetadata\";\nimport { OpenIdConfigResponse } from \"../../authority/OpenIdConfigResponse\";\nimport { AUTHORITY_METADATA_CONSTANTS } from \"../../utils/Constants\";\nimport { TimeUtils } from \"../../utils/TimeUtils\";\n\nexport class AuthorityMetadataEntity {\n    aliases: Array<string>;\n    preferred_cache: string;\n    preferred_network: string;\n    canonical_authority: string;\n    authorization_endpoint: string;\n    token_endpoint: string;\n    end_session_endpoint?: string;\n    issuer: string;\n    aliasesFromNetwork: boolean;\n    endpointsFromNetwork: boolean;\n    expiresAt: number;\n    jwks_uri: string;\n\n    constructor() {\n        this.expiresAt = TimeUtils.nowSeconds() + AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n\n    /**\n     * Update the entity with new aliases, preferred_cache and preferred_network values\n     * @param metadata \n     * @param fromNetwork \n     */\n    updateCloudDiscoveryMetadata(metadata: CloudDiscoveryMetadata, fromNetwork: boolean): void {\n        this.aliases = metadata.aliases;\n        this.preferred_cache = metadata.preferred_cache;\n        this.preferred_network = metadata.preferred_network;\n        this.aliasesFromNetwork = fromNetwork;\n    }\n\n    /**\n     * Update the entity with new endpoints\n     * @param metadata \n     * @param fromNetwork \n     */\n    updateEndpointMetadata(metadata: OpenIdConfigResponse, fromNetwork: boolean): void {\n        this.authorization_endpoint = metadata.authorization_endpoint;\n        this.token_endpoint = metadata.token_endpoint;\n        this.end_session_endpoint = metadata.end_session_endpoint;\n        this.issuer = metadata.issuer;\n        this.endpointsFromNetwork = fromNetwork;\n        this.jwks_uri = metadata.jwks_uri;\n    }\n\n    /**\n     * Save the authority that was used to create this cache entry\n     * @param authority \n     */\n    updateCanonicalAuthority(authority: string): void {\n        this.canonical_authority = authority;\n    }\n\n    /**\n     * Reset the exiresAt value\n     */\n    resetExpiresAt(): void {\n        this.expiresAt = TimeUtils.nowSeconds() + AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n\n    /**\n     * Returns whether or not the data needs to be refreshed\n     */\n    isExpired(): boolean {\n        return this.expiresAt <= TimeUtils.nowSeconds();\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAuthorityMetadataEntity(key: string, entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\n            entity.hasOwnProperty(\"aliases\") &&\n            entity.hasOwnProperty(\"preferred_cache\") &&\n            entity.hasOwnProperty(\"preferred_network\") &&\n            entity.hasOwnProperty(\"canonical_authority\") &&\n            entity.hasOwnProperty(\"authorization_endpoint\") &&\n            entity.hasOwnProperty(\"token_endpoint\") &&\n            entity.hasOwnProperty(\"issuer\") &&\n            entity.hasOwnProperty(\"aliasesFromNetwork\") &&\n            entity.hasOwnProperty(\"endpointsFromNetwork\") &&\n            entity.hasOwnProperty(\"expiresAt\") &&\n            entity.hasOwnProperty(\"jwks_uri\")\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ThrottlingConstants } from \"../../utils/Constants\";\n\nexport class ThrottlingEntity {\n    // Unix-time value representing the expiration of the throttle\n    throttleTime: number;\n    // Information provided by the server\n    error?: string;\n    errorCodes?: Array<string>;\n    errorMessage?: string;\n    subError?: string;\n\n    /**\n     * validates if a given cache entry is \"Throttling\", parses <key,value>\n     * @param key\n     * @param entity\n     */\n    static isThrottlingEntity(key: string, entity?: object): boolean {\n        \n        let validateKey: boolean = false;\n        if (key) {\n            validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\n        }\n        \n        let validateEntity: boolean = true;\n        if (entity) {\n            validateEntity = entity.hasOwnProperty(\"throttleTime\");\n        }\n\n        return validateKey && validateEntity;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StringUtils } from \"./StringUtils\";\nimport { Constants } from \"./Constants\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\n\n/**\n * Type which defines the object that is stringified, encoded and sent in the state value.\n * Contains the following:\n * - id - unique identifier for this request\n * - ts - timestamp for the time the request was made. Used to ensure that token expiration is not calculated incorrectly.\n * - platformState - string value sent from the platform.\n */\nexport type LibraryStateObject = {\n    id: string,\n    meta?: Record<string, string>\n};\n\n/**\n * Type which defines the stringified and encoded object sent to the service in the authorize request.\n */\nexport type RequestStateObject = {\n    userRequestState: string,\n    libraryState: LibraryStateObject\n};\n\n/**\n * Class which provides helpers for OAuth 2.0 protocol specific values\n */\nexport class ProtocolUtils {\n\n    /**\n     * Appends user state with random guid, or returns random guid.\n     * @param userState \n     * @param randomGuid \n     */\n    static setRequestState(cryptoObj: ICrypto, userState?: string, meta?: Record<string, string>): string {\n        const libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\n        return !StringUtils.isEmpty(userState) ? `${libraryState}${Constants.RESOURCE_DELIM}${userState}` : libraryState;\n    }\n\n    /**\n     * Generates the state value used by the common library.\n     * @param randomGuid \n     * @param cryptoObj \n     */\n    static generateLibraryState(cryptoObj: ICrypto, meta?: Record<string, string>): string {\n        if (!cryptoObj) {\n            throw ClientAuthError.createNoCryptoObjectError(\"generateLibraryState\");\n        }\n\n        // Create a state object containing a unique id and the timestamp of the request creation\n        const stateObj: LibraryStateObject = {\n            id: cryptoObj.createNewGuid()\n        };\n\n        if (meta) {\n            stateObj.meta = meta;\n        }\n\n        const stateString = JSON.stringify(stateObj);\n\n        return cryptoObj.base64Encode(stateString);\n    }\n\n    /**\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\n     * @param state \n     * @param cryptoObj \n     */\n    static parseRequestState(cryptoObj: ICrypto, state: string): RequestStateObject {\n        if (!cryptoObj) {\n            throw ClientAuthError.createNoCryptoObjectError(\"parseRequestState\");\n        }\n\n        if (StringUtils.isEmpty(state)) {\n            throw ClientAuthError.createInvalidStateError(state, \"Null, undefined or empty state\");\n        }\n\n        try {\n            // Split the state between library state and user passed state and decode them separately\n            const splitState = state.split(Constants.RESOURCE_DELIM);\n            const libraryState = splitState[0];\n            const userState = splitState.length > 1 ? splitState.slice(1).join(Constants.RESOURCE_DELIM) : Constants.EMPTY_STRING;\n            const libraryStateString = cryptoObj.base64Decode(libraryState);\n            const libraryStateObj = JSON.parse(libraryStateString) as LibraryStateObject;\n            return {\n                userRequestState: !StringUtils.isEmpty(userState) ? userState : Constants.EMPTY_STRING,\n                libraryState: libraryStateObj\n            };\n        } catch(e) {\n            throw ClientAuthError.createInvalidStateError(state, e);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Protocol modes supported by MSAL.\n */\nexport enum ProtocolMode {\n    AAD = \"AAD\",\n    OIDC = \"OIDC\"\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ProtocolMode } from \"./ProtocolMode\";\nimport { AzureRegionConfiguration } from \"./AzureRegionConfiguration\";\n\nexport type AuthorityOptions = {\n    protocolMode: ProtocolMode;\n    knownAuthorities: Array<string>;\n    cloudDiscoveryMetadata: string;\n    authorityMetadata: string;\n    skipAuthorityMetadataCache?: boolean;\n    azureRegionConfiguration?: AzureRegionConfiguration;\n};\n\nexport enum AzureCloudInstance {\n    // AzureCloudInstance is not specified.\n    None,\n\n    // Microsoft Azure public cloud\n    AzurePublic = \"https://login.microsoftonline.com\",\n\n    // Microsoft PPE\n    AzurePpe = \"https://login.windows-ppe.net\",\n\n    // Microsoft Chinese national cloud\n    AzureChina = \"https://login.chinacloudapi.cn\",\n\n    // Microsoft German national cloud (\"Black Forest\")\n    AzureGermany = \"https://login.microsoftonline.de\",\n\n    // US Government cloud\n    AzureUsGovernment = \"https://login.microsoftonline.us\",\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\nimport { BrowserCacheLocation } from \"../utils/BrowserConstants\";\nimport { IWindowStorage } from \"./IWindowStorage\";\n\nexport class BrowserStorage implements IWindowStorage<string> {\n\n    private windowStorage: Storage;\n\n    constructor(cacheLocation: string) {\n        this.validateWindowStorage(cacheLocation);\n        this.windowStorage = window[cacheLocation];\n    }\n\n    private validateWindowStorage(cacheLocation: string): void {\n        if (cacheLocation !== BrowserCacheLocation.LocalStorage && cacheLocation !== BrowserCacheLocation.SessionStorage) {\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n        }\n        const storageSupported = !!window[cacheLocation];\n        if (!storageSupported) {\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n        }\n    }\n\n    getItem(key: string): string | null {\n        return this.windowStorage.getItem(key);\n    }\n\n    setItem(key: string, value: string): void {\n        this.windowStorage.setItem(key, value);\n    }\n\n    removeItem(key: string): void {\n        this.windowStorage.removeItem(key);\n    }\n\n    getKeys(): string[] {\n        return Object.keys(this.windowStorage);\n    }\n\n    containsKey(key: string): boolean {\n        return this.windowStorage.hasOwnProperty(key);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ServerAuthorizationCodeResponse } from \"../response/ServerAuthorizationCodeResponse\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { IUri } from \"./IUri\";\nimport { AADAuthorityConstants, Constants } from \"../utils/Constants\";\n\n/**\n * Url object class which can perform various transformations on url strings.\n */\nexport class UrlString {\n\n    // internal url string field\n    private _urlString: string;\n    public get urlString(): string {\n        return this._urlString;\n    }\n\n    constructor(url: string) {\n        this._urlString = url;\n        if (StringUtils.isEmpty(this._urlString)) {\n            // Throws error if url is empty\n            throw ClientConfigurationError.createUrlEmptyError();\n        }\n\n        if (StringUtils.isEmpty(this.getHash())) {\n            this._urlString = UrlString.canonicalizeUri(url);\n        }\n    }\n\n    /**\n     * Ensure urls are lower case and end with a / character.\n     * @param url\n     */\n    static canonicalizeUri(url: string): string {\n        if (url) {\n            let lowerCaseUrl = url.toLowerCase();\n\n            if (StringUtils.endsWith(lowerCaseUrl, \"?\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\n            } else if (StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\n            }\n\n            if (!StringUtils.endsWith(lowerCaseUrl, \"/\")) {\n                lowerCaseUrl += \"/\";\n            }\n\n            return lowerCaseUrl;\n        }\n\n        return url;\n    }\n\n    /**\n     * Throws if urlString passed is not a valid authority URI string.\n     */\n    validateAsUri(): void {\n        // Attempts to parse url for uri components\n        let components;\n        try {\n            components = this.getUrlComponents();\n        } catch (e) {\n            throw ClientConfigurationError.createUrlParseError(e);\n        }\n\n        // Throw error if URI or path segments are not parseable.\n        if (!components.HostNameAndPort || !components.PathSegments) {\n            throw ClientConfigurationError.createUrlParseError(`Given url string: ${this.urlString}`);\n        }\n\n        // Throw error if uri is insecure.\n        if(!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\n            throw ClientConfigurationError.createInsecureAuthorityUriError(this.urlString);\n        }\n    }\n\n    /**\n     * Given a url and a query string return the url with provided query string appended\n     * @param url\n     * @param queryString\n     */\n    static appendQueryString(url: string, queryString: string): string {\n        if (StringUtils.isEmpty(queryString)) {\n            return url;\n        }\n\n        return url.indexOf(\"?\") < 0 ? `${url}?${queryString}` : `${url}&${queryString}`;\n    }\n\n    /**\n     * Returns a url with the hash removed\n     * @param url\n     */\n    static removeHashFromUrl(url: string): string {\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\n    }\n\n    /**\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\n     * @param href The url\n     * @param tenantId The tenant id to replace\n     */\n    replaceTenantPath(tenantId: string): UrlString {\n        const urlObject = this.getUrlComponents();\n        const pathArray = urlObject.PathSegments;\n        if (tenantId && (pathArray.length !== 0 && (pathArray[0] === AADAuthorityConstants.COMMON || pathArray[0] === AADAuthorityConstants.ORGANIZATIONS))) {\n            pathArray[0] = tenantId;\n        }\n        return UrlString.constructAuthorityUriFromObject(urlObject);\n    }\n\n    /**\n     * Returns the anchor part(#) of the URL\n     */\n    getHash(): string {\n        return UrlString.parseHash(this.urlString);\n    }\n\n    /**\n     * Parses out the components from a url string.\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\n     */\n    getUrlComponents(): IUri {\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\n        const regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\n\n        // If url string does not match regEx, we throw an error\n        const match = this.urlString.match(regEx);\n        if (!match) {\n            throw ClientConfigurationError.createUrlParseError(`Given url string: ${this.urlString}`);\n        }\n\n        // Url component object\n        const urlComponents = {\n            Protocol: match[1],\n            HostNameAndPort: match[4],\n            AbsolutePath: match[5],\n            QueryString: match[7]\n        } as IUri;\n\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\n        urlComponents.PathSegments = pathSegments;\n\n        if (!StringUtils.isEmpty(urlComponents.QueryString) && urlComponents.QueryString.endsWith(\"/\")) {\n            urlComponents.QueryString = urlComponents.QueryString.substring(0, urlComponents.QueryString.length-1);\n        }\n        return urlComponents;\n    }\n\n    static getDomainFromUrl(url: string): string {\n        const regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\n\n        const match = url.match(regEx);\n\n        if (!match) {\n            throw ClientConfigurationError.createUrlParseError(`Given url string: ${url}`);\n        }\n\n        return match[2];\n    }\n\n    static getAbsoluteUrl(relativeUrl: string, baseUrl: string): string {\n        if (relativeUrl[0] === Constants.FORWARD_SLASH) {\n            const url = new UrlString(baseUrl);\n            const baseComponents = url.getUrlComponents();\n\n            return baseComponents.Protocol + \"//\" + baseComponents.HostNameAndPort + relativeUrl;\n        }\n\n        return relativeUrl;\n    }\n\n    /**\n     * Parses hash string from given string. Returns empty string if no hash symbol is found.\n     * @param hashString\n     */\n    static parseHash(hashString: string): string {\n        const hashIndex1 = hashString.indexOf(\"#\");\n        const hashIndex2 = hashString.indexOf(\"#/\");\n        if (hashIndex2 > -1) {\n            return hashString.substring(hashIndex2 + 2);\n        } else if (hashIndex1 > -1) {\n            return hashString.substring(hashIndex1 + 1);\n        }\n        return Constants.EMPTY_STRING;\n    }\n\n    static constructAuthorityUriFromObject(urlObject: IUri): UrlString {\n        return new UrlString(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + urlObject.PathSegments.join(\"/\"));\n    }\n\n    /**\n     * Returns URL hash as server auth code response object.\n     */\n    static getDeserializedHash(hash: string): ServerAuthorizationCodeResponse {\n        // Check if given hash is empty\n        if (StringUtils.isEmpty(hash)) {\n            return {};\n        }\n        // Strip the # symbol if present\n        const parsedHash = UrlString.parseHash(hash);\n        // If # symbol was not present, above will return empty string, so give original hash value\n        const deserializedHash: ServerAuthorizationCodeResponse = StringUtils.queryStringToObject<ServerAuthorizationCodeResponse>(StringUtils.isEmpty(parsedHash) ? hash : parsedHash);\n        // Check if deserialization didn't work\n        if (!deserializedHash) {\n            throw ClientAuthError.createHashNotDeserializedError(JSON.stringify(deserializedHash));\n        }\n        return deserializedHash;\n    }\n\n    /**\n     * Check if the hash of the URL string contains known properties\n     */\n    static hashContainsKnownProperties(hash: string): boolean {\n        if (StringUtils.isEmpty(hash) || hash.indexOf(\"=\") < 0) {\n            // Hash doesn't contain key/value pairs\n            return false;\n        }\n\n        const parameters: ServerAuthorizationCodeResponse = UrlString.getDeserializedHash(hash);\n        return !!(\n            parameters.code ||\n            parameters.error_description ||\n            parameters.error ||\n            parameters.state\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { InteractionType } from \"./BrowserConstants\";\nimport { StringUtils, ClientAuthError, ICrypto, RequestStateObject, ProtocolUtils, ServerAuthorizationCodeResponse, UrlString } from \"@azure/msal-common\";\n\nexport type BrowserStateObject = {\n    interactionType: InteractionType\n};\n\nexport class BrowserProtocolUtils {\n\n    /**\n     * Extracts the BrowserStateObject from the state string.\n     * @param browserCrypto \n     * @param state \n     */\n    static extractBrowserRequestState(browserCrypto: ICrypto, state: string): BrowserStateObject | null {\n        if (StringUtils.isEmpty(state)) {\n            return null;\n        }\n\n        try {\n            const requestStateObj: RequestStateObject = ProtocolUtils.parseRequestState(browserCrypto, state);\n            return requestStateObj.libraryState.meta as BrowserStateObject;\n        } catch (e) {\n            throw ClientAuthError.createInvalidStateError(state, e);\n        }\n    }\n\n    /**\n     * Parses properties of server response from url hash\n     * @param locationHash Hash from url\n     */\n    static parseServerResponseFromHash(locationHash: string): ServerAuthorizationCodeResponse {\n        if (!locationHash) {\n            return {};\n        }\n        \n        const hashUrlString = new UrlString(locationHash);\n        return UrlString.getDeserializedHash(hashUrlString.getHash());\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants, PersistentCacheKeys, StringUtils, CommonAuthorizationCodeRequest, ICrypto, AccountEntity, IdTokenEntity, AccessTokenEntity, RefreshTokenEntity, AppMetadataEntity, CacheManager, ServerTelemetryEntity, ThrottlingEntity, ProtocolUtils, Logger, AuthorityMetadataEntity, DEFAULT_CRYPTO_IMPLEMENTATION, AccountInfo, CcsCredential, CcsCredentialType, IdToken, ValidCredentialType, ClientAuthError } from \"@azure/msal-common\";\nimport { CacheOptions } from \"../config/Configuration\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { BrowserCacheLocation, InteractionType, TemporaryCacheKeys, InMemoryCacheKeys } from \"../utils/BrowserConstants\";\nimport { BrowserStorage } from \"./BrowserStorage\";\nimport { MemoryStorage } from \"./MemoryStorage\";\nimport { IWindowStorage } from \"./IWindowStorage\";\nimport { BrowserProtocolUtils } from \"../utils/BrowserProtocolUtils\";\nimport { NativeTokenRequest } from \"../broker/nativeBroker/NativeRequest\";\n\n/**\n * This class implements the cache storage interface for MSAL through browser local or session storage.\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\n * parameters such as state and nonce, generally.\n */\nexport class BrowserCacheManager extends CacheManager {\n\n    // Cache configuration, either set by user or default values.\n    protected cacheConfig: Required<CacheOptions>;\n    // Window storage object (either local or sessionStorage)\n    protected browserStorage: IWindowStorage<string>;\n    // Internal in-memory storage object used for data used by msal that does not need to persist across page loads\n    protected internalStorage: MemoryStorage<string>;\n    // Temporary cache\n    protected temporaryCacheStorage: IWindowStorage<string>;\n    // Client id of application. Used in cache keys to partition cache correctly in the case of multiple instances of MSAL.\n    protected logger: Logger;\n\n    // Cookie life calculation (hours * minutes * seconds * ms)\n    protected readonly COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\n\n    constructor(clientId: string, cacheConfig: Required<CacheOptions>, cryptoImpl: ICrypto, logger: Logger) {\n        super(clientId, cryptoImpl);\n\n        this.cacheConfig = cacheConfig;\n        this.logger = logger;\n        this.internalStorage = new MemoryStorage();\n        this.browserStorage = this.setupBrowserStorage(this.cacheConfig.cacheLocation);\n        this.temporaryCacheStorage = this.setupTemporaryCacheStorage(this.cacheConfig.cacheLocation);\n\n        // Migrate any cache entries from older versions of MSAL.\n        this.migrateCacheEntries();\n    }\n\n    /**\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured cacheLocation.\n     * @param cacheLocation\n     */\n    protected setupBrowserStorage(cacheLocation: BrowserCacheLocation | string): IWindowStorage<string> {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n            case BrowserCacheLocation.SessionStorage:\n                try {\n                    // Temporary cache items will always be stored in session storage to mitigate problems caused by multiple tabs\n                    return new BrowserStorage(cacheLocation);\n                } catch (e) {\n                    this.logger.verbose(e);\n                    break;\n                }\n            case BrowserCacheLocation.MemoryStorage:\n            default:\n                break;\n        }\n        this.cacheConfig.cacheLocation = BrowserCacheLocation.MemoryStorage;\n        return new MemoryStorage();\n    }\n\n    /**\n     *\n     * @param cacheLocation\n     */\n    protected setupTemporaryCacheStorage(cacheLocation: BrowserCacheLocation | string): IWindowStorage<string> {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n            case BrowserCacheLocation.SessionStorage:\n                try {\n                    // Temporary cache items will always be stored in session storage to mitigate problems caused by multiple tabs\n                    return new BrowserStorage(BrowserCacheLocation.SessionStorage);\n                } catch (e) {\n                    this.logger.verbose(e);\n                    return this.internalStorage;\n                }\n            case BrowserCacheLocation.MemoryStorage:\n            default:\n                return this.internalStorage;\n        }\n    }\n\n    /**\n     * Migrate all old cache entries to new schema. No rollback supported.\n     * @param storeAuthStateInCookie\n     */\n    protected migrateCacheEntries(): void {\n        const idTokenKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ID_TOKEN}`;\n        const clientInfoKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.CLIENT_INFO}`;\n        const errorKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR}`;\n        const errorDescKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR_DESC}`;\n\n        const idTokenValue = this.browserStorage.getItem(idTokenKey);\n        const clientInfoValue = this.browserStorage.getItem(clientInfoKey);\n        const errorValue = this.browserStorage.getItem(errorKey);\n        const errorDescValue = this.browserStorage.getItem(errorDescKey);\n\n        const values = [idTokenValue, clientInfoValue, errorValue, errorDescValue];\n        const keysToMigrate = [PersistentCacheKeys.ID_TOKEN, PersistentCacheKeys.CLIENT_INFO, PersistentCacheKeys.ERROR, PersistentCacheKeys.ERROR_DESC];\n\n        keysToMigrate.forEach((cacheKey:string, index: number) => this.migrateCacheEntry(cacheKey, values[index]));\n    }\n\n    /**\n     * Utility function to help with migration.\n     * @param newKey\n     * @param value\n     * @param storeAuthStateInCookie\n     */\n    protected migrateCacheEntry(newKey: string, value: string|null): void {\n        if (value) {\n            this.setTemporaryCache(newKey, value, true);\n        }\n    }\n\n    /**\n     * Parses passed value as JSON object, JSON.parse() will throw an error.\n     * @param input\n     */\n    protected validateAndParseJson(jsonValue: string): object | null {\n        try {\n            const parsedJson = JSON.parse(jsonValue);\n            /**\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\n             *\n             */\n            return (parsedJson && typeof parsedJson === \"object\") ? parsedJson : null;\n        } catch (error) {\n            return null;\n        }\n    }\n\n    /**\n     * fetches the entry from the browser storage based off the key\n     * @param key\n     */\n    getItem(key: string): string | null {\n        return this.browserStorage.getItem(key);\n    }\n\n    /**\n     * sets the entry in the browser storage\n     * @param key\n     * @param value\n     */\n    setItem(key: string, value: string): void {\n        this.browserStorage.setItem(key, value);\n    }\n\n    /**\n     * fetch the account entity from the platform cache\n     * @param accountKey\n     */\n    getAccount(accountKey: string): AccountEntity | null {\n        const account = this.getItem(accountKey);\n        if (!account) {\n            return null;\n        }\n\n        const parsedAccount = this.validateAndParseJson(account);\n        if (!parsedAccount || !AccountEntity.isAccountEntity(parsedAccount)) {\n            return null;\n        }\n\n        return CacheManager.toObject<AccountEntity>(new AccountEntity(), parsedAccount);\n    }\n\n    /**\n     * set account entity in the platform cache\n     * @param key\n     * @param value\n     */\n    setAccount(account: AccountEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAccount called\");\n        const key = account.generateAccountKey();\n        this.setItem(key, JSON.stringify(account));\n    }\n\n    /**\n     * generates idToken entity from a string\n     * @param idTokenKey\n     */\n    getIdTokenCredential(idTokenKey: string): IdTokenEntity | null {\n        const value = this.getItem(idTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\n            return null;\n        }\n\n        const parsedIdToken = this.validateAndParseJson(value);\n        if (!parsedIdToken || !IdTokenEntity.isIdTokenEntity(parsedIdToken)) {\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: cache hit\");\n        return CacheManager.toObject(new IdTokenEntity(), parsedIdToken);\n    }\n\n    /**\n     * set IdToken credential to the platform cache\n     * @param idToken\n     */\n    setIdTokenCredential(idToken: IdTokenEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setIdTokenCredential called\");\n        const idTokenKey = idToken.generateCredentialKey();\n        this.setItem(idTokenKey, JSON.stringify(idToken));\n    }\n\n    /**\n     * generates accessToken entity from a string\n     * @param key\n     */\n    getAccessTokenCredential(accessTokenKey: string): AccessTokenEntity | null {\n        const value = this.getItem(accessTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\n            return null;\n        }\n        const parsedAccessToken = this.validateAndParseJson(value);\n        if (!parsedAccessToken || !AccessTokenEntity.isAccessTokenEntity(parsedAccessToken)) {\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: cache hit\");\n        return CacheManager.toObject(new AccessTokenEntity(), parsedAccessToken);\n    }\n\n    /**\n     * set accessToken credential to the platform cache\n     * @param accessToken\n     */\n    setAccessTokenCredential(accessToken: AccessTokenEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAccessTokenCredential called\");\n        const accessTokenKey = accessToken.generateCredentialKey();\n        this.setItem(accessTokenKey, JSON.stringify(accessToken));\n    }\n\n    /**\n     * generates refreshToken entity from a string\n     * @param refreshTokenKey\n     */\n    getRefreshTokenCredential(refreshTokenKey: string): RefreshTokenEntity | null {\n        const value = this.getItem(refreshTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\n            return null;\n        }\n        const parsedRefreshToken = this.validateAndParseJson(value);\n        if (!parsedRefreshToken || !RefreshTokenEntity.isRefreshTokenEntity(parsedRefreshToken)) {\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: cache hit\");\n        return CacheManager.toObject(new RefreshTokenEntity(), parsedRefreshToken);\n    }\n\n    /**\n     * set refreshToken credential to the platform cache\n     * @param refreshToken\n     */\n    setRefreshTokenCredential(refreshToken: RefreshTokenEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setRefreshTokenCredential called\");\n        const refreshTokenKey = refreshToken.generateCredentialKey();\n        this.setItem(refreshTokenKey, JSON.stringify(refreshToken));\n    }\n\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    getAppMetadata(appMetadataKey: string): AppMetadataEntity | null {\n        const value = this.getItem(appMetadataKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\n            return null;\n        }\n\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (!parsedMetadata || !AppMetadataEntity.isAppMetadataEntity(appMetadataKey, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getAppMetadata: cache hit\");\n        return CacheManager.toObject(new AppMetadataEntity(), parsedMetadata);\n    }\n\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    setAppMetadata(appMetadata: AppMetadataEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAppMetadata called\");\n        const appMetadataKey = appMetadata.generateAppMetadataKey();\n        this.setItem(appMetadataKey, JSON.stringify(appMetadata));\n    }\n\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    getServerTelemetry(serverTelemetryKey: string): ServerTelemetryEntity | null {\n        const value = this.getItem(serverTelemetryKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (!parsedMetadata || !ServerTelemetryEntity.isServerTelemetryEntity(serverTelemetryKey, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getServerTelemetry: cache hit\");\n        return CacheManager.toObject(new ServerTelemetryEntity(), parsedMetadata);\n    }\n\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    setServerTelemetry(serverTelemetryKey: string, serverTelemetry: ServerTelemetryEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setServerTelemetry called\");\n        this.setItem(serverTelemetryKey, JSON.stringify(serverTelemetry));\n    }\n\n    /**\n     *\n     */\n    getAuthorityMetadata(key: string) : AuthorityMetadataEntity | null {\n        const value = this.internalStorage.getItem(key);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: called, no cache hit\");\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (parsedMetadata && AuthorityMetadataEntity.isAuthorityMetadataEntity(key, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: cache hit\");\n            return CacheManager.toObject(new AuthorityMetadataEntity(), parsedMetadata);\n        }\n        return null;\n    }\n\n    /**\n     *\n     */\n    getAuthorityMetadataKeys(): Array<string> {\n        const allKeys = this.internalStorage.getKeys();\n        return allKeys.filter((key) => {\n            return this.isAuthorityMetadata(key);\n        });\n    }\n\n    /**\n     * Sets wrapper metadata in memory\n     * @param wrapperSKU \n     * @param wrapperVersion \n     */\n    setWrapperMetadata(wrapperSKU: string, wrapperVersion: string): void {\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_SKU, wrapperSKU);\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_VER, wrapperVersion);\n    }\n\n    /**\n     * Returns wrapper metadata from in-memory storage\n     */\n    getWrapperMetadata(): [string, string] {\n        const sku = this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_SKU) || Constants.EMPTY_STRING;\n        const version = this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_VER) || Constants.EMPTY_STRING;\n        return [sku, version];\n    }\n\n    /**\n     *\n     * @param entity\n     */\n    setAuthorityMetadata(key: string, entity: AuthorityMetadataEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAuthorityMetadata called\");\n        this.internalStorage.setItem(key, JSON.stringify(entity));\n    }\n\n    /**\n     * Gets the active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        const activeAccountIdKey = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT);\n        const activeAccountId = this.browserStorage.getItem(activeAccountIdKey);\n        if (!activeAccountId) {\n            return null;\n        }\n        return this.getAccountInfoByFilter({localAccountId: activeAccountId})[0] || null;\n    }\n\n    /**\n     * Sets the active account's localAccountId in cache\n     * @param account \n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        const activeAccountIdKey = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT);\n        if (account) {\n            this.logger.verbose(\"setActiveAccount: Active account set\");\n            this.browserStorage.setItem(activeAccountIdKey, account.localAccountId);\n        } else {\n            this.logger.verbose(\"setActiveAccount: No account passed, active account not set\");\n            this.browserStorage.removeItem(activeAccountIdKey);\n        }\n    }\n\n    /**\n     * Gets a list of accounts that match all of the filters provided\n     * @param account \n     */\n    getAccountInfoByFilter(accountFilter: Partial<Omit<AccountInfo, \"idTokenClaims\"|\"name\">>): AccountInfo[] {\n        const allAccounts = this.getAllAccounts();\n        return allAccounts.filter((accountObj) => {\n            if (accountFilter.username && accountFilter.username.toLowerCase() !== accountObj.username.toLowerCase()) {\n                return false;\n            }\n\n            if (accountFilter.homeAccountId && accountFilter.homeAccountId !== accountObj.homeAccountId) {\n                return false;\n            }\n\n            if (accountFilter.localAccountId && accountFilter.localAccountId !== accountObj.localAccountId) {\n                return false;\n            }\n\n            if (accountFilter.tenantId && accountFilter.tenantId !== accountObj.tenantId) {\n                return false;\n            }\n\n            if (accountFilter.environment && accountFilter.environment !== accountObj.environment) {\n                return false;\n            }\n            \n            return true;\n        });\n    }\n\n    /**\n     * Checks the cache for accounts matching loginHint or SID\n     * @param loginHint \n     * @param sid \n     */\n    getAccountInfoByHints(loginHint?: string, sid?: string): AccountInfo | null {\n        const matchingAccounts = this.getAllAccounts().filter((accountInfo) => {\n            if (sid) {\n                const accountSid = accountInfo.idTokenClaims && accountInfo.idTokenClaims[\"sid\"];\n                return sid === accountSid;\n            }\n\n            if (loginHint) {\n                return loginHint === accountInfo.username;\n            }\n\n            return false;\n        });\n\n        if (matchingAccounts.length === 1) {\n            return matchingAccounts[0];\n        } else if (matchingAccounts.length > 1) {\n            throw ClientAuthError.createMultipleMatchingAccountsInCacheError();\n        }\n\n        return null;\n    }\n\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    getThrottlingCache(throttlingCacheKey: string): ThrottlingEntity | null {\n        const value = this.getItem(throttlingCacheKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\n            return null;\n        }\n\n        const parsedThrottlingCache = this.validateAndParseJson(value);\n        if (!parsedThrottlingCache || !ThrottlingEntity.isThrottlingEntity(throttlingCacheKey, parsedThrottlingCache)) {\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getThrottlingCache: cache hit\");\n        return CacheManager.toObject(new ThrottlingEntity(), parsedThrottlingCache);\n    }\n\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    setThrottlingCache(throttlingCacheKey: string, throttlingCache: ThrottlingEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setThrottlingCache called\");\n        this.setItem(throttlingCacheKey, JSON.stringify(throttlingCache));\n    }\n\n    /**\n     * Gets cache item with given key.\n     * Will retrieve from cookies if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    getTemporaryCache(cacheKey: string, generateKey?: boolean): string | null {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            const itemCookie = this.getItemCookie(key);\n            if (itemCookie) {\n                this.logger.trace(\"BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies\");\n                return itemCookie;\n            }\n        }\n\n        const value = this.temporaryCacheStorage.getItem(key);\n        if (!value) {\n            // If temp cache item not found in session/memory, check local storage for items set by old versions\n            if (this.cacheConfig.cacheLocation === BrowserCacheLocation.LocalStorage) {\n                const item = this.browserStorage.getItem(key);\n                if (item) {\n                    this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage\");\n                    return item;\n                }\n            }\n            this.logger.trace(\"BrowserCacheManager.getTemporaryCache: No cache item found in local storage\");\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item returned\");\n        return value;\n    }\n\n    /**\n     * Sets the cache item with the key and value given.\n     * Stores in cookie if storeAuthStateInCookie is set to true.\n     * This can cause cookie overflow if used incorrectly.\n     * @param key\n     * @param value\n     */\n    setTemporaryCache(cacheKey: string, value: string, generateKey?: boolean): void {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n\n        this.temporaryCacheStorage.setItem(key, value);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\"BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie\");\n            this.setItemCookie(key, value);\n        }\n    }\n\n    /**\n     * Removes the cache item with the given key.\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    removeItem(key: string): boolean {\n        this.browserStorage.removeItem(key);\n        this.temporaryCacheStorage.removeItem(key);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\"BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie\");\n            this.clearItemCookie(key);\n        }\n        return true;\n    }\n\n    /**\n     * Checks whether key is in cache.\n     * @param key\n     */\n    containsKey(key: string): boolean {\n        return this.browserStorage.containsKey(key) || this.temporaryCacheStorage.containsKey(key);\n    }\n\n    /**\n     * Gets all keys in window.\n     */\n    getKeys(): string[] {\n        return [\n            ...this.browserStorage.getKeys(),\n            ...this.temporaryCacheStorage.getKeys()\n        ];\n    }\n\n    /**\n     * Clears all cache entries created by MSAL.\n     */\n    async clear(): Promise<void> {\n        // Removes all accounts and their credentials\n        await this.removeAllAccounts();\n        this.removeAppMetadata();\n\n        // Removes all remaining MSAL cache items\n        this.getKeys().forEach((cacheKey: string) => {\n            // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\n            if ((this.browserStorage.containsKey(cacheKey) || this.temporaryCacheStorage.containsKey(cacheKey)) && ((cacheKey.indexOf(Constants.CACHE_PREFIX) !== -1) || (cacheKey.indexOf(this.clientId) !== -1))) {\n                this.removeItem(cacheKey);\n            }\n        });\n\n        this.internalStorage.clear();\n    }\n\n    /**\n     * Add value to cookies\n     * @param cookieName\n     * @param cookieValue\n     * @param expires\n     */\n    setItemCookie(cookieName: string, cookieValue: string, expires?: number): void {\n        let cookieStr = `${encodeURIComponent(cookieName)}=${encodeURIComponent(cookieValue)};path=/;SameSite=Lax;`;\n        if (expires) {\n            const expireTime = this.getCookieExpirationTime(expires);\n            cookieStr += `expires=${expireTime};`;\n        }\n\n        if (this.cacheConfig.secureCookies) {\n            cookieStr += \"Secure;\";\n        }\n        \n        document.cookie = cookieStr;\n    }\n\n    /**\n     * Get one item by key from cookies\n     * @param cookieName\n     */\n    getItemCookie(cookieName: string): string {\n        const name = `${encodeURIComponent(cookieName)}=`;\n        const cookieList = document.cookie.split(\";\");\n        for (let i: number = 0; i < cookieList.length; i++) {\n            let cookie = cookieList[i];\n            while (cookie.charAt(0) === \" \") {\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(name) === 0) {\n                return decodeURIComponent(cookie.substring(name.length, cookie.length));\n            }\n        }\n        return Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Clear all msal-related cookies currently set in the browser. Should only be used to clear temporary cache items.\n     */\n    clearMsalCookies(): void {\n        const cookiePrefix = `${Constants.CACHE_PREFIX}.${this.clientId}`;\n        const cookieList = document.cookie.split(\";\");\n        cookieList.forEach((cookie: string): void => {\n            while (cookie.charAt(0) === \" \") {\n                // eslint-disable-next-line no-param-reassign\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(cookiePrefix) === 0) {\n                const cookieKey = cookie.split(\"=\")[0];\n                this.clearItemCookie(cookieKey);\n            }\n        });\n    }\n\n    /**\n     * Clear an item in the cookies by key\n     * @param cookieName\n     */\n    clearItemCookie(cookieName: string): void {\n        this.setItemCookie(cookieName, Constants.EMPTY_STRING, -1);\n    }\n\n    /**\n     * Get cookie expiration time\n     * @param cookieLifeDays\n     */\n    getCookieExpirationTime(cookieLifeDays: number): string {\n        const today = new Date();\n        const expr = new Date(today.getTime() + cookieLifeDays * this.COOKIE_LIFE_MULTIPLIER);\n        return expr.toUTCString();\n    }\n\n    /**\n     * Gets the cache object referenced by the browser\n     */\n    getCache(): object {\n        return this.browserStorage;\n    }\n\n    /**\n     * interface compat, we cannot overwrite browser cache; Functionality is supported by individual entities in browser\n     */\n    setCache(): void {\n        // sets nothing\n    }\n\n    /**\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\n     * @param key\n     * @param addInstanceId\n     */\n    generateCacheKey(key: string): string {\n        const generatedKey = this.validateAndParseJson(key);\n        if (!generatedKey) {\n            if (StringUtils.startsWith(key, Constants.CACHE_PREFIX) || StringUtils.startsWith(key, PersistentCacheKeys.ADAL_ID_TOKEN)) {\n                return key;\n            }\n            return `${Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\n        }\n\n        return JSON.stringify(key);\n    }\n\n    /**\n     * Create authorityKey to cache authority\n     * @param state\n     */\n    generateAuthorityKey(stateString: string): string {\n        const {\n            libraryState: {\n                id: stateId\n            }\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n\n        return this.generateCacheKey(`${TemporaryCacheKeys.AUTHORITY}.${stateId}`);\n    }\n\n    /**\n     * Create Nonce key to cache nonce\n     * @param state\n     */\n    generateNonceKey(stateString: string): string {\n        const {\n            libraryState: {\n                id: stateId\n            }\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n\n        return this.generateCacheKey(`${TemporaryCacheKeys.NONCE_IDTOKEN}.${stateId}`);\n    }\n\n    /**\n     * Creates full cache key for the request state\n     * @param stateString State string for the request\n     */\n    generateStateKey(stateString: string): string {\n        // Use the library state id to key temp storage for uniqueness for multiple concurrent requests\n        const {\n            libraryState: {\n                id: stateId\n            }\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n        return this.generateCacheKey(`${TemporaryCacheKeys.REQUEST_STATE}.${stateId}`);\n    } \n\n    /**\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\n     */\n    getCachedAuthority(cachedState: string): string | null {\n        const stateCacheKey = this.generateStateKey(cachedState);\n        const state = this.getTemporaryCache(stateCacheKey);\n        if (!state) {\n            return null;\n        }\n\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        return this.getTemporaryCache(authorityCacheKey);\n    }\n\n    /**\n     * Updates account, authority, and state in cache\n     * @param serverAuthenticationRequest\n     * @param account\n     */\n    updateCacheEntries(state: string, nonce: string, authorityInstance: string, loginHint: string, account: AccountInfo|null): void {\n        this.logger.trace(\"BrowserCacheManager.updateCacheEntries called\");\n        // Cache the request state\n        const stateCacheKey = this.generateStateKey(state);\n        this.setTemporaryCache(stateCacheKey, state, false);\n\n        // Cache the nonce\n        const nonceCacheKey = this.generateNonceKey(state);\n        this.setTemporaryCache(nonceCacheKey, nonce, false);\n\n        // Cache authorityKey\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        this.setTemporaryCache(authorityCacheKey, authorityInstance, false);\n\n        if (account) {\n            const ccsCredential: CcsCredential = {\n                credential: account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID\n            };\n            this.setTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\n        } else if (!StringUtils.isEmpty(loginHint)) {\n            const ccsCredential: CcsCredential = {\n                credential: loginHint,\n                type: CcsCredentialType.UPN\n            };\n            this.setTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\n        }\n    }\n\n    /**\n     * Reset all temporary cache items\n     * @param state\n     */\n    resetRequestCache(state: string): void {\n        this.logger.trace(\"BrowserCacheManager.resetRequestCache called\");\n        // check state and remove associated cache items\n        if (!StringUtils.isEmpty(state)) {\n            this.getKeys().forEach(key => {\n                if (key.indexOf(state) !== -1) {\n                    this.removeItem(key);\n                }\n            });\n        }\n\n        // delete generic interactive request parameters\n        if (state) {\n            this.removeItem(this.generateStateKey(state));\n            this.removeItem(this.generateNonceKey(state));\n            this.removeItem(this.generateAuthorityKey(state));\n        }\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.URL_HASH));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.CORRELATION_ID));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.CCS_CREDENTIAL));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST));\n        this.setInteractionInProgress(false);\n    }\n\n    /**\n     * Removes temporary cache for the provided state\n     * @param stateString \n     */\n    cleanRequestByState(stateString: string): void {\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByState called\");\n        // Interaction is completed - remove interaction status.\n        if (stateString) {\n            const stateKey = this.generateStateKey(stateString);\n            const cachedState = this.temporaryCacheStorage.getItem(stateKey);\n            this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${cachedState}`);\n            this.resetRequestCache(cachedState || Constants.EMPTY_STRING);\n        }\n        this.clearMsalCookies();\n    }\n\n    /**\n     * Looks in temporary cache for any state values with the provided interactionType and removes all temporary cache items for that state\n     * Used in scenarios where temp cache needs to be cleaned but state is not known, such as clicking browser back button.\n     * @param interactionType \n     */\n    cleanRequestByInteractionType(interactionType: InteractionType): void {\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByInteractionType called\");\n        // Loop through all keys to find state key\n        this.getKeys().forEach((key) => {\n            // If this key is not the state key, move on\n            if (key.indexOf(TemporaryCacheKeys.REQUEST_STATE) === -1) {\n                return;\n            }\n            \n            // Retrieve state value, return if not a valid value\n            const stateValue = this.temporaryCacheStorage.getItem(key);\n            if (!stateValue) {\n                return;\n            }\n            // Extract state and ensure it matches given InteractionType, then clean request cache\n            const parsedState = BrowserProtocolUtils.extractBrowserRequestState(this.cryptoImpl, stateValue);\n            if (parsedState && parsedState.interactionType === interactionType) {\n                this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${stateValue}`);\n                this.resetRequestCache(stateValue);\n            }\n        });\n        this.clearMsalCookies();\n        this.setInteractionInProgress(false);\n    }\n\n    cacheCodeRequest(authCodeRequest: CommonAuthorizationCodeRequest, browserCrypto: ICrypto): void {\n        this.logger.trace(\"BrowserCacheManager.cacheCodeRequest called\");\n\n        const encodedValue = browserCrypto.base64Encode(JSON.stringify(authCodeRequest));\n        this.setTemporaryCache(TemporaryCacheKeys.REQUEST_PARAMS, encodedValue, true);\n    }\n\n    /**\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\n     */\n    getCachedRequest(state: string, browserCrypto: ICrypto): CommonAuthorizationCodeRequest {\n        this.logger.trace(\"BrowserCacheManager.getCachedRequest called\");\n        // Get token request from cache and parse as TokenExchangeParameters.\n        const encodedTokenRequest = this.getTemporaryCache(TemporaryCacheKeys.REQUEST_PARAMS, true);\n        if (!encodedTokenRequest) {\n            throw BrowserAuthError.createNoTokenRequestCacheError();\n        }\n\n        const parsedRequest = this.validateAndParseJson(browserCrypto.base64Decode(encodedTokenRequest)) as CommonAuthorizationCodeRequest;\n        if (!parsedRequest) {\n            throw BrowserAuthError.createUnableToParseTokenRequestCacheError();\n        }\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\n\n        // Get cached authority and use if no authority is cached with request.\n        if (StringUtils.isEmpty(parsedRequest.authority)) {\n            const authorityCacheKey: string = this.generateAuthorityKey(state);\n            const cachedAuthority = this.getTemporaryCache(authorityCacheKey);\n            if (!cachedAuthority) {\n                throw BrowserAuthError.createNoCachedAuthorityError();\n            }\n            parsedRequest.authority = cachedAuthority;\n        }\n\n        return parsedRequest;\n    }\n\n    /**\n     * Gets cached native request for redirect flows\n     */\n    getCachedNativeRequest(): NativeTokenRequest | null {\n        this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest called\");\n        const cachedRequest = this.getTemporaryCache(TemporaryCacheKeys.NATIVE_REQUEST, true);\n        if (!cachedRequest) {\n            this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest: No cached native request found\");\n            return null;\n        }\n\n        const parsedRequest = this.validateAndParseJson(cachedRequest) as NativeTokenRequest;\n        if (!parsedRequest) {\n            this.logger.error(\"BrowserCacheManager.getCachedNativeRequest: Unable to parse native request\");\n            return null;\n        }\n\n        return parsedRequest;\n    }\n\n    isInteractionInProgress(matchClientId?: boolean): boolean {\n        const clientId = this.getInteractionInProgress();\n\n        if (matchClientId) {\n            return clientId === this.clientId;\n        } else {\n            return !!clientId;\n        }\n    }\n\n    getInteractionInProgress(): string | null {\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        return this.getTemporaryCache(key, false);\n    }\n\n    setInteractionInProgress(inProgress: boolean): void {\n        // Ensure we don't overwrite interaction in progress for a different clientId\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        if (inProgress) {\n            if (this.getInteractionInProgress()) {\n                throw BrowserAuthError.createInteractionInProgressError();\n            } else {\n                // No interaction is in progress\n                this.setTemporaryCache(key, this.clientId, false);\n            }\n        } else if (!inProgress && this.getInteractionInProgress() === this.clientId) {\n            this.removeItem(key);\n        }\n    }\n\n    /**\n     * Returns username retrieved from ADAL or MSAL v1 idToken\n     */\n    getLegacyLoginHint(): string | null {\n        // Only check for adal/msal token if no SSO params are being used\n        const adalIdTokenString = this.getTemporaryCache(PersistentCacheKeys.ADAL_ID_TOKEN);\n        if (adalIdTokenString) {\n            this.browserStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\n            this.logger.verbose(\"Cached ADAL id token retrieved.\");\n        }\n\n        // Check for cached MSAL v1 id token\n        const msalIdTokenString = this.getTemporaryCache(PersistentCacheKeys.ID_TOKEN, true);\n        if (msalIdTokenString) {\n            this.removeItem(this.generateCacheKey(PersistentCacheKeys.ID_TOKEN));\n            this.logger.verbose(\"Cached MSAL.js v1 id token retrieved\");\n        }\n\n        const cachedIdTokenString = msalIdTokenString || adalIdTokenString;\n        if (cachedIdTokenString) {\n            const cachedIdToken = new IdToken(cachedIdTokenString, this.cryptoImpl);\n            if (cachedIdToken.claims && cachedIdToken.claims.preferred_username) {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint\");\n                return cachedIdToken.claims.preferred_username;\n            }\n            else if (cachedIdToken.claims && cachedIdToken.claims.upn) {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint\");\n                return cachedIdToken.claims.upn;\n            }\n            else {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.\");\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Updates a credential's cache key if the current cache key is outdated\n     */\n    updateCredentialCacheKey(currentCacheKey: string, credential: ValidCredentialType): string {\n        const updatedCacheKey = credential.generateCredentialKey();\n\n        if (currentCacheKey !== updatedCacheKey) {\n            const cacheItem = this.getItem(currentCacheKey);\n            if (cacheItem) {\n                this.removeItem(currentCacheKey);\n                this.setItem(updatedCacheKey, cacheItem);\n                this.logger.verbose(`Updated an outdated ${credential.credentialType} cache key`);\n                return updatedCacheKey;\n            } else {\n                this.logger.error(`Attempted to update an outdated ${credential.credentialType} cache key but no item matching the outdated key was found in storage`);\n            }\n        }\n\n        return currentCacheKey;\n    }\n}\n\nexport const DEFAULT_BROWSER_CACHE_MANAGER = (clientId: string, logger: Logger): BrowserCacheManager => {\n    const cacheOptions = {\n        cacheLocation: BrowserCacheLocation.MemoryStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false\n    };\n    return new BrowserCacheManager(clientId, cacheOptions, DEFAULT_CRYPTO_IMPLEMENTATION, logger);\n};\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-common\";\nexport const version = \"7.1.0\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { DEFAULT_CRYPTO_IMPLEMENTATION, ICrypto } from \"../crypto/ICrypto\";\nimport { AuthError } from \"../error/AuthError\";\nimport { ILoggerCallback, LogLevel } from \"../logger/Logger\";\nimport { Constants } from \"../utils/Constants\";\nimport { version } from \"../packageMetadata\";\nimport { Authority } from \"../authority/Authority\";\nimport { AzureCloudInstance } from \"../authority/AuthorityOptions\";\nimport { CacheManager, DefaultStorageClass } from \"../cache/CacheManager\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { ICachePlugin } from \"../cache/interface/ICachePlugin\";\nimport { ISerializableTokenCache } from \"../cache/interface/ISerializableTokenCache\";\nimport { ClientCredentials } from \"../account/ClientCredentials\";\n\n// Token renewal offset default in seconds\nconst DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\n\n/**\n * Use the configuration object to configure MSAL Modules and initialize the base interfaces for MSAL.\n *\n * This object allows you to configure important elements of MSAL functionality:\n * - authOptions                - Authentication for application\n * - cryptoInterface            - Implementation of crypto functions\n * - libraryInfo                - Library metadata\n * - telemetry                  - Telemetry options and data\n * - loggerOptions              - Logging for application\n * - networkInterface           - Network implementation\n * - storageInterface           - Storage implementation\n * - systemOptions              - Additional library options\n * - clientCredentials          - Credentials options for confidential clients\n */\nexport type ClientConfiguration = {\n    authOptions: AuthOptions,\n    systemOptions?: SystemOptions,\n    loggerOptions?: LoggerOptions,\n    storageInterface?: CacheManager,\n    networkInterface?: INetworkModule,\n    cryptoInterface?: ICrypto,\n    clientCredentials?: ClientCredentials,\n    libraryInfo?: LibraryInfo\n    telemetry?: TelemetryOptions,\n    serverTelemetryManager?: ServerTelemetryManager | null,\n    persistencePlugin?: ICachePlugin | null,\n    serializableCache?: ISerializableTokenCache | null\n};\n\nexport type CommonClientConfiguration = {\n    authOptions: Required<AuthOptions>,\n    systemOptions: Required<SystemOptions>,\n    loggerOptions : Required<LoggerOptions>,\n    storageInterface: CacheManager,\n    networkInterface : INetworkModule,\n    cryptoInterface : Required<ICrypto>,\n    libraryInfo : LibraryInfo,\n    telemetry: Required<TelemetryOptions>,\n    serverTelemetryManager: ServerTelemetryManager | null,\n    clientCredentials: ClientCredentials,\n    persistencePlugin: ICachePlugin | null,\n    serializableCache: ISerializableTokenCache | null\n};\n\n/**\n * Use this to configure the auth options in the ClientConfiguration object\n *\n * - clientId                    - Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\n * - authority                   - You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\n * - knownAuthorities            - An array of URIs that are known to be valid. Used in B2C scenarios.\n * - cloudDiscoveryMetadata      - A string containing the cloud discovery response. Used in AAD scenarios.\n * - clientCapabilities          - Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\n * - protocolMode                - Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\n * - skipAuthorityMetadataCache      - A flag to choose whether to use or not use the local metadata cache during authority initialization. Defaults to false.\n */\nexport type AuthOptions = {\n    clientId: string;\n    authority: Authority;\n    clientCapabilities?: Array<string>;\n    azureCloudOptions?: AzureCloudOptions;\n    skipAuthorityMetadataCache?: boolean;\n};\n\n/**\n * Use this to configure token renewal info in the Configuration object\n *\n * - tokenRenewalOffsetSeconds    - Sets the window of offset needed to renew the token before expiry\n */\nexport type SystemOptions = {\n    tokenRenewalOffsetSeconds?: number;\n    preventCorsPreflight?: boolean;\n    proxyUrl?: string;\n};\n\n/**\n *  Use this to configure the logging that MSAL does, by configuring logger options in the Configuration object\n *\n * - loggerCallback                - Callback for logger\n * - piiLoggingEnabled             - Sets whether pii logging is enabled\n * - logLevel                      - Sets the level at which logging happens\n * - correlationId                 - Sets the correlationId printed by the logger\n */\nexport type LoggerOptions = {\n    loggerCallback?: ILoggerCallback,\n    piiLoggingEnabled?: boolean,\n    logLevel?: LogLevel,\n    correlationId?: string\n};\n\n/**\n * Library-specific options\n */\nexport type LibraryInfo = {\n    sku: string,\n    version: string,\n    cpu: string,\n    os: string\n};\n\n/**\n * AzureCloudInstance specific options\n *\n * - azureCloudInstance             - string enum providing short notation for soverign and public cloud authorities\n * - tenant                         - provision to provide the tenant info\n */\nexport type AzureCloudOptions = {\n    azureCloudInstance: AzureCloudInstance;\n    tenant?: string,\n};\n\nexport type TelemetryOptions = {\n    application: ApplicationTelemetry;\n};\n\n/**\n * Telemetry information sent on request\n * - appName: Unique string name of an application\n * - appVersion: Version of the application using MSAL\n */\nexport type ApplicationTelemetry = {\n    appName: string;\n    appVersion: string;\n};\n\nexport const DEFAULT_SYSTEM_OPTIONS: Required<SystemOptions> = {\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n    preventCorsPreflight: false,\n    proxyUrl: Constants.EMPTY_STRING\n};\n\nconst DEFAULT_LOGGER_IMPLEMENTATION: Required<LoggerOptions> = {\n    loggerCallback: () => {\n        // allow users to not set loggerCallback\n    },\n    piiLoggingEnabled: false,\n    logLevel: LogLevel.Info,\n    correlationId: Constants.EMPTY_STRING\n};\n\nconst DEFAULT_NETWORK_IMPLEMENTATION: INetworkModule = {\n    async sendGetRequestAsync<T>(): Promise<T> {\n        const notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async sendPostRequestAsync<T>(): Promise<T> {\n        const notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n};\n\nconst DEFAULT_LIBRARY_INFO: LibraryInfo = {\n    sku: Constants.SKU,\n    version: version,\n    cpu: Constants.EMPTY_STRING,\n    os: Constants.EMPTY_STRING\n};\n\nconst DEFAULT_CLIENT_CREDENTIALS: ClientCredentials = {\n    clientSecret: Constants.EMPTY_STRING,\n    clientAssertion: undefined\n};\n\nconst DEFAULT_AZURE_CLOUD_OPTIONS: AzureCloudOptions = {\n    azureCloudInstance: AzureCloudInstance.None,\n    tenant: `${Constants.DEFAULT_COMMON_TENANT}`\n};\n\nconst DEFAULT_TELEMETRY_OPTIONS: Required<TelemetryOptions> = {\n    application: {\n        appName: \"\",\n        appVersion: \"\"\n    }\n};\n\n/**\n * Function that sets the default options when not explicitly configured from app developer\n *\n * @param Configuration\n *\n * @returns Configuration\n */\nexport function buildClientConfiguration(\n    {\n        authOptions: userAuthOptions,\n        systemOptions: userSystemOptions,\n        loggerOptions: userLoggerOption,\n        storageInterface: storageImplementation,\n        networkInterface: networkImplementation,\n        cryptoInterface: cryptoImplementation,\n        clientCredentials: clientCredentials,\n        libraryInfo: libraryInfo,\n        telemetry: telemetry,\n        serverTelemetryManager: serverTelemetryManager,\n        persistencePlugin: persistencePlugin,\n        serializableCache: serializableCache\n    }: ClientConfiguration): CommonClientConfiguration {\n\n    const loggerOptions = { ...DEFAULT_LOGGER_IMPLEMENTATION, ...userLoggerOption };\n\n    return {\n        authOptions: buildAuthOptions(userAuthOptions),\n        systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },\n        loggerOptions: loggerOptions,\n        storageInterface: storageImplementation || new DefaultStorageClass(userAuthOptions.clientId, DEFAULT_CRYPTO_IMPLEMENTATION),\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\n        libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\n        serverTelemetryManager: serverTelemetryManager || null,\n        persistencePlugin: persistencePlugin || null,\n        serializableCache: serializableCache || null\n    };\n}\n\n/**\n * Construct authoptions from the client and platform passed values\n * @param authOptions\n */\nfunction buildAuthOptions(authOptions: AuthOptions): Required<AuthOptions> {\n    return {\n        clientCapabilities: [],\n        azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\n        skipAuthorityMetadataCache: false,\n        ...authOptions\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"../error/AuthError\";\nimport { NetworkResponse } from \"./NetworkManager\";\n\n/**\n * Options allowed by network request APIs.\n */\nexport type NetworkRequestOptions = {\n    headers?: Record<string, string>,\n    body?: string;\n    proxyUrl?: string;\n};\n\n/**\n * Client network interface to send backend requests.\n * @interface\n */\nexport interface INetworkModule {\n\n    /**\n     * Interface function for async network \"GET\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\n     * @param url\n     * @param requestParams\n     * @param enableCaching\n     */\n    sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions, cancellationToken?: number): Promise<NetworkResponse<T>>;\n\n    /**\n     * Interface function for async network \"POST\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\n     * @param url\n     * @param requestParams\n     * @param enableCaching\n     */\n    sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>>;\n}\n\nexport const StubbedNetworkModule: INetworkModule = {\n    sendGetRequestAsync: () => {\n        const notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented for the Network interface.\";\n        return Promise.reject(AuthError.createUnexpectedError(notImplErr));\n    },\n    sendPostRequestAsync: () => {\n        const notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented for the Network interface.\";\n        return Promise.reject(AuthError.createUnexpectedError(notImplErr));\n    }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants, INetworkModule, NetworkRequestOptions, NetworkResponse } from \"@azure/msal-common\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\n\n/**\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n */\nexport class FetchClient implements INetworkModule {\n\n    /**\n     * Fetch Client for REST endpoints - Get request\n     * @param url \n     * @param headers \n     * @param body \n     */\n    async sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        let response;\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.GET,\n                headers: this.getFetchHeaders(options)\n            });\n        } catch (e) {\n            if (window.navigator.onLine) {\n                throw BrowserAuthError.createGetRequestFailedError(e, url);\n            } else {\n                throw BrowserAuthError.createNoNetworkConnectivityError();\n            }\n        }\n\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: await response.json() as T,\n                status: response.status\n            };\n        } catch (e) {\n            throw BrowserAuthError.createFailedToParseNetworkResponseError(url);\n        }\n    }\n\n    /**\n     * Fetch Client for REST endpoints - Post request\n     * @param url \n     * @param headers \n     * @param body \n     */\n    async sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        const reqBody = (options && options.body) || Constants.EMPTY_STRING;\n\n        let response;\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.POST,\n                headers: this.getFetchHeaders(options),\n                body: reqBody\n            });\n        } catch (e) {\n            if (window.navigator.onLine) {\n                throw BrowserAuthError.createPostRequestFailedError(e, url);\n            } else {\n                throw BrowserAuthError.createNoNetworkConnectivityError();\n            }\n        }\n\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: await response.json() as T,\n                status: response.status\n            };\n        } catch (e) {\n            throw BrowserAuthError.createFailedToParseNetworkResponseError(url);\n        }\n    }\n\n    /**\n     * Get Fetch API Headers object from string map\n     * @param inputHeaders \n     */\n    private getFetchHeaders(options?: NetworkRequestOptions): Headers {\n        const headers = new Headers();\n        if (!(options && options.headers)) {\n            return headers;\n        }\n        const optionsHeaders = options.headers;\n        Object.keys(optionsHeaders).forEach((key) => {\n            headers.append(key, optionsHeaders[key]);\n        });\n        return headers;\n    }\n\n    private getHeaderDict(headers: Headers): Record<string, string> {\n        const headerDict: Record<string, string> = {};\n        headers.forEach((value: string, key: string) => {\n            headerDict[key] = value;\n        });\n        return headerDict;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule, NetworkRequestOptions, NetworkResponse } from \"@azure/msal-common\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\n\n/**\n * This client implements the XMLHttpRequest class to send GET and POST requests.\n */\nexport class XhrClient implements INetworkModule {\n\n    /**\n     * XhrClient for REST endpoints - Get request\n     * @param url \n     * @param headers \n     * @param body \n     */\n    async sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        return this.sendRequestAsync(url, HTTP_REQUEST_TYPE.GET, options);\n    }\n\n    /**\n     * XhrClient for REST endpoints - Post request\n     * @param url \n     * @param headers \n     * @param body \n     */\n    async sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        return this.sendRequestAsync(url, HTTP_REQUEST_TYPE.POST, options);\n    }\n\n    /**\n     * Helper for XhrClient requests.\n     * @param url \n     * @param method \n     * @param options \n     */\n    private sendRequestAsync<T>(url: string, method: HTTP_REQUEST_TYPE, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        return new Promise<NetworkResponse<T>>((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.open(method, url, /* async: */ true);\n            this.setXhrHeaders(xhr, options);\n            xhr.onload = (): void => {\n                if (xhr.status < 200 || xhr.status >= 300) {\n                    if (method === HTTP_REQUEST_TYPE.POST) {\n                        reject(BrowserAuthError.createPostRequestFailedError(`Failed with status ${xhr.status}`, url));\n                    } else {\n                        reject(BrowserAuthError.createGetRequestFailedError(`Failed with status ${xhr.status}`, url));\n                    }\n                }\n                try {\n                    const jsonResponse = JSON.parse(xhr.responseText) as T;\n                    const networkResponse: NetworkResponse<T> = {\n                        headers: this.getHeaderDict(xhr),\n                        body: jsonResponse,\n                        status: xhr.status\n                    };\n                    resolve(networkResponse);\n                } catch (e) {\n                    reject(BrowserAuthError.createFailedToParseNetworkResponseError(url));\n                }\n            };\n\n            xhr.onerror = (): void => {\n                if (window.navigator.onLine) {\n                    if (method === HTTP_REQUEST_TYPE.POST) {\n                        reject(BrowserAuthError.createPostRequestFailedError(`Failed with status ${xhr.status}`, url));\n                    } else {\n                        reject(BrowserAuthError.createGetRequestFailedError(`Failed with status ${xhr.status}`, url));\n                    }\n                } else {\n                    reject(BrowserAuthError.createNoNetworkConnectivityError());\n                }\n            };\n\n            if (method === HTTP_REQUEST_TYPE.POST && options && options.body) {\n                xhr.send(options.body);\n            } else if (method === HTTP_REQUEST_TYPE.GET) {\n                xhr.send();\n            } else {\n                throw BrowserAuthError.createHttpMethodNotImplementedError(method);\n            }\n        });\n    }\n\n    /**\n     * Helper to set XHR headers for request.\n     * @param xhr \n     * @param options \n     */\n    private setXhrHeaders(xhr: XMLHttpRequest, options?: NetworkRequestOptions): void {\n        if (options && options.headers) {\n            const headers = options.headers;\n            Object.keys(headers).forEach((key: string) => {\n                xhr.setRequestHeader(key, headers[key]);\n            });\n        }\n    }\n\n    /**\n     * Gets a string map of the headers received in the response.\n     * \n     * Algorithm comes from https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\n     * @param xhr \n     */\n    private getHeaderDict(xhr: XMLHttpRequest): Record<string, string> {\n        const headerString = xhr.getAllResponseHeaders();\n        const headerArr = headerString.trim().split(/[\\r\\n]+/);\n        const headerDict: Record<string, string> = {};\n        headerArr.forEach((value: string) => {\n            const parts = value.split(\": \");\n            const headerName = parts.shift();\n            const headerVal = parts.join(\": \");\n            if (headerName && headerVal) {\n                headerDict[headerName] = headerVal;\n            }\n        });\n\n        return headerDict;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants, INetworkModule, UrlString } from \"@azure/msal-common\";\nimport { FetchClient } from \"../network/FetchClient\";\nimport { XhrClient } from \"../network/XhrClient\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { InteractionType, BrowserConstants } from \"./BrowserConstants\";\n\n/**\n * Utility class for browser specific functions\n */\nexport class BrowserUtils {\n\n    // #region Window Navigation and URL management\n\n    /**\n     * Clears hash from window url.\n     */\n    static clearHash(contentWindow: Window): void {\n        // Office.js sets history.replaceState to null\n        contentWindow.location.hash = Constants.EMPTY_STRING;\n        if (typeof contentWindow.history.replaceState === \"function\") {\n            // Full removes \"#\" from url\n            contentWindow.history.replaceState(null, Constants.EMPTY_STRING, `${contentWindow.location.origin}${contentWindow.location.pathname}${contentWindow.location.search}`);\n        }\n    }\n\n    /**\n     * Replaces current hash with hash from provided url\n     */\n    static replaceHash(url: string): void {\n        const urlParts = url.split(\"#\");\n        urlParts.shift(); // Remove part before the hash\n        window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Returns boolean of whether the current window is in an iframe or not.\n     */\n    static isInIframe(): boolean {\n        return window.parent !== window;\n    }\n\n    /**\n     * Returns boolean of whether or not the current window is a popup opened by msal\n     */\n    static isInPopup(): boolean {\n        return typeof window !== \"undefined\" && !!window.opener && \n            window.opener !== window && \n            typeof window.name === \"string\" && \n            window.name.indexOf(`${BrowserConstants.POPUP_NAME_PREFIX}.`) === 0;\n    }\n\n    // #endregion\n\n    /**\n     * Returns current window URL as redirect uri\n     */\n    static getCurrentUri(): string {\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\n    }\n\n    /**\n     * Gets the homepage url for the current window location.\n     */\n    static getHomepage(): string {\n        const currentUrl = new UrlString(window.location.href);\n        const urlComponents = currentUrl.getUrlComponents();\n        return `${urlComponents.Protocol}//${urlComponents.HostNameAndPort}/`;\n    }\n\n    /**\n     * Returns best compatible network client object. \n     */\n    static getBrowserNetworkClient(): INetworkModule {\n        if (window.fetch && window.Headers) {\n            return new FetchClient();\n        } else {\n            return new XhrClient();\n        }\n    }\n\n    /**\n     * Throws error if we have completed an auth and are \n     * attempting another auth request inside an iframe.\n     */\n    static blockReloadInHiddenIframes(): void {\n        const isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash);\n        // return an error if called from the hidden iframe created by the msal js silent calls\n        if (isResponseHash && BrowserUtils.isInIframe()) {\n            throw BrowserAuthError.createBlockReloadInHiddenIframeError();\n        }\n    }\n\n    /**\n     * Block redirect operations in iframes unless explicitly allowed\n     * @param interactionType Interaction type for the request\n     * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\n     */\n    static blockRedirectInIframe(interactionType: InteractionType, allowRedirectInIframe: boolean): void {\n        const isIframedApp = BrowserUtils.isInIframe();\n        if (interactionType === InteractionType.Redirect && isIframedApp && !allowRedirectInIframe) {\n            // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\n            throw BrowserAuthError.createRedirectInIframeError(isIframedApp);\n        }\n    }\n\n    /**\n     * Block redirectUri loaded in popup from calling AcquireToken APIs\n     */\n    static blockAcquireTokenInPopups(): void {\n        // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\n        if (BrowserUtils.isInPopup()) {\n            throw BrowserAuthError.createBlockAcquireTokenInPopupsError();\n        }\n    }\n\n    /**\n     * Throws error if token requests are made in non-browser environment\n     * @param isBrowserEnvironment Flag indicating if environment is a browser.\n     */\n    static blockNonBrowserEnvironment(isBrowserEnvironment: boolean): void {\n        if (!isBrowserEnvironment) {\n            throw BrowserAuthError.createNonBrowserEnvironmentError();\n        }\n    }\n\n    /**\n     * Throws error if native brokering is enabled but initialize hasn't been called\n     * @param allowNativeBroker \n     * @param initialized \n     */\n    static blockNativeBrokerCalledBeforeInitialized(allowNativeBroker: boolean, initialized: boolean): void {\n        if (allowNativeBroker && !initialized) {\n            throw BrowserAuthError.createNativeBrokerCalledBeforeInitialize();\n        }\n    }\n\n    /**\n     * Returns boolean of whether current browser is an Internet Explorer or Edge browser.\n     */\n    static detectIEOrEdge(): boolean {\n        const ua = window.navigator.userAgent;\n        const msie = ua.indexOf(\"MSIE \");\n        const msie11 = ua.indexOf(\"Trident/\");\n        const msedge = ua.indexOf(\"Edge/\");\n        const isIE = msie > 0 || msie11 > 0;\n        const isEdge = msedge > 0;\n        return isIE || isEdge;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INavigationClient } from \"./INavigationClient\";\nimport { NavigationOptions } from \"./NavigationOptions\";\n\nexport class NavigationClient implements INavigationClient {\n    /**\n     * Navigates to other pages within the same web application\n     * @param url \n     * @param options \n     */\n    navigateInternal(url: string, options: NavigationOptions): Promise<boolean>{\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Navigates to other pages outside the web application i.e. the Identity Provider\n     * @param url \n     * @param options \n     */\n    navigateExternal(url: string, options: NavigationOptions): Promise<boolean> {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Default navigation implementation invoked by the internal and external functions\n     * @param url \n     * @param options \n     */\n    private static defaultNavigateWindow(url: string, options: NavigationOptions): Promise<boolean> {\n        if (options.noHistory) {\n            window.location.replace(url);\n        } else {\n            window.location.assign(url);\n        }\n\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(true);\n            }, options.timeout);\n        });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { SystemOptions, LoggerOptions, INetworkModule, DEFAULT_SYSTEM_OPTIONS, Constants, ProtocolMode, LogLevel, StubbedNetworkModule, AzureCloudInstance, AzureCloudOptions, ApplicationTelemetry } from \"@azure/msal-common\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { BrowserCacheLocation } from \"../utils/BrowserConstants\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NavigationClient } from \"../navigation/NavigationClient\";\n\n// Default timeout for popup windows and iframes in milliseconds\nexport const DEFAULT_POPUP_TIMEOUT_MS = 60000;\nexport const DEFAULT_IFRAME_TIMEOUT_MS = 6000;\nexport const DEFAULT_REDIRECT_TIMEOUT_MS = 30000;\nexport const DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS = 2000;\n\n/**\n * Use this to configure the auth options in the Configuration object\n */\nexport type BrowserAuthOptions = {\n    /**\n     * Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\n     */\n    clientId: string;\n    /**\n     * You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\n     */\n    authority?: string;\n    /**\n     * An array of URIs that are known to be valid. Used in B2C scenarios.\n     */\n    knownAuthorities?: Array<string>;\n    /**\n     * A string containing the cloud discovery response. Used in AAD scenarios.\n     */\n    cloudDiscoveryMetadata?: string;\n    /**\n     * A string containing the .well-known/openid-configuration endpoint response\n     */\n    authorityMetadata?: string;\n    /**\n     * The redirect URI where authentication responses can be received by your application. It must exactly match one of the redirect URIs registered in the Azure portal.\n     */\n    redirectUri?: string;\n    /**\n     * The redirect URI where the window navigates after a successful logout.\n     */\n    postLogoutRedirectUri?: string | null;\n    /**\n     * Boolean indicating whether to navigate to the original request URL after the auth server navigates to the redirect URL.\n     */\n    navigateToLoginRequestUrl?: boolean;\n    /**\n     * Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\n     */\n    clientCapabilities?: Array<string>;\n    /**\n     * Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\n     */\n    protocolMode?: ProtocolMode;\n    /**\n     * Enum that represents the Azure Cloud to use.\n     */\n    azureCloudOptions?: AzureCloudOptions;\n    /**\n     * Flag of whether to use the local metadata cache\n     */\n    skipAuthorityMetadataCache?: boolean;\n};\n\n/**\n * Use this to configure the below cache configuration options:\n */\nexport type CacheOptions = {\n    /**\n     * Used to specify the cacheLocation user wants to set. Valid values are \"localStorage\" and \"sessionStorage\"\n     */\n    cacheLocation?: BrowserCacheLocation | string;\n    /**\n     * If set, MSAL stores the auth request state required for validation of the auth flows in the browser cookies. By default this flag is set to false.\n     */\n    storeAuthStateInCookie?: boolean;\n    /**\n     * If set, MSAL sets the \"Secure\" flag on cookies so they can only be sent over HTTPS. By default this flag is set to false.\n     */\n    secureCookies?: boolean;\n};\n\nexport type BrowserSystemOptions = SystemOptions & {\n    /**\n     * Used to initialize the Logger object (See ClientConfiguration.ts)\n     */\n    loggerOptions?: LoggerOptions;\n    /**\n     * Network interface implementation\n     */\n    networkClient?: INetworkModule;\n    /**\n     * Override the methods used to navigate to other webpages. Particularly useful if you are using a client-side router\n     */\n    navigationClient?: INavigationClient;\n    /**\n     * Sets the timeout for waiting for a response hash in a popup. Will take precedence over loadFrameTimeout if both are set.\n     */\n    windowHashTimeout?: number;\n    /**\n     * Sets the timeout for waiting for a response hash in an iframe. Will take precedence over loadFrameTimeout if both are set.\n     */\n    iframeHashTimeout?: number;\n    /**\n     * Sets the timeout for waiting for a response hash in an iframe or popup\n     */\n    loadFrameTimeout?: number;\n    /**\n     * Maximum time the library should wait for a frame to load\n     */\n    navigateFrameWait?: number;\n    /**\n     * Time to wait for redirection to occur before resolving promise\n     */\n    redirectNavigationTimeout?: number;\n    /**\n     * Sets whether popups are opened asynchronously. By default, this flag is set to false. When set to false, blank popups are opened before anything else happens. When set to true, popups are opened when making the network request.\n     */\n    asyncPopups?: boolean;\n    /**\n     * Flag to enable redirect opertaions when the app is rendered in an iframe (to support scenarios such as embedded B2C login).\n     */\n    allowRedirectInIframe?: boolean;\n    /**\n     * Flag to enable native broker support (e.g. acquiring tokens from WAM on Windows)\n     */\n    allowNativeBroker?: boolean;\n    /**\n     * Sets the timeout for waiting for the native broker handshake to resolve\n     */\n    nativeBrokerHandshakeTimeout?: number;\n};\n\n/**\n * Telemetry Options\n */\nexport type BrowserTelemetryOptions = {\n    /**\n     * Telemetry information sent on request\n     * - appName: Unique string name of an application\n     * - appVersion: Version of the application using MSAL\n     */\n    application?: ApplicationTelemetry;\n};\n\n/**\n * This object allows you to configure important elements of MSAL functionality and is passed into the constructor of PublicClientApplication\n */\nexport type Configuration = {\n    /**\n     * This is where you configure auth elements like clientID, authority used for authenticating against the Microsoft Identity Platform\n     */\n    auth: BrowserAuthOptions,\n    /**\n     * This is where you configure cache location and whether to store cache in cookies\n     */\n    cache?: CacheOptions,\n    /**\n     * This is where you can configure the network client, logger, token renewal offset\n     */\n    system?: BrowserSystemOptions,\n    /**\n     * This is where you can configure telemetry data and options\n     */\n    telemetry?: BrowserTelemetryOptions\n};\n\nexport type BrowserConfiguration = {\n    auth: Required<BrowserAuthOptions>,\n    cache: Required<CacheOptions>,\n    system: Required<BrowserSystemOptions>,\n    telemetry: Required<BrowserTelemetryOptions>\n};\n\n/**\n * MSAL function that sets the default options when not explicitly configured from app developer\n *\n * @param auth\n * @param cache\n * @param system\n *\n * @returns Configuration object\n */\nexport function buildConfiguration({ auth: userInputAuth, cache: userInputCache, system: userInputSystem, telemetry: userInputTelemetry }: Configuration, isBrowserEnvironment: boolean): BrowserConfiguration {\n\n    // Default auth options for browser\n    const DEFAULT_AUTH_OPTIONS: Required<BrowserAuthOptions> = {\n        clientId: Constants.EMPTY_STRING,\n        authority: `${Constants.DEFAULT_AUTHORITY}`,\n        knownAuthorities: [],\n        cloudDiscoveryMetadata: Constants.EMPTY_STRING,\n        authorityMetadata: Constants.EMPTY_STRING,\n        redirectUri: Constants.EMPTY_STRING,\n        postLogoutRedirectUri: Constants.EMPTY_STRING,\n        navigateToLoginRequestUrl: true,\n        clientCapabilities: [],\n        protocolMode: ProtocolMode.AAD,\n        azureCloudOptions: {\n            azureCloudInstance: AzureCloudInstance.None,\n            tenant: Constants.EMPTY_STRING\n        },\n        skipAuthorityMetadataCache: false,\n    };\n\n    // Default cache options for browser\n    const DEFAULT_CACHE_OPTIONS: Required<CacheOptions> = {\n        cacheLocation: BrowserCacheLocation.SessionStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false\n    };\n\n    // Default logger options for browser\n    const DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        loggerCallback: (): void => {},\n        logLevel: LogLevel.Info,\n        piiLoggingEnabled: false\n    };\n\n    // Default system options for browser\n    const DEFAULT_BROWSER_SYSTEM_OPTIONS: Required<BrowserSystemOptions> = {\n        ...DEFAULT_SYSTEM_OPTIONS,\n        loggerOptions: DEFAULT_LOGGER_OPTIONS,\n        networkClient: isBrowserEnvironment ? BrowserUtils.getBrowserNetworkClient() : StubbedNetworkModule,\n        navigationClient: new NavigationClient(),\n        loadFrameTimeout: 0,\n        // If loadFrameTimeout is provided, use that as default.\n        windowHashTimeout: userInputSystem?.loadFrameTimeout || DEFAULT_POPUP_TIMEOUT_MS,\n        iframeHashTimeout: userInputSystem?.loadFrameTimeout || DEFAULT_IFRAME_TIMEOUT_MS,\n        navigateFrameWait: isBrowserEnvironment && BrowserUtils.detectIEOrEdge() ? 500 : 0,\n        redirectNavigationTimeout: DEFAULT_REDIRECT_TIMEOUT_MS,\n        asyncPopups: false,\n        allowRedirectInIframe: false,\n        allowNativeBroker: false,\n        nativeBrokerHandshakeTimeout: userInputSystem?.nativeBrokerHandshakeTimeout || DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS\n    };\n\n    const DEFAULT_TELEMETRY_OPTIONS: Required<BrowserTelemetryOptions> = {\n        application: {\n            appName: Constants.EMPTY_STRING,\n            appVersion: Constants.EMPTY_STRING\n        }\n    };\n\n    const overlayedConfig: BrowserConfiguration = {\n        auth: { ...DEFAULT_AUTH_OPTIONS, ...userInputAuth },\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\n        system: { ...DEFAULT_BROWSER_SYSTEM_OPTIONS, ...userInputSystem },\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...userInputTelemetry }\n    };\n    return overlayedConfig;\n}\n\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, SignedHttpRequestParameters } from \"./ICrypto\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { UrlString } from \"../url/UrlString\";\n\n/**\n * See eSTS docs for more info.\n * - A kid element, with the value containing an RFC 7638-compliant JWK thumbprint that is base64 encoded.\n * -  xms_ksl element, representing the storage location of the key's secret component on the client device. One of two values:\n *      - sw: software storage\n *      - uhw: hardware storage\n */\ntype ReqCnf = {\n    kid: string;\n    xms_ksl: KeyLocation;\n};\n\nexport type ReqCnfData = {\n    kid: string;\n    reqCnfString: string;\n    reqCnfHash: string;\n};\n\nenum KeyLocation {\n    SW = \"sw\",\n    UHW = \"uhw\"\n}\n\nexport class PopTokenGenerator {\n\n    private cryptoUtils: ICrypto;\n\n    constructor(cryptoUtils: ICrypto) {\n        this.cryptoUtils = cryptoUtils;\n    }\n\n    /**\n     * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\n     * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\n     * @param request\n     * @returns\n     */\n    async generateCnf(request: SignedHttpRequestParameters): Promise<ReqCnfData> {\n        const reqCnf = await this.generateKid(request);\n        const reqCnfString: string = this.cryptoUtils.base64Encode(JSON.stringify(reqCnf));\n\n        return {\n            kid: reqCnf.kid,\n            reqCnfString, \n            reqCnfHash: await this.cryptoUtils.hashString(reqCnfString) \n        };\n    }\n\n    /**\n     * Generates key_id for a SHR token request\n     * @param request\n     * @returns\n     */\n    async generateKid(request: SignedHttpRequestParameters): Promise<ReqCnf> {\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(request);\n\n        return {\n            kid: kidThumbprint,\n            xms_ksl: KeyLocation.SW\n        };\n    }\n\n    /**\n     * Signs the POP access_token with the local generated key-pair\n     * @param accessToken\n     * @param request\n     * @returns\n     */\n    async signPopToken(accessToken: string, keyId: string, request: SignedHttpRequestParameters): Promise<string> {\n        return this.signPayload(accessToken, keyId, request);\n    }\n\n    /**\n     * Utility function to generate the signed JWT for an access_token\n     * @param payload\n     * @param kid\n     * @param request\n     * @param claims\n     * @returns\n     */\n    async signPayload(payload: string, keyId: string, request: SignedHttpRequestParameters, claims?: object): Promise<string> {\n\n        // Deconstruct request to extract SHR parameters\n        const { resourceRequestMethod, resourceRequestUri, shrClaims, shrNonce } = request;\n\n        const resourceUrlString = (resourceRequestUri) ? new UrlString(resourceRequestUri) : undefined;\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\n        return await this.cryptoUtils.signJwt({\n            at: payload,\n            ts: TimeUtils.nowSeconds(),\n            m: resourceRequestMethod?.toUpperCase(),\n            u: resourceUrlComponents?.HostNameAndPort,\n            nonce: shrNonce || this.cryptoUtils.createNewGuid(),\n            p: resourceUrlComponents?.AbsolutePath,\n            q: (resourceUrlComponents?.QueryString) ? [[], resourceUrlComponents.QueryString] : undefined,\n            client_claims: shrClaims || undefined,\n            ...claims\n        }, keyId, request.correlationId);\n    }\n}\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-browser\";\nexport const version = \"2.27.0\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, Logger, AccountEntity, CacheManager } from \"@azure/msal-common\";\nimport { InteractionType } from \"../utils/BrowserConstants\";\nimport { EventCallbackFunction, EventError, EventMessage, EventPayload } from \"./EventMessage\";\nimport { EventType } from \"./EventType\";\n\nexport class EventHandler {\n    // Callback for subscribing to events\n    private eventCallbacks: Map<string, EventCallbackFunction>;\n    private logger: Logger;\n    private browserCrypto: ICrypto;\n    private listeningToStorageEvents: boolean;\n\n    constructor(logger: Logger, browserCrypto: ICrypto) {\n        this.eventCallbacks = new Map();\n        this.logger = logger;\n        this.browserCrypto = browserCrypto;\n        this.listeningToStorageEvents = false;\n        this.handleAccountCacheChange = this.handleAccountCacheChange.bind(this);\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback: EventCallbackFunction): string | null {\n        if (typeof window !== \"undefined\") {\n            const callbackId = this.browserCrypto.createNewGuid();\n            this.eventCallbacks.set(callbackId, callback);\n            this.logger.verbose(`Event callback registered with id: ${callbackId}`);\n    \n            return callbackId;\n        }\n        \n        return null;\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        this.eventCallbacks.delete(callbackId);\n        this.logger.verbose(`Event callback ${callbackId} removed.`);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents(): void {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n\n        if (!this.listeningToStorageEvents) {\n            this.logger.verbose(\"Adding account storage listener.\");\n            this.listeningToStorageEvents = true;\n            window.addEventListener(\"storage\", this.handleAccountCacheChange);\n        } else {\n            this.logger.verbose(\"Account storage listener already registered.\");\n        }\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents(): void {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n\n        if (this.listeningToStorageEvents) {\n            this.logger.verbose(\"Removing account storage listener.\");\n            window.removeEventListener(\"storage\", this.handleAccountCacheChange);\n            this.listeningToStorageEvents = false;\n        } else {\n            this.logger.verbose(\"No account storage listener registered.\");\n        }\n    }\n\n    /**\n     * Emits events by calling callback with event message\n     * @param eventType\n     * @param interactionType\n     * @param payload\n     * @param error\n     */\n    emitEvent(eventType: EventType, interactionType?: InteractionType, payload?: EventPayload, error?: EventError): void {\n        if (typeof window !== \"undefined\") {\n            const message: EventMessage = {\n                eventType: eventType,\n                interactionType: interactionType || null,\n                payload: payload || null,\n                error: error || null,\n                timestamp: Date.now()\n            };\n\n            this.logger.info(`Emitting event: ${eventType}`);\n\n            this.eventCallbacks.forEach((callback: EventCallbackFunction, callbackId: string) => {\n                this.logger.verbose(`Emitting event to callback ${callbackId}: ${eventType}`);\n                callback.apply(null, [message]);\n            });\n        }\n    }\n\n    /**\n     * Emit account added/removed events when cached accounts are changed in a different tab or frame\n     */\n    private handleAccountCacheChange(e: StorageEvent): void {\n        try {\n            const cacheValue = e.newValue || e.oldValue;\n            if (!cacheValue) {\n                return;\n            }\n            const parsedValue = JSON.parse(cacheValue);\n            if (typeof parsedValue !== \"object\" || !AccountEntity.isAccountEntity(parsedValue)) {\n                return;\n            }\n            const accountEntity = CacheManager.toObject<AccountEntity>(new AccountEntity(), parsedValue);\n            const accountInfo = accountEntity.getAccountInfo();\n            if (!e.oldValue && e.newValue) {\n                this.logger.info(\"Account was added to cache in a different window\");\n                this.emitEvent(EventType.ACCOUNT_ADDED, undefined, accountInfo);\n            } else if (!e.newValue && e.oldValue) {\n                this.logger.info(\"Account was removed from cache in a different window\");\n                this.emitEvent(EventType.ACCOUNT_REMOVED, undefined, accountInfo);\n            }\n        } catch (e) {\n            return;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { NetworkResponse } from \"./NetworkManager\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { HeaderNames, CacheSchemaType, ThrottlingConstants, Constants } from \"../utils/Constants\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ServerError } from \"../error/ServerError\";\nimport { RequestThumbprint } from \"./RequestThumbprint\";\nimport { ThrottlingEntity } from \"../cache/entities/ThrottlingEntity\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\n\nexport class ThrottlingUtils {\n\n    /**\n     * Prepares a RequestThumbprint to be stored as a key.\n     * @param thumbprint\n     */\n    static generateThrottlingStorageKey(thumbprint: RequestThumbprint): string {\n        return `${ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(thumbprint)}`;\n    }\n\n    /**\n     * Performs necessary throttling checks before a network request.\n     * @param cacheManager\n     * @param thumbprint\n     */\n    static preProcess(cacheManager: CacheManager, thumbprint: RequestThumbprint): void {\n        const key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\n        const value = cacheManager.getThrottlingCache(key);\n\n        if (value) {\n            if (value.throttleTime < Date.now()) {\n                cacheManager.removeItem(key, CacheSchemaType.THROTTLING);\n                return;\n            }\n            throw new ServerError(value.errorCodes?.join(\" \") || Constants.EMPTY_STRING, value.errorMessage, value.subError);\n        }\n    }\n\n    /**\n     * Performs necessary throttling checks after a network request.\n     * @param cacheManager\n     * @param thumbprint\n     * @param response\n     */\n    static postProcess(cacheManager: CacheManager, thumbprint: RequestThumbprint, response: NetworkResponse<ServerAuthorizationTokenResponse>): void {\n        if (ThrottlingUtils.checkResponseStatus(response) || ThrottlingUtils.checkResponseForRetryAfter(response)) {\n            const thumbprintValue: ThrottlingEntity = {\n                throttleTime: ThrottlingUtils.calculateThrottleTime(parseInt(response.headers[HeaderNames.RETRY_AFTER])),\n                error: response.body.error,\n                errorCodes: response.body.error_codes,\n                errorMessage: response.body.error_description,\n                subError: response.body.suberror\n            };\n            cacheManager.setThrottlingCache(\n                ThrottlingUtils.generateThrottlingStorageKey(thumbprint),\n                thumbprintValue\n            );\n        }\n    }\n\n    /**\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\n     * @param response\n     */\n    static checkResponseStatus(response: NetworkResponse<ServerAuthorizationTokenResponse>): boolean {\n        return response.status === 429 || response.status >= 500 && response.status < 600;\n    }\n\n    /**\n     * Checks a NetworkResponse object's RetryAfter header\n     * @param response\n     */\n    static checkResponseForRetryAfter(response: NetworkResponse<ServerAuthorizationTokenResponse>): boolean {\n        if (response.headers) {\n            return response.headers.hasOwnProperty(HeaderNames.RETRY_AFTER) && (response.status < 200 || response.status >= 300);\n        }\n        return false;\n    }\n\n    /**\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\n     * @param throttleTime\n     */\n    static calculateThrottleTime(throttleTime: number): number {\n        const time = throttleTime <= 0 ? 0 : throttleTime;\n\n        const currentSeconds = Date.now() / 1000;\n        return Math.floor(Math.min(\n            currentSeconds + (time || ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS),\n            currentSeconds + ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS\n        ) * 1000);\n    }\n\n    static removeThrottle(cacheManager: CacheManager, clientId: string, request: BaseAuthRequest, homeAccountIdentifier?: string): boolean {\n        const thumbprint: RequestThumbprint = {\n            clientId: clientId,\n            authority: request.authority,\n            scopes: request.scopes,\n            homeAccountIdentifier: homeAccountIdentifier,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid\n        };\n\n        const key = this.generateThrottlingStorageKey(thumbprint);\n        return cacheManager.removeItem(key, CacheSchemaType.THROTTLING);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule, NetworkRequestOptions } from \"./INetworkModule\";\nimport { RequestThumbprint } from \"./RequestThumbprint\";\nimport { ThrottlingUtils } from \"./ThrottlingUtils\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { AuthError } from \"../error/AuthError\";\n\nexport type NetworkResponse<T> = {\n    headers: Record<string, string>;\n    body: T;\n    status: number;\n};\n\nexport class NetworkManager {\n    private networkClient: INetworkModule;\n    private cacheManager: CacheManager;\n\n    constructor(networkClient: INetworkModule, cacheManager: CacheManager) {\n        this.networkClient = networkClient;\n        this.cacheManager = cacheManager;\n    }\n\n    /**\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\n     * @param thumbprint\n     * @param tokenEndpoint\n     * @param options\n     */\n    async sendPostRequest<T>(thumbprint: RequestThumbprint, tokenEndpoint: string, options: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\n\n        let response;\n        try {\n            response = await this.networkClient.sendPostRequestAsync<T>(tokenEndpoint, options);\n        } catch (e) {\n            if (e instanceof AuthError) {\n                throw e;\n            } else {\n                throw ClientAuthError.createNetworkError(tokenEndpoint, e);\n            }\n        }\n\n        ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\n\n        return response;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientConfiguration, buildClientConfiguration, CommonClientConfiguration } from \"../config/ClientConfiguration\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { NetworkManager, NetworkResponse } from \"../network/NetworkManager\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { Authority } from \"../authority/Authority\";\nimport { Logger } from \"../logger/Logger\";\nimport { Constants, HeaderNames } from \"../utils/Constants\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { version, name } from \"../packageMetadata\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { CcsCredential, CcsCredentialType } from \"../account/CcsCredential\";\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo\";\n\n/**\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\n */\nexport abstract class BaseClient {\n    // Logger object\n    public logger: Logger;\n\n    // Application config\n    protected config: CommonClientConfiguration;\n\n    // Crypto Interface\n    protected cryptoUtils: ICrypto;\n\n    // Storage Interface\n    protected cacheManager: CacheManager;\n\n    // Network Interface\n    protected networkClient: INetworkModule;\n\n    // Server Telemetry Manager\n    protected serverTelemetryManager: ServerTelemetryManager | null;\n\n    // Network Manager\n    protected networkManager: NetworkManager;\n\n    // Default authority object\n    public authority: Authority;\n\n    protected constructor(configuration: ClientConfiguration) {\n        // Set the configuration\n        this.config = buildClientConfiguration(configuration);\n\n        // Initialize the logger\n        this.logger = new Logger(this.config.loggerOptions, name, version);\n\n        // Initialize crypto\n        this.cryptoUtils = this.config.cryptoInterface;\n\n        // Initialize storage interface\n        this.cacheManager = this.config.storageInterface;\n\n        // Set the network interface\n        this.networkClient = this.config.networkInterface;\n\n        // Set the NetworkManager\n        this.networkManager = new NetworkManager(this.networkClient, this.cacheManager);\n\n        // Set TelemetryManager\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\n\n        // set Authority\n        this.authority = this.config.authOptions.authority;\n    }\n\n    /**\n     * Creates default headers for requests to token endpoint\n     */\n    protected createTokenRequestHeaders(ccsCred?: CcsCredential): Record<string, string> {\n        const headers: Record<string, string> = {};\n        headers[HeaderNames.CONTENT_TYPE] = Constants.URL_FORM_CONTENT_TYPE;\n\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);\n                        headers[HeaderNames.CCS_HEADER] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;\n                    } catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    headers[HeaderNames.CCS_HEADER] = `UPN: ${ccsCred.credential}`;\n                    break;\n            }\n        }\n        return headers;\n    }\n\n    /**\n     * Http post to token endpoint\n     * @param tokenEndpoint\n     * @param queryString\n     * @param headers\n     * @param thumbprint\n     */\n    protected async executePostToTokenEndpoint(tokenEndpoint: string, queryString: string, headers: Record<string, string>, thumbprint: RequestThumbprint): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        const response = await this.networkManager.sendPostRequest<ServerAuthorizationTokenResponse>(\n            thumbprint,\n            tokenEndpoint,\n            { body: queryString, headers: headers, proxyUrl: this.config.systemOptions.proxyUrl }\n        );\n\n        if (this.config.serverTelemetryManager && response.status < 500 && response.status !== 429) {\n            // Telemetry data successfully logged by server, clear Telemetry cache\n            this.config.serverTelemetryManager.clearTelemetryCache();\n        }\n\n        return response;\n    }\n\n    /**\n     * Updates the authority object of the client. Endpoint discovery must be completed.\n     * @param updatedAuthority\n     */\n    updateAuthority(updatedAuthority: Authority): void {\n        if (!updatedAuthority.discoveryComplete()) {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Updated authority has not completed endpoint discovery.\");\n        }\n        this.authority = updatedAuthority;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { PromptValue, CodeChallengeMethodValues} from \"../utils/Constants\";\nimport { StringDict } from \"../utils/MsalTypes\";\n\n/**\n * Validates server consumable params from the \"request\" objects\n */\nexport class RequestValidator {\n\n    /**\n     * Utility to check if the `redirectUri` in the request is a non-null value\n     * @param redirectUri\n     */\n    static validateRedirectUri(redirectUri: string) : void {\n        if (StringUtils.isEmpty(redirectUri)) {\n            throw ClientConfigurationError.createRedirectUriEmptyError();\n        }\n    }\n\n    /**\n     * Utility to validate prompt sent by the user in the request\n     * @param prompt\n     */\n    static validatePrompt(prompt: string) : void {\n        const promptValues = [];\n\n        for (const value in PromptValue) {\n            promptValues.push(PromptValue[value]);\n        }\n\n        if (promptValues.indexOf(prompt) < 0) {\n            throw ClientConfigurationError.createInvalidPromptError(prompt);\n        }\n    }\n\n    static validateClaims(claims: string) : void {\n        try {\n            JSON.parse(claims);\n        } catch(e) {\n            throw ClientConfigurationError.createInvalidClaimsRequestError();\n        }\n    }\n\n    /**\n     * Utility to validate code_challenge and code_challenge_method\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeParams(codeChallenge: string, codeChallengeMethod: string) : void  {\n        if (StringUtils.isEmpty(codeChallenge) || StringUtils.isEmpty(codeChallengeMethod)) {\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\n        } else {\n            this.validateCodeChallengeMethod(codeChallengeMethod);\n        }\n    }\n\n    /**\n     * Utility to validate code_challenge_method\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeMethod(codeChallengeMethod: string) : void {\n        if (\n            [\n                CodeChallengeMethodValues.PLAIN,\n                CodeChallengeMethodValues.S256\n            ].indexOf(codeChallengeMethod) < 0\n        ) {\n            throw ClientConfigurationError.createInvalidCodeChallengeMethodError();\n        }\n    }\n\n    /**\n     * Removes unnecessary or duplicate query parameters from extraQueryParameters\n     * @param request\n     */\n    static sanitizeEQParams(eQParams: StringDict, queryParams: Map<string, string>) : StringDict {\n        if (!eQParams) {\n            return {};\n        }\n\n        // Remove any query parameters already included in SSO params\n        queryParams.forEach((value, key) => {\n            if (eQParams[key]) {\n                delete eQParams[key];\n            }\n        });\n\n        return eQParams;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AADServerParamKeys, Constants, ResponseMode, SSOTypes, CLIENT_INFO, AuthenticationScheme, ClaimsRequestKeys, PasswordGrantConstants, OIDC_DEFAULT_SCOPES, ThrottlingConstants, HeaderNames} from \"../utils/Constants\";\nimport { ScopeSet } from \"./ScopeSet\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { StringDict } from \"../utils/MsalTypes\";\nimport { RequestValidator } from \"./RequestValidator\";\nimport { ApplicationTelemetry, LibraryInfo } from \"../config/ClientConfiguration\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { ClientInfo } from \"../account/ClientInfo\";\n\nexport class RequestParameterBuilder {\n\n    private parameters: Map<string, string>;\n\n    constructor() {\n        this.parameters = new Map<string, string>();\n    }\n\n    /**\n     * add response_type = code\n     */\n    addResponseTypeCode(): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_TYPE, encodeURIComponent(Constants.CODE_RESPONSE_TYPE)\n        );\n    }\n\n    /**\n     * add response_type = token id_token\n     */\n    addResponseTypeForTokenAndIdToken(): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_TYPE, encodeURIComponent(`${Constants.TOKEN_RESPONSE_TYPE} ${Constants.ID_TOKEN_RESPONSE_TYPE}`)\n        );\n    }\n\n    /**\n     * add response_mode. defaults to query.\n     * @param responseMode\n     */\n    addResponseMode(responseMode?: ResponseMode): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_MODE,\n            encodeURIComponent((responseMode) ? responseMode : ResponseMode.QUERY)\n        );\n    }\n\n    /**\n     * Add flag to indicate STS should attempt to use WAM if available\n     */\n    addNativeBroker(): void {\n        this.parameters.set(\n            AADServerParamKeys.NATIVE_BROKER,\n            encodeURIComponent(\"1\")\n        );\n    }\n\n    /**\n     * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\n     * @param scopeSet\n     * @param addOidcScopes\n     */\n    addScopes(scopes: string[], addOidcScopes: boolean = true): void {\n        const requestScopes = addOidcScopes ? [...scopes || [], ...OIDC_DEFAULT_SCOPES] : scopes || [];\n        const scopeSet = new ScopeSet(requestScopes);\n        this.parameters.set(AADServerParamKeys.SCOPE, encodeURIComponent(scopeSet.printScopes()));\n    }\n\n    /**\n     * add clientId\n     * @param clientId\n     */\n    addClientId(clientId: string): void {\n        this.parameters.set(AADServerParamKeys.CLIENT_ID, encodeURIComponent(clientId));\n    }\n\n    /**\n     * add redirect_uri\n     * @param redirectUri\n     */\n    addRedirectUri(redirectUri: string): void {\n        RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(AADServerParamKeys.REDIRECT_URI, encodeURIComponent(redirectUri));\n    }\n\n    /**\n     * add post logout redirectUri\n     * @param redirectUri\n     */\n    addPostLogoutRedirectUri(redirectUri: string): void {\n        RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(AADServerParamKeys.POST_LOGOUT_URI, encodeURIComponent(redirectUri));\n    }\n\n    /**\n     * add id_token_hint to logout request\n     * @param idTokenHint\n     */\n    addIdTokenHint(idTokenHint: string): void {\n        this.parameters.set(AADServerParamKeys.ID_TOKEN_HINT, encodeURIComponent(idTokenHint));\n    }\n\n    /**\n     * add domain_hint\n     * @param domainHint\n     */\n    addDomainHint(domainHint: string): void {\n        this.parameters.set(SSOTypes.DOMAIN_HINT, encodeURIComponent(domainHint));\n    }\n\n    /**\n     * add login_hint\n     * @param loginHint\n     */\n    addLoginHint(loginHint: string): void {\n        this.parameters.set(SSOTypes.LOGIN_HINT, encodeURIComponent(loginHint));\n    }\n\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for login_hint\n     * @param loginHint\n     */\n    addCcsUpn(loginHint: string): void {\n        this.parameters.set(HeaderNames.CCS_HEADER, encodeURIComponent(`UPN:${loginHint}`));\n    }\n\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for account object\n     * @param loginHint\n     */\n    addCcsOid(clientInfo: ClientInfo): void {\n        this.parameters.set(HeaderNames.CCS_HEADER, encodeURIComponent(`Oid:${clientInfo.uid}@${clientInfo.utid}`));\n    }\n\n    /**\n     * add sid\n     * @param sid\n     */\n    addSid(sid: string): void {\n        this.parameters.set(SSOTypes.SID, encodeURIComponent(sid));\n    }\n\n    /**\n     * add claims\n     * @param claims\n     */\n    addClaims(claims?: string, clientCapabilities?: Array<string>): void {\n        const mergedClaims = this.addClientCapabilitiesToClaims(claims, clientCapabilities);\n        RequestValidator.validateClaims(mergedClaims);\n        this.parameters.set(AADServerParamKeys.CLAIMS, encodeURIComponent(mergedClaims));\n    }\n\n    /**\n     * add correlationId\n     * @param correlationId\n     */\n    addCorrelationId(correlationId: string): void {\n        this.parameters.set(AADServerParamKeys.CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\n    }\n\n    /**\n     * add library info query params\n     * @param libraryInfo\n     */\n    addLibraryInfo(libraryInfo: LibraryInfo): void {\n        // Telemetry Info\n        this.parameters.set(AADServerParamKeys.X_CLIENT_SKU, libraryInfo.sku);\n        this.parameters.set(AADServerParamKeys.X_CLIENT_VER, libraryInfo.version);\n        if (libraryInfo.os) {\n            this.parameters.set(AADServerParamKeys.X_CLIENT_OS, libraryInfo.os);\n        }\n        if (libraryInfo.cpu) {\n            this.parameters.set(AADServerParamKeys.X_CLIENT_CPU, libraryInfo.cpu);\n        }\n    }\n\n    /**\n     * Add client telemetry parameters\n     * @param appTelemetry\n     */\n    addApplicationTelemetry(appTelemetry: ApplicationTelemetry): void {\n        if (appTelemetry?.appName) {\n            this.parameters.set(AADServerParamKeys.X_APP_NAME, appTelemetry.appName);\n        }\n\n        if (appTelemetry?.appVersion) {\n            this.parameters.set(AADServerParamKeys.X_APP_VER, appTelemetry.appVersion);\n        }\n    }\n\n    /**\n     * add prompt\n     * @param prompt\n     */\n    addPrompt(prompt: string): void {\n        RequestValidator.validatePrompt(prompt);\n        this.parameters.set(`${AADServerParamKeys.PROMPT}`, encodeURIComponent(prompt));\n    }\n\n    /**\n     * add state\n     * @param state\n     */\n    addState(state: string): void {\n        if (!StringUtils.isEmpty(state)) {\n            this.parameters.set(AADServerParamKeys.STATE, encodeURIComponent(state));\n        }\n    }\n\n    /**\n     * add nonce\n     * @param nonce\n     */\n    addNonce(nonce: string): void {\n        this.parameters.set(AADServerParamKeys.NONCE, encodeURIComponent(nonce));\n    }\n\n    /**\n     * add code_challenge and code_challenge_method\n     * - throw if either of them are not passed\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    addCodeChallengeParams(\n        codeChallenge: string,\n        codeChallengeMethod: string\n    ): void {\n        RequestValidator.validateCodeChallengeParams(codeChallenge, codeChallengeMethod);\n        if (codeChallenge && codeChallengeMethod) {\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE, encodeURIComponent(codeChallenge));\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\n        } else {\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\n        }\n    }\n\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addAuthorizationCode(code: string): void {\n        this.parameters.set(AADServerParamKeys.CODE, encodeURIComponent(code));\n    }\n\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addDeviceCode(code: string): void {\n        this.parameters.set(AADServerParamKeys.DEVICE_CODE, encodeURIComponent(code));\n    }\n\n    /**\n     * add the `refreshToken` passed by the user\n     * @param refreshToken\n     */\n    addRefreshToken(refreshToken: string): void {\n        this.parameters.set(AADServerParamKeys.REFRESH_TOKEN, encodeURIComponent(refreshToken));\n    }\n\n    /**\n     * add the `code_verifier` passed by the user to exchange for a token\n     * @param codeVerifier\n     */\n    addCodeVerifier(codeVerifier: string): void {\n        this.parameters.set(AADServerParamKeys.CODE_VERIFIER, encodeURIComponent(codeVerifier));\n    }\n\n    /**\n     * add client_secret\n     * @param clientSecret\n     */\n    addClientSecret(clientSecret: string): void {\n        this.parameters.set(AADServerParamKeys.CLIENT_SECRET, encodeURIComponent(clientSecret));\n    }\n\n    /**\n     * add clientAssertion for confidential client flows\n     * @param clientAssertion\n     */\n    addClientAssertion(clientAssertion: string): void {\n        if (!StringUtils.isEmpty(clientAssertion)) {\n            this.parameters.set(AADServerParamKeys.CLIENT_ASSERTION, encodeURIComponent(clientAssertion));\n        }\n    }\n\n    /**\n     * add clientAssertionType for confidential client flows\n     * @param clientAssertionType\n     */\n    addClientAssertionType(clientAssertionType: string): void {\n        if (!StringUtils.isEmpty(clientAssertionType)) {\n            this.parameters.set(AADServerParamKeys.CLIENT_ASSERTION_TYPE, encodeURIComponent(clientAssertionType));\n        }\n    }\n\n    /**\n     * add OBO assertion for confidential client flows\n     * @param clientAssertion\n     */\n    addOboAssertion(oboAssertion: string): void {\n        this.parameters.set(AADServerParamKeys.OBO_ASSERTION, encodeURIComponent(oboAssertion));\n    }\n\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addRequestTokenUse(tokenUse: string): void {\n        this.parameters.set(AADServerParamKeys.REQUESTED_TOKEN_USE, encodeURIComponent(tokenUse));\n    }\n\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addGrantType(grantType: string): void {\n        this.parameters.set(AADServerParamKeys.GRANT_TYPE, encodeURIComponent(grantType));\n    }\n\n    /**\n     * add client info\n     *\n     */\n    addClientInfo(): void {\n        this.parameters.set(CLIENT_INFO, \"1\");\n    }\n\n    /**\n     * add extraQueryParams\n     * @param eQparams\n     */\n    addExtraQueryParameters(eQparams: StringDict): void {\n        RequestValidator.sanitizeEQParams(eQparams, this.parameters);\n        Object.keys(eQparams).forEach((key) => {\n            this.parameters.set(key, eQparams[key]);\n        });\n    }\n\n    addClientCapabilitiesToClaims(claims?: string, clientCapabilities?: Array<string>): string {\n        let mergedClaims: object;\n\n        // Parse provided claims into JSON object or initialize empty object\n        if (!claims) {\n            mergedClaims = {};\n        } else {\n            try {\n                mergedClaims = JSON.parse(claims);\n            } catch(e) {\n                throw ClientConfigurationError.createInvalidClaimsRequestError();\n            }\n        }\n\n        if (clientCapabilities && clientCapabilities.length > 0) {\n            if (!mergedClaims.hasOwnProperty(ClaimsRequestKeys.ACCESS_TOKEN)){\n                // Add access_token key to claims object\n                mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN] = {};\n            }\n\n            // Add xms_cc claim with provided clientCapabilities to access_token key\n            mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN][ClaimsRequestKeys.XMS_CC] = {\n                values: clientCapabilities\n            };\n        }\n\n        return JSON.stringify(mergedClaims);\n    }\n\n    /**\n     * adds `username` for Password Grant flow\n     * @param username\n     */\n    addUsername(username: string): void {\n        this.parameters.set(PasswordGrantConstants.username, encodeURIComponent(username));\n    }\n\n    /**\n     * adds `password` for Password Grant flow\n     * @param password\n     */\n    addPassword(password: string): void {\n        this.parameters.set(PasswordGrantConstants.password, encodeURIComponent(password));\n    }\n\n    /**\n     * add pop_jwk to query params\n     * @param cnfString\n     */\n    addPopToken(cnfString: string): void {\n        if (!StringUtils.isEmpty(cnfString)) {\n            this.parameters.set(AADServerParamKeys.TOKEN_TYPE, AuthenticationScheme.POP);\n            this.parameters.set(AADServerParamKeys.REQ_CNF, encodeURIComponent(cnfString));\n        }\n    }\n\n    /**\n     * add SSH JWK and key ID to query params\n     */\n    addSshJwk(sshJwkString: string): void {\n        if(!StringUtils.isEmpty(sshJwkString)) {\n            this.parameters.set(AADServerParamKeys.TOKEN_TYPE, AuthenticationScheme.SSH);\n            this.parameters.set(AADServerParamKeys.REQ_CNF, encodeURIComponent(sshJwkString));\n        }\n    }\n\n    /**\n     * add server telemetry fields\n     * @param serverTelemetryManager\n     */\n    addServerTelemetry(serverTelemetryManager: ServerTelemetryManager): void {\n        this.parameters.set(AADServerParamKeys.X_CLIENT_CURR_TELEM, serverTelemetryManager.generateCurrentRequestHeaderValue());\n        this.parameters.set(AADServerParamKeys.X_CLIENT_LAST_TELEM, serverTelemetryManager.generateLastRequestHeaderValue());\n    }\n\n    /**\n     * Adds parameter that indicates to the server that throttling is supported\n     */\n    addThrottling(): void {\n        this.parameters.set(AADServerParamKeys.X_MS_LIB_CAPABILITY, ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE);\n    }\n\n    /**\n     * Adds logout_hint parameter for \"silent\" logout which prevent server account picker\n     */\n    addLogoutHint(logoutHint: string): void {\n        this.parameters.set(AADServerParamKeys.LOGOUT_HINT, encodeURIComponent(logoutHint));\n    }\n\n    /**\n     * Utility to create a URL from the params map\n     */\n    createQueryString(): string {\n        const queryParameterArray: Array<string> = new Array<string>();\n\n        this.parameters.forEach((value, key) => {\n            queryParameterArray.push(`${key}=${value}`);\n        });\n\n        return queryParameterArray.join(\"&\");\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IdTokenEntity } from \"./IdTokenEntity\";\nimport { AccessTokenEntity } from \"./AccessTokenEntity\";\nimport { RefreshTokenEntity } from \"./RefreshTokenEntity\";\nimport { AccountEntity } from \"./AccountEntity\";\nimport { AppMetadataEntity } from \"./AppMetadataEntity\";\n\nexport class CacheRecord {\n    account: AccountEntity | null;\n    idToken: IdTokenEntity | null;\n    accessToken: AccessTokenEntity | null;\n    refreshToken: RefreshTokenEntity | null;\n    appMetadata: AppMetadataEntity | null;\n\n    constructor(accountEntity?: AccountEntity | null, idTokenEntity?: IdTokenEntity | null, accessTokenEntity?: AccessTokenEntity | null, refreshTokenEntity?: RefreshTokenEntity | null, appMetadataEntity?: AppMetadataEntity | null) {\n        this.account = accountEntity || null;\n        this.idToken = idTokenEntity || null;\n        this.accessToken = accessTokenEntity || null;\n        this.refreshToken = refreshTokenEntity || null;\n        this.appMetadata = appMetadataEntity || null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ISerializableTokenCache } from \"../interface/ISerializableTokenCache\";\n\n/**\n * This class instance helps track the memory changes facilitating\n * decisions to read from and write to the persistent cache\n */export class TokenCacheContext {\n    /**\n     * boolean indicating cache change\n     */\n    hasChanged: boolean;\n    /**\n     * serializable token cache interface\n     */\n    cache: ISerializableTokenCache;\n\n    constructor(tokenCache: ISerializableTokenCache, hasChanged: boolean) {\n        this.cache = tokenCache;\n        this.hasChanged = hasChanged;\n    }\n\n    /**\n     * boolean which indicates the changes in cache\n     */\n    get cacheHasChanged(): boolean {\n        return this.hasChanged;\n    }\n\n    /**\n     * function to retrieve the token cache\n     */\n    get tokenCache(): ISerializableTokenCache {\n        return this.cache;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ServerAuthorizationTokenResponse } from \"./ServerAuthorizationTokenResponse\";\nimport { buildClientInfo} from \"../account/ClientInfo\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ServerAuthorizationCodeResponse } from \"./ServerAuthorizationCodeResponse\";\nimport { Logger } from \"../logger/Logger\";\nimport { ServerError } from \"../error/ServerError\";\nimport { AuthToken } from \"../account/AuthToken\";\nimport { ScopeSet } from \"../request/ScopeSet\";\nimport { AuthenticationResult } from \"./AuthenticationResult\";\nimport { AccountEntity } from \"../cache/entities/AccountEntity\";\nimport { Authority } from \"../authority/Authority\";\nimport { AuthorityType } from \"../authority/AuthorityType\";\nimport { IdTokenEntity } from \"../cache/entities/IdTokenEntity\";\nimport { AccessTokenEntity } from \"../cache/entities/AccessTokenEntity\";\nimport { RefreshTokenEntity } from \"../cache/entities/RefreshTokenEntity\";\nimport { InteractionRequiredAuthError } from \"../error/InteractionRequiredAuthError\";\nimport { CacheRecord } from \"../cache/entities/CacheRecord\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ProtocolUtils, RequestStateObject } from \"../utils/ProtocolUtils\";\nimport { AuthenticationScheme, Constants, THE_FAMILY_ID } from \"../utils/Constants\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { AppMetadataEntity } from \"../cache/entities/AppMetadataEntity\";\nimport { ICachePlugin } from \"../cache/interface/ICachePlugin\";\nimport { TokenCacheContext } from \"../cache/persistence/TokenCacheContext\";\nimport { ISerializableTokenCache } from \"../cache/interface/ISerializableTokenCache\";\nimport { AuthorizationCodePayload } from \"./AuthorizationCodePayload\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\n\n/**\n * Class that handles response parsing.\n */\nexport class ResponseHandler {\n    private clientId: string;\n    private cacheStorage: CacheManager;\n    private cryptoObj: ICrypto;\n    private logger: Logger;\n    private homeAccountIdentifier: string;\n    private serializableCache: ISerializableTokenCache | null;\n    private persistencePlugin: ICachePlugin | null;\n\n    constructor(clientId: string, cacheStorage: CacheManager, cryptoObj: ICrypto, logger: Logger, serializableCache: ISerializableTokenCache | null, persistencePlugin: ICachePlugin | null) {\n        this.clientId = clientId;\n        this.cacheStorage = cacheStorage;\n        this.cryptoObj = cryptoObj;\n        this.logger = logger;\n        this.serializableCache = serializableCache;\n        this.persistencePlugin = persistencePlugin;\n    }\n\n    /**\n     * Function which validates server authorization code response.\n     * @param serverResponseHash\n     * @param cachedState\n     * @param cryptoObj\n     */\n    validateServerAuthorizationCodeResponse(serverResponseHash: ServerAuthorizationCodeResponse, cachedState: string, cryptoObj: ICrypto): void {\n\n        if (!serverResponseHash.state || !cachedState) {\n            throw !serverResponseHash.state ? ClientAuthError.createStateNotFoundError(\"Server State\") : ClientAuthError.createStateNotFoundError(\"Cached State\");\n        }\n\n        if (decodeURIComponent(serverResponseHash.state) !== decodeURIComponent(cachedState)) {\n            throw ClientAuthError.createStateMismatchError();\n        }\n\n        // Check for error\n        if (serverResponseHash.error || serverResponseHash.error_description || serverResponseHash.suberror) {\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror)) {\n                throw new InteractionRequiredAuthError(serverResponseHash.error || Constants.EMPTY_STRING, serverResponseHash.error_description, serverResponseHash.suberror);\n            }\n\n            throw new ServerError(serverResponseHash.error || Constants.EMPTY_STRING, serverResponseHash.error_description, serverResponseHash.suberror);\n        }\n\n        if (serverResponseHash.client_info) {\n            buildClientInfo(serverResponseHash.client_info, cryptoObj);\n        }\n    }\n\n    /**\n     * Function which validates server authorization token response.\n     * @param serverResponse\n     */\n    validateTokenResponse(serverResponse: ServerAuthorizationTokenResponse): void {\n        // Check for error\n        if (serverResponse.error || serverResponse.error_description || serverResponse.suberror) {\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\n                throw new InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror);\n            }\n\n            const errString = `${serverResponse.error_codes} - [${serverResponse.timestamp}]: ${serverResponse.error_description} - Correlation ID: ${serverResponse.correlation_id} - Trace ID: ${serverResponse.trace_id}`;\n            throw new ServerError(serverResponse.error, errString, serverResponse.suberror);\n        }\n    }\n\n    /**\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\n     * @param serverTokenResponse\n     * @param authority\n     */\n    async handleServerTokenResponse(\n        serverTokenResponse: ServerAuthorizationTokenResponse,\n        authority: Authority,\n        reqTimestamp: number,\n        request: BaseAuthRequest,\n        authCodePayload?: AuthorizationCodePayload,\n        userAssertionHash?: string,\n        handlingRefreshTokenResponse?: boolean): Promise<AuthenticationResult> {\n\n        // create an idToken object (not entity)\n        let idTokenObj: AuthToken | undefined;\n        if (serverTokenResponse.id_token) {\n            idTokenObj = new AuthToken(serverTokenResponse.id_token || Constants.EMPTY_STRING, this.cryptoObj);\n\n            // token nonce check (TODO: Add a warning if no nonce is given?)\n            if (authCodePayload && !StringUtils.isEmpty(authCodePayload.nonce)) {\n                if (idTokenObj.claims.nonce !== authCodePayload.nonce) {\n                    throw ClientAuthError.createNonceMismatchError();\n                }\n            }\n        }\n\n        // generate homeAccountId\n        this.homeAccountIdentifier = AccountEntity.generateHomeAccountId(serverTokenResponse.client_info || Constants.EMPTY_STRING, authority.authorityType, this.logger, this.cryptoObj, idTokenObj);\n\n        // save the response tokens\n        let requestStateObj: RequestStateObject | undefined;\n        if (!!authCodePayload && !!authCodePayload.state) {\n            requestStateObj = ProtocolUtils.parseRequestState(this.cryptoObj, authCodePayload.state);\n        }\n\n        // Add keyId from request to serverTokenResponse if defined\n        serverTokenResponse.key_id = serverTokenResponse.key_id || request.sshKid || undefined;\n\n        const cacheRecord = this.generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenObj, userAssertionHash, authCodePayload);\n        let cacheContext;\n        try {\n            if (this.persistencePlugin && this.serializableCache) {\n                this.logger.verbose(\"Persistence enabled, calling beforeCacheAccess\");\n                cacheContext = new TokenCacheContext(this.serializableCache, true);\n                await this.persistencePlugin.beforeCacheAccess(cacheContext);\n            }\n            /*\n             * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\n             * If not present, we should return null, as it's the case that another application called removeAccount in between\n             * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal.\n             */\n            if (handlingRefreshTokenResponse && cacheRecord.account) {\n                const key = cacheRecord.account.generateAccountKey();\n                const account = this.cacheStorage.getAccount(key);\n                if (!account) {\n                    this.logger.warning(\"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\");\n                    return ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenObj, requestStateObj);\n                }\n            }\n            await this.cacheStorage.saveCacheRecord(cacheRecord);\n        } finally {\n            if (this.persistencePlugin && this.serializableCache && cacheContext) {\n                this.logger.verbose(\"Persistence enabled, calling afterCacheAccess\");\n                await this.persistencePlugin.afterCacheAccess(cacheContext);\n            }\n        }\n        return ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenObj, requestStateObj, serverTokenResponse.spa_code);\n    }\n\n    /**\n     * Generates CacheRecord\n     * @param serverTokenResponse\n     * @param idTokenObj\n     * @param authority\n     */\n    private generateCacheRecord(serverTokenResponse: ServerAuthorizationTokenResponse, authority: Authority, reqTimestamp: number, request: BaseAuthRequest, idTokenObj?: AuthToken, userAssertionHash?: string, authCodePayload?: AuthorizationCodePayload): CacheRecord {\n        const env = authority.getPreferredCache();\n        if (StringUtils.isEmpty(env)) {\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\n        }\n\n        // IdToken: non AAD scenarios can have empty realm\n        let cachedIdToken: IdTokenEntity | undefined;\n        let cachedAccount: AccountEntity | undefined;\n        if (!StringUtils.isEmpty(serverTokenResponse.id_token) && !!idTokenObj) {\n            cachedIdToken = IdTokenEntity.createIdTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.id_token || Constants.EMPTY_STRING,\n                this.clientId,\n                idTokenObj.claims.tid || Constants.EMPTY_STRING,\n            );\n\n            cachedAccount = this.generateAccountEntity(\n                serverTokenResponse,\n                idTokenObj,\n                authority,\n                authCodePayload\n            );\n        }\n\n        // AccessToken\n        let cachedAccessToken: AccessTokenEntity | null = null;\n        if (!StringUtils.isEmpty(serverTokenResponse.access_token)) {\n\n            // If scopes not returned in server response, use request scopes\n            const responseScopes = serverTokenResponse.scope ? ScopeSet.fromString(serverTokenResponse.scope) : new ScopeSet(request.scopes || []);\n\n            /*\n             * Use timestamp calculated before request\n             * Server may return timestamps as strings, parse to numbers if so.\n             */\n            const expiresIn: number = (typeof serverTokenResponse.expires_in === \"string\" ? parseInt(serverTokenResponse.expires_in, 10) : serverTokenResponse.expires_in) || 0;\n            const extExpiresIn: number = (typeof serverTokenResponse.ext_expires_in === \"string\" ? parseInt(serverTokenResponse.ext_expires_in, 10) : serverTokenResponse.ext_expires_in) || 0;\n            const refreshIn: number | undefined = (typeof serverTokenResponse.refresh_in === \"string\" ? parseInt(serverTokenResponse.refresh_in, 10) : serverTokenResponse.refresh_in) || undefined;\n            const tokenExpirationSeconds = reqTimestamp + expiresIn;\n            const extendedTokenExpirationSeconds = tokenExpirationSeconds + extExpiresIn;\n            const refreshOnSeconds = refreshIn && refreshIn > 0 ? reqTimestamp + refreshIn : undefined;\n\n            // non AAD scenarios can have empty realm\n            cachedAccessToken = AccessTokenEntity.createAccessTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.access_token || Constants.EMPTY_STRING,\n                this.clientId,\n                idTokenObj ? idTokenObj.claims.tid || Constants.EMPTY_STRING : authority.tenant,\n                responseScopes.printScopes(),\n                tokenExpirationSeconds,\n                extendedTokenExpirationSeconds,\n                this.cryptoObj,\n                refreshOnSeconds,\n                serverTokenResponse.token_type,\n                userAssertionHash,\n                serverTokenResponse.key_id,\n                request.claims,\n                request.requestedClaimsHash\n            );\n        }\n\n        // refreshToken\n        let cachedRefreshToken: RefreshTokenEntity | null = null;\n        if (!StringUtils.isEmpty(serverTokenResponse.refresh_token)) {\n            cachedRefreshToken = RefreshTokenEntity.createRefreshTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.refresh_token || Constants.EMPTY_STRING,\n                this.clientId,\n                serverTokenResponse.foci,\n                userAssertionHash\n            );\n        }\n\n        // appMetadata\n        let cachedAppMetadata: AppMetadataEntity | null = null;\n        if (!StringUtils.isEmpty(serverTokenResponse.foci)) {\n            cachedAppMetadata = AppMetadataEntity.createAppMetadataEntity(this.clientId, env, serverTokenResponse.foci);\n        }\n\n        return new CacheRecord(cachedAccount, cachedIdToken, cachedAccessToken, cachedRefreshToken, cachedAppMetadata);\n    }\n\n    /**\n     * Generate Account\n     * @param serverTokenResponse\n     * @param idToken\n     * @param authority\n     */\n    private generateAccountEntity(serverTokenResponse: ServerAuthorizationTokenResponse, idToken: AuthToken, authority: Authority, authCodePayload?: AuthorizationCodePayload): AccountEntity {\n        const authorityType = authority.authorityType;\n        const cloudGraphHostName = authCodePayload ? authCodePayload.cloud_graph_host_name : Constants.EMPTY_STRING;\n        const msGraphhost = authCodePayload ? authCodePayload.msgraph_host : Constants.EMPTY_STRING;\n\n        // ADFS does not require client_info in the response\n        if (authorityType === AuthorityType.Adfs) {\n            this.logger.verbose(\"Authority type is ADFS, creating ADFS account\");\n            return AccountEntity.createGenericAccount(this.homeAccountIdentifier, idToken, authority, cloudGraphHostName, msGraphhost);\n        }\n\n        // This fallback applies to B2C as well as they fall under an AAD account type.\n        if (StringUtils.isEmpty(serverTokenResponse.client_info) && authority.protocolMode === \"AAD\") {\n            throw ClientAuthError.createClientInfoEmptyError();\n        }\n\n        return serverTokenResponse.client_info ?\n            AccountEntity.createAccount(serverTokenResponse.client_info, this.homeAccountIdentifier, idToken, authority, cloudGraphHostName, msGraphhost) :\n            AccountEntity.createGenericAccount(this.homeAccountIdentifier, idToken, authority, cloudGraphHostName, msGraphhost);\n    }\n\n    /**\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\n     *\n     * Optionally takes a state string that is set as-is in the response.\n     *\n     * @param cacheRecord\n     * @param idTokenObj\n     * @param fromTokenCache\n     * @param stateString\n     */\n    static async generateAuthenticationResult(\n        cryptoObj: ICrypto,\n        authority: Authority,\n        cacheRecord: CacheRecord,\n        fromTokenCache: boolean,\n        request: BaseAuthRequest,\n        idTokenObj?: AuthToken,\n        requestState?: RequestStateObject,\n        code?: string\n    ): Promise<AuthenticationResult> {\n        let accessToken: string = Constants.EMPTY_STRING;\n        let responseScopes: Array<string> = [];\n        let expiresOn: Date | null = null;\n        let extExpiresOn: Date | undefined;\n        let familyId: string = Constants.EMPTY_STRING;\n\n        if (cacheRecord.accessToken) {\n            if (cacheRecord.accessToken.tokenType === AuthenticationScheme.POP) {\n                const popTokenGenerator: PopTokenGenerator = new PopTokenGenerator(cryptoObj);\n                const { secret, keyId } = cacheRecord.accessToken;\n\n                if (!keyId) {\n                    throw ClientAuthError.createKeyIdMissingError();\n                }\n\n                accessToken = await popTokenGenerator.signPopToken(secret, keyId, request);\n            } else {\n                accessToken = cacheRecord.accessToken.secret;\n            }\n            responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\n        }\n\n        if (cacheRecord.appMetadata) {\n            familyId = cacheRecord.appMetadata.familyId === THE_FAMILY_ID ? THE_FAMILY_ID : Constants.EMPTY_STRING;\n        }\n        const uid = idTokenObj?.claims.oid || idTokenObj?.claims.sub || Constants.EMPTY_STRING;\n        const tid = idTokenObj?.claims.tid || Constants.EMPTY_STRING;\n\n        return {\n            authority: authority.canonicalAuthority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes,\n            account: cacheRecord.account ? cacheRecord.account.getAccountInfo() : null,\n            idToken: idTokenObj ? idTokenObj.rawToken : Constants.EMPTY_STRING,\n            idTokenClaims: idTokenObj ? idTokenObj.claims : {},\n            accessToken: accessToken,\n            fromCache: fromTokenCache,\n            expiresOn: expiresOn,\n            correlationId: request.correlationId,\n            extExpiresOn: extExpiresOn,\n            familyId: familyId,\n            tokenType: cacheRecord.accessToken?.tokenType || Constants.EMPTY_STRING,\n            state: requestState ? requestState.userRequestState : Constants.EMPTY_STRING,\n            cloudGraphHostName: cacheRecord.account?.cloudGraphHostName || Constants.EMPTY_STRING,\n            msGraphHost: cacheRecord.account?.msGraphHost || Constants.EMPTY_STRING,\n            code,\n            fromNativeBroker: false\n        };\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseClient } from \"./BaseClient\";\nimport { CommonAuthorizationUrlRequest } from \"../request/CommonAuthorizationUrlRequest\";\nimport { CommonAuthorizationCodeRequest } from \"../request/CommonAuthorizationCodeRequest\";\nimport { Authority } from \"../authority/Authority\";\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder\";\nimport { GrantType, AuthenticationScheme, PromptValue, Separators, AADServerParamKeys } from \"../utils/Constants\";\nimport { ClientConfiguration } from \"../config/ClientConfiguration\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { UrlString } from \"../url/UrlString\";\nimport { ServerAuthorizationCodeResponse } from \"../response/ServerAuthorizationCodeResponse\";\nimport { CommonEndSessionRequest } from \"../request/CommonEndSessionRequest\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { AuthorizationCodePayload } from \"../response/AuthorizationCodePayload\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { TokenClaims } from \"../account/TokenClaims\";\nimport { AccountInfo } from \"../account/AccountInfo\";\nimport { buildClientInfoFromHomeAccountId, buildClientInfo } from \"../account/ClientInfo\";\nimport { CcsCredentialType, CcsCredential } from \"../account/CcsCredential\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { RequestValidator } from \"../request/RequestValidator\";\n\n/**\n * Oauth2.0 Authorization Code client\n */\nexport class AuthorizationCodeClient extends BaseClient {\n    // Flag to indicate if client is for hybrid spa auth code redemption\n    protected includeRedirectUri: boolean = true;\n\n    constructor(configuration: ClientConfiguration) {\n        super(configuration);\n    }\n\n    /**\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\n     * application. The URL target the /authorize endpoint of the authority configured in the\n     * application object.\n     *\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\n     * acquireToken(AuthorizationCodeRequest)\n     * @param request\n     */\n    async getAuthCodeUrl(request: CommonAuthorizationUrlRequest): Promise<string> {\n        const queryString = await this.createAuthCodeUrlQueryString(request);\n\n        return UrlString.appendQueryString(this.authority.authorizationEndpoint, queryString);\n    }\n\n    /**\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\n     * authorization_code_grant\n     * @param request\n     */\n    async acquireToken(request: CommonAuthorizationCodeRequest, authCodePayload?: AuthorizationCodePayload): Promise<AuthenticationResult> {\n        this.logger.info(\"in acquireToken call\");\n        if (!request || StringUtils.isEmpty(request.code)) {\n            throw ClientAuthError.createTokenRequestCannotBeMadeError();\n        }\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await this.executeTokenRequest(this.authority, request);\n\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            this.config.serializableCache,\n            this.config.persistencePlugin\n        );\n\n        // Validate response. This function throws a server error if an error is returned by the server.\n        responseHandler.validateTokenResponse(response.body);\n        return await responseHandler.handleServerTokenResponse(response.body, this.authority, reqTimestamp, request, authCodePayload);\n    }\n\n    /**\n     * Handles the hash fragment response from public client code request. Returns a code response used by\n     * the client to exchange for a token in acquireToken.\n     * @param hashFragment\n     */\n    handleFragmentResponse(hashFragment: string, cachedState: string): AuthorizationCodePayload {\n        // Handle responses.\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, null, null);\n\n        // Deserialize hash fragment response parameters.\n        const hashUrlString = new UrlString(hashFragment);\n        // Deserialize hash fragment response parameters.\n        const serverParams: ServerAuthorizationCodeResponse = UrlString.getDeserializedHash(hashUrlString.getHash());\n\n        // Get code response\n        responseHandler.validateServerAuthorizationCodeResponse(serverParams, cachedState, this.cryptoUtils);\n\n        // throw when there is no auth code in the response\n        if (!serverParams.code) {\n            throw ClientAuthError.createNoAuthCodeInServerResponseError();\n        }\n        return {\n            ...serverParams,\n            // Code param is optional in ServerAuthorizationCodeResponse but required in AuthorizationCodePaylod\n            code: serverParams.code\n        };\n    }\n\n    /**\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param authorityUri\n     */\n    getLogoutUri(logoutRequest: CommonEndSessionRequest): string {\n        // Throw error if logoutRequest is null/undefined\n        if (!logoutRequest) {\n            throw ClientConfigurationError.createEmptyLogoutRequestError();\n        }\n        const queryString = this.createLogoutUrlQueryString(logoutRequest);\n\n        // Construct logout URI.\n        return UrlString.appendQueryString(this.authority.endSessionEndpoint, queryString);\n    }\n\n    /**\n     * Executes POST request to token endpoint\n     * @param authority\n     * @param request\n     */\n    private async executeTokenRequest(authority: Authority, request: CommonAuthorizationCodeRequest): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        const thumbprint: RequestThumbprint = {\n            clientId: this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid\n        };\n\n        const requestBody = await this.createTokenRequestBody(request);\n        const queryParameters = this.createTokenQueryParameters(request);\n        let ccsCredential: CcsCredential | undefined = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(request.clientInfo, this.cryptoUtils);\n                ccsCredential = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID\n                };\n            } catch (e) {\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\n            }\n        }\n        const headers: Record<string, string> = this.createTokenRequestHeaders(ccsCredential || request.ccsCredential);\n        const endpoint = StringUtils.isEmpty(queryParameters) ? authority.tokenEndpoint : `${authority.tokenEndpoint}?${queryParameters}`;\n\n        return this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint);\n    }\n\n    /**\n     * Creates query string for the /token request\n     * @param request\n     */\n    private createTokenQueryParameters(request: CommonAuthorizationCodeRequest): string {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        if (request.tokenQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * Generates a map for all the params to be sent to the service\n     * @param request\n     */\n    private async createTokenRequestBody(request: CommonAuthorizationCodeRequest): Promise<string> {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\n\n        /*\n         * For hybrid spa flow, there will be a code but no verifier\n         * In this scenario, don't include redirect uri as auth code will not be bound to redirect URI\n         */\n        if (!this.includeRedirectUri) {\n            // Just validate\n            RequestValidator.validateRedirectUri(request.redirectUri);\n        } else {\n            // Validate and include redirect uri\n            parameterBuilder.addRedirectUri(request.redirectUri);\n        }\n\n        // Add scope array, parameter builder will add default scopes and dedupe\n        parameterBuilder.addScopes(request.scopes);\n\n        // add code: user set, not validated\n        parameterBuilder.addAuthorizationCode(request.code);\n\n        // Add library metadata\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        parameterBuilder.addThrottling();\n\n        if (this.serverTelemetryManager) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n\n        // add code_verifier if passed\n        if (request.codeVerifier) {\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\n        }\n\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n\n        parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\n        parameterBuilder.addClientInfo();\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils);\n            const reqCnfData = await popTokenGenerator.generateCnf(request);\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData.reqCnfString);\n        } else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if(request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            } else {\n                throw ClientConfigurationError.createMissingSshJwkError();\n            }\n        }\n\n        const correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n\n        if (!StringUtils.isEmptyObj(request.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n\n        let ccsCred: CcsCredential | undefined = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(request.clientInfo, this.cryptoUtils);\n                ccsCred = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID\n                };\n            } catch (e) {\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\n            }\n        } else {\n            ccsCred = request.ccsCredential;\n        }\n\n        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\n        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(ccsCred.credential);\n                    break;\n            }\n        }\n\n        if (request.tokenBodyParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenBodyParameters);\n        }\n\n        // Add hybrid spa parameters if not already provided\n        if (request.enableSpaAuthorizationCode && (!request.tokenBodyParameters || !request.tokenBodyParameters[AADServerParamKeys.RETURN_SPA_CODE])) {\n            parameterBuilder.addExtraQueryParameters({\n                [AADServerParamKeys.RETURN_SPA_CODE]: \"1\"\n            });\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\n     * @param request\n     */\n    private async createAuthCodeUrlQueryString(request: CommonAuthorizationUrlRequest): Promise<string> {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\n\n        const requestScopes = [...request.scopes || [], ...request.extraScopesToConsent || []];\n        parameterBuilder.addScopes(requestScopes);\n\n        // validate the redirectUri (to be a non null value)\n        parameterBuilder.addRedirectUri(request.redirectUri);\n\n        // generate the correlationId if not set by the user and add\n        const correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n\n        // add response_mode. If not passed in it defaults to query.\n        parameterBuilder.addResponseMode(request.responseMode);\n\n        // add response_type = code\n        parameterBuilder.addResponseTypeCode();\n\n        // add library info parameters\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n\n        // add client_info=1\n        parameterBuilder.addClientInfo();\n\n        if (request.codeChallenge && request.codeChallengeMethod) {\n            parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\n        }\n\n        if (request.prompt) {\n            parameterBuilder.addPrompt(request.prompt);\n        }\n\n        if (request.domainHint) {\n            parameterBuilder.addDomainHint(request.domainHint);\n        }\n\n        // Add sid or loginHint with preference for sid -> loginHint -> username of AccountInfo object\n        if (request.prompt !== PromptValue.SELECT_ACCOUNT) {\n            // AAD will throw if prompt=select_account is passed with an account hint\n            if (request.sid && request.prompt === PromptValue.NONE) {\n                // SessionID is only used in silent calls\n                this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\");\n                parameterBuilder.addSid(request.sid);\n            } else if (request.account) {\n                const accountSid = this.extractAccountSid(request.account);\n                // If account and loginHint are provided, we will check account first for sid before adding loginHint\n                if (accountSid && request.prompt === PromptValue.NONE) {\n                    // SessionId is only used in silent calls\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\");\n                    parameterBuilder.addSid(accountSid);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\n                    }\n                } else if (request.loginHint) {\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from request\");\n                    parameterBuilder.addLoginHint(request.loginHint);\n                    parameterBuilder.addCcsUpn(request.loginHint);\n                } else if (request.account.username) {\n                    // Fallback to account username if provided\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from account\");\n                    parameterBuilder.addLoginHint(request.account.username);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +  e);\n                    }\n                }\n            } else if (request.loginHint) {\n                this.logger.verbose(\"createAuthCodeUrlQueryString: No account, adding login_hint from request\");\n                parameterBuilder.addLoginHint(request.loginHint);\n                parameterBuilder.addCcsUpn(request.loginHint);\n            }\n        } else {\n            this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\");\n        }\n\n        if (request.nonce) {\n            parameterBuilder.addNonce(request.nonce);\n        }\n\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n\n        if (!StringUtils.isEmpty(request.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n        }\n\n        if (request.nativeBroker) {\n            // signal ests that this is a WAM call\n            parameterBuilder.addNativeBroker();\n\n            // pass the req_cnf for POP\n            if (request.authenticationScheme === AuthenticationScheme.POP) {\n                const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils);\n                // to reduce the URL length, it is recommended to send the hash of the req_cnf instead of the whole string\n                const reqCnfData = await popTokenGenerator.generateCnf(request);\n                parameterBuilder.addPopToken(reqCnfData.reqCnfHash);\n            }\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * This API validates the `EndSessionRequest` and creates a URL\n     * @param request\n     */\n    private createLogoutUrlQueryString(request: CommonEndSessionRequest): string {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        if (request.postLogoutRedirectUri) {\n            parameterBuilder.addPostLogoutRedirectUri(request.postLogoutRedirectUri);\n        }\n\n        if (request.correlationId) {\n            parameterBuilder.addCorrelationId(request.correlationId);\n        }\n\n        if (request.idTokenHint) {\n            parameterBuilder.addIdTokenHint(request.idTokenHint);\n        }\n\n        if(request.state) {\n            parameterBuilder.addState(request.state);\n        }\n\n        if (request.logoutHint) {\n            parameterBuilder.addLogoutHint(request.logoutHint);\n        }\n\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\n     * @param account\n     */\n    private extractAccountSid(account: AccountInfo): string | null {\n        if (account.idTokenClaims) {\n            const tokenClaims = account.idTokenClaims as TokenClaims;\n            return tokenClaims.sid || null;\n        }\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Tenant Discovery Response which contains the relevant OAuth endpoints and data needed for authentication and authorization.\n */\nexport type OpenIdConfigResponse = {\n    authorization_endpoint: string;\n    token_endpoint: string;\n    end_session_endpoint?: string;\n    issuer: string;\n    jwks_uri: string;\n};\n\nexport function isOpenIdConfigResponse(response: object): boolean {\n    return (\n        response.hasOwnProperty(\"authorization_endpoint\") &&\n        response.hasOwnProperty(\"token_endpoint\") && \n        response.hasOwnProperty(\"issuer\") &&\n        response.hasOwnProperty(\"jwks_uri\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const rawMetdataJSON = {\"endpointMetadata\":{\"https://login.microsoftonline.com/common/\":{\"token_endpoint\":\"https://login.microsoftonline.com/common/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.microsoftonline.com/common/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.microsoftonline.com/{tenantid}/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://graph.microsoft.com/oidc/userinfo\",\"authorization_endpoint\":\"https://login.microsoftonline.com/common/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.microsoftonline.com/common/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.microsoftonline.com/common/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.microsoftonline.com/common/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"microsoftonline.com\",\"cloud_graph_host_name\":\"graph.windows.net\",\"msgraph_host\":\"graph.microsoft.com\",\"rbac_url\":\"https://pas.windows.net\"},\"https://login.chinacloudapi.cn/common/\":{\"token_endpoint\":\"https://login.chinacloudapi.cn/common/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.chinacloudapi.cn/common/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\"authorization_endpoint\":\"https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.chinacloudapi.cn/common/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.chinacloudapi.cn/common/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.chinacloudapi.cn/common/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"partner.microsoftonline.cn\",\"cloud_graph_host_name\":\"graph.chinacloudapi.cn\",\"msgraph_host\":\"microsoftgraph.chinacloudapi.cn\",\"rbac_url\":\"https://pas.chinacloudapi.cn\"},\"https://login.microsoftonline.us/common/\":{\"token_endpoint\":\"https://login.microsoftonline.us/common/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.microsoftonline.us/common/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.microsoftonline.us/{tenantid}/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://graph.microsoft.com/oidc/userinfo\",\"authorization_endpoint\":\"https://login.microsoftonline.us/common/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.microsoftonline.us/common/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.microsoftonline.us/common/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.microsoftonline.us/common/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"microsoftonline.us\",\"cloud_graph_host_name\":\"graph.windows.net\",\"msgraph_host\":\"graph.microsoft.com\",\"rbac_url\":\"https://pasff.usgovcloudapi.net\"},\"https://login.microsoftonline.com/consumers/\":{\"token_endpoint\":\"https://login.microsoftonline.com/consumers/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.microsoftonline.com/consumers/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.microsoftonline.com/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://graph.microsoft.com/oidc/userinfo\",\"authorization_endpoint\":\"https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.microsoftonline.com/consumers/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.microsoftonline.com/consumers/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.microsoftonline.com/consumers/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"microsoftonline.com\",\"cloud_graph_host_name\":\"graph.windows.net\",\"msgraph_host\":\"graph.microsoft.com\",\"rbac_url\":\"https://pas.windows.net\"},\"https://login.chinacloudapi.cn/consumers/\":{\"token_endpoint\":\"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.chinacloudapi.cn/consumers/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.partner.microsoftonline.cn/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\"authorization_endpoint\":\"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.chinacloudapi.cn/consumers/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"partner.microsoftonline.cn\",\"cloud_graph_host_name\":\"graph.chinacloudapi.cn\",\"msgraph_host\":\"microsoftgraph.chinacloudapi.cn\",\"rbac_url\":\"https://pas.chinacloudapi.cn\"},\"https://login.microsoftonline.us/consumers/\":{\"token_endpoint\":\"https://login.microsoftonline.us/consumers/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.microsoftonline.us/consumers/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.microsoftonline.us/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://graph.microsoft.com/oidc/userinfo\",\"authorization_endpoint\":\"https://login.microsoftonline.us/consumers/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.microsoftonline.us/consumers/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.microsoftonline.us/consumers/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.microsoftonline.us/consumers/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"microsoftonline.us\",\"cloud_graph_host_name\":\"graph.windows.net\",\"msgraph_host\":\"graph.microsoft.com\",\"rbac_url\":\"https://pasff.usgovcloudapi.net\"},\"https://login.microsoftonline.com/organizations/\":{\"token_endpoint\":\"https://login.microsoftonline.com/organizations/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.microsoftonline.com/organizations/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.microsoftonline.com/{tenantid}/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://graph.microsoft.com/oidc/userinfo\",\"authorization_endpoint\":\"https://login.microsoftonline.com/organizations/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.microsoftonline.com/organizations/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.microsoftonline.com/organizations/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.microsoftonline.com/organizations/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"microsoftonline.com\",\"cloud_graph_host_name\":\"graph.windows.net\",\"msgraph_host\":\"graph.microsoft.com\",\"rbac_url\":\"https://pas.windows.net\"},\"https://login.chinacloudapi.cn/organizations/\":{\"token_endpoint\":\"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.chinacloudapi.cn/organizations/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\"authorization_endpoint\":\"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.chinacloudapi.cn/organizations/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"partner.microsoftonline.cn\",\"cloud_graph_host_name\":\"graph.chinacloudapi.cn\",\"msgraph_host\":\"microsoftgraph.chinacloudapi.cn\",\"rbac_url\":\"https://pas.chinacloudapi.cn\"},\"https://login.microsoftonline.us/organizations/\":{\"token_endpoint\":\"https://login.microsoftonline.us/organizations/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.microsoftonline.us/organizations/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.microsoftonline.us/{tenantid}/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://graph.microsoft.com/oidc/userinfo\",\"authorization_endpoint\":\"https://login.microsoftonline.us/organizations/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.microsoftonline.us/organizations/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.microsoftonline.us/organizations/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.microsoftonline.us/organizations/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"microsoftonline.us\",\"cloud_graph_host_name\":\"graph.windows.net\",\"msgraph_host\":\"graph.microsoft.com\",\"rbac_url\":\"https://pasff.usgovcloudapi.net\"}},\"instanceDiscoveryMetadata\":{\"https://login.microsoftonline.com/common/\":{\"tenant_discovery_endpoint\":\"https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]},\"https://login.chinacloudapi.cn/common/\":{\"tenant_discovery_endpoint\":\"https://login.chinacloudapi.cn/common/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]},\"https://login.microsoftonline.us/common/\":{\"tenant_discovery_endpoint\":\"https://login.microsoftonline.us/common/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]},\"https://login.microsoftonline.com/consumers/\":{\"tenant_discovery_endpoint\":\"https://login.microsoftonline.com/consumers/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]},\"https://login.chinacloudapi.cn/consumers/\":{\"tenant_discovery_endpoint\":\"https://login.chinacloudapi.cn/consumers/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]},\"https://login.microsoftonline.us/consumers/\":{\"tenant_discovery_endpoint\":\"https://login.microsoftonline.us/consumers/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]},\"https://login.microsoftonline.com/organizations/\":{\"tenant_discovery_endpoint\":\"https://login.microsoftonline.com/organizations/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]},\"https://login.chinacloudapi.cn/organizations/\":{\"tenant_discovery_endpoint\":\"https://login.chinacloudapi.cn/organizations/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]},\"https://login.microsoftonline.us/organizations/\":{\"tenant_discovery_endpoint\":\"https://login.microsoftonline.us/organizations/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]}}};\n\nexport const EndpointMetadata = rawMetdataJSON.endpointMetadata;\nexport const InstanceDiscoveryMetadata = rawMetdataJSON.instanceDiscoveryMetadata;\n\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError, InteractionRequiredAuthError } from \"@azure/msal-common\";\nimport { BrowserAuthError } from \"./BrowserAuthError\";\n\nexport type OSError = {\n    error: number;\n    protocol_error: string;\n    properties: object;\n    status: string;\n    retryable?: boolean;\n};\n\nexport enum NativeStatusCode {\n    USER_INTERACTION_REQUIRED = \"USER_INTERACTION_REQUIRED\",\n    USER_CANCEL = \"USER_CANCEL\",\n    NO_NETWORK = \"NO_NETWORK\",\n    TRANSIENT_ERROR = \"TRANSIENT_ERROR\",\n    PERSISTENT_ERROR = \"PERSISTENT_ERROR\", \n    DISABLED = \"DISABLED\",\n    ACCOUNT_UNAVAILABLE = \"ACCOUNT_UNAVAILABLE\"\n}\n\nexport const NativeAuthErrorMessage = {\n    extensionError: {\n        code: \"ContentError\"\n    },\n    userSwitch: {\n        code: \"user_switch\",\n        desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\"\n    }\n};\n\nexport class NativeAuthError extends AuthError {\n    ext: OSError | undefined;\n\n    constructor(errorCode: string, description: string, ext?: OSError) {\n        super(errorCode, description);\n\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\n        this.name = \"NativeAuthError\";\n        this.ext = ext;\n    }\n\n    /**\n     * These errors should result in a fallback to the 'standard' browser based auth flow.\n     */\n    isFatal(): boolean {\n        if (this.ext && this.ext.status && (this.ext.status === NativeStatusCode.PERSISTENT_ERROR || this.ext.status === NativeStatusCode.DISABLED)) {\n            return true;\n        }\n        \n        switch (this.errorCode) {\n            case NativeAuthErrorMessage.extensionError.code:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * Create the appropriate error object based on the WAM status code.\n     * @param code \n     * @param description \n     * @param ext \n     * @returns \n     */\n    static createError(code: string, description: string, ext?: OSError): AuthError {\n        if (ext && ext.status) {\n            switch (ext.status) {\n                case NativeStatusCode.ACCOUNT_UNAVAILABLE:\n                    return InteractionRequiredAuthError.createNativeAccountUnavailableError();\n                case NativeStatusCode.USER_INTERACTION_REQUIRED:\n                    return new InteractionRequiredAuthError(code, description);\n                case NativeStatusCode.USER_CANCEL:\n                    return BrowserAuthError.createUserCancelledError();\n                case NativeStatusCode.NO_NETWORK:\n                    return BrowserAuthError.createNoNetworkConnectivityError();\n            }\n        }\n\n        return new NativeAuthError(code, description, ext);\n    }\n\n    /**\n     * Creates user switch error when the user chooses a different account in the native broker prompt\n     * @returns \n     */\n    static createUserSwitchError(): NativeAuthError {\n        return new NativeAuthError(NativeAuthErrorMessage.userSwitch.code, NativeAuthErrorMessage.userSwitch.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { IMDSBadResponse } from \"../response/IMDSBadResponse\";\nimport { Constants, RegionDiscoverySources, ResponseCodes } from \"../utils/Constants\";\nimport { RegionDiscoveryMetadata } from \"./RegionDiscoveryMetadata\";\nimport { ImdsOptions } from \"./ImdsOptions\";\n\nexport class RegionDiscovery {\n    // Network interface to make requests with.\n    protected networkInterface: INetworkModule;\n    // Options for the IMDS endpoint request\n    protected static IMDS_OPTIONS: ImdsOptions = {\n        headers: {\n            Metadata: \"true\",\n        },\n    };\n\n    constructor(networkInterface: INetworkModule) {\n        this.networkInterface = networkInterface;\n    }\n\n    /**\n     * Detect the region from the application's environment.\n     * \n     * @returns Promise<string | null>\n     */\n    public async detectRegion(environmentRegion: string | undefined, regionDiscoveryMetadata: RegionDiscoveryMetadata, proxyUrl: string): Promise<string | null> {\n        // Initialize auto detected region with the region from the envrionment \n        let autodetectedRegionName = environmentRegion;\n\n        // Check if a region was detected from the environment, if not, attempt to get the region from IMDS \n        if (!autodetectedRegionName) {\n            const options = RegionDiscovery.IMDS_OPTIONS;\n            if (proxyUrl) {\n                options.proxyUrl = proxyUrl;\n            }\n\n            try {\n                const localIMDSVersionResponse = await this.getRegionFromIMDS(Constants.IMDS_VERSION, options);\n                if (localIMDSVersionResponse.status === ResponseCodes.httpSuccess) {\n                    autodetectedRegionName = localIMDSVersionResponse.body;\n                    regionDiscoveryMetadata.region_source = RegionDiscoverySources.IMDS;\n                } \n                \n                // If the response using the local IMDS version failed, try to fetch the current version of IMDS and retry. \n                if (localIMDSVersionResponse.status === ResponseCodes.httpBadRequest) {\n                    const currentIMDSVersion = await this.getCurrentVersion(options);\n                    if (!currentIMDSVersion) {\n                        regionDiscoveryMetadata.region_source = RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                        return null;\n                    }\n\n                    const currentIMDSVersionResponse = await this.getRegionFromIMDS(currentIMDSVersion, options);\n                    if (currentIMDSVersionResponse.status === ResponseCodes.httpSuccess) {\n                        autodetectedRegionName = currentIMDSVersionResponse.body;\n                        regionDiscoveryMetadata.region_source = RegionDiscoverySources.IMDS;\n                    }\n                }\n            } catch(e) {\n                regionDiscoveryMetadata.region_source = RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                return null;\n            } \n        } else {\n            regionDiscoveryMetadata.region_source = RegionDiscoverySources.ENVIRONMENT_VARIABLE;\n        }\n\n        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\n        if (!autodetectedRegionName) {\n            regionDiscoveryMetadata.region_source = RegionDiscoverySources.FAILED_AUTO_DETECTION;\n        }\n\n        return autodetectedRegionName || null;\n    }\n\n    /**\n     * Make the call to the IMDS endpoint\n     * \n     * @param imdsEndpointUrl\n     * @returns Promise<NetworkResponse<string>>\n     */\n    private async getRegionFromIMDS(version: string, options: ImdsOptions): Promise<NetworkResponse<string>> {\n        return this.networkInterface.sendGetRequestAsync<string>(`${Constants.IMDS_ENDPOINT}?api-version=${version}&format=text`, options, Constants.IMDS_TIMEOUT);\n    }\n\n    /**\n     * Get the most recent version of the IMDS endpoint available\n     *  \n     * @returns Promise<string | null>\n     */\n    private async getCurrentVersion(options: ImdsOptions): Promise<string | null> {\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync<IMDSBadResponse>(`${Constants.IMDS_ENDPOINT}?format=json`, options);\n\n            // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\n            if (response.status === ResponseCodes.httpBadRequest && response.body && response.body[\"newest-versions\"] && response.body[\"newest-versions\"].length > 0) {\n                return response.body[\"newest-versions\"][0];\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthorityType } from \"./AuthorityType\";\nimport { isOpenIdConfigResponse, OpenIdConfigResponse } from \"./OpenIdConfigResponse\";\nimport { UrlString } from \"../url/UrlString\";\nimport { IUri } from \"../url/IUri\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { AuthorityMetadataSource, Constants, RegionDiscoveryOutcomes } from \"../utils/Constants\";\nimport { EndpointMetadata, InstanceDiscoveryMetadata } from \"./AuthorityMetadata\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { ProtocolMode } from \"./ProtocolMode\";\nimport { ICacheManager } from \"../cache/interface/ICacheManager\";\nimport { AuthorityMetadataEntity } from \"../cache/entities/AuthorityMetadataEntity\";\nimport { AuthorityOptions , AzureCloudInstance } from \"./AuthorityOptions\";\nimport { CloudInstanceDiscoveryResponse, isCloudInstanceDiscoveryResponse } from \"./CloudInstanceDiscoveryResponse\";\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata\";\nimport { RegionDiscovery } from \"./RegionDiscovery\";\nimport { RegionDiscoveryMetadata } from \"./RegionDiscoveryMetadata\";\nimport { ImdsOptions } from \"./ImdsOptions\";\nimport { AzureCloudOptions } from \"../config/ClientConfiguration\";\n\n/**\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\n * endpoint. It will store the pertinent config data in this object for use during token calls.\n */\nexport class Authority {\n\n    // Canonical authority url string\n    private _canonicalAuthority: UrlString;\n    // Canonicaly authority url components\n    private _canonicalAuthorityUrlComponents: IUri | null;\n    // Network interface to make requests with.\n    protected networkInterface: INetworkModule;\n    // Cache Manager to cache network responses\n    protected cacheManager: ICacheManager;\n    // Protocol mode to construct endpoints\n    private authorityOptions: AuthorityOptions;\n    // Authority metadata\n    private metadata: AuthorityMetadataEntity;\n    // Region discovery service\n    private regionDiscovery: RegionDiscovery;\n    // Region discovery metadata\n    public regionDiscoveryMetadata: RegionDiscoveryMetadata;\n    // Proxy url string\n    private proxyUrl: string;\n\n    constructor(authority: string, networkInterface: INetworkModule, cacheManager: ICacheManager, authorityOptions: AuthorityOptions, proxyUrl?: string) {\n        this.canonicalAuthority = authority;\n        this._canonicalAuthority.validateAsUri();\n        this.networkInterface = networkInterface;\n        this.cacheManager = cacheManager;\n        this.authorityOptions = authorityOptions;\n        this.regionDiscovery = new RegionDiscovery(networkInterface);\n        this.regionDiscoveryMetadata = { region_used: undefined, region_source: undefined, region_outcome: undefined };\n        this.proxyUrl = proxyUrl || Constants.EMPTY_STRING;\n    }\n\n    // See above for AuthorityType\n    public get authorityType(): AuthorityType {\n        const pathSegments = this.canonicalAuthorityUrlComponents.PathSegments;\n\n        if (pathSegments.length && pathSegments[0].toLowerCase() === Constants.ADFS) {\n            return AuthorityType.Adfs;\n        }\n\n        return AuthorityType.Default;\n    }\n\n    /**\n     * ProtocolMode enum representing the way endpoints are constructed.\n     */\n    public get protocolMode(): ProtocolMode {\n        return this.authorityOptions.protocolMode;\n    }\n\n    /**\n     * Returns authorityOptions which can be used to reinstantiate a new authority instance\n     */\n    public get options(): AuthorityOptions {\n        return this.authorityOptions;\n    }\n\n    /**\n     * A URL that is the authority set by the developer\n     */\n    public get canonicalAuthority(): string {\n        return this._canonicalAuthority.urlString;\n    }\n\n    /**\n     * Sets canonical authority.\n     */\n    public set canonicalAuthority(url: string) {\n        this._canonicalAuthority = new UrlString(url);\n        this._canonicalAuthority.validateAsUri();\n        this._canonicalAuthorityUrlComponents = null;\n    }\n\n    /**\n     * Get authority components.\n     */\n    public get canonicalAuthorityUrlComponents(): IUri {\n        if (!this._canonicalAuthorityUrlComponents) {\n            this._canonicalAuthorityUrlComponents = this._canonicalAuthority.getUrlComponents();\n        }\n\n        return this._canonicalAuthorityUrlComponents;\n    }\n\n    /**\n     * Get hostname and port i.e. login.microsoftonline.com\n     */\n    public get hostnameAndPort(): string {\n        return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\n    }\n\n    /**\n     * Get tenant for authority.\n     */\n    public get tenant(): string {\n        return this.canonicalAuthorityUrlComponents.PathSegments[0];\n    }\n\n    /**\n     * OAuth /authorize endpoint for requests\n     */\n    public get authorizationEndpoint(): string {\n        if(this.discoveryComplete()) {\n            const endpoint = this.replacePath(this.metadata.authorization_endpoint);\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * OAuth /token endpoint for requests\n     */\n    public get tokenEndpoint(): string {\n        if(this.discoveryComplete()) {\n            const endpoint = this.replacePath(this.metadata.token_endpoint);\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    public get deviceCodeEndpoint(): string {\n        if(this.discoveryComplete()) {\n            const endpoint = this.replacePath(this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\"));\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * OAuth logout endpoint for requests\n     */\n    public get endSessionEndpoint(): string {\n        if(this.discoveryComplete()) {\n            // ROPC policies may not have end_session_endpoint set\n            if (!this.metadata.end_session_endpoint) {\n                throw ClientAuthError.createLogoutNotSupportedError();\n            }\n            const endpoint = this.replacePath(this.metadata.end_session_endpoint);\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * OAuth issuer for requests\n     */\n    public get selfSignedJwtAudience(): string {\n        if(this.discoveryComplete()) {\n            const endpoint = this.replacePath(this.metadata.issuer);\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * Jwks_uri for token signing keys\n     */\n    public get jwksUri(): string {\n        if(this.discoveryComplete()) {\n            const endpoint = this.replacePath(this.metadata.jwks_uri);\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * Replaces tenant in url path with current tenant. Defaults to common.\n     * @param urlString\n     */\n    private replaceTenant(urlString: string): string {\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\n    }\n\n    /**\n     * Replaces path such as tenant or policy with the current tenant or policy.\n     * @param urlString\n     */\n    private replacePath(urlString: string): string {\n        let endpoint = urlString;\n        const cachedAuthorityUrl = new UrlString(this.metadata.canonical_authority);\n        const cachedAuthorityParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\n        const currentAuthorityParts = this.canonicalAuthorityUrlComponents.PathSegments;\n\n        currentAuthorityParts.forEach((currentPart, index) => {\n            const cachedPart = cachedAuthorityParts[index];\n            if (currentPart !== cachedPart) {\n                endpoint = endpoint.replace(`/${cachedPart}/`, `/${currentPart}/`);\n            }\n        });\n\n        return endpoint;\n    }\n\n    /**\n     * The default open id configuration endpoint for any canonical authority.\n     */\n    protected get defaultOpenIdConfigurationEndpoint(): string {\n        if (this.authorityType === AuthorityType.Adfs || this.protocolMode === ProtocolMode.OIDC) {\n            return `${this.canonicalAuthority}.well-known/openid-configuration`;\n        }\n        return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;\n    }\n\n    /**\n     * Boolean that returns whethr or not tenant discovery has been completed.\n     */\n    discoveryComplete(): boolean {\n        return !!this.metadata;\n    }\n\n    /**\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\n     * and the /authorize, /token and logout endpoints.\n     */\n    public async resolveEndpointsAsync(): Promise<void> {\n        let metadataEntity = this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);\n        if (!metadataEntity) {\n            metadataEntity = new AuthorityMetadataEntity();\n            metadataEntity.updateCanonicalAuthority(this.canonicalAuthority);\n        }\n\n        const cloudDiscoverySource = await this.updateCloudDiscoveryMetadata(metadataEntity);\n        this.canonicalAuthority = this.canonicalAuthority.replace(this.hostnameAndPort, metadataEntity.preferred_network);\n        const endpointSource = await this.updateEndpointMetadata(metadataEntity);\n\n        if (cloudDiscoverySource !== AuthorityMetadataSource.CACHE && endpointSource !== AuthorityMetadataSource.CACHE) {\n            // Reset the expiration time unless both values came from a successful cache lookup\n            metadataEntity.resetExpiresAt();\n            metadataEntity.updateCanonicalAuthority(this.canonicalAuthority);\n        }\n\n        const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(metadataEntity.preferred_cache);\n        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\n        this.metadata = metadataEntity;\n    }\n\n    /**\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\n     * @param metadataEntity\n     */\n    private async updateEndpointMetadata(metadataEntity: AuthorityMetadataEntity): Promise<AuthorityMetadataSource> {\n        let metadata = this.getEndpointMetadataFromConfig();\n        if (metadata) {\n            metadataEntity.updateEndpointMetadata(metadata, false);\n            return AuthorityMetadataSource.CONFIG;\n        }\n\n        if (this.isAuthoritySameType(metadataEntity) && metadataEntity.endpointsFromNetwork && !metadataEntity.isExpired()) {\n            // No need to update\n            return AuthorityMetadataSource.CACHE;\n        }\n\n        let harcodedMetadata = this.getEndpointMetadataFromHardcodedValues();\n        metadata = await this.getEndpointMetadataFromNetwork();\n        if (metadata) {\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                metadata = await this.updateMetadataWithRegionalInformation(metadata);\n            }\n\n            metadataEntity.updateEndpointMetadata(metadata, true);\n            return AuthorityMetadataSource.NETWORK;\n        }    \n\n        if (harcodedMetadata && !this.authorityOptions.skipAuthorityMetadataCache) {\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                harcodedMetadata = await this.updateMetadataWithRegionalInformation(\n                    harcodedMetadata\n                );\n            }\n\n            metadataEntity.updateEndpointMetadata(harcodedMetadata, false);\n            return AuthorityMetadataSource.HARDCODED_VALUES;\n        } else {\n            throw ClientAuthError.createUnableToGetOpenidConfigError(\n                this.defaultOpenIdConfigurationEndpoint\n            );\n        }\n    }\n\n    /**\n     * Compares the number of url components after the domain to determine if the cached authority metadata can be used for the requested authority\n     * Protects against same domain different authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\n     * @param metadataEntity\n     */\n    private isAuthoritySameType(metadataEntity: AuthorityMetadataEntity): boolean {\n        const cachedAuthorityUrl = new UrlString(metadataEntity.canonical_authority);\n        const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\n\n        return cachedParts.length === this.canonicalAuthorityUrlComponents.PathSegments.length;\n    }\n\n    /**\n     * Parse authorityMetadata config option\n     */\n    private getEndpointMetadataFromConfig(): OpenIdConfigResponse | null {\n        if (this.authorityOptions.authorityMetadata) {\n            try {\n                return JSON.parse(this.authorityOptions.authorityMetadata) as OpenIdConfigResponse;\n            } catch (e) {\n                throw ClientConfigurationError.createInvalidAuthorityMetadataError();\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\n     * \n     * @param hasHardcodedMetadata boolean\n     */\n    private async getEndpointMetadataFromNetwork(): Promise<OpenIdConfigResponse | null> {\n        const options: ImdsOptions = {};\n        if (this.proxyUrl) {\n            options.proxyUrl = this.proxyUrl;\n        }\n\n        /*\n         * TODO: Add a timeout if the authority exists in our library's \n         * hardcoded list of metadata\n         */\n\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync<OpenIdConfigResponse>(this.defaultOpenIdConfigurationEndpoint, options);\n            return isOpenIdConfigResponse(response.body) ? response.body : null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    /**\n     * Get OAuth endpoints for common authorities.\n     */\n    private getEndpointMetadataFromHardcodedValues(): OpenIdConfigResponse | null {\n        if (this.canonicalAuthority in EndpointMetadata) {\n            return EndpointMetadata[this.canonicalAuthority];\n        }\n\n        return null;\n    }\n\n    /**\n     * Update the retrieved metadata with regional information.\n     */\n    private async updateMetadataWithRegionalInformation(metadata: OpenIdConfigResponse): Promise<OpenIdConfigResponse> {\n        const autodetectedRegionName = await this.regionDiscovery.detectRegion(this.authorityOptions.azureRegionConfiguration?.environmentRegion, this.regionDiscoveryMetadata, this.proxyUrl);\n\n        const azureRegion = this.authorityOptions.azureRegionConfiguration?.azureRegion === Constants.AZURE_REGION_AUTO_DISCOVER_FLAG\n            ? autodetectedRegionName\n            : this.authorityOptions.azureRegionConfiguration?.azureRegion;\n\n        if (this.authorityOptions.azureRegionConfiguration?.azureRegion === Constants.AZURE_REGION_AUTO_DISCOVER_FLAG) {\n            this.regionDiscoveryMetadata.region_outcome = autodetectedRegionName ?\n                RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL :\n                RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\n        } else {\n            if (autodetectedRegionName) {\n                this.regionDiscoveryMetadata.region_outcome = (this.authorityOptions.azureRegionConfiguration?.azureRegion === autodetectedRegionName) ?\n                    RegionDiscoveryOutcomes.CONFIGURED_MATCHES_DETECTED :\n                    RegionDiscoveryOutcomes.CONFIGURED_NOT_DETECTED;\n            } else {\n                this.regionDiscoveryMetadata.region_outcome = RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\n            }\n        }\n\n        if (azureRegion) {\n            this.regionDiscoveryMetadata.region_used = azureRegion;\n            return Authority.replaceWithRegionalInformation(metadata, azureRegion);\n        }\n\n        return metadata;\n    }\n\n    /**\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache and returns where the information was retrived from\n     * @param cachedMetadata\n     * @param newMetadata\n     */\n    private async updateCloudDiscoveryMetadata(metadataEntity: AuthorityMetadataEntity): Promise<AuthorityMetadataSource> {\n        let metadata = this.getCloudDiscoveryMetadataFromConfig();\n        if (metadata) {\n            metadataEntity.updateCloudDiscoveryMetadata(metadata, false);\n            return AuthorityMetadataSource.CONFIG;\n        }\n\n        // If The cached metadata came from config but that config was not passed to this instance, we must go to the network\n        if (this.isAuthoritySameType(metadataEntity) && metadataEntity.aliasesFromNetwork && !metadataEntity.isExpired()) {\n            // No need to update\n            return AuthorityMetadataSource.CACHE;\n        }\n\n        const harcodedMetadata = this.getCloudDiscoveryMetadataFromHarcodedValues();\n        metadata = await this.getCloudDiscoveryMetadataFromNetwork();\n        if (metadata) {\n            metadataEntity.updateCloudDiscoveryMetadata(metadata, true);\n            return AuthorityMetadataSource.NETWORK;\n        } \n        \n        if (harcodedMetadata && !this.options.skipAuthorityMetadataCache) {\n            metadataEntity.updateCloudDiscoveryMetadata(harcodedMetadata, false);\n            return AuthorityMetadataSource.HARDCODED_VALUES;\n        } else {\n            // Metadata could not be obtained from config, cache or network\n            throw ClientConfigurationError.createUntrustedAuthorityError();\n        }\n    }\n\n    /**\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\n     */\n    private getCloudDiscoveryMetadataFromConfig(): CloudDiscoveryMetadata | null {\n        // Check if network response was provided in config\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\n            try {\n                const parsedResponse = JSON.parse(this.authorityOptions.cloudDiscoveryMetadata) as CloudInstanceDiscoveryResponse;\n                const metadata = Authority.getCloudDiscoveryMetadataFromNetworkResponse(parsedResponse.metadata, this.hostnameAndPort);\n                if (metadata) {\n                    return metadata;\n                }\n            } catch (e) {\n                throw ClientConfigurationError.createInvalidCloudDiscoveryMetadataError();\n            }\n        }\n\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\n        if (this.isInKnownAuthorities()) {\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\n        }\n\n        return null;\n    }\n\n    /**\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\n     * \n     * @param hasHardcodedMetadata boolean\n     */\n    private async getCloudDiscoveryMetadataFromNetwork(): Promise<CloudDiscoveryMetadata | null> {\n        const instanceDiscoveryEndpoint = `${Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;\n        const options: ImdsOptions = {};\n        if (this.proxyUrl) {\n            options.proxyUrl = this.proxyUrl;\n        }\n\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n\n        let match = null;\n        try {\n            const response =\n                await this.networkInterface.sendGetRequestAsync<CloudInstanceDiscoveryResponse>(\n                    instanceDiscoveryEndpoint,\n                    options\n                );\n            const metadata = isCloudInstanceDiscoveryResponse(response.body)\n                ? response.body.metadata\n                : [];\n            if (metadata.length === 0) {\n                // If no metadata is returned, authority is untrusted\n                return null;\n            }\n            match = Authority.getCloudDiscoveryMetadataFromNetworkResponse(\n                metadata,\n                this.hostnameAndPort\n            );\n        } catch (e) {\n            return null;\n        }\n\n        if (!match) {\n            // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\n            match = Authority.createCloudDiscoveryMetadataFromHost(\n                this.hostnameAndPort\n            );\n        }\n        return match;\n    }\n\n    /**\n     * Get cloud discovery metadata for common authorities \n     */\n    private getCloudDiscoveryMetadataFromHarcodedValues(): CloudDiscoveryMetadata | null {\n        if (this.canonicalAuthority in InstanceDiscoveryMetadata) {\n            return InstanceDiscoveryMetadata[this.canonicalAuthority];\n        }\n\n        return null;\n    }\n\n    /**\n     * Helper function to determine if this host is included in the knownAuthorities config option\n     */\n    private isInKnownAuthorities(): boolean {\n        const matches = this.authorityOptions.knownAuthorities.filter((authority) => {\n            return UrlString.getDomainFromUrl(authority).toLowerCase() === this.hostnameAndPort;\n        });\n\n        return matches.length > 0;\n    }\n\n    /**\n     * helper function to populate the authority based on azureCloudOptions\n     * @param authorityString\n     * @param azureCloudOptions\n     */\n    static generateAuthority(authorityString: string, azureCloudOptions?: AzureCloudOptions): string {\n        let authorityAzureCloudInstance;\n\n        if (azureCloudOptions && azureCloudOptions.azureCloudInstance !== AzureCloudInstance.None) {\n            const tenant = azureCloudOptions.tenant ? azureCloudOptions.tenant : Constants.DEFAULT_COMMON_TENANT;\n            authorityAzureCloudInstance = `${azureCloudOptions.azureCloudInstance}/${tenant}/`;\n        }\n\n        return authorityAzureCloudInstance ? authorityAzureCloudInstance : authorityString;\n    }\n\n    /**\n     * Creates cloud discovery metadata object from a given host\n     * @param host\n     */\n    static createCloudDiscoveryMetadataFromHost(host: string): CloudDiscoveryMetadata {\n        return {\n            preferred_network: host,\n            preferred_cache: host,\n            aliases: [host]\n        };\n    }\n\n    /**\n     * Searches instance discovery network response for the entry that contains the host in the aliases list\n     * @param response\n     * @param authority\n     */\n    static getCloudDiscoveryMetadataFromNetworkResponse(response: CloudDiscoveryMetadata[], authority: string): CloudDiscoveryMetadata | null {\n        for (let i = 0; i < response.length; i++) {\n            const metadata = response[i];\n            if (metadata.aliases.indexOf(authority) > -1) {\n                return metadata;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * helper function to generate environment from authority object\n     */\n    getPreferredCache(): string {\n        if(this.discoveryComplete()) {\n            return this.metadata.preferred_cache;\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * Returns whether or not the provided host is an alias of this authority instance\n     * @param host\n     */\n    isAlias(host: string): boolean {\n        return this.metadata.aliases.indexOf(host) > -1;\n    }\n\n    /**\n     * Checks whether the provided host is that of a public cloud authority\n     *\n     * @param authority string\n     * @returns bool\n     */\n    static isPublicCloudAuthority(host: string): boolean {\n        return Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\n    }\n\n    /**\n     * Rebuild the authority string with the region\n     *\n     * @param host string\n     * @param region string\n     */\n    static buildRegionalAuthorityString(host: string, region: string, queryString?: string): string {\n        // Create and validate a Url string object with the initial authority string\n        const authorityUrlInstance = new UrlString(host);\n        authorityUrlInstance.validateAsUri();\n\n        const authorityUrlParts = authorityUrlInstance.getUrlComponents();\n\n        let hostNameAndPort= `${region}.${authorityUrlParts.HostNameAndPort}`;\n\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\n            hostNameAndPort = `${region}.${Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;\n        }\n\n        // Include the query string portion of the url\n        const url = UrlString.constructAuthorityUriFromObject({\n            ...authorityUrlInstance.getUrlComponents(),\n            HostNameAndPort: hostNameAndPort\n        }).urlString;\n\n        // Add the query string if a query string was provided\n        if (queryString) return `${url}?${queryString}`;\n\n        return url;\n    }\n\n    /**\n     * Replace the endpoints in the metadata object with their regional equivalents.\n     *\n     * @param metadata OpenIdConfigResponse\n     * @param azureRegion string\n     */\n    static replaceWithRegionalInformation(metadata: OpenIdConfigResponse, azureRegion: string): OpenIdConfigResponse {\n        metadata.authorization_endpoint = Authority.buildRegionalAuthorityString(metadata.authorization_endpoint, azureRegion);\n        // TODO: Enquire on whether we should leave the query string or remove it before releasing the feature\n        metadata.token_endpoint = Authority.buildRegionalAuthorityString(metadata.token_endpoint, azureRegion, \"allowestsrnonmsi=true\");\n\n        if (metadata.end_session_endpoint) {\n            metadata.end_session_endpoint = Authority.buildRegionalAuthorityString(metadata.end_session_endpoint, azureRegion);\n        }\n\n        return metadata;\n    }\n}\n\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata\";\n\n/**\n * The OpenID Configuration Endpoint Response type. Used by the authority class to get relevant OAuth endpoints.\n */\nexport type CloudInstanceDiscoveryResponse = {\n    tenant_discovery_endpoint: string;\n    metadata: Array<CloudDiscoveryMetadata>;\n};\n\nexport function isCloudInstanceDiscoveryResponse(response: object): boolean {\n    return (\n        response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\n        response.hasOwnProperty(\"metadata\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Authority } from \"./Authority\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { ICacheManager } from \"../cache/interface/ICacheManager\";\nimport { AuthorityOptions } from \"./AuthorityOptions\";\n\nexport class AuthorityFactory {\n\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n     *\n     * Also performs endpoint discovery.\n     *\n     * @param authorityUri\n     * @param networkClient\n     * @param protocolMode\n     */\n    static async createDiscoveredInstance(authorityUri: string, networkClient: INetworkModule, cacheManager: ICacheManager, authorityOptions: AuthorityOptions, proxyUrl?: string): Promise<Authority> {\n        // Initialize authority and perform discovery endpoint check.\n        const acquireTokenAuthority: Authority = AuthorityFactory.createInstance(authorityUri, networkClient, cacheManager, authorityOptions, proxyUrl);\n\n        try {\n            await acquireTokenAuthority.resolveEndpointsAsync();\n            return acquireTokenAuthority;\n        } catch (e) {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(e);\n        }\n    }\n\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n     *\n     * Does not perform endpoint discovery.\n     *\n     * @param authorityUrl\n     * @param networkInterface\n     * @param protocolMode\n     */\n    static createInstance(authorityUrl: string, networkInterface: INetworkModule, cacheManager: ICacheManager, authorityOptions: AuthorityOptions, proxyUrl?: string): Authority {\n        // Throw error if authority url is empty\n        if (StringUtils.isEmpty(authorityUrl)) {\n            throw ClientConfigurationError.createUrlEmptyError();\n        }\n\n        return new Authority(authorityUrl, networkInterface, cacheManager, authorityOptions, proxyUrl);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { SERVER_TELEM_CONSTANTS, Separators, CacheOutcome, Constants, RegionDiscoverySources, RegionDiscoveryOutcomes } from \"../../utils/Constants\";\nimport { CacheManager } from \"../../cache/CacheManager\";\nimport { AuthError } from \"../../error/AuthError\";\nimport { ServerTelemetryRequest } from \"./ServerTelemetryRequest\";\nimport { ServerTelemetryEntity } from \"../../cache/entities/ServerTelemetryEntity\";\nimport { StringUtils } from \"../../utils/StringUtils\";\nimport { RegionDiscoveryMetadata } from \"../../authority/RegionDiscoveryMetadata\";\n\nexport class ServerTelemetryManager {\n    private cacheManager: CacheManager;\n    private apiId: number;\n    private correlationId: string;\n    private telemetryCacheKey: string;\n    private wrapperSKU: String;\n    private wrapperVer: String;\n    private regionUsed: string | undefined;\n    private regionSource: RegionDiscoverySources | undefined;\n    private regionOutcome: RegionDiscoveryOutcomes | undefined;\n    private cacheOutcome: CacheOutcome = CacheOutcome.NO_CACHE_HIT;\n\n    constructor(telemetryRequest: ServerTelemetryRequest, cacheManager: CacheManager) {\n        this.cacheManager = cacheManager;\n        this.apiId = telemetryRequest.apiId;\n        this.correlationId = telemetryRequest.correlationId;\n        this.wrapperSKU = telemetryRequest.wrapperSKU || Constants.EMPTY_STRING;\n        this.wrapperVer = telemetryRequest.wrapperVer || Constants.EMPTY_STRING;\n\n        this.telemetryCacheKey = SERVER_TELEM_CONSTANTS.CACHE_KEY + Separators.CACHE_KEY_SEPARATOR + telemetryRequest.clientId;\n    }\n\n    /**\n     * API to add MSER Telemetry to request\n     */\n    generateCurrentRequestHeaderValue(): string {\n        const request = `${this.apiId}${SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;\n        const platformFields = [this.wrapperSKU, this.wrapperVer].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const regionDiscoveryFields = this.getRegionDiscoveryFields();\n        const requestWithRegionDiscoveryFields = [request, regionDiscoveryFields].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n\n        return [SERVER_TELEM_CONSTANTS.SCHEMA_VERSION, requestWithRegionDiscoveryFields, platformFields].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n\n    /**\n     * API to add MSER Telemetry for the last failed request\n     */\n    generateLastRequestHeaderValue(): string {\n        const lastRequests = this.getLastRequests();\n\n        const maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const failedRequests = lastRequests.failedRequests.slice(0, 2*maxErrors).join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errors = lastRequests.errors.slice(0, maxErrors).join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errorCount = lastRequests.errors.length;\n\n        // Indicate whether this header contains all data or partial data\n        const overflow = maxErrors < errorCount ? SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE : SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\n        const platformFields = [errorCount, overflow].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n\n        return [SERVER_TELEM_CONSTANTS.SCHEMA_VERSION, lastRequests.cacheHits, failedRequests, errors, platformFields].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n\n    /**\n     * API to cache token failures for MSER data capture\n     * @param error\n     */\n    cacheFailedRequest(error: AuthError): void {\n        const lastRequests = this.getLastRequests();\n        if (lastRequests.errors.length >= SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS) {\n            // Remove a cached error to make room, first in first out\n            lastRequests.failedRequests.shift(); // apiId\n            lastRequests.failedRequests.shift(); // correlationId\n            lastRequests.errors.shift();\n        }\n        \n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\n\n        if (!StringUtils.isEmpty(error.subError)) {\n            lastRequests.errors.push(error.subError);\n        } else if (!StringUtils.isEmpty(error.errorCode)) {\n            lastRequests.errors.push(error.errorCode);\n        } else if (!!error && error.toString()) {\n            lastRequests.errors.push(error.toString());\n        } else {\n            lastRequests.errors.push(SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\n        }\n\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\n\n        return;\n    }\n\n    /**\n     * Update server telemetry cache entry by incrementing cache hit counter\n     */\n    incrementCacheHits(): number {\n        const lastRequests = this.getLastRequests();\n        lastRequests.cacheHits += 1;\n\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\n        return lastRequests.cacheHits;\n    }\n\n    /**\n     * Get the server telemetry entity from cache or initialize a new one\n     */\n    getLastRequests(): ServerTelemetryEntity {\n        const initialValue: ServerTelemetryEntity = new ServerTelemetryEntity();\n        const lastRequests = this.cacheManager.getServerTelemetry(this.telemetryCacheKey) as ServerTelemetryEntity;\n\n        return lastRequests || initialValue;\n    }\n\n    /**\n     * Remove server telemetry cache entry\n     */\n    clearTelemetryCache(): void {\n        const lastRequests = this.getLastRequests();\n        const numErrorsFlushed = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const errorCount = lastRequests.errors.length;\n        if (numErrorsFlushed === errorCount) {\n            // All errors were sent on last request, clear Telemetry cache\n            this.cacheManager.removeItem(this.telemetryCacheKey);\n        } else {\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\n            const serverTelemEntity = new ServerTelemetryEntity();\n            serverTelemEntity.failedRequests = lastRequests.failedRequests.slice(numErrorsFlushed*2); // failedRequests contains 2 items for each error\n            serverTelemEntity.errors = lastRequests.errors.slice(numErrorsFlushed);\n\n            this.cacheManager.setServerTelemetry(this.telemetryCacheKey, serverTelemEntity);\n        }\n    }\n\n    /**\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\n     * @param serverTelemetryEntity\n     */\n    static maxErrorsToSend(serverTelemetryEntity: ServerTelemetryEntity): number {\n        let i;\n        let maxErrors = 0;\n        let dataSize = 0;\n        const errorCount = serverTelemetryEntity.errors.length;\n        for (i = 0; i < errorCount; i++) {\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\n            const apiId = serverTelemetryEntity.failedRequests[2*i] || Constants.EMPTY_STRING;\n            const correlationId = serverTelemetryEntity.failedRequests[2*i + 1] || Constants.EMPTY_STRING;\n            const errorCode = serverTelemetryEntity.errors[i] || Constants.EMPTY_STRING;\n\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\n            dataSize += apiId.toString().length + correlationId.toString().length + errorCode.length + 3;\n\n            if (dataSize < SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\n                // Adding this entry to the header would still keep header size below the limit\n                maxErrors += 1;\n            } else {\n                break;\n            }\n        }\n\n        return maxErrors;\n    }\n\n    /**\n     * Get the region discovery fields\n     * \n     * @returns string\n     */\n    getRegionDiscoveryFields(): string {\n        const regionDiscoveryFields: string[] = [];\n\n        regionDiscoveryFields.push(this.regionUsed || Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(this.regionSource || Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(this.regionOutcome || Constants.EMPTY_STRING);\n\n        return regionDiscoveryFields.join(\",\");\n    }\n\n    /**\n     * Update the region discovery metadata\n     * \n     * @param regionDiscoveryMetadata\n     * @returns void\n     */\n    updateRegionDiscoveryMetadata(regionDiscoveryMetadata: RegionDiscoveryMetadata): void {\n        this.regionUsed = regionDiscoveryMetadata.region_used;\n        this.regionSource = regionDiscoveryMetadata.region_source;\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\n    }\n\n    /**\n     * Set cache outcome \n     */\n    setCacheOutcome(cacheOutcome: CacheOutcome): void {\n        this.cacheOutcome = cacheOutcome;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, INetworkModule, Logger, AuthenticationResult, AccountInfo, AccountEntity, BaseAuthRequest, AuthenticationScheme, UrlString, ServerTelemetryManager, ServerTelemetryRequest, ClientConfigurationError, StringUtils, Authority, AuthorityOptions, AuthorityFactory, IPerformanceClient } from \"@azure/msal-common\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { version } from \"../packageMetadata\";\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\n\nexport abstract class BaseInteractionClient {\n\n    protected config: BrowserConfiguration;\n    protected browserStorage: BrowserCacheManager;\n    protected browserCrypto: ICrypto;\n    protected networkClient: INetworkModule;\n    protected logger: Logger;\n    protected eventHandler: EventHandler;\n    protected navigationClient: INavigationClient;\n    protected nativeMessageHandler: NativeMessageHandler | undefined;\n    protected correlationId: string;\n    protected performanceClient: IPerformanceClient;\n\n    constructor(config: BrowserConfiguration, storageImpl: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, navigationClient: INavigationClient, performanceClient: IPerformanceClient, nativeMessageHandler?: NativeMessageHandler, correlationId?: string) {\n        this.config = config;\n        this.browserStorage = storageImpl;\n        this.browserCrypto = browserCrypto;\n        this.networkClient = this.config.system.networkClient;\n        this.eventHandler = eventHandler;\n        this.navigationClient = navigationClient;\n        this.nativeMessageHandler = nativeMessageHandler;\n        this.correlationId = correlationId || this.browserCrypto.createNewGuid();\n        this.logger = logger.clone(BrowserConstants.MSAL_SKU, version, this.correlationId);\n        this.performanceClient = performanceClient;\n    }\n\n    abstract acquireToken(request: RedirectRequest|PopupRequest|SsoSilentRequest): Promise<AuthenticationResult|void>;\n\n    abstract logout(request: EndSessionRequest): Promise<void>;\n\n    protected async clearCacheOnLogout(account?: AccountInfo| null): Promise<void> {\n        if (account) {\n            if (AccountEntity.accountInfoIsEqual(account, this.browserStorage.getActiveAccount(), false)) {\n                this.logger.verbose(\"Setting active account to null\");\n                this.browserStorage.setActiveAccount(null);\n            }\n            // Clear given account.\n            try {\n                await this.browserStorage.removeAccount(AccountEntity.generateAccountCacheKey(account));\n                this.logger.verbose(\"Cleared cache items belonging to the account provided in the logout request.\");\n            } catch (error) {\n                this.logger.error(\"Account provided in logout request was not found. Local cache unchanged.\");\n            }\n        } else {\n            try {\n                this.logger.verbose(\"No account provided in logout request, clearing all cache items.\", this.correlationId);\n                // Clear all accounts and tokens\n                await this.browserStorage.clear();\n                // Clear any stray keys from IndexedDB\n                await this.browserCrypto.clearKeystore();\n            } catch(e) {\n                this.logger.error(\"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\");\n            }\n        }\n    }\n\n    /**\n     * Initializer function for all request APIs\n     * @param request\n     */\n    protected async initializeBaseRequest(request: Partial<BaseAuthRequest>): Promise<BaseAuthRequest> {\n        this.logger.verbose(\"Initializing BaseAuthRequest\");\n        const authority = request.authority || this.config.auth.authority;\n\n        const scopes = [...((request && request.scopes) || [])];\n\n        const validatedRequest: BaseAuthRequest = {\n            ...request,\n            correlationId: this.correlationId,\n            authority,\n            scopes\n        };\n\n        // Set authenticationScheme to BEARER if not explicitly set in the request\n        if (!validatedRequest.authenticationScheme) {\n            validatedRequest.authenticationScheme = AuthenticationScheme.BEARER;\n            this.logger.verbose(\"Authentication Scheme wasn't explicitly set in request, defaulting to \\\"Bearer\\\" request\");\n        } else {\n            if (validatedRequest.authenticationScheme === AuthenticationScheme.SSH) {\n                if (!request.sshJwk) {\n                    throw ClientConfigurationError.createMissingSshJwkError();\n                }\n                if(!request.sshKid) {\n                    throw ClientConfigurationError.createMissingSshKidError();\n                }\n            }\n            this.logger.verbose(`Authentication Scheme set to \"${validatedRequest.authenticationScheme}\" as configured in Auth request`);\n        }\n\n        // Set requested claims hash if claims were requested\n        if (request.claims && !StringUtils.isEmpty(request.claims)) {\n            validatedRequest.requestedClaimsHash = await this.browserCrypto.hashString(request.claims);\n        }\n\n        return validatedRequest;\n    }\n\n    /**\n     *\n     * Use to get the redirect uri configured in MSAL or null.\n     * @param requestRedirectUri\n     * @returns Redirect URL\n     *\n     */\n    getRedirectUri(requestRedirectUri?: string): string {\n        this.logger.verbose(\"getRedirectUri called\");\n        const redirectUri = requestRedirectUri || this.config.auth.redirectUri || BrowserUtils.getCurrentUri();\n        return UrlString.getAbsoluteUrl(redirectUri, BrowserUtils.getCurrentUri());\n    }\n\n    /**\n     *\n     * @param apiId\n     * @param correlationId\n     * @param forceRefresh\n     */\n    protected initializeServerTelemetryManager(apiId: number, forceRefresh?: boolean): ServerTelemetryManager {\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\n        const telemetryPayload: ServerTelemetryRequest = {\n            clientId: this.config.auth.clientId,\n            correlationId: this.correlationId,\n            apiId: apiId,\n            forceRefresh: forceRefresh || false,\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1]\n        };\n\n        return new ServerTelemetryManager(telemetryPayload, this.browserStorage);\n    }\n\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    protected async getDiscoveredAuthority(requestAuthority?: string): Promise<Authority> {\n        this.logger.verbose(\"getDiscoveredAuthority called\");\n        const authorityOptions: AuthorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n            skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\n        };\n\n        if (requestAuthority) {\n            this.logger.verbose(\"Creating discovered authority with request authority\");\n            return await AuthorityFactory.createDiscoveredInstance(requestAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions);\n        }\n\n        this.logger.verbose(\"Creating discovered authority with configured authority\");\n        return await AuthorityFactory.createDiscoveredInstance(this.config.auth.authority, this.config.system.networkClient, this.browserStorage, authorityOptions);\n    }\n}\n\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ServerTelemetryManager, CommonAuthorizationCodeRequest, Constants, AuthorizationCodeClient, ClientConfiguration, AuthorityOptions, Authority, AuthorityFactory, ServerAuthorizationCodeResponse, UrlString, CommonEndSessionRequest, ProtocolUtils, ResponseMode, StringUtils, IdTokenClaims, AccountInfo, AzureCloudOptions, PerformanceEvents, AuthError } from \"@azure/msal-common\";\nimport { BaseInteractionClient } from \"./BaseInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConstants, InteractionType } from \"../utils/BrowserConstants\";\nimport { version } from \"../packageMetadata\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { BrowserProtocolUtils, BrowserStateObject } from \"../utils/BrowserProtocolUtils\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\n\n/**\n * Defines the class structure and helper functions used by the \"standard\", non-brokered auth flows (popup, redirect, silent (RT), silent (iframe))\n */\nexport abstract class StandardInteractionClient extends BaseInteractionClient {\n    /**\n     * Generates an auth code request tied to the url request.\n     * @param request\n     */\n    protected async initializeAuthorizationCodeRequest(request: AuthorizationUrlRequest): Promise<CommonAuthorizationCodeRequest> {\n        this.logger.verbose(\"initializeAuthorizationRequest called\", request.correlationId);\n        const generatedPkceParams = await this.browserCrypto.generatePkceCodes();\n\n        const authCodeRequest: CommonAuthorizationCodeRequest = {\n            ...request,\n            redirectUri: request.redirectUri,\n            code: Constants.EMPTY_STRING,\n            codeVerifier: generatedPkceParams.verifier\n        };\n\n        request.codeChallenge = generatedPkceParams.challenge;\n        request.codeChallengeMethod = Constants.S256_CODE_CHALLENGE_METHOD;\n\n        return authCodeRequest;\n    }\n\n    /**\n     * Initializer for the logout request.\n     * @param logoutRequest\n     */\n    protected initializeLogoutRequest(logoutRequest?: EndSessionRequest): CommonEndSessionRequest {\n        this.logger.verbose(\"initializeLogoutRequest called\", logoutRequest?.correlationId);\n\n        const validLogoutRequest: CommonEndSessionRequest = {\n            correlationId: this.correlationId || this.browserCrypto.createNewGuid(),\n            ...logoutRequest\n        };\n\n        /**\n         * Set logout_hint to be login_hint from ID Token Claims if present\n         * and logoutHint attribute wasn't manually set in logout request\n         */\n        if (logoutRequest) {\n            // If logoutHint isn't set and an account was passed in, try to extract logoutHint from ID Token Claims\n            if (!logoutRequest.logoutHint) {\n                if(logoutRequest.account) {\n                    const logoutHint = this.getLogoutHintFromIdTokenClaims(logoutRequest.account);\n                    if (logoutHint) {\n                        this.logger.verbose(\"Setting logoutHint to login_hint ID Token Claim value for the account provided\");\n                        validLogoutRequest.logoutHint = logoutHint;\n                    }\n                } else {\n                    this.logger.verbose(\"logoutHint was not set and account was not passed into logout request, logoutHint will not be set\");\n                }\n            } else {\n                this.logger.verbose(\"logoutHint has already been set in logoutRequest\");\n            }\n        } else {\n            this.logger.verbose(\"logoutHint will not be set since no logout request was configured\");\n        }\n\n        /*\n         * Only set redirect uri if logout request isn't provided or the set uri isn't null.\n         * Otherwise, use passed uri, config, or current page.\n         */\n        if (!logoutRequest || logoutRequest.postLogoutRedirectUri !== null) {\n            if (logoutRequest && logoutRequest.postLogoutRedirectUri) {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to uri set on logout request\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri = UrlString.getAbsoluteUrl(logoutRequest.postLogoutRedirectUri, BrowserUtils.getCurrentUri());\n            } else if (this.config.auth.postLogoutRedirectUri === null) {\n                this.logger.verbose(\"postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect\", validLogoutRequest.correlationId);\n            } else if (this.config.auth.postLogoutRedirectUri) {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to configured uri\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri = UrlString.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri, BrowserUtils.getCurrentUri());\n            } else {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to current page\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri = UrlString.getAbsoluteUrl(BrowserUtils.getCurrentUri(), BrowserUtils.getCurrentUri());\n            }\n        } else {\n            this.logger.verbose(\"postLogoutRedirectUri passed as null, not setting post logout redirect uri\", validLogoutRequest.correlationId);\n        }\n\n        return validLogoutRequest;\n    }\n\n    /**\n     * Parses login_hint ID Token Claim out of AccountInfo object to be used as\n     * logout_hint in end session request.\n     * @param account\n     */\n    protected getLogoutHintFromIdTokenClaims(account: AccountInfo): string | null {\n        const idTokenClaims: IdTokenClaims | undefined = account.idTokenClaims;\n        if (idTokenClaims) {\n            if (idTokenClaims.login_hint) {\n                return idTokenClaims.login_hint;\n            } else {\n                this.logger.verbose(\"The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request\");\n            }\n        } else {\n            this.logger.verbose(\"The provided account does not contain ID Token Claims, logoutHint will not be added to logout request\");\n        }\n\n        return null;\n    }\n\n    /**\n     * Creates an Authorization Code Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createAuthCodeClient(serverTelemetryManager: ServerTelemetryManager, authorityUrl?: string, requestAzureCloudOptions?: AzureCloudOptions): Promise<AuthorizationCodeClient> {\n        // Create auth module.\n        const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl, requestAzureCloudOptions);\n        return new AuthorizationCodeClient(clientConfig);\n    }\n\n    /**\n     * Creates a Client Configuration object with the given request authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    protected async getClientConfiguration(serverTelemetryManager: ServerTelemetryManager, requestAuthority?: string, requestAzureCloudOptions?: AzureCloudOptions): Promise<ClientConfiguration> {\n        this.logger.verbose(\"getClientConfiguration called\", this.correlationId);\n        const discoveredAuthority = await this.getDiscoveredAuthority(requestAuthority, requestAzureCloudOptions);\n\n        return {\n            authOptions: {\n                clientId: this.config.auth.clientId,\n                authority: discoveredAuthority,\n                clientCapabilities: this.config.auth.clientCapabilities\n            },\n            systemOptions: {\n                tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds,\n                preventCorsPreflight: true\n            },\n            loggerOptions: {\n                loggerCallback: this.config.system.loggerOptions.loggerCallback,\n                piiLoggingEnabled: this.config.system.loggerOptions.piiLoggingEnabled,\n                logLevel: this.config.system.loggerOptions.logLevel,\n                correlationId: this.correlationId\n            },\n            cryptoInterface: this.browserCrypto,\n            networkInterface: this.networkClient,\n            storageInterface: this.browserStorage,\n            serverTelemetryManager: serverTelemetryManager,\n            libraryInfo: {\n                sku: BrowserConstants.MSAL_SKU,\n                version: version,\n                cpu: Constants.EMPTY_STRING,\n                os: Constants.EMPTY_STRING\n            },\n            telemetry: this.config.telemetry\n        };\n    }\n\n    /**\n     * @param hash\n     * @param interactionType\n     */\n    protected validateAndExtractStateFromHash(serverParams: ServerAuthorizationCodeResponse, interactionType: InteractionType, requestCorrelationId?: string): string {\n        this.logger.verbose(\"validateAndExtractStateFromHash called\", requestCorrelationId);\n        if (!serverParams.state) {\n            throw BrowserAuthError.createHashDoesNotContainStateError();\n        }\n\n        const platformStateObj = BrowserProtocolUtils.extractBrowserRequestState(this.browserCrypto, serverParams.state);\n        if (!platformStateObj) {\n            throw BrowserAuthError.createUnableToParseStateError();\n        }\n\n        if (platformStateObj.interactionType !== interactionType) {\n            throw BrowserAuthError.createStateInteractionTypeMismatchError();\n        }\n\n        this.logger.verbose(\"Returning state from hash\", requestCorrelationId);\n        return serverParams.state;\n    }\n\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    protected async getDiscoveredAuthority(requestAuthority?: string, requestAzureCloudOptions?: AzureCloudOptions): Promise<Authority> {\n        this.logger.verbose(\"getDiscoveredAuthority called\", this.correlationId);\n        const getAuthorityMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority, this.correlationId);\n        const authorityOptions: AuthorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n            skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache\n        };\n\n        // build authority string based on auth params, precedence - azureCloudInstance + tenant >> authority\n        const userAuthority = requestAuthority ? requestAuthority : this.config.auth.authority;\n\n        // fall back to the authority from config\n        const builtAuthority = Authority.generateAuthority( userAuthority, requestAzureCloudOptions || this.config.auth.azureCloudOptions);\n        this.logger.verbose(\"Creating discovered authority with configured authority\", this.correlationId);\n        return await AuthorityFactory.createDiscoveredInstance(builtAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions)\n            .then((result: Authority) => {\n                getAuthorityMeasurement.endMeasurement({\n                    success: true\n                });\n\n                return result;\n            })\n            .catch((error:AuthError) => {\n                getAuthorityMeasurement.endMeasurement({\n                    errorCode: error.errorCode,\n                    subErrorCode: error.subError,\n                    success: false\n                });\n\n                throw error;\n            });\n    }\n\n    /**\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\n     * @param request\n     * @param interactionType\n     */\n    protected async initializeAuthorizationRequest(request: RedirectRequest|PopupRequest|SsoSilentRequest, interactionType: InteractionType): Promise<AuthorizationUrlRequest> {\n        this.logger.verbose(\"initializeAuthorizationRequest called\", this.correlationId);\n        const redirectUri = this.getRedirectUri(request.redirectUri);\n        const browserState: BrowserStateObject = {\n            interactionType: interactionType\n        };\n        const state = ProtocolUtils.setRequestState(\n            this.browserCrypto,\n            (request && request.state)|| Constants.EMPTY_STRING,\n            browserState\n        );\n\n        const validatedRequest: AuthorizationUrlRequest = {\n            ...await this.initializeBaseRequest(request),\n            redirectUri: redirectUri,\n            state: state,\n            nonce: request.nonce || this.browserCrypto.createNewGuid(),\n            responseMode: ResponseMode.FRAGMENT\n        };\n\n        const account = request.account || this.browserStorage.getActiveAccount();\n        if (account) {\n            this.logger.verbose(\"Setting validated request account\", this.correlationId);\n            this.logger.verbosePii(`Setting validated request account: ${account.homeAccountId}`, this.correlationId);\n            validatedRequest.account = account;\n        }\n\n        // Check for ADAL/MSAL v1 SSO\n        if (StringUtils.isEmpty(validatedRequest.loginHint) && !account) {\n            const legacyLoginHint = this.browserStorage.getLegacyLoginHint();\n            if (legacyLoginHint) {\n                validatedRequest.loginHint = legacyLoginHint;\n            }\n        }\n\n        return validatedRequest;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, Logger, ICrypto, PromptValue, AuthToken, Constants, AccountEntity, AuthorityType, ScopeSet, TimeUtils, AuthenticationScheme, UrlString, OIDC_DEFAULT_SCOPES, PopTokenGenerator, SignedHttpRequestParameters, IPerformanceClient, PerformanceEvents, ClientAuthError, AuthError } from \"@azure/msal-common\";\nimport { BaseInteractionClient } from \"./BaseInteractionClient\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { NativeExtensionMethod, ApiId, TemporaryCacheKeys, NativeConstants } from \"../utils/BrowserConstants\";\nimport { NativeExtensionRequestBody, NativeTokenRequest } from \"../broker/nativeBroker/NativeRequest\";\nimport { MATS, NativeResponse } from \"../broker/nativeBroker/NativeResponse\";\nimport { NativeAuthError } from \"../error/NativeAuthError\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\n\nexport class NativeInteractionClient extends BaseInteractionClient {\n    protected apiId: ApiId;\n    protected accountId: string;\n    protected nativeMessageHandler: NativeMessageHandler;\n\n    constructor(config: BrowserConfiguration, browserStorage: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, navigationClient: INavigationClient, apiId: ApiId, performanceClient: IPerformanceClient, provider: NativeMessageHandler, accountId: string, correlationId?: string) {\n        super(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\n        this.apiId = apiId;\n        this.accountId = accountId;\n        this.nativeMessageHandler = provider;\n    }\n\n    /**\n     * Acquire token from native platform via browser extension\n     * @param request\n     */\n    async acquireToken(request: PopupRequest|SilentRequest|SsoSilentRequest): Promise<AuthenticationResult> {\n        this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\n\n        // start the perf measurement\n        const nativeATMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\n        const nativeRequest = await this.initializeNativeRequest(request);\n\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: nativeRequest\n        };\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response: object = await this.nativeMessageHandler.sendMessage(messageBody);\n        const validatedResponse: NativeResponse = this.validateNativeResponse(response);\n\n        return this.handleNativeResponse(validatedResponse, nativeRequest, reqTimestamp)\n            .then((result: AuthenticationResult) => {\n                nativeATMeasurement.endMeasurement({\n                    success: true,\n                    isNativeBroker: true\n                });\n                return result;\n            })\n            .catch((error: AuthError) => {\n                nativeATMeasurement.endMeasurement({\n                    success: false,\n                    errorCode: error.errorCode,\n                    subErrorCode: error.subError,\n                    isNativeBroker: true\n                });\n                throw error;\n            });\n    }\n\n    /**\n     * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\n     * @param request\n     */\n    async acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        this.logger.trace(\"NativeInteractionClient - acquireTokenRedirect called.\");\n        const nativeRequest = await this.initializeNativeRequest(request);\n\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: nativeRequest\n        };\n\n        try {\n            const response: object = await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n        } catch (e) {\n            // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\n            if (e instanceof NativeAuthError && e.isFatal()) {\n                throw e;\n            }\n        }\n        this.browserStorage.setTemporaryCache(TemporaryCacheKeys.NATIVE_REQUEST, JSON.stringify(nativeRequest), true);\n\n        const navigationOptions: NavigationOptions = {\n            apiId: ApiId.acquireTokenRedirect,\n            timeout: this.config.system.redirectNavigationTimeout,\n            noHistory: false\n        };\n        const redirectUri = this.config.auth.navigateToLoginRequestUrl ? window.location.href : this.getRedirectUri(request.redirectUri);\n        await this.navigationClient.navigateExternal(redirectUri, navigationOptions); // Need to treat this as external to ensure handleRedirectPromise is run again\n    }\n\n    /**\n     * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\n     */\n    async handleRedirectPromise(): Promise<AuthenticationResult | null> {\n        this.logger.trace(\"NativeInteractionClient - handleRedirectPromise called.\");\n        if (!this.browserStorage.isInteractionInProgress(true)) {\n            this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\n            return null;\n        }\n\n        const cachedRequest = this.browserStorage.getCachedNativeRequest();\n        if (!cachedRequest) {\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\");\n            return null;\n        }\n\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST));\n\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: cachedRequest\n        };\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n\n        try {\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise sending message to native broker.\");\n            const response: object = await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n            const result = this.handleNativeResponse(response as NativeResponse, cachedRequest, reqTimestamp);\n            this.browserStorage.setInteractionInProgress(false);\n            return result;\n        } catch (e) {\n            this.browserStorage.setInteractionInProgress(false);\n            throw e;\n        }\n    }\n\n    /**\n     * Logout from native platform via browser extension\n     * @param request\n     */\n    logout(): Promise<void> {\n        this.logger.trace(\"NativeInteractionClient - logout called.\");\n        return Promise.reject(\"Logout not implemented yet\");\n    }\n\n    /**\n     * Transform response from native platform into AuthenticationResult object which will be returned to the end user\n     * @param response\n     * @param request\n     * @param reqTimestamp\n     */\n    protected async handleNativeResponse(response: NativeResponse, request: NativeTokenRequest, reqTimestamp: number): Promise<AuthenticationResult> {\n        this.logger.trace(\"NativeInteractionClient - handleNativeResponse called.\");\n\n        if (response.account.id !== request.accountId) {\n            // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\n            throw NativeAuthError.createUserSwitchError();\n        }\n\n        // create an idToken object (not entity)\n        const idTokenObj = new AuthToken(response.id_token || Constants.EMPTY_STRING, this.browserCrypto);\n\n        // Get the preferred_cache domain for the given authority\n        const authority = await this.getDiscoveredAuthority(request.authority);\n        const authorityPreferredCache = authority.getPreferredCache();\n\n        // Save account in browser storage\n        const homeAccountIdentifier = AccountEntity.generateHomeAccountId(response.client_info || Constants.EMPTY_STRING, AuthorityType.Default, this.logger, this.browserCrypto, idTokenObj);\n        const accountEntity = AccountEntity.createAccount(response.client_info, homeAccountIdentifier, idTokenObj, undefined, undefined, undefined, authorityPreferredCache, response.account.id);\n        this.browserStorage.setAccount(accountEntity);\n\n        // If scopes not returned in server response, use request scopes\n        const responseScopes = response.scopes ? ScopeSet.fromString(response.scopes) : ScopeSet.fromString(request.scopes);\n\n        const accountProperties = response.account.properties || {};\n        const uid = accountProperties[\"UID\"] || idTokenObj.claims.oid || idTokenObj.claims.sub || Constants.EMPTY_STRING;\n        const tid = accountProperties[\"TenantId\"] || idTokenObj.claims.tid || Constants.EMPTY_STRING;\n\n        // This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT is still received, SHR is calculated locally\n        let responseAccessToken;\n        let responseTokenType: AuthenticationScheme = AuthenticationScheme.BEARER;\n        switch (request.tokenType) {\n            case AuthenticationScheme.POP: {\n                // Set the token type to POP in the response\n                responseTokenType = AuthenticationScheme.POP;\n\n                // Check if native layer returned an SHR token\n                if (response.shr) {\n                    this.logger.trace(\"handleNativeServerResponse: SHR is enabled in native layer\");\n                    responseAccessToken = response.shr;\n                    break;\n                }\n\n                // Generate SHR in msal js if WAM does not compute it when POP is enabled\n                const popTokenGenerator: PopTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n                const shrParameters: SignedHttpRequestParameters = {\n                    resourceRequestMethod: request.resourceRequestMethod,\n                    resourceRequestUri: request.resourceRequestUri,\n                    shrClaims: request.shrClaims,\n                    shrNonce: request.shrNonce\n                };\n\n                /**\n                 * KeyID must be present in the native request from when the PoP key was generated in order for\n                 * PopTokenGenerator to query the full key for signing\n                 */\n                if (!request.keyId) {\n                    throw ClientAuthError.createKeyIdMissingError();\n                }\n\n                responseAccessToken = await popTokenGenerator.signPopToken(response.access_token, request.keyId, shrParameters);\n                break;\n\n            }\n            // assign the access token to the response for all non-POP cases (Should be Bearer only today)\n            default: {\n                responseAccessToken = response.access_token;\n            }\n        }\n\n        const mats = this.getMATSFromResponse(response);\n\n        const result: AuthenticationResult = {\n            authority: authority.canonicalAuthority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes.asArray(),\n            account: accountEntity.getAccountInfo(),\n            idToken: response.id_token,\n            idTokenClaims: idTokenObj.claims,\n            accessToken: responseAccessToken,\n            fromCache: mats ? this.isResponseFromCache(mats) : false,\n            expiresOn: new Date(Number(reqTimestamp + response.expires_in) * 1000),\n            tokenType: responseTokenType,\n            correlationId: this.correlationId,\n            state: response.state,\n            fromNativeBroker: true\n        };\n\n        // Remove any existing cached tokens for this account\n        this.browserStorage.removeAccountContext(accountEntity).catch((e) => {\n            this.logger.error(`Error occurred while removing account context from browser storage. ${e}`);\n        });\n\n        return result;\n    }\n\n    /**\n     * Validates native platform response before processing\n     * @param response\n     */\n    private validateNativeResponse(response: object): NativeResponse {\n        if (\n            response.hasOwnProperty(\"access_token\") &&\n            response.hasOwnProperty(\"id_token\") &&\n            response.hasOwnProperty(\"client_info\") &&\n            response.hasOwnProperty(\"account\") &&\n            response.hasOwnProperty(\"scopes\") &&\n            response.hasOwnProperty(\"expires_in\")\n        ) {\n            return response as NativeResponse;\n        } else {\n            throw NativeAuthError.createUnexpectedError(\"Response missing expected properties.\");\n        }\n    }\n\n    /**\n     * Gets MATS telemetry from native response\n     * @param response \n     * @returns \n     */\n    private getMATSFromResponse(response: NativeResponse): MATS|null {\n        if (response.properties.MATS) {\n            try {\n                return JSON.parse(response.properties.MATS);\n            } catch (e) {\n                this.logger.error(\"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\");\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns whether or not response came from native cache\n     * @param response \n     * @returns \n     */\n    private isResponseFromCache(mats: MATS): boolean {\n        if (typeof mats.is_cached === \"undefined\") {\n            this.logger.verbose(\"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\");\n            return false;\n        }\n\n        return !!mats.is_cached;\n    }\n\n    /**\n     * Translates developer provided request object into NativeRequest object\n     * @param request\n     */\n    protected async initializeNativeRequest(request: PopupRequest|SsoSilentRequest): Promise<NativeTokenRequest> {\n        this.logger.trace(\"NativeInteractionClient - initializeNativeRequest called\");\n\n        const authority = request.authority || this.config.auth.authority;\n        const canonicalAuthority = new UrlString(authority);\n        canonicalAuthority.validateAsUri();\n\n        const scopes = request && request.scopes || [];\n        const scopeSet = new ScopeSet(scopes);\n        scopeSet.appendScopes(OIDC_DEFAULT_SCOPES);\n\n        const getPrompt = () => {\n            // If request is silent, prompt is always none\n            switch (this.apiId) {\n                case ApiId.ssoSilent:\n                case ApiId.acquireTokenSilent_silentFlow:\n                    this.logger.trace(\"initializeNativeRequest: silent request sets prompt to none\");\n                    return PromptValue.NONE;\n                default:\n                    break;\n            }\n\n            // Prompt not provided, request may proceed and native broker decides if it needs to prompt\n            if (!request.prompt) {\n                this.logger.trace(\"initializeNativeRequest: prompt was not provided\");\n                return undefined;\n            }\n            \n            // If request is interactive, check if prompt provided is allowed to go directly to native broker\n            switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                    this.logger.trace(\"initializeNativeRequest: prompt is compatible with native flow\");\n                    return request.prompt;\n                default:\n                    this.logger.trace(`initializeNativeRequest: prompt = ${request.prompt} is not compatible with native flow`);\n                    throw BrowserAuthError.createNativePromptParameterNotSupportedError();\n            }\n        };\n\n        const validatedRequest: NativeTokenRequest = {\n            ...request,\n            accountId: this.accountId,\n            clientId: this.config.auth.clientId,\n            authority: canonicalAuthority.urlString,\n            scopes: scopeSet.printScopes(),\n            redirectUri: this.getRedirectUri(request.redirectUri),\n            prompt: getPrompt(),\n            correlationId: this.correlationId,\n            tokenType: request.authenticationScheme,\n            windowTitleSubstring: document.title,\n            extraParameters: {\n                ...request.extraQueryParameters,\n                ...request.tokenQueryParameters,\n                telemetry: NativeConstants.MATS_TELEMETRY\n            },\n            extendedExpiryToken: false // Make this configurable?\n            \n        };\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n\n            // add POP request type\n            const shrParameters: SignedHttpRequestParameters = {\n                resourceRequestUri: request.resourceRequestUri,\n                resourceRequestMethod: request.resourceRequestMethod,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce\n            };\n\n            const popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n            const reqCnfData = await popTokenGenerator.generateCnf(shrParameters);\n\n            // to reduce the URL length, it is recommended to send the hash of the req_cnf instead of the whole string\n            validatedRequest.reqCnf = reqCnfData.reqCnfHash;\n            validatedRequest.keyId = reqCnfData.kid;\n        }\n\n        return validatedRequest;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { NativeConstants, NativeExtensionMethod } from \"../../utils/BrowserConstants\";\nimport { Logger, AuthError, AuthenticationScheme } from \"@azure/msal-common\";\nimport { NativeExtensionRequest, NativeExtensionRequestBody } from \"./NativeRequest\";\nimport { NativeAuthError } from \"../../error/NativeAuthError\";\nimport { BrowserAuthError } from \"../../error/BrowserAuthError\";\nimport { BrowserConfiguration } from \"../../config/Configuration\";\n\ntype ResponseResolvers<T> = {\n    resolve: (value:T|PromiseLike<T>) => void;\n    reject: (value:AuthError|Error|PromiseLike<Error>|PromiseLike<AuthError>)  => void;\n};\n\nexport class NativeMessageHandler {\n    private extensionId: string | undefined;\n    private logger: Logger;\n    private handshakeTimeoutMs: number;\n    private responseId: number;\n    private timeoutId: number | undefined;\n    private resolvers: Map<number, ResponseResolvers<object>>;\n    private handshakeResolvers: Map<number, ResponseResolvers<void>>;\n    private messageChannel: MessageChannel;\n    private windowListener: (event: MessageEvent) => void;\n\n    constructor(logger: Logger, handshakeTimeoutMs: number, extensionId?: string) {\n        this.logger = logger;\n        this.handshakeTimeoutMs = handshakeTimeoutMs;\n        this.extensionId = extensionId;\n        this.resolvers = new Map(); // Used for non-handshake messages\n        this.handshakeResolvers = new Map(); // Used for handshake messages\n        this.responseId = 0;\n        this.messageChannel = new MessageChannel();\n        this.windowListener = this.onWindowMessage.bind(this); // Window event callback doesn't have access to 'this' unless it's bound\n    }\n\n    /**\n     * Sends a given message to the extension and resolves with the extension response\n     * @param body \n     */\n    async sendMessage(body: NativeExtensionRequestBody): Promise<object> {\n        this.logger.trace(\"NativeMessageHandler - sendMessage called.\");\n        const req: NativeExtensionRequest = {\n            channel: NativeConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: this.responseId++,\n            body: body\n        };\n\n        this.logger.trace(\"NativeMessageHandler - Sending request to browser extension\");\n        this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(req)}`);\n        this.messageChannel.port1.postMessage(req);\n\n        return new Promise((resolve, reject) => {\n            this.resolvers.set(req.responseId, {resolve, reject});\n        });\n    }\n\n    /**\n     * Returns an instance of the MessageHandler that has successfully established a connection with an extension\n     * @param logger \n     * @param handshakeTimeoutMs\n     */\n    static async createProvider(logger: Logger, handshakeTimeoutMs: number): Promise<NativeMessageHandler> {\n        logger.trace(\"NativeMessageHandler - createProvider called.\");\n        try {\n            const preferredProvider = new NativeMessageHandler(logger, handshakeTimeoutMs, NativeConstants.PREFERRED_EXTENSION_ID);\n            await preferredProvider.sendHandshakeRequest();\n            return preferredProvider;\n        } catch (e) {\n            // If preferred extension fails for whatever reason, fallback to using any installed extension\n            const backupProvider = new NativeMessageHandler(logger, handshakeTimeoutMs);\n            await backupProvider.sendHandshakeRequest();\n            return backupProvider;\n        }\n    }\n\n    /**\n     * Send handshake request helper.\n     */\n    private async sendHandshakeRequest(): Promise<void> {\n        this.logger.trace(\"NativeMessageHandler - sendHandshakeRequest called.\");\n        // Register this event listener before sending handshake\n        window.addEventListener(\"message\", this.windowListener, false); // false is important, because content script message processing should work first\n\n        const req: NativeExtensionRequest = {\n            channel: NativeConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: this.responseId++,\n\n            body: {\n                method: NativeExtensionMethod.HandshakeRequest\n            }\n        };\n\n        this.messageChannel.port1.onmessage = (event) => {\n            this.onChannelMessage(event);\n        };\n\n        window.postMessage(req, window.origin, [this.messageChannel.port2]);\n\n        return new Promise((resolve, reject) => {\n            this.handshakeResolvers.set(req.responseId, {resolve, reject});\n            this.timeoutId = window.setTimeout(() => {\n                /*\n                 * Throw an error if neither HandshakeResponse nor original Handshake request are received in a reasonable timeframe.\n                 * This typically suggests an event handler stopped propagation of the Handshake request but did not respond to it on the MessageChannel port\n                 */\n                window.removeEventListener(\"message\", this.windowListener, false);\n                this.messageChannel.port1.close();\n                this.messageChannel.port2.close();\n                reject(BrowserAuthError.createNativeHandshakeTimeoutError());\n                this.handshakeResolvers.delete(req.responseId);\n            }, this.handshakeTimeoutMs); // Use a reasonable timeout in milliseconds here\n        });\n    }\n\n    /**\n     * Invoked when a message is posted to the window. If a handshake request is received it means the extension is not installed.\n     * @param event \n     */\n    private onWindowMessage(event: MessageEvent): void {\n        this.logger.trace(\"NativeMessageHandler - onWindowMessage called\");\n        // We only accept messages from ourselves\n        if (event.source !== window) {\n            return;\n        }\n\n        const request = event.data;\n\n        if (!request.channel || request.channel !== NativeConstants.CHANNEL_ID) {\n            return;\n        }\n\n        if (request.extensionId && request.extensionId !== this.extensionId) {\n            return;\n        }\n\n        if (request.body.method === NativeExtensionMethod.HandshakeRequest) {\n            // If we receive this message back it means no extension intercepted the request, meaning no extension supporting handshake protocol is installed\n            this.logger.verbose(request.extensionId ? `Extension with id: ${request.extensionId} not installed` : \"No extension installed\");\n            clearTimeout(this.timeoutId);\n            this.messageChannel.port1.close();\n            this.messageChannel.port2.close();\n            window.removeEventListener(\"message\", this.windowListener, false);\n            const handshakeResolver = this.handshakeResolvers.get(request.responseId);\n            if (handshakeResolver) {\n                handshakeResolver.reject(BrowserAuthError.createNativeExtensionNotInstalledError());\n            }\n        }\n    }\n\n    /**\n     * Invoked when a message is received from the extension on the MessageChannel port\n     * @param event \n     */\n    private onChannelMessage(event: MessageEvent): void {\n        this.logger.trace(\"NativeMessageHandler - onChannelMessage called.\");\n        const request = event.data;\n        \n        const resolver = this.resolvers.get(request.responseId);\n        const handshakeResolver = this.handshakeResolvers.get(request.responseId);\n\n        try {\n            const method = request.body.method;\n            \n            if (method === NativeExtensionMethod.Response) {\n                if (!resolver) {\n                    return;\n                }\n                const response = request.body.response;\n                this.logger.trace(\"NativeMessageHandler - Received response from browser extension\");\n                this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(response)}`);\n                if (response.status !== \"Success\") {\n                    resolver.reject(NativeAuthError.createError(response.code, response.description, response.ext));\n                } else if (response.result) {\n                    if (response.result[\"code\"] && response.result[\"description\"]) {\n                        resolver.reject(NativeAuthError.createError(response.result[\"code\"], response.result[\"description\"], response.result[\"ext\"]));\n                    } else {\n                        resolver.resolve(response.result);\n                    }\n                } else {\n                    throw AuthError.createUnexpectedError(\"Event does not contain result.\");\n                }\n                this.resolvers.delete(request.responseId);\n            } else if (method === NativeExtensionMethod.HandshakeResponse) {\n                if (!handshakeResolver) {\n                    return;\n                }\n                clearTimeout(this.timeoutId); // Clear setTimeout\n                window.removeEventListener(\"message\", this.windowListener, false); // Remove 'No extension' listener\n                this.extensionId = request.extensionId;\n                this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`);\n\n                handshakeResolver.resolve();\n                this.handshakeResolvers.delete(request.responseId);\n            } \n            // Do nothing if method is not Response or HandshakeResponse\n        } catch (err) {\n            this.logger.error(\"Error parsing response from WAM Extension\");\n            this.logger.errorPii(`Error parsing response from WAM Extension: ${err.toString()}`);\n            this.logger.errorPii(`Unable to parse ${event}`);\n\n            if (resolver) {\n                resolver.reject(err as AuthError);\n            } else if (handshakeResolver) {\n                handshakeResolver.reject(err as AuthError);\n            }\n        }\n    }\n    \n    /**\n     * Returns boolean indicating whether or not the request should attempt to use native broker\n     * @param logger\n     * @param config\n     * @param nativeExtensionProvider\n     * @param authenticationScheme \n     */\n    static isNativeAvailable(config: BrowserConfiguration, logger: Logger, nativeExtensionProvider?: NativeMessageHandler, authenticationScheme?: AuthenticationScheme): boolean {\n        logger.trace(\"isNativeAvailable called\");\n        if (!config.system.allowNativeBroker) {\n            logger.trace(\"isNativeAvailable: allowNativeBroker is not enabled, returning false\");\n            // Developer disabled WAM\n            return false;\n        }\n\n        if (!nativeExtensionProvider) {\n            logger.trace(\"isNativeAvailable: WAM extension provider is not initialized, returning false\");\n            // Extension is not available\n            return false;\n        }\n\n        if (authenticationScheme) {\n            switch(authenticationScheme) {\n                case AuthenticationScheme.BEARER:\n                case AuthenticationScheme.POP:\n                    logger.trace(\"isNativeAvailable: authenticationScheme is supported, returning true\");\n                    return true;\n                default:\n                    logger.trace(\"isNativeAvailable: authenticationScheme is not supported, returning false\");\n                    return false;\n            }\n        }\n\n        return true;\n    }\n} \n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthorizationCodePayload , StringUtils, CommonAuthorizationCodeRequest, AuthenticationResult, AuthorizationCodeClient, AuthorityFactory, Authority, INetworkModule, ClientAuthError, CcsCredential, Logger, ServerError } from \"@azure/msal-common\";\n\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { BrowserAuthError, BrowserAuthErrorMessage } from \"../error/BrowserAuthError\";\nimport { TemporaryCacheKeys } from \"../utils/BrowserConstants\";\n\nexport type InteractionParams = {};\n\n/**\n * Abstract class which defines operations for a browser interaction handling class.\n */\nexport class InteractionHandler {\n\n    protected authModule: AuthorizationCodeClient;\n    protected browserStorage: BrowserCacheManager;\n    protected authCodeRequest: CommonAuthorizationCodeRequest;\n    protected logger: Logger;\n\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserCacheManager, authCodeRequest: CommonAuthorizationCodeRequest, logger: Logger) {\n        this.authModule = authCodeModule;\n        this.browserStorage = storageImpl;\n        this.authCodeRequest = authCodeRequest;\n        this.logger = logger;\n    }\n\n    /**\n     * Function to handle response parameters from hash.\n     * @param locationHash\n     */\n    async handleCodeResponseFromHash(locationHash: string, state: string, authority: Authority, networkModule: INetworkModule): Promise<AuthenticationResult> {\n        this.logger.verbose(\"InteractionHandler.handleCodeResponse called\");\n        // Check that location hash isn't empty.\n        if (StringUtils.isEmpty(locationHash)) {\n            throw BrowserAuthError.createEmptyHashError(locationHash);\n        }\n\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw ClientAuthError.createStateNotFoundError(\"Cached State\");\n        }\n\n        let authCodeResponse;\n        try {\n            authCodeResponse = this.authModule.handleFragmentResponse(locationHash, requestState);\n        } catch (e) {\n            if (e instanceof ServerError && e.subError === BrowserAuthErrorMessage.userCancelledError.code) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw BrowserAuthError.createUserCancelledError();\n            } else {\n                throw e;\n            }\n        }\n\n        return this.handleCodeResponseFromServer(authCodeResponse, state, authority, networkModule);\n    }\n\n    /**\n     * Process auth code response from AAD\n     * @param authCodeResponse \n     * @param state \n     * @param authority \n     * @param networkModule \n     * @returns \n     */\n    async handleCodeResponseFromServer(authCodeResponse: AuthorizationCodePayload, state: string, authority: Authority, networkModule: INetworkModule, validateNonce: boolean = true): Promise<AuthenticationResult> {\n        this.logger.trace(\"InteractionHandler.handleCodeResponseFromServer called\");\n\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw ClientAuthError.createStateNotFoundError(\"Cached State\");\n        }\n        \n        // Get cached items\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\n\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await this.updateTokenEndpointAuthority(authCodeResponse.cloud_instance_host_name, authority, networkModule);\n        }\n\n        // Nonce validation not needed when redirect not involved (e.g. hybrid spa, renewing token via rt)\n        if (validateNonce) {\n            authCodeResponse.nonce = cachedNonce || undefined;\n        }\n        \n        authCodeResponse.state = requestState;\n\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        } else {\n            const cachedCcsCred = this.checkCcsCredentials();\n            if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n            }\n        }\n\n        // Acquire token with retrieved code.\n        const tokenResponse = await this.authModule.acquireToken(this.authCodeRequest, authCodeResponse);\n        this.browserStorage.cleanRequestByState(state);\n        return tokenResponse;\n    }\n\n    /**\n     * Updates authority based on cloudInstanceHostname\n     * @param cloudInstanceHostname \n     * @param authority \n     * @param networkModule \n     */\n    protected async updateTokenEndpointAuthority(cloudInstanceHostname: string, authority: Authority, networkModule: INetworkModule): Promise<void> {\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${authority.tenant}/`;\n        const cloudInstanceAuthority = await AuthorityFactory.createDiscoveredInstance(cloudInstanceAuthorityUri, networkModule, this.browserStorage, authority.options);\n        this.authModule.updateAuthority(cloudInstanceAuthority);\n    }\n\n    /**\n     * Looks up ccs creds in the cache\n     */\n    protected checkCcsCredentials(): CcsCredential | null {\n        // Look up ccs credential in temp cache\n        const cachedCcsCred = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, true);\n        if (cachedCcsCred) {\n            try {\n                return JSON.parse(cachedCcsCred) as CcsCredential;\n            } catch (e) {\n                this.authModule.logger.error(\"Cache credential could not be parsed\");\n                this.authModule.logger.errorPii(`Cache credential could not be parsed: ${cachedCcsCred}`);\n            }\n        }\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, CommonAuthorizationCodeRequest, AuthorizationCodeClient, ThrottlingUtils, CommonEndSessionRequest, UrlString, AuthError, OIDC_DEFAULT_SCOPES, Constants, ProtocolUtils, ServerAuthorizationCodeResponse, PerformanceEvents, StringUtils, IPerformanceClient, Logger, ICrypto } from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { EventType } from \"../event/EventType\";\nimport { InteractionType, ApiId, BrowserConstants } from \"../utils/BrowserConstants\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { NativeInteractionClient } from \"./NativeInteractionClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { InteractionHandler, InteractionParams } from \"../interaction_handler/InteractionHandler\";\nimport { PopupWindowAttributes } from \"../request/PopupWindowAttributes\";\n\nexport type PopupParams = InteractionParams & {\n    popup?: Window|null;\n    popupName: string;\n    popupWindowAttributes: PopupWindowAttributes\n};\n\nexport class PopupClient extends StandardInteractionClient {\n    private currentWindow: Window|undefined;\n\n    constructor(config: BrowserConfiguration, storageImpl: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, navigationClient: INavigationClient, performanceClient: IPerformanceClient, nativeMessageHandler?: NativeMessageHandler, correlationId?: string) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        // Properly sets this reference for the unload event.\n        this.unloadWindow = this.unloadWindow.bind(this);\n    }\n\n    /**\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\n     * @param request\n     */\n    acquireToken(request: PopupRequest): Promise<AuthenticationResult> {\n        try {\n            const popupName = this.generatePopupName(request.scopes || OIDC_DEFAULT_SCOPES, request.authority || this.config.auth.authority);\n            const popupWindowAttributes = request.popupWindowAttributes || {};\n\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\n                // Passes on popup position and dimensions if in request\n                return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes);\n            } else {\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\n                this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\n                const popup = this.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes);\n                return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes, popup);\n            }\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logout(logoutRequest?: EndSessionPopupRequest): Promise<void> {\n        try {\n            this.logger.verbose(\"logoutPopup called\");\n            const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n\n            const popupName = this.generateLogoutPopupName(validLogoutRequest);\n            const authority = logoutRequest && logoutRequest.authority;\n            const mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\n            const popupWindowAttributes = logoutRequest?.popupWindowAttributes || {};\n\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true\");\n                // Passes on popup position and dimensions if in request\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, undefined, mainWindowRedirectUri);\n            } else {\n                // asyncPopups flag is set to false. Opens popup before logging out.\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\n                const popup = this.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes);\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, popup, mainWindowRedirectUri);\n            }\n        } catch (e) {\n            // Since this function is synchronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\n     * @param validRequest\n     * @param popupName\n     * @param popup\n     * @param popupWindowAttributes\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    protected async acquireTokenPopupAsync(request: PopupRequest, popupName: string, popupWindowAttributes: PopupWindowAttributes, popup?: Window|null): Promise<AuthenticationResult> {\n        this.logger.verbose(\"acquireTokenPopupAsync called\");\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenPopup);\n        const validRequest = await this.initializeAuthorizationRequest(request, InteractionType.Popup);\n        this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || Constants.EMPTY_STRING, validRequest.account || null);\n\n        try {\n            // Create auth code request and generate PKCE params\n            const authCodeRequest: CommonAuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\n\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(serverTelemetryManager, validRequest.authority, validRequest.azureCloudOptions);\n            this.logger.verbose(\"Auth code client created\");\n\n            const isNativeBroker = NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme);\n            // Start measurement for server calls with native brokering enabled\n            let fetchNativeAccountIdMeasurement;\n            if (isNativeBroker) {\n                fetchNativeAccountIdMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.FetchAccountIdWithNativeBroker, request.correlationId);\n            }\n\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl({\n                ...validRequest,\n                nativeBroker: isNativeBroker\n            });\n\n            // Create popup interaction handler.\n            const interactionHandler = new InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger);\n\n            // Show the UI once the url has been created. Get the window handle for the popup.\n            const popupParameters: PopupParams = {\n                popup,\n                popupName,\n                popupWindowAttributes\n            };\n            const popupWindow: Window = this.initiateAuthRequest(navigateUrl, popupParameters);\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, {popupWindow}, null);\n\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n            const hash = await this.monitorPopupForHash(popupWindow);\n            // Deserialize hash fragment response parameters.\n            const serverParams: ServerAuthorizationCodeResponse = UrlString.getDeserializedHash(hash);\n            const state = this.validateAndExtractStateFromHash(serverParams, InteractionType.Popup, validRequest.correlationId);\n            // Remove throttle if it exists\n            ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\n\n            if (serverParams.accountId) {\n                this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n                // end measurement for server call with native brokering enabled\n                if (fetchNativeAccountIdMeasurement) {\n                    fetchNativeAccountIdMeasurement.endMeasurement({\n                        success: true,\n                        isNativeBroker: true\n                    });\n                }\n\n                if (!this.nativeMessageHandler) {\n                    throw BrowserAuthError.createNativeConnectionNotEstablishedError();\n                }\n                const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, validRequest.correlationId);\n                const { userRequestState } = ProtocolUtils.parseRequestState(this.browserCrypto, state);\n                return nativeInteractionClient.acquireToken({\n                    ...validRequest,\n                    state: userRequestState,\n                    prompt: undefined // Server should handle the prompt, ideally native broker can do this part silently\n                }).finally(() => {\n                    this.browserStorage.cleanRequestByState(state);\n                });\n            }\n\n            // Handle response from hash string.\n            const result = await interactionHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient);\n\n            return result;\n        } catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n            }\n\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e;\n        }\n    }\n\n    /**\n     *\n     * @param validRequest\n     * @param popupName\n     * @param requestAuthority\n     * @param popup\n     * @param mainWindowRedirectUri\n     * @param popupWindowAttributes\n     */\n    protected async logoutPopupAsync(validRequest: CommonEndSessionRequest, popupName: string, popupWindowAttributes: PopupWindowAttributes, requestAuthority?: string, popup?: Window|null, mainWindowRedirectUri?: string): Promise<void> {\n        this.logger.verbose(\"logoutPopupAsync called\");\n        this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Popup, validRequest);\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logoutPopup);\n\n        try {\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validRequest.account);\n\n            // Initialize the client\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, requestAuthority);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create logout string and navigate user window to logout.\n            const logoutUri: string = authClient.getLogoutUri(validRequest);\n\n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\n\n            // Open the popup window to requestUrl.\n            const popupWindow = this.openPopup(logoutUri, {popupName, popupWindowAttributes, popup});\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, {popupWindow}, null);\n\n            await this.waitForLogoutPopup(popupWindow);\n\n            if (mainWindowRedirectUri) {\n                const navigationOptions: NavigationOptions = {\n                    apiId: ApiId.logoutPopup,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: false\n                };\n                const absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, BrowserUtils.getCurrentUri());\n\n                this.logger.verbose(\"Redirecting main window to url specified in the request\");\n                this.logger.verbosePii(`Redirecting main window to: ${absoluteUrl}`);\n                this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\n            } else {\n                this.logger.verbose(\"No main window navigation requested\");\n            }\n        } catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n            }\n\n            this.browserStorage.setInteractionInProgress(false);\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Popup, null, e);\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n            serverTelemetryManager.cacheFailedRequest(e);\n            throw e;\n        }\n\n        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n    }\n\n    /**\n     * Opens a popup window with given request Url.\n     * @param requestUrl\n     */\n    initiateAuthRequest(requestUrl: string, params: PopupParams): Window {\n        // Check that request url is not empty.\n        if (!StringUtils.isEmpty(requestUrl)) {\n            this.logger.infoPii(`Navigate to: ${requestUrl}`);\n            // Open the popup window to requestUrl.\n            return this.openPopup(requestUrl, params);\n        } else {\n            // Throw error if request URL is empty.\n            this.logger.error(\"Navigate url is empty\");\n            throw BrowserAuthError.createEmptyNavigationUriError();\n        }\n    }\n\n    /**\n     * Monitors a window until it loads a url with the same origin.\n     * @param popupWindow - window that is being monitored\n     * @param timeout - timeout for processing hash once popup is redirected back to application\n     */\n    monitorPopupForHash(popupWindow: Window): Promise<string> {\n        return new Promise((resolve, reject) => {\n            /*\n             * Polling for popups needs to be tick-based,\n             * since a non-trivial amount of time can be spent on interaction (which should not count against the timeout).\n             */\n            const maxTicks = this.config.system.windowHashTimeout / BrowserConstants.POLL_INTERVAL_MS;\n            let ticks = 0;\n\n            this.logger.verbose(\"PopupHandler.monitorPopupForHash - polling started\");\n\n            const intervalId = setInterval(() => {\n                // Window is closed\n                if (popupWindow.closed) {\n                    this.logger.error(\"PopupHandler.monitorPopupForHash - window closed\");\n                    this.cleanPopup();\n                    clearInterval(intervalId);\n                    reject(BrowserAuthError.createUserCancelledError());\n                    return;\n                }\n\n                let href: string = Constants.EMPTY_STRING;\n                let hash: string = Constants.EMPTY_STRING;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = popupWindow.location.href;\n                    hash = popupWindow.location.hash;\n                } catch (e) {}\n                \n                // Don't process blank pages or cross domain\n                if (StringUtils.isEmpty(href) || href === \"about:blank\") {\n                    return;\n                }\n\n                this.logger.verbose(\"PopupHandler.monitorPopupForHash - popup window is on same origin as caller\");\n\n                /*\n                 * Only run clock when we are on same domain for popups\n                 * as popup operations can take a long time.\n                 */\n                ticks++;\n\n                if (hash) {\n                    this.logger.verbose(\"PopupHandler.monitorPopupForHash - found hash in url\");\n                    clearInterval(intervalId);\n                    this.cleanPopup(popupWindow);\n    \n                    if (UrlString.hashContainsKnownProperties(hash)) {\n                        this.logger.verbose(\"PopupHandler.monitorPopupForHash - hash contains known properties, returning.\");\n                        resolve(hash);\n                    } else {\n                        this.logger.error(\"PopupHandler.monitorPopupForHash - found hash in url but it does not contain known properties. Check that your router is not changing the hash prematurely.\");\n                        this.logger.errorPii(`PopupHandler.monitorPopupForHash - hash found: ${hash}`);\n                        reject(BrowserAuthError.createHashDoesNotContainKnownPropertiesError());\n                    }\n                } else if (ticks > maxTicks) {\n                    this.logger.error(\"PopupHandler.monitorPopupForHash - unable to find hash in url, timing out\");\n                    clearInterval(intervalId);\n                    reject(BrowserAuthError.createMonitorPopupTimeoutError());\n                }\n            }, BrowserConstants.POLL_INTERVAL_MS);\n        });\n    }\n\n    /**\n     * Waits for user interaction in logout popup window\n     * @param popupWindow \n     * @returns \n     */\n    waitForLogoutPopup(popupWindow: Window): Promise<void> {\n        return new Promise((resolve) => {\n            this.logger.verbose(\"PopupHandler.waitForLogoutPopup - polling started\");\n\n            const intervalId = setInterval(() => {\n                // Window is closed\n                if (popupWindow.closed) {\n                    this.logger.error(\"PopupHandler.waitForLogoutPopup - window closed\");\n                    this.cleanPopup();\n                    clearInterval(intervalId);\n                    resolve();\n                }\n\n                let href: string = Constants.EMPTY_STRING;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = popupWindow.location.href;\n                } catch (e) {}\n                \n                // Don't process blank pages or cross domain\n                if (StringUtils.isEmpty(href) || href === \"about:blank\") {\n                    return;\n                }\n\n                this.logger.verbose(\"PopupHandler.waitForLogoutPopup - popup window is on same origin as caller, closing.\");\n\n                clearInterval(intervalId);\n                this.cleanPopup(popupWindow);\n                resolve();\n            }, BrowserConstants.POLL_INTERVAL_MS);\n        });\n    }\n\n    /**\n     * @hidden\n     *\n     * Configures popup window for login.\n     *\n     * @param urlNavigate\n     * @param title\n     * @param popUpWidth\n     * @param popUpHeight\n     * @param popupWindowAttributes\n     * @ignore\n     * @hidden\n     */\n    openPopup(urlNavigate: string, popupParams: PopupParams): Window {\n        try {\n            let popupWindow;\n            // Popup window passed in, setting url to navigate to\n            if (popupParams.popup) {\n                popupWindow = popupParams.popup;\n                this.logger.verbosePii(`Navigating popup window to: ${urlNavigate}`);\n                popupWindow.location.assign(urlNavigate);\n            } else if (typeof popupParams.popup === \"undefined\") {\n                // Popup will be undefined if it was not passed in\n                this.logger.verbosePii(`Opening popup window to: ${urlNavigate}`);\n                popupWindow = this.openSizedPopup(urlNavigate, popupParams.popupName, popupParams.popupWindowAttributes);\n            }\n\n            // Popup will be null if popups are blocked\n            if (!popupWindow) {\n                throw BrowserAuthError.createEmptyWindowCreatedError();\n            }\n            if (popupWindow.focus) {\n                popupWindow.focus();\n            }\n            this.currentWindow = popupWindow;\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\n\n            return popupWindow;\n        } catch (e) {\n            this.logger.error(\"error opening popup \" + (e as AuthError).message);\n            this.browserStorage.setInteractionInProgress(false);\n            throw BrowserAuthError.createPopupWindowError((e as AuthError).toString());\n        }\n    }\n\n    /**\n     * Helper function to set popup window dimensions and position\n     * @param urlNavigate \n     * @param popupName \n     * @param popupWindowAttributes \n     * @returns \n     */\n    openSizedPopup(urlNavigate: string, popupName: string, popupWindowAttributes: PopupWindowAttributes): Window|null {\n        /**\n         * adding winLeft and winTop to account for dual monitor\n         * using screenLeft and screenTop for IE8 and earlier\n         */\n        const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n        const winTop = window.screenTop ? window.screenTop : window.screenY;\n        /**\n         * window.innerWidth displays browser window\"s height and width excluding toolbars\n         * using document.documentElement.clientWidth for IE8 and earlier\n         */\n        const winWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n        const winHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n\n        let width = popupWindowAttributes.popupSize?.width;\n        let height = popupWindowAttributes.popupSize?.height;\n        let top = popupWindowAttributes.popupPosition?.top;\n        let left = popupWindowAttributes.popupPosition?.left;\n\n        if (!width || width < 0 || width > winWidth) {\n            this.logger.verbose(\"Default popup window width used. Window width not configured or invalid.\");\n            width = BrowserConstants.POPUP_WIDTH;\n        }\n\n        if (!height || height < 0 || height > winHeight) {\n            this.logger.verbose(\"Default popup window height used. Window height not configured or invalid.\");\n            height = BrowserConstants.POPUP_HEIGHT;\n        }\n\n        if (!top || top < 0 || top > winHeight) {\n            this.logger.verbose(\"Default popup window top position used. Window top not configured or invalid.\");\n            top = Math.max(0, ((winHeight / 2) - (BrowserConstants.POPUP_HEIGHT / 2)) + winTop);\n        }\n\n        if (!left || left < 0 || left > winWidth) {\n            this.logger.verbose(\"Default popup window left position used. Window left not configured or invalid.\");\n            left = Math.max(0, ((winWidth / 2) - (BrowserConstants.POPUP_WIDTH / 2)) + winLeft);\n        }\n\n        return window.open(urlNavigate, popupName, `width=${width}, height=${height}, top=${top}, left=${left}, scrollbars=yes`);\n    }\n\n    /**\n     * Event callback to unload main window.\n     */\n    unloadWindow(e: Event): void {\n        this.browserStorage.cleanRequestByInteractionType(InteractionType.Popup);\n        if (this.currentWindow) {\n            this.currentWindow.close();\n        }\n        // Guarantees browser unload will happen, so no other errors will be thrown.\n        e.preventDefault();\n    }\n\n    /**\n     * Closes popup, removes any state vars created during popup calls.\n     * @param popupWindow\n     */\n    cleanPopup(popupWindow?: Window): void {\n        if (popupWindow) {\n            // Close window.\n            popupWindow.close();\n        }\n        // Remove window unload function\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\n\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n    }\n\n    /**\n     * Generates the name for the popup based on the client id and request\n     * @param clientId\n     * @param request\n     */\n    generatePopupName(scopes: Array<string>, authority: string): string {\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${scopes.join(\"-\")}.${authority}.${this.correlationId}`;\n    }\n\n    /**\n     * Generates the name for the popup based on the client id and request for logouts\n     * @param clientId \n     * @param request \n     */\n    generateLogoutPopupName(request: CommonEndSessionRequest): string {\n        const homeAccountId = request.account && request.account.homeAccountId;\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${homeAccountId}.${this.correlationId}`;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthorizationCodeClient, StringUtils, CommonAuthorizationCodeRequest, ICrypto, AuthenticationResult, Authority, INetworkModule, ClientAuthError, Logger, ServerError } from \"@azure/msal-common\";\nimport { BrowserAuthError, BrowserAuthErrorMessage } from \"../error/BrowserAuthError\";\nimport { ApiId, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { InteractionHandler, InteractionParams } from \"./InteractionHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\n\nexport type RedirectParams = InteractionParams & {\n    navigationClient: INavigationClient;\n    redirectTimeout: number;\n    redirectStartPage: string;\n    onRedirectNavigate?: (url: string) => void | boolean;\n};\n\nexport class RedirectHandler extends InteractionHandler {\n\n    private browserCrypto: ICrypto;\n\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserCacheManager, authCodeRequest: CommonAuthorizationCodeRequest, logger: Logger, browserCrypto: ICrypto) {\n        super(authCodeModule, storageImpl, authCodeRequest, logger);\n        this.browserCrypto = browserCrypto;\n    }\n\n    /**\n     * Redirects window to given URL.\n     * @param urlNavigate\n     */\n    async initiateAuthRequest(requestUrl: string, params: RedirectParams): Promise<void> {\n        this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\n        // Navigate if valid URL\n        if (!StringUtils.isEmpty(requestUrl)) {\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\n            if (params.redirectStartPage) {\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\");\n                this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, params.redirectStartPage, true);\n            }\n\n            // Set interaction status in the library.\n            this.browserStorage.setTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, this.authCodeRequest.correlationId, true);\n            this.browserStorage.cacheCodeRequest(this.authCodeRequest, this.browserCrypto);\n            this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${requestUrl}`);\n            const navigationOptions: NavigationOptions = {\n                apiId: ApiId.acquireTokenRedirect,\n                timeout: params.redirectTimeout,\n                noHistory: false\n            };\n            \n            // If onRedirectNavigate is implemented, invoke it and provide requestUrl\n            if (typeof params.onRedirectNavigate === \"function\") {\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\");\n                const navigate = params.onRedirectNavigate(requestUrl);\n\n                // Returning false from onRedirectNavigate will stop navigation\n                if (navigate !== false) {\n                    this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\");\n                    await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\n                    return;\n                } else {\n                    this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\");\n                    return;\n                }\n            } else {\n                // Navigate window to request URL\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\");\n                await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\n                return;\n            }\n        } else {\n            // Throw error if request URL is empty.\n            this.logger.info(\"RedirectHandler.initiateAuthRequest: Navigate url is empty\");\n            throw BrowserAuthError.createEmptyNavigationUriError();\n        }\n    }\n\n    /**\n     * Handle authorization code response in the window.\n     * @param hash\n     */\n    async handleCodeResponseFromHash(locationHash: string, state: string, authority: Authority, networkModule: INetworkModule): Promise<AuthenticationResult> {\n        this.logger.verbose(\"RedirectHandler.handleCodeResponse called\");\n\n        // Check that location hash isn't empty.\n        if (StringUtils.isEmpty(locationHash)) {\n            throw BrowserAuthError.createEmptyHashError(locationHash);\n        }\n\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw ClientAuthError.createStateNotFoundError(\"Cached State\");\n        }\n\n        let authCodeResponse;\n        try {\n            authCodeResponse = this.authModule.handleFragmentResponse(locationHash, requestState);\n        } catch (e) {\n            if (e instanceof ServerError && e.subError === BrowserAuthErrorMessage.userCancelledError.code) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw BrowserAuthError.createUserCancelledError();\n            } else {\n                throw e;\n            }\n        }\n\n        // Get cached items\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\n\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await this.updateTokenEndpointAuthority(authCodeResponse.cloud_instance_host_name, authority, networkModule);\n        }\n\n        authCodeResponse.nonce = cachedNonce || undefined;\n        authCodeResponse.state = requestState;\n\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        } else {\n            const cachedCcsCred = this.checkCcsCredentials();\n            if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n            }\n        }\n\n        // Acquire token with retrieved code.\n        const tokenResponse = await this.authModule.acquireToken(this.authCodeRequest, authCodeResponse);\n\n        this.browserStorage.cleanRequestByState(state);\n        return tokenResponse;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, CommonAuthorizationCodeRequest, AuthorizationCodeClient, UrlString, AuthError, ServerTelemetryManager, Constants, ProtocolUtils, ServerAuthorizationCodeResponse, ThrottlingUtils } from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { ApiId, InteractionType, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\nimport { RedirectHandler } from \"../interaction_handler/RedirectHandler\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { EventType } from \"../event/EventType\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { NativeInteractionClient } from \"./NativeInteractionClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\n\nexport class RedirectClient extends StandardInteractionClient {\n    /**\n     * Redirects the page to the /authorize endpoint of the IDP\n     * @param request\n     */\n    async acquireToken(request: RedirectRequest): Promise<void> {\n        const validRequest = await this.initializeAuthorizationRequest(request, InteractionType.Redirect);\n        this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || Constants.EMPTY_STRING, validRequest.account || null);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenRedirect);\n\n        const handleBackButton = (event: PageTransitionEvent) => {\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            if (event.persisted) {\n                this.logger.verbose(\"Page was restored from back/forward cache. Clearing temporary cache.\");\n                this.browserStorage.cleanRequestByState(validRequest.state);\n            }\n        };\n\n        try {\n            // Create auth code request and generate PKCE params\n            const authCodeRequest: CommonAuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\n\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(serverTelemetryManager, validRequest.authority, validRequest.azureCloudOptions);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create redirect interaction handler.\n            const interactionHandler = new RedirectHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.browserCrypto);\n\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl({\n                ...validRequest,\n                nativeBroker: NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme)\n            });\n\n            const redirectStartPage = this.getRedirectStartPage(request.redirectStartPage);\n            this.logger.verbosePii(`Redirect start page: ${redirectStartPage}`);\n\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            window.addEventListener(\"pageshow\", handleBackButton);\n\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\n            return await interactionHandler.initiateAuthRequest(navigateUrl, {\n                navigationClient: this.navigationClient,\n                redirectTimeout: this.config.system.redirectNavigationTimeout,\n                redirectStartPage: redirectStartPage,\n                onRedirectNavigate: request.onRedirectNavigate\n            });\n        } catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n            }\n            window.removeEventListener(\"pageshow\", handleBackButton);\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e;\n        }\n    }\n\n    /**\n     * Checks if navigateToLoginRequestUrl is set, and:\n     * - if true, performs logic to cache and navigate\n     * - if false, handles hash string and parses response\n     * @param hash\n     */\n    async handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null> {\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.handleRedirectPromise);\n        try {\n            if (!this.browserStorage.isInteractionInProgress(true)) {\n                this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\n                return null;\n            }\n\n            const responseHash = this.getRedirectResponseHash(hash || window.location.hash);\n            if (!responseHash) {\n                // Not a recognized server response hash or hash not associated with a redirect request\n                this.logger.info(\"handleRedirectPromise did not detect a response hash as a result of a redirect. Cleaning temporary cache.\");\n                this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\n                return null;\n            }\n\n            let state: string;\n            try {\n                // Deserialize hash fragment response parameters.\n                const serverParams: ServerAuthorizationCodeResponse = UrlString.getDeserializedHash(responseHash);\n                state = this.validateAndExtractStateFromHash(serverParams, InteractionType.Redirect);\n                this.logger.verbose(\"State extracted from hash\");\n            } catch (e) {\n                this.logger.info(`handleRedirectPromise was unable to extract state due to: ${e}`);\n                this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\n                return null;\n            }\n\n            // If navigateToLoginRequestUrl is true, get the url where the redirect request was initiated\n            const loginRequestUrl = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, true) || Constants.EMPTY_STRING;\n            const loginRequestUrlNormalized = UrlString.removeHashFromUrl(loginRequestUrl);\n            const currentUrlNormalized = UrlString.removeHashFromUrl(window.location.href);\n\n            if (loginRequestUrlNormalized === currentUrlNormalized && this.config.auth.navigateToLoginRequestUrl) {\n                // We are on the page we need to navigate to - handle hash\n                this.logger.verbose(\"Current page is loginRequestUrl, handling hash\");\n                const handleHashResult = await this.handleHash(responseHash, state, serverTelemetryManager);\n\n                if (loginRequestUrl.indexOf(\"#\") > -1) {\n                    // Replace current hash with non-msal hash, if present\n                    BrowserUtils.replaceHash(loginRequestUrl);\n                }\n\n                return handleHashResult;\n            } else if (!this.config.auth.navigateToLoginRequestUrl) {\n                this.logger.verbose(\"NavigateToLoginRequestUrl set to false, handling hash\");\n                return this.handleHash(responseHash, state, serverTelemetryManager);\n            } else if (!BrowserUtils.isInIframe() || this.config.system.allowRedirectInIframe) {\n                /*\n                 * Returned from authority using redirect - need to perform navigation before processing response\n                 * Cache the hash to be retrieved after the next redirect\n                 */\n                this.browserStorage.setTemporaryCache(TemporaryCacheKeys.URL_HASH, responseHash, true);\n                const navigationOptions: NavigationOptions = {\n                    apiId: ApiId.handleRedirectPromise,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: true\n                };\n\n                /**\n                 * Default behavior is to redirect to the start page and not process the hash now.\n                 * The start page is expected to also call handleRedirectPromise which will process the hash in one of the checks above.\n                 */\n                let processHashOnRedirect: boolean = true;\n                if (!loginRequestUrl || loginRequestUrl === \"null\") {\n                    // Redirect to home page if login request url is null (real null or the string null)\n                    const homepage = BrowserUtils.getHomepage();\n                    // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\n                    this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, homepage, true);\n                    this.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\n                    processHashOnRedirect = await this.navigationClient.navigateInternal(homepage, navigationOptions);\n                } else {\n                    // Navigate to page that initiated the redirect request\n                    this.logger.verbose(`Navigating to loginRequestUrl: ${loginRequestUrl}`);\n                    processHashOnRedirect = await this.navigationClient.navigateInternal(loginRequestUrl, navigationOptions);\n                }\n\n                // If navigateInternal implementation returns false, handle the hash now\n                if (!processHashOnRedirect) {\n                    return this.handleHash(responseHash, state, serverTelemetryManager);\n                }\n            }\n\n            return null;\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\n            throw e;\n        }\n    }\n\n    /**\n     * Gets the response hash for a redirect request\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\n     * @param hash\n     */\n    protected getRedirectResponseHash(hash: string): string | null {\n        this.logger.verbose(\"getRedirectResponseHash called\");\n        // Get current location hash from window or cache.\n        const isResponseHash: boolean = UrlString.hashContainsKnownProperties(hash);\n\n        if (isResponseHash) {\n            BrowserUtils.clearHash(window);\n            this.logger.verbose(\"Hash contains known properties, returning response hash\");\n            return hash;\n        }\n\n        const cachedHash = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.URL_HASH, true);\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH));\n\n        this.logger.verbose(\"Hash does not contain known properties, returning cached hash\");\n        return cachedHash;\n    }\n\n    /**\n     * Checks if hash exists and handles in window.\n     * @param hash\n     * @param state\n     */\n    protected async handleHash(hash: string, state: string, serverTelemetryManager: ServerTelemetryManager): Promise<AuthenticationResult> {\n        const cachedRequest = this.browserStorage.getCachedRequest(state, this.browserCrypto);\n        this.logger.verbose(\"handleHash called, retrieved cached request\");\n\n        const serverParams: ServerAuthorizationCodeResponse = UrlString.getDeserializedHash(hash);\n\n        if (serverParams.accountId) {\n            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n            if (!this.nativeMessageHandler) {\n                throw BrowserAuthError.createNativeConnectionNotEstablishedError();\n            }\n            const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, cachedRequest.correlationId);\n            const { userRequestState } = ProtocolUtils.parseRequestState(this.browserCrypto, state);\n            return nativeInteractionClient.acquireToken({\n                ...cachedRequest,\n                state: userRequestState,\n                prompt: undefined // Server should handle the prompt, ideally native broker can do this part silently\n            }).finally(() => {\n                this.browserStorage.cleanRequestByState(state);\n            });\n        }\n\n        // Hash contains known properties - handle and return in callback\n        const currentAuthority = this.browserStorage.getCachedAuthority(state);\n        if (!currentAuthority) {\n            throw BrowserAuthError.createNoCachedAuthorityError();\n        }\n\n        const authClient = await this.createAuthCodeClient(serverTelemetryManager, currentAuthority);\n        this.logger.verbose(\"Auth code client created\");\n        ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, cachedRequest);\n        const interactionHandler = new RedirectHandler(authClient, this.browserStorage, cachedRequest, this.logger, this.browserCrypto);\n        return await interactionHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient);\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        this.logger.verbose(\"logoutRedirect called\");\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logout);\n\n        try {\n            this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Redirect, logoutRequest);\n\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validLogoutRequest.account);\n\n            const navigationOptions: NavigationOptions = {\n                apiId: ApiId.logout,\n                timeout: this.config.system.redirectNavigationTimeout,\n                noHistory: false\n            };\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, logoutRequest && logoutRequest.authority);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create logout string and navigate user window to logout.\n            const logoutUri: string = authClient.getLogoutUri(validLogoutRequest);\n\n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Redirect, validLogoutRequest);\n            // Check if onRedirectNavigate is implemented, and invoke it if so\n            if (logoutRequest && typeof logoutRequest.onRedirectNavigate === \"function\") {\n                const navigate = logoutRequest.onRedirectNavigate(logoutUri);\n\n                if (navigate !== false) {\n                    this.logger.verbose(\"Logout onRedirectNavigate did not return false, navigating\");\n                    // Ensure interaction is in progress\n                    if (!this.browserStorage.getInteractionInProgress()) {\n                        this.browserStorage.setInteractionInProgress(true);\n                    }\n                    await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\n                    return;\n                } else {\n                    // Ensure interaction is not in progress\n                    this.browserStorage.setInteractionInProgress(false);\n                    this.logger.verbose(\"Logout onRedirectNavigate returned false, stopping navigation\");\n                }\n            } else {\n                // Ensure interaction is in progress\n                if (!this.browserStorage.getInteractionInProgress()) {\n                    this.browserStorage.setInteractionInProgress(true);\n                }\n                await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\n                return;\n            }\n        } catch(e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Redirect, null, e);\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Redirect);\n            throw e;\n        }\n\n        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Redirect);\n    }\n\n    /**\n     * Use to get the redirectStartPage either from request or use current window\n     * @param requestStartPage\n     */\n    protected getRedirectStartPage(requestStartPage?: string): string {\n        const redirectStartPage = requestStartPage || window.location.href;\n        return UrlString.getAbsoluteUrl(redirectStartPage, BrowserUtils.getCurrentUri());\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { UrlString, StringUtils, CommonAuthorizationCodeRequest, AuthorizationCodeClient, Constants, Logger } from \"@azure/msal-common\";\nimport { InteractionHandler } from \"./InteractionHandler\";\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { DEFAULT_IFRAME_TIMEOUT_MS } from \"../config/Configuration\";\n\nexport class SilentHandler extends InteractionHandler {\n\n    private navigateFrameWait: number;\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserCacheManager, authCodeRequest: CommonAuthorizationCodeRequest, logger: Logger, navigateFrameWait: number) {\n        super(authCodeModule, storageImpl, authCodeRequest, logger);\n        this.navigateFrameWait = navigateFrameWait;\n    }\n\n    /**\n     * Creates a hidden iframe to given URL using user-requested scopes as an id.\n     * @param urlNavigate\n     * @param userRequestScopes\n     */\n    async initiateAuthRequest(requestUrl: string): Promise<HTMLIFrameElement> {\n        if (StringUtils.isEmpty(requestUrl)) {\n            // Throw error if request URL is empty.\n            this.logger.info(\"Navigate url is empty\");\n            throw BrowserAuthError.createEmptyNavigationUriError();\n        }\n\n        return this.navigateFrameWait ? await this.loadFrame(requestUrl) : this.loadFrameSync(requestUrl);\n    }\n\n    /**\n     * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\n     * @param iframe\n     * @param timeout\n     */\n    monitorIframeForHash(iframe: HTMLIFrameElement, timeout: number): Promise<string> {\n        return new Promise((resolve, reject) => {\n            if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\n                this.logger.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`);\n            }\n\n            /*\n             * Polling for iframes can be purely timing based,\n             * since we don't need to account for interaction.\n             */\n            const nowMark = window.performance.now();\n            const timeoutMark = nowMark + timeout;\n\n            const intervalId = setInterval(() => {\n                if (window.performance.now() > timeoutMark) {\n                    this.removeHiddenIframe(iframe);\n                    clearInterval(intervalId);\n                    reject(BrowserAuthError.createMonitorIframeTimeoutError());\n                    return;\n                }\n\n                let href: string = Constants.EMPTY_STRING;\n                const contentWindow = iframe.contentWindow;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = contentWindow ? contentWindow.location.href : Constants.EMPTY_STRING;\n                } catch (e) {}\n\n                if (StringUtils.isEmpty(href)) {\n                    return;\n                }\n\n                const contentHash = contentWindow ? contentWindow.location.hash: Constants.EMPTY_STRING;\n                if (UrlString.hashContainsKnownProperties(contentHash)) {\n                    // Success case\n                    this.removeHiddenIframe(iframe);\n                    clearInterval(intervalId);\n                    resolve(contentHash);\n                    return;\n                }\n            }, BrowserConstants.POLL_INTERVAL_MS);\n        });\n    }\n\n    /**\n     * @hidden\n     * Loads iframe with authorization endpoint URL\n     * @ignore\n     */\n    private loadFrame(urlNavigate: string): Promise<HTMLIFrameElement> {\n        /*\n         * This trick overcomes iframe navigation in IE\n         * IE does not load the page consistently in iframe\n         */\n\n        return new Promise((resolve, reject) => {\n            const frameHandle = this.createHiddenIframe();\n\n            setTimeout(() => {\n                if (!frameHandle) {\n                    reject(\"Unable to load iframe\");\n                    return;\n                }\n\n                frameHandle.src = urlNavigate;\n\n                resolve(frameHandle);\n            }, this.navigateFrameWait);\n        });\n    }\n\n    /**\n     * @hidden\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\n     * @param urlNavigate\n     * @param frameName\n     * @param logger\n     */\n    private loadFrameSync(urlNavigate: string): HTMLIFrameElement{\n        const frameHandle = this.createHiddenIframe();\n\n        frameHandle.src = urlNavigate;\n\n        return frameHandle;\n    }\n\n    /**\n     * @hidden\n     * Creates a new hidden iframe or gets an existing one for silent token renewal.\n     * @ignore\n     */\n    private createHiddenIframe(): HTMLIFrameElement {\n        const authFrame = document.createElement(\"iframe\");\n\n        authFrame.style.visibility = \"hidden\";\n        authFrame.style.position = \"absolute\";\n        authFrame.style.width = authFrame.style.height = \"0\";\n        authFrame.style.border = \"0\";\n        authFrame.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\n        document.getElementsByTagName(\"body\")[0].appendChild(authFrame);\n\n        return authFrame;\n    }\n\n    /**\n     * @hidden\n     * Removes a hidden iframe from the page.\n     * @ignore\n     */\n    private removeHiddenIframe(iframe: HTMLIFrameElement): void {\n        if (document.body === iframe.parentNode) {\n            document.body.removeChild(iframe);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, ICrypto, Logger, StringUtils, PromptValue, CommonAuthorizationCodeRequest, AuthorizationCodeClient, AuthError, Constants, UrlString, ServerAuthorizationCodeResponse, ProtocolUtils, IPerformanceClient, PerformanceEvents } from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants\";\nimport { SilentHandler } from \"../interaction_handler/SilentHandler\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { NativeInteractionClient } from \"./NativeInteractionClient\";\n\nexport class SilentIframeClient extends StandardInteractionClient {\n    protected apiId: ApiId;\n\n    constructor(config: BrowserConfiguration, storageImpl: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, navigationClient: INavigationClient, apiId: ApiId, performanceClient: IPerformanceClient, nativeMessageHandler?: NativeMessageHandler, correlationId?: string) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        this.apiId = apiId;\n    }\n\n    /**\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none\n     * @param request\n     */\n    async acquireToken(request: SsoSilentRequest): Promise<AuthenticationResult> {\n        this.logger.verbose(\"acquireTokenByIframe called\");\n        const acquireTokenMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\n        // Check that we have some SSO data\n        if (StringUtils.isEmpty(request.loginHint) && StringUtils.isEmpty(request.sid) && (!request.account || StringUtils.isEmpty(request.account.username))) {\n            this.logger.warning(\"No user hint provided. The authorization server may need more information to complete this request.\");\n        }\n\n        // Check that prompt is set to none, throw error if it is set to anything else.\n        if (request.prompt && request.prompt !== PromptValue.NONE) {\n            acquireTokenMeasurement.endMeasurement({\n                success: false\n            });\n            throw BrowserAuthError.createSilentPromptValueError(request.prompt);\n        }\n\n        // Create silent request\n        const silentRequest: AuthorizationUrlRequest = await this.initializeAuthorizationRequest({\n            ...request,\n            prompt: PromptValue.NONE\n        }, InteractionType.Silent);\n        this.browserStorage.updateCacheEntries(silentRequest.state, silentRequest.nonce, silentRequest.authority, silentRequest.loginHint || Constants.EMPTY_STRING, silentRequest.account || null);\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\n\n        try {\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n            this.logger.verbose(\"Auth code client created\");\n\n            return await this.silentTokenHelper(authClient, silentRequest).then((result: AuthenticationResult) => {\n                acquireTokenMeasurement.endMeasurement({\n                    success: true,\n                    fromCache: false\n                });\n                return result;\n            });\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.browserStorage.cleanRequestByState(silentRequest.state);\n            acquireTokenMeasurement.endMeasurement({\n                errorCode: e instanceof AuthError && e.errorCode || undefined,\n                subErrorCode: e instanceof AuthError && e.subError || undefined,\n                success: false\n            });\n            throw e;\n        }\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n    }\n\n    /**\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\n     * @param navigateUrl\n     * @param userRequestScopes\n     */\n    protected async silentTokenHelper(authClient: AuthorizationCodeClient, silentRequest: AuthorizationUrlRequest): Promise<AuthenticationResult> {\n        // Create auth code request and generate PKCE params\n        const authCodeRequest: CommonAuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(silentRequest);\n        // Create authorize request url\n        const navigateUrl = await authClient.getAuthCodeUrl({\n            ...silentRequest,\n            nativeBroker: NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, silentRequest.authenticationScheme)\n        });\n        // Create silent handler\n        const silentHandler = new SilentHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.config.system.navigateFrameWait);\n        // Get the frame handle for the silent request\n        const msalFrame = await silentHandler.initiateAuthRequest(navigateUrl);\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n        const hash = await silentHandler.monitorIframeForHash(msalFrame, this.config.system.iframeHashTimeout);\n        // Deserialize hash fragment response parameters.\n        const serverParams: ServerAuthorizationCodeResponse = UrlString.getDeserializedHash(hash);\n        const state = this.validateAndExtractStateFromHash(serverParams, InteractionType.Silent, authCodeRequest.correlationId);\n\n        if (serverParams.accountId) {\n            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n            if (!this.nativeMessageHandler) {\n                throw BrowserAuthError.createNativeConnectionNotEstablishedError();\n            }\n            const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.apiId, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.correlationId);\n            const { userRequestState } = ProtocolUtils.parseRequestState(this.browserCrypto, state);\n            return nativeInteractionClient.acquireToken({\n                ...silentRequest,\n                state: userRequestState,\n                prompt: PromptValue.NONE\n            }).finally(() => {\n                this.browserStorage.cleanRequestByState(state);\n            });\n        }\n\n        // Handle response from hash string\n        return silentHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientConfiguration } from \"../config/ClientConfiguration\";\nimport { BaseClient } from \"./BaseClient\";\nimport { CommonRefreshTokenRequest } from \"../request/CommonRefreshTokenRequest\";\nimport { Authority } from \"../authority/Authority\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder\";\nimport { GrantType, AuthenticationScheme, Errors  } from \"../utils/Constants\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { CommonSilentFlowRequest } from \"../request/CommonSilentFlowRequest\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { ServerError } from \"../error/ServerError\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { UrlString } from \"../url/UrlString\";\nimport { CcsCredentialType } from \"../account/CcsCredential\";\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo\";\nimport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage } from \"../error/InteractionRequiredAuthError\";\n\n/**\n * OAuth2.0 refresh token client\n */\nexport class RefreshTokenClient extends BaseClient {\n\n    constructor(configuration: ClientConfiguration) {\n        super(configuration);\n    }\n\n    public async acquireToken(request: CommonRefreshTokenRequest): Promise<AuthenticationResult>{\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await this.executeTokenRequest(request, this.authority);\n\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            this.config.serializableCache,\n            this.config.persistencePlugin\n        );\n\n        responseHandler.validateTokenResponse(response.body);\n        return responseHandler.handleServerTokenResponse(\n            response.body,\n            this.authority,\n            reqTimestamp,\n            request,\n            undefined,\n            undefined,\n            true\n        );\n    }\n\n    /**\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\n     * @param request\n     */\n    public async acquireTokenByRefreshToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n            throw ClientConfigurationError.createEmptyTokenRequestError();\n        }\n\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw ClientAuthError.createNoAccountInSilentRequestError();\n        }\n\n        // try checking if FOCI is enabled for the given application\n        const isFOCI = this.cacheManager.isAppMetadataFOCI(request.account.environment, this.config.authOptions.clientId);\n\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\n        if (isFOCI) {\n            try {\n                return this.acquireTokenWithCachedRefreshToken(request, true);\n            } catch (e) {\n                const noFamilyRTInCache = e instanceof InteractionRequiredAuthError && e.errorCode === InteractionRequiredAuthErrorMessage.noTokensFoundError.code;\n                const clientMismatchErrorWithFamilyRT = e instanceof ServerError && e.errorCode === Errors.INVALID_GRANT_ERROR && e.subError === Errors.CLIENT_MISMATCH_ERROR;\n\n                // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\n                if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\n                    return this.acquireTokenWithCachedRefreshToken(request, false);\n                // throw in all other cases\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        // fall back to application refresh token acquisition\n        return this.acquireTokenWithCachedRefreshToken(request, false);\n    }\n\n    /**\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\n     * @param request\n     */\n    private async acquireTokenWithCachedRefreshToken(request: CommonSilentFlowRequest, foci: boolean) {\n        // fetches family RT or application RT based on FOCI value\n        const refreshToken = this.cacheManager.readRefreshTokenFromCache(this.config.authOptions.clientId, request.account, foci);\n\n        // no refresh Token\n        if (!refreshToken) {\n            throw InteractionRequiredAuthError.createNoTokensFoundError();\n        }\n\n        const refreshTokenRequest: CommonRefreshTokenRequest = {\n            ...request,\n            refreshToken: refreshToken.secret,\n            authenticationScheme: request.authenticationScheme || AuthenticationScheme.BEARER,\n            ccsCredential: {\n                credential: request.account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID\n            }\n        };\n\n        return this.acquireToken(refreshTokenRequest);\n    }\n\n    /**\n     * Constructs the network message and makes a NW call to the underlying secure token service\n     * @param request\n     * @param authority\n     */\n    private async executeTokenRequest(request: CommonRefreshTokenRequest, authority: Authority)\n        : Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n\n        const requestBody = await this.createTokenRequestBody(request);\n        const queryParameters = this.createTokenQueryParameters(request);\n        const headers: Record<string, string> = this.createTokenRequestHeaders(request.ccsCredential);\n        const thumbprint: RequestThumbprint = {\n            clientId: this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid\n        };\n\n        const endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParameters);\n        return this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint);\n    }\n\n    /**\n     * Creates query string for the /token request\n     * @param request\n     */\n    private createTokenQueryParameters(request: CommonRefreshTokenRequest): string {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        if (request.tokenQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * Helper function to create the token request body\n     * @param request\n     */\n    private async createTokenRequestBody(request: CommonRefreshTokenRequest): Promise<string> {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\n\n        parameterBuilder.addScopes(request.scopes);\n\n        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\n\n        parameterBuilder.addClientInfo();\n\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        parameterBuilder.addThrottling();\n\n        if (this.serverTelemetryManager) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n\n        const correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n\n        parameterBuilder.addRefreshToken(request.refreshToken);\n\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils);\n            const reqCnfData = await popTokenGenerator.generateCnf(request);\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData.reqCnfString);\n        } else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if(request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            } else {\n                throw ClientConfigurationError.createMissingSshJwkError();\n            }\n        }\n\n        if (!StringUtils.isEmptyObj(request.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n\n        if (this.config.systemOptions.preventCorsPreflight && request.ccsCredential) {\n            switch (request.ccsCredential.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.ccsCredential.credential);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(request.ccsCredential.credential);\n                    break;\n            }\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { CommonSilentFlowRequest, AuthenticationResult, ServerTelemetryManager, RefreshTokenClient, AuthError, AzureCloudOptions, PerformanceEvents } from \"@azure/msal-common\";\nimport { ApiId } from \"../utils/BrowserConstants\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\n\nexport class SilentRefreshClient extends StandardInteractionClient {\n    /**\n     * Exchanges the refresh token for new tokens\n     * @param request\n     */\n    async acquireToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        const silentRequest: CommonSilentFlowRequest = {\n            ...request,\n            ...await this.initializeBaseRequest(request)\n        };\n        const acquireTokenMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SilentRefreshClientAcquireToken, silentRequest.correlationId);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\n\n        const refreshTokenClient = await this.createRefreshTokenClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n        this.logger.verbose(\"Refresh token client created\");\n\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\n        return refreshTokenClient.acquireTokenByRefreshToken(silentRequest)\n            .then((result: AuthenticationResult) => {\n                acquireTokenMeasurement.endMeasurement({\n                    success: true,\n                    fromCache: result.fromCache\n                });\n\n                return result;\n            })\n            .catch((e:AuthError)=> {\n                if (e instanceof AuthError) {\n                    (e as AuthError).setCorrelationId(this.correlationId);\n                }\n                serverTelemetryManager.cacheFailedRequest(e);\n                acquireTokenMeasurement.endMeasurement({\n                    errorCode: e.errorCode,\n                    subErrorCode: e.subError,\n                    success: false\n                });\n                throw e;\n            });\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n    }\n\n    /**\n     * Creates a Refresh Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createRefreshTokenClient(serverTelemetryManager: ServerTelemetryManager, authorityUrl?: string, azureCloudOptions?: AzureCloudOptions): Promise<RefreshTokenClient> {\n        // Create auth module.\n        const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl, azureCloudOptions);\n        return new RefreshTokenClient(clientConfig);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccessTokenEntity, ICrypto, IdTokenEntity, Logger, ScopeSet, Authority, AuthorityOptions, ExternalTokenResponse, AccountEntity, AuthToken } from \"@azure/msal-common\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { BrowserCacheManager } from \"./BrowserCacheManager\";\nimport { ITokenCache } from \"./ITokenCache\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\n\nexport type LoadTokenOptions = {\n    clientInfo?: string,\n    expiresOn?: number,\n    extendedExpiresOn?: number\n};\n\n/**\n * Token cache manager\n */\nexport class TokenCache implements ITokenCache {\n    // Flag to indicate if in browser environment\n    public isBrowserEnvironment: boolean;\n    // Input configuration by developer/user\n    protected config: BrowserConfiguration;\n    // Browser cache storage\n    private storage: BrowserCacheManager;\n    // Logger\n    private logger: Logger;\n    // Crypto class\n    private cryptoObj: ICrypto;\n\n    constructor(configuration: BrowserConfiguration, storage: BrowserCacheManager, logger: Logger, cryptoObj: ICrypto) {\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\n        this.config = configuration;\n        this.storage = storage;\n        this.logger = logger;\n        this.cryptoObj = cryptoObj;\n    }\n\n    // Move getAllAccounts here and cache utility APIs\n\n    /**\n     * API to load tokens to msal-browser cache.\n     * @param request\n     * @param response\n     * @param options\n     */\n    loadExternalTokens(request: SilentRequest, response: ExternalTokenResponse, options: LoadTokenOptions): void {\n        this.logger.info(\"TokenCache - loadExternalTokens called\");\n\n        if (!response.id_token) {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"Please ensure server response includes id token.\");\n        }\n\n        if (request.account) {\n            this.loadIdToken(response.id_token, request.account.homeAccountId, request.account.environment, request.account.tenantId, options);\n            this.loadAccessToken(request, response, request.account.homeAccountId, request.account.environment, request.account.tenantId, options);\n        } else if (request.authority) {\n\n            const authorityUrl = Authority.generateAuthority(request.authority, request.azureCloudOptions);\n            const authorityOptions: AuthorityOptions = {\n                protocolMode: this.config.auth.protocolMode,\n                knownAuthorities: this.config.auth.knownAuthorities,\n                cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n                authorityMetadata: this.config.auth.authorityMetadata,\n                skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\n            };\n            const authority = new Authority(authorityUrl, this.config.system.networkClient, this.storage, authorityOptions);\n\n            // \"clientInfo\" from options takes precedence over \"clientInfo\" in response\n            if (options.clientInfo) {\n                this.logger.trace(\"TokenCache - homeAccountId from options\");\n                this.loadIdToken(response.id_token, options.clientInfo, authority.hostnameAndPort, authority.tenant, options);\n                this.loadAccessToken(request, response, options.clientInfo, authority.hostnameAndPort, authority.tenant, options);\n            } else if (response.client_info) {\n                this.logger.trace(\"TokenCache - homeAccountId from response\");\n                this.loadIdToken(response.id_token, response.client_info, authority.hostnameAndPort, authority.tenant, options);\n                this.loadAccessToken(request, response, response.client_info, authority.hostnameAndPort, authority.tenant, options);\n            } else {\n                throw BrowserAuthError.createUnableToLoadTokenError(\"Please provide clientInfo in the response or options.\");\n            }\n        } else {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"Please provide a request with an account or a request with authority.\");\n        }\n    }\n\n    /**\n     * Helper function to load id tokens to msal-browser cache\n     * @param idToken\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @param options\n     */\n    private loadIdToken(idToken: string, homeAccountId: string, environment: string, tenantId: string, options: LoadTokenOptions): void {\n\n        const idTokenEntity = IdTokenEntity.createIdTokenEntity(homeAccountId, environment, idToken, this.config.auth.clientId, tenantId);\n        const idAuthToken = new AuthToken(idToken, this.cryptoObj);\n        const accountEntity = options.clientInfo ?\n            AccountEntity.createAccount(options.clientInfo, homeAccountId, idAuthToken, undefined, undefined, undefined, environment) :\n            AccountEntity.createGenericAccount(homeAccountId, idAuthToken, undefined, undefined, undefined, environment);\n\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading id token\");\n            this.storage.setAccount(accountEntity);\n            this.storage.setIdTokenCredential(idTokenEntity);\n        } else {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"loadExternalTokens is designed to work in browser environments only.\");\n        }\n    }\n\n    /**\n     * Helper function to load access tokens to msal-browser cache\n     * @param request\n     * @param response\n     * @param options\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @returns\n     */\n    private loadAccessToken(request: SilentRequest, response: ExternalTokenResponse, homeAccountId: string, environment: string, tenantId: string, options: LoadTokenOptions): void {\n\n        if (!response.access_token) {\n            this.logger.verbose(\"TokenCache - No access token provided for caching\");\n            return;\n        }\n\n        if (!response.expires_in) {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"Please ensure server response includes expires_in value.\");\n        }\n\n        if (!options.extendedExpiresOn) {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"Please provide an extendedExpiresOn value in the options.\");\n        }\n\n        const scopes = new ScopeSet(request.scopes).printScopes();\n        const expiresOn = options.expiresOn || (response.expires_in + new Date().getTime() / 1000);\n        const extendedExpiresOn = options.extendedExpiresOn;\n\n        const accessTokenEntity = AccessTokenEntity.createAccessTokenEntity(homeAccountId, environment, response.access_token, this.config.auth.clientId, tenantId, scopes, expiresOn, extendedExpiresOn, this.cryptoObj);\n\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading access token\");\n            this.storage.setAccessTokenCredential(accessTokenEntity);\n        } else {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"loadExternalTokens is designed to work in browser environments only.\");\n        }\n    }\n}\n\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseClient } from \"./BaseClient\";\nimport { ClientConfiguration } from \"../config/ClientConfiguration\";\nimport { CommonSilentFlowRequest } from \"../request/CommonSilentFlowRequest\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { AuthToken } from \"../account/AuthToken\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { RefreshTokenClient } from \"./RefreshTokenClient\";\nimport { ClientAuthError, ClientAuthErrorMessage } from \"../error/ClientAuthError\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { CacheRecord } from \"../cache/entities/CacheRecord\";\nimport { CacheOutcome } from \"../utils/Constants\";\n\nexport class SilentFlowClient extends BaseClient {\n\n    constructor(configuration: ClientConfiguration) {\n        super(configuration);\n    }\n\n    /**\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\n     * the given token and returns the renewed token\n     * @param request\n     */\n    async acquireToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        try {\n            return await this.acquireCachedToken(request);\n        } catch (e) {\n            if (e instanceof ClientAuthError && e.errorCode === ClientAuthErrorMessage.tokenRefreshRequired.code) {\n                const refreshTokenClient = new RefreshTokenClient(this.config);\n                return refreshTokenClient.acquireTokenByRefreshToken(request);\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    /**\n     * Retrieves token from cache or throws an error if it must be refreshed.\n     * @param request\n     */\n    async acquireCachedToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n            throw ClientConfigurationError.createEmptyTokenRequestError();\n        }\n\n        if (request.forceRefresh) {\n            // Must refresh due to present force_refresh flag.\n            this.serverTelemetryManager?.setCacheOutcome(CacheOutcome.FORCE_REFRESH);\n            this.logger.info(\"SilentFlowClient:acquireCachedToken - Skipping cache because forceRefresh is true.\");\n            throw ClientAuthError.createRefreshRequiredError();\n        }\n\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw ClientAuthError.createNoAccountInSilentRequestError();\n        }\n\n        const environment = request.authority || this.authority.getPreferredCache();\n\n        const cacheRecord = this.cacheManager.readCacheRecord(request.account, this.config.authOptions.clientId, request, environment);\n        \n        if (!cacheRecord.accessToken) {\n            // Must refresh due to non-existent access_token.\n            this.serverTelemetryManager?.setCacheOutcome(CacheOutcome.NO_CACHED_ACCESS_TOKEN);\n            this.logger.info(\"SilentFlowClient:acquireCachedToken - No access token found in cache for the given properties.\");\n            throw ClientAuthError.createRefreshRequiredError();\n        } else if (\n            TimeUtils.wasClockTurnedBack(cacheRecord.accessToken.cachedAt) ||\n            TimeUtils.isTokenExpired(cacheRecord.accessToken.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)\n        ) {\n            // Must refresh due to expired access_token.\n            this.serverTelemetryManager?.setCacheOutcome(CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED);\n            this.logger.info(`SilentFlowClient:acquireCachedToken - Cached access token is expired or will expire within ${this.config.systemOptions.tokenRenewalOffsetSeconds} seconds.`);\n            throw ClientAuthError.createRefreshRequiredError();\n        } else if (cacheRecord.accessToken.refreshOn && TimeUtils.isTokenExpired(cacheRecord.accessToken.refreshOn, 0)) {\n            // Must refresh due to the refresh_in value.\n            this.serverTelemetryManager?.setCacheOutcome(CacheOutcome.REFRESH_CACHED_ACCESS_TOKEN);\n            this.logger.info(\"SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'.\");\n            throw ClientAuthError.createRefreshRequiredError();\n        }\n\n        if (this.config.serverTelemetryManager) {\n            this.config.serverTelemetryManager.incrementCacheHits();\n        }\n\n        return await this.generateResultFromCacheRecord(cacheRecord, request);\n    }\n\n    /**\n     * Helper function to build response object from the CacheRecord\n     * @param cacheRecord\n     */\n    private async generateResultFromCacheRecord(cacheRecord: CacheRecord, request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        let idTokenObj: AuthToken | undefined;\n        if (cacheRecord.idToken) {\n            idTokenObj = new AuthToken(cacheRecord.idToken.secret, this.config.cryptoInterface);\n        }\n        return await ResponseHandler.generateAuthenticationResult(\n            this.cryptoUtils,\n            this.authority,\n            cacheRecord,\n            true,\n            request,\n            idTokenObj\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { CommonSilentFlowRequest, AuthenticationResult, SilentFlowClient, ServerTelemetryManager, AccountInfo, AzureCloudOptions, PerformanceEvents, AuthError} from \"@azure/msal-common\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { ApiId } from \"../utils/BrowserConstants\";\nimport { BrowserAuthError, BrowserAuthErrorMessage } from \"../error/BrowserAuthError\";\n\nexport class SilentCacheClient extends StandardInteractionClient {\n    /**\n     * Returns unexpired tokens from the cache, if available\n     * @param silentRequest\n     */\n    async acquireToken(silentRequest: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        const acquireTokenMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SilentCacheClientAcquireToken, silentRequest.correlationId);\n        // Telemetry manager only used to increment cacheHits here\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\n\n        const silentAuthClient = await this.createSilentFlowClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n        this.logger.verbose(\"Silent auth client created\");\n\n        try {\n            const cachedToken = await silentAuthClient.acquireCachedToken(silentRequest);\n            acquireTokenMeasurement.endMeasurement({\n                success: true,\n                fromCache: true\n            });\n            return cachedToken;\n        } catch (error) {\n            if (error instanceof BrowserAuthError && error.errorCode === BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code) {\n                this.logger.verbose(\"Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair.\");\n            }\n            acquireTokenMeasurement.endMeasurement({\n                errorCode: error instanceof AuthError && error.errorCode || undefined,\n                subErrorCode: error instanceof AuthError && error.subError || undefined,\n                success: false\n            });\n            throw error;\n        }\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n    }\n\n    /**\n     * Creates an Silent Flow Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createSilentFlowClient(serverTelemetryManager: ServerTelemetryManager, authorityUrl?: string, azureCloudOptions?: AzureCloudOptions): Promise<SilentFlowClient> {\n        // Create auth module.\n        const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl, azureCloudOptions);\n        return new SilentFlowClient(clientConfig);\n    }\n\n    async initializeSilentRequest(request: SilentRequest, account: AccountInfo): Promise<CommonSilentFlowRequest> {\n        return {\n            ...request,\n            ...await this.initializeBaseRequest(request),\n            account: account,\n            forceRefresh: request.forceRefresh || false\n        };\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthorizationCodeClient, ClientConfiguration } from \"@azure/msal-common\";\n\nexport class HybridSpaAuthorizationCodeClient extends AuthorizationCodeClient {\n    constructor(config: ClientConfiguration) {\n        super(config);\n        this.includeRedirectUri = false;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, ICrypto, Logger, CommonAuthorizationCodeRequest, AuthError, Constants, IPerformanceClient } from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants\";\nimport { SilentHandler } from \"../interaction_handler/SilentHandler\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { HybridSpaAuthorizationCodeClient } from \"./HybridSpaAuthorizationCodeClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\n\nexport class SilentAuthCodeClient extends StandardInteractionClient {\n    private apiId: ApiId;\n\n    constructor(config: BrowserConfiguration, storageImpl: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, navigationClient: INavigationClient, apiId: ApiId, performanceClient: IPerformanceClient, nativeMessageHandler?: NativeMessageHandler, correlationId?: string) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        this.apiId = apiId;\n    }\n    \n    /**\n     * Acquires a token silently by redeeming an authorization code against the /token endpoint\n     * @param request \n     */\n    async acquireToken(request: AuthorizationCodeRequest): Promise<AuthenticationResult> {\n        this.logger.trace(\"SilentAuthCodeClient.acquireToken called\");\n\n        // Auth code payload is required\n        if (!request.code) {\n            throw BrowserAuthError.createAuthCodeRequiredError();\n            \n        }\n\n        // Create silent request\n        const silentRequest: AuthorizationUrlRequest = await this.initializeAuthorizationRequest(request, InteractionType.Silent);\n        this.browserStorage.updateCacheEntries(silentRequest.state, silentRequest.nonce, silentRequest.authority, silentRequest.loginHint || Constants.EMPTY_STRING, silentRequest.account || null);\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\n\n        try {\n\n            // Create auth code request (PKCE not needed)\n            const authCodeRequest: CommonAuthorizationCodeRequest = {\n                ...silentRequest,\n                code: request.code\n            };\n\n            // Initialize the client\n            const clientConfig = await this.getClientConfiguration(serverTelemetryManager, silentRequest.authority);\n            const authClient: HybridSpaAuthorizationCodeClient = new HybridSpaAuthorizationCodeClient(clientConfig);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create silent handler\n            const silentHandler = new SilentHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.config.system.navigateFrameWait);\n\n            // Handle auth code parameters from request\n            return silentHandler.handleCodeResponseFromServer(\n                {\n                    code: request.code,\n                    msgraph_host: request.msGraphHost,\n                    cloud_graph_host_name: request.cloudGraphHostName,\n                    cloud_instance_host_name: request.cloudInstanceHostName\n                },\n                silentRequest.state, \n                authClient.authority, \n                this.networkClient,\n                false\n            );\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.browserStorage.cleanRequestByState(silentRequest.state);\n            throw e;\n        }\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IPerformanceMeasurement } from \"@azure/msal-common\";\n\nexport class BrowserPerformanceMeasurement implements IPerformanceMeasurement {\n    private measureName: string;\n    private correlationId: string;\n    private startMark: string;\n    private endMark: string;\n\n    constructor(name: string, correlationId: string) {\n        this.correlationId = correlationId;\n        this.measureName = `msal.measure.${name}.${this.correlationId}`;\n        this.startMark = `msal.start.${name}.${this.correlationId}`;\n        this.endMark = `msal.end.${name}.${this.correlationId}`;\n    }\n\n    static supportsBrowserPerformance(): boolean {\n        return typeof window !== \"undefined\" &&\n            typeof window.performance !== \"undefined\" &&\n            typeof window.performance.mark === \"function\" && \n            typeof window.performance.measure === \"function\" &&\n            typeof window.performance.clearMarks === \"function\" &&\n            typeof window.performance.clearMeasures === \"function\" &&\n            typeof window.performance.getEntriesByName === \"function\";\n    }\n\n    startMeasurement(): void {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                window.performance.mark(this.startMark);\n            } catch (e) {\n                // Silently catch\n            }\n        }\n    }\n\n    endMeasurement():void {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                window.performance.mark(this.endMark);\n                window.performance.measure(this.measureName, this.startMark, this.endMark);\n            } catch (e) {\n                // Silently catch\n            }\n        }\n    }\n\n    flushMeasurement(): number | null {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                const entriesForMeasurement = window.performance.getEntriesByName(this.measureName, \"measure\");\n                if (entriesForMeasurement.length > 0) {\n                    const durationMs = entriesForMeasurement[0].duration;\n                    window.performance.clearMeasures(this.measureName);\n                    window.performance.clearMarks(this.startMark);\n                    window.performance.clearMarks(this.endMark);\n                    return durationMs;\n                }\n            } catch (e) {\n                // Silently catch and return null\n            }\n        }\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger, PerformanceEvent, PerformanceEvents, IPerformanceClient, PerformanceClient, IPerformanceMeasurement, InProgressPerformanceEvent, ApplicationTelemetry } from \"@azure/msal-common\";\nimport { BrowserCrypto } from \"../crypto/BrowserCrypto\";\nimport { GuidGenerator } from \"../crypto/GuidGenerator\";\nimport { BrowserPerformanceMeasurement } from \"./BrowserPerformanceMeasurement\";\n\nexport class BrowserPerformanceClient extends PerformanceClient implements IPerformanceClient {\n    private browserCrypto: BrowserCrypto;\n    private guidGenerator: GuidGenerator;\n    \n    constructor(clientId: string, authority: string, logger: Logger, libraryName: string, libraryVersion: string, applicationTelemetry: ApplicationTelemetry) {\n        super(clientId, authority, logger, libraryName, libraryVersion, applicationTelemetry);\n        this.browserCrypto = new BrowserCrypto(this.logger);\n        this.guidGenerator = new GuidGenerator(this.browserCrypto);\n    }\n    \n    startPerformanceMeasuremeant(measureName: string, correlationId: string): IPerformanceMeasurement {\n        return new BrowserPerformanceMeasurement(measureName, correlationId);\n    }\n\n    generateId() : string {\n        return this.guidGenerator.generateGuid();\n    }\n\n    private getPageVisibility(): string | null {\n        return document.visibilityState?.toString() || null;\n    }\n    \n    /**\n     * Starts measuring performance for a given operation. Returns a function that should be used to end the measurement.\n     * Also captures browser page visibilityState.\n     *\n     * @param {PerformanceEvents} measureName\n     * @param {?string} [correlationId]\n     * @returns {((event?: Partial<PerformanceEvent>) => PerformanceEvent| null)}\n     */\n    startMeasurement(measureName: PerformanceEvents, correlationId?: string): InProgressPerformanceEvent {\n        // Capture page visibilityState and then invoke start/end measurement\n        const startPageVisibility = this.getPageVisibility();\n        \n        const inProgressEvent = super.startMeasurement(measureName, correlationId);\n\n        return {\n            ...inProgressEvent,\n            endMeasurement: (event?: Partial<PerformanceEvent>): PerformanceEvent | null => {\n                return inProgressEvent.endMeasurement({\n                    startPageVisibility,\n                    endPageVisibility: this.getPageVisibility(),\n                    ...event\n                });\n            }\n        };\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CryptoOps } from \"../crypto/CryptoOps\";\nimport { StringUtils, ServerError, InteractionRequiredAuthError, AccountInfo, Constants, INetworkModule, AuthenticationResult, Logger, CommonSilentFlowRequest, ICrypto, DEFAULT_CRYPTO_IMPLEMENTATION, AuthError, PerformanceEvents, PerformanceCallbackFunction, StubPerformanceClient, IPerformanceClient, BaseAuthRequest, PromptValue } from \"@azure/msal-common\";\nimport { BrowserCacheManager, DEFAULT_BROWSER_CACHE_MANAGER } from \"../cache/BrowserCacheManager\";\nimport { BrowserConfiguration, buildConfiguration, Configuration } from \"../config/Configuration\";\nimport { InteractionType, ApiId, BrowserConstants, BrowserCacheLocation, WrapperSKU, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { version, name } from \"../packageMetadata\";\nimport { EventCallbackFunction } from \"../event/EventMessage\";\nimport { EventType } from \"../event/EventType\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { PopupClient } from \"../interaction_client/PopupClient\";\nimport { RedirectClient } from \"../interaction_client/RedirectClient\";\nimport { SilentIframeClient } from \"../interaction_client/SilentIframeClient\";\nimport { SilentRefreshClient } from \"../interaction_client/SilentRefreshClient\";\nimport { TokenCache } from \"../cache/TokenCache\";\nimport { ITokenCache } from \"../cache/ITokenCache\";\nimport { NativeInteractionClient } from \"../interaction_client/NativeInteractionClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { NativeAuthError } from \"../error/NativeAuthError\";\nimport { SilentCacheClient } from \"../interaction_client/SilentCacheClient\";\nimport { SilentAuthCodeClient } from \"../interaction_client/SilentAuthCodeClient\";\nimport { BrowserAuthError  } from \"../error/BrowserAuthError\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { NativeTokenRequest } from \"../broker/nativeBroker/NativeRequest\";\nimport { BrowserPerformanceClient } from \"../telemetry/BrowserPerformanceClient\";\n\nexport abstract class ClientApplication {\n\n    // Crypto interface implementation\n    protected readonly browserCrypto: ICrypto;\n\n    // Storage interface implementation\n    protected readonly browserStorage: BrowserCacheManager;\n\n    // Network interface implementation\n    protected readonly networkClient: INetworkModule;\n\n    // Navigation interface implementation\n    protected navigationClient: INavigationClient;\n\n    // Input configuration by developer/user\n    protected config: BrowserConfiguration;\n\n    // Token cache implementation\n    private tokenCache: TokenCache;\n\n    // Logger\n    protected logger: Logger;\n\n    // Flag to indicate if in browser environment\n    protected isBrowserEnvironment: boolean;\n\n    protected eventHandler: EventHandler;\n\n    // Redirect Response Object\n    protected redirectResponse: Map<string, Promise<AuthenticationResult | null>>;\n\n    // Native Extension Provider\n    protected nativeExtensionProvider: NativeMessageHandler | undefined;\n\n    // Hybrid auth code responses\n    private hybridAuthCodeResponses: Map<string, Promise<AuthenticationResult>>;\n\n    // Performance telemetry client\n    protected performanceClient: IPerformanceClient;\n\n    // Flag representing whether or not the initialize API has been called and completed\n    protected initialized: boolean;\n\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     */\n    constructor(configuration: Configuration) {\n        /*\n         * If loaded in an environment where window is not available,\n         * set internal flag to false so that further requests fail.\n         * This is to support server-side rendering environments.\n         */\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\n        // Set the configuration.\n        this.config = buildConfiguration(configuration, this.isBrowserEnvironment);\n        this.initialized = false;\n\n        // Initialize logger\n        this.logger = new Logger(this.config.system.loggerOptions, name, version);\n\n        // Initialize the network module class.\n        this.networkClient = this.config.system.networkClient;\n\n        // Initialize the navigation client class.\n        this.navigationClient = this.config.system.navigationClient;\n\n        // Initialize redirectResponse Map\n        this.redirectResponse = new Map();\n\n        // Initial hybrid spa map\n        this.hybridAuthCodeResponses = new Map();\n\n        // Initialize performance client\n        this.performanceClient = this.isBrowserEnvironment ?\n            new BrowserPerformanceClient(this.config.auth.clientId, this.config.auth.authority, this.logger, name, version, this.config.telemetry.application) :\n            new StubPerformanceClient(this.config.auth.clientId, this.config.auth.authority, this.logger, name, version, this.config.telemetry.application);\n\n        // Initialize the crypto class.\n        this.browserCrypto = this.isBrowserEnvironment ? new CryptoOps(this.logger, this.performanceClient) : DEFAULT_CRYPTO_IMPLEMENTATION;\n\n        this.eventHandler = new EventHandler(this.logger, this.browserCrypto);\n\n        // Initialize the browser storage class.\n        this.browserStorage = this.isBrowserEnvironment ?\n            new BrowserCacheManager(this.config.auth.clientId, this.config.cache, this.browserCrypto, this.logger) :\n            DEFAULT_BROWSER_CACHE_MANAGER(this.config.auth.clientId, this.logger);\n\n        // Initialize the token cache\n        this.tokenCache = new TokenCache(this.config, this.browserStorage, this.logger, this.browserCrypto);\n    }\n\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     */\n    async initialize(): Promise<void> {\n        this.logger.trace(\"initialize called\");\n        if (this.initialized) {\n            this.logger.info(\"initialize has already been called, exiting early.\");\n            return;\n        }\n        this.eventHandler.emitEvent(EventType.INITIALIZE_START);\n        if (this.config.system.allowNativeBroker) {\n            try {\n                this.nativeExtensionProvider = await NativeMessageHandler.createProvider(this.logger, this.config.system.nativeBrokerHandshakeTimeout);\n            } catch (e) {\n                this.logger.verbose(e);\n            }\n        }\n        this.initialized = true;\n        this.eventHandler.emitEvent(EventType.INITIALIZE_END);\n    }\n\n    // #region Redirect Flow\n\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    async handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null> {\n        this.logger.verbose(\"handleRedirectPromise called\");\n        // Block token acquisition before initialize has been called if native brokering is enabled\n        BrowserUtils.blockNativeBrokerCalledBeforeInitialized(this.config.system.allowNativeBroker, this.initialized);\n\n        const loggedInAccounts = this.getAllAccounts();\n        if (this.isBrowserEnvironment) {\n            /**\n             * Store the promise on the PublicClientApplication instance if this is the first invocation of handleRedirectPromise,\n             * otherwise return the promise from the first invocation. Prevents race conditions when handleRedirectPromise is called\n             * several times concurrently.\n             */\n            const redirectResponseKey = hash || Constants.EMPTY_STRING;\n            let response = this.redirectResponse.get(redirectResponseKey);\n            if (typeof response === \"undefined\") {\n                this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_START, InteractionType.Redirect);\n                this.logger.verbose(\"handleRedirectPromise has been called for the first time, storing the promise\");\n\n                const request: NativeTokenRequest | null = this.browserStorage.getCachedNativeRequest();\n                let redirectResponse: Promise<AuthenticationResult | null>;\n                if (request && NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider) && this.nativeExtensionProvider && !hash) {\n                    this.logger.trace(\"handleRedirectPromise - acquiring token from native platform\");\n                    const nativeClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.handleRedirectPromise, this.performanceClient, this.nativeExtensionProvider, request.accountId, request.correlationId);\n                    redirectResponse = nativeClient.handleRedirectPromise();\n                } else {\n                    this.logger.trace(\"handleRedirectPromise - acquiring token from web flow\");\n                    const correlationId = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, true) || Constants.EMPTY_STRING;\n                    const redirectClient = this.createRedirectClient(correlationId);\n                    redirectResponse = redirectClient.handleRedirectPromise(hash);\n                }\n\n                response = redirectResponse.then((result: AuthenticationResult | null) => {\n                    if (result) {\n                        // Emit login event if number of accounts change\n                        const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\n                        if (isLoggingIn) {\n                            this.eventHandler.emitEvent(EventType.LOGIN_SUCCESS, InteractionType.Redirect, result);\n                            this.logger.verbose(\"handleRedirectResponse returned result, login success\");\n                        } else {\n                            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Redirect, result);\n                            this.logger.verbose(\"handleRedirectResponse returned result, acquire token success\");\n                        }\n                    }\n                    this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_END, InteractionType.Redirect);\n\n                    return result;\n                }).catch((e) => {\n                    // Emit login event if there is an account\n                    if (loggedInAccounts.length > 0) {\n                        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Redirect, null, e);\n                    } else {\n                        this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Redirect, null, e);\n                    }\n                    this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_END, InteractionType.Redirect);\n\n                    throw e;\n                });\n                this.redirectResponse.set(redirectResponseKey, response);\n            } else {\n                this.logger.verbose(\"handleRedirectPromise has been called previously, returning the result from the first call\");\n            }\n\n            return response;\n        }\n        this.logger.verbose(\"handleRedirectPromise returns null, not browser environment\");\n        return null;\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        // Preflight request\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"acquireTokenRedirect called\", correlationId);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Redirect);\n\n        // If logged in, emit acquire token events\n        const isLoggedIn = this.getAllAccounts().length > 0;\n        if (isLoggedIn) {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Redirect, request);\n        } else {\n            this.eventHandler.emitEvent(EventType.LOGIN_START, InteractionType.Redirect, request);\n        }\n\n        let result: Promise<void>;\n\n        if (this.nativeExtensionProvider && this.canUseNative(request)) {\n            const nativeClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenRedirect, this.performanceClient, this.nativeExtensionProvider, this.getNativeAccountId(request), request.correlationId);\n            result = nativeClient.acquireTokenRedirect(request).catch((e: AuthError) => {\n                if (e instanceof NativeAuthError && e.isFatal()) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const redirectClient = this.createRedirectClient(request.correlationId);\n                    return redirectClient.acquireToken(request);\n                } else if (e instanceof InteractionRequiredAuthError) {\n                    this.logger.verbose(\"acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow\");\n                    const redirectClient = this.createRedirectClient(request.correlationId);\n                    return redirectClient.acquireToken(request);\n                }\n                this.browserStorage.setInteractionInProgress(false);\n                throw e;\n            });\n        } else {\n            const redirectClient = this.createRedirectClient(request.correlationId);\n            result = redirectClient.acquireToken(request);\n        }\n\n        return result.catch((e) => {\n            // If logged in, emit acquire token events\n            if (isLoggedIn) {\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Redirect, null, e);\n            } else {\n                this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Redirect, null, e);\n            }\n            throw e;\n        });\n    }\n\n    // #endregion\n\n    // #region Popup Flow\n\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atPopupMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenPopup, correlationId);\n\n        try {\n            this.logger.verbose(\"acquireTokenPopup called\", correlationId);\n            this.preflightBrowserEnvironmentCheck(InteractionType.Popup);\n        } catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n\n        // If logged in, emit acquire token events\n        const loggedInAccounts = this.getAllAccounts();\n        if (loggedInAccounts.length > 0) {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Popup, request);\n        } else {\n            this.eventHandler.emitEvent(EventType.LOGIN_START, InteractionType.Popup, request);\n        }\n\n        let result: Promise<AuthenticationResult>;\n\n        if (this.canUseNative(request)) {\n            result = this.acquireTokenNative(request, ApiId.acquireTokenPopup).then((response) => {\n                this.browserStorage.setInteractionInProgress(false);\n                atPopupMeasurement.endMeasurement({\n                    success: true,\n                    isNativeBroker: true\n                });\n                atPopupMeasurement.flushMeasurement();\n                return response;\n            }).catch((e: AuthError) => {\n                if (e instanceof NativeAuthError && e.isFatal()) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const popupClient = this.createPopupClient(request.correlationId);\n                    return popupClient.acquireToken(request);\n                } else if (e instanceof InteractionRequiredAuthError) {\n                    this.logger.verbose(\"acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow\");\n                    const popupClient = this.createPopupClient(request.correlationId);\n                    return popupClient.acquireToken(request);\n                }\n                this.browserStorage.setInteractionInProgress(false);\n                throw e;\n            });\n        } else {\n            const popupClient = this.createPopupClient(request.correlationId);\n            result = popupClient.acquireToken(request);\n        }\n\n        return result.then((result) => {\n            // If logged in, emit acquire token events\n            const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\n            if (isLoggingIn) {\n                this.eventHandler.emitEvent(EventType.LOGIN_SUCCESS, InteractionType.Popup, result);\n            } else {\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Popup, result);\n            }\n\n            atPopupMeasurement.endMeasurement({\n                success: true\n            });\n            atPopupMeasurement.flushMeasurement();\n            return result;\n        }).catch((e: AuthError) => {\n            if (loggedInAccounts.length > 0) {\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Popup, null, e);\n            } else {\n                this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Popup, null, e);\n            }\n\n            atPopupMeasurement.endMeasurement({\n                errorCode: e.errorCode,\n                subErrorCode: e.subError,\n                success: false\n            });\n            atPopupMeasurement.flushMeasurement();\n\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        });\n    }\n\n    // #endregion\n\n    // #region Silent Flow\n\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const validRequest = {\n            ...request,\n            prompt: PromptValue.NONE,\n            correlationId: correlationId\n        };\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        const ssoSilentMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SsoSilent, correlationId);\n        this.logger.verbose(\"ssoSilent called\", correlationId);\n        this.eventHandler.emitEvent(EventType.SSO_SILENT_START, InteractionType.Silent, validRequest);\n\n        let result: Promise<AuthenticationResult>;\n\n        if (this.canUseNative(validRequest)) {\n            result = this.acquireTokenNative(validRequest, ApiId.ssoSilent).catch((e: AuthError) => {\n                // If native token acquisition fails for availability reasons fallback to standard flow\n                if (e instanceof NativeAuthError && e.isFatal()) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const silentIframeClient = this.createSilentIframeClient(validRequest.correlationId);\n                    return silentIframeClient.acquireToken(validRequest);\n                }\n                throw e;\n            });\n        } else {\n            const silentIframeClient = this.createSilentIframeClient(validRequest.correlationId);\n            result = silentIframeClient.acquireToken(validRequest);\n        }\n\n        return result.then((response) => {\n            this.eventHandler.emitEvent(EventType.SSO_SILENT_SUCCESS, InteractionType.Silent, response);\n            ssoSilentMeasurement.endMeasurement({\n                success: true,\n                isNativeBroker: response.fromNativeBroker\n            });\n            ssoSilentMeasurement.flushMeasurement();\n            return response;\n        }).catch ((e: AuthError) => {\n            this.eventHandler.emitEvent(EventType.SSO_SILENT_FAILURE, InteractionType.Silent, null, e);\n            ssoSilentMeasurement.endMeasurement({\n                errorCode: e.errorCode,\n                subErrorCode: e.subError,\n                success: false\n            });\n            ssoSilentMeasurement.flushMeasurement();\n            throw e;\n        });\n    }\n\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenByCode(request: AuthorizationCodeRequest): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.logger.trace(\"acquireTokenByCode called\", correlationId);\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_START, InteractionType.Silent, request);\n        const atbcMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenByCode, request.correlationId);\n\n        try {\n            if (request.code) {\n                const hybridAuthCode = request.code;\n                let response = this.hybridAuthCodeResponses.get(hybridAuthCode);\n                if (!response) {\n                    this.logger.verbose(\"Initiating new acquireTokenByCode request\", correlationId);\n                    response = this.acquireTokenByCodeAsync({\n                        ...request,\n                        correlationId\n                    })\n                        .then((result: AuthenticationResult) => {\n                            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_SUCCESS, InteractionType.Silent, result);\n                            this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                            atbcMeasurement.endMeasurement({\n                                success: true,\n                                isNativeBroker: result.fromNativeBroker\n                            });\n                            atbcMeasurement.flushMeasurement();\n                            return result;\n                        })\n                        .catch((error: AuthError) => {\n                            this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE, InteractionType.Silent, null, error);\n                            atbcMeasurement.endMeasurement({\n                                errorCode: error.errorCode,\n                                subErrorCode: error.subError,\n                                success: false\n                            });\n                            atbcMeasurement.flushMeasurement();\n                            throw error;\n                        });\n                    this.hybridAuthCodeResponses.set(hybridAuthCode, response);\n                } else {\n                    this.logger.verbose(\"Existing acquireTokenByCode request found\", request.correlationId);\n                    atbcMeasurement.endMeasurement({\n                        success: true\n                    });\n                    atbcMeasurement.discardMeasurement();\n                }\n                return response;\n            } else if (request.nativeAccountId) {\n                if (this.canUseNative(request, request.nativeAccountId)) {\n                    return this.acquireTokenNative(request, ApiId.acquireTokenByCode, request.nativeAccountId).catch((e: AuthError) => {\n                        // If native token acquisition fails for availability reasons fallback to standard flow\n                        if (e instanceof NativeAuthError && e.isFatal()) {\n                            this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                        }\n                        throw e;\n                    });\n                } else {\n                    throw BrowserAuthError.createUnableToAcquireTokenFromNativePlatformError();\n                }\n            } else {\n                throw BrowserAuthError.createAuthCodeOrNativeAccountIdRequiredError();\n            }\n\n        } catch (e) {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE, InteractionType.Silent, null, e);\n            atbcMeasurement.endMeasurement({\n                errorCode: e instanceof AuthError && e.errorCode || undefined,\n                subErrorCode: e instanceof AuthError && e.subError || undefined,\n                success: false\n            });\n            throw e;\n        }\n    }\n\n    /**\n     * Creates a SilentAuthCodeClient to redeem an authorization code.\n     * @param request\n     * @returns Result of the operation to redeem the authorization code\n     */\n    private async acquireTokenByCodeAsync(request: AuthorizationCodeRequest): Promise<AuthenticationResult> {\n        this.logger.trace(\"acquireTokenByCodeAsync called\", request.correlationId);\n        const silentAuthCodeClient = this.createSilentAuthCodeClient(request.correlationId);\n        const silentTokenResult = await silentAuthCodeClient.acquireToken(request);\n        return silentTokenResult;\n    }\n\n    /**\n     * Use this function to obtain a token before every call to the API / resource provider\n     *\n     * MSAL return's a cached token when available\n     * Or it send's a request to the STS to obtain a new token using a refresh token.\n     *\n     * @param {@link SilentRequest}\n     *\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    protected async acquireTokenByRefreshToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        // block the reload if it occurred inside a hidden iframe\n        BrowserUtils.blockReloadInHiddenIframes();\n        const atbrtMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenByRefreshToken, request.correlationId);\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_NETWORK_START, InteractionType.Silent, request);\n\n        const silentRefreshClient = this.createSilentRefreshClient(request.correlationId);\n\n        return silentRefreshClient.acquireToken(request)\n            .then((result: AuthenticationResult) => {\n                atbrtMeasurement.endMeasurement({\n                    success: true,\n                    fromCache: result.fromCache\n                });\n                return result;\n            })\n            .catch(e => {\n                const isServerError = e instanceof ServerError;\n                const isInteractionRequiredError = e instanceof InteractionRequiredAuthError;\n                const isInvalidGrantError = (e.errorCode === BrowserConstants.INVALID_GRANT_ERROR);\n                if (isServerError && isInvalidGrantError && !isInteractionRequiredError) {\n                    this.logger.verbose(\"Refresh token expired or invalid, attempting acquire token by iframe\", request.correlationId);\n\n                    const silentIframeClient = this.createSilentIframeClient(request.correlationId);\n                    return silentIframeClient.acquireToken(request)\n                        .then((result: AuthenticationResult) => {\n                            atbrtMeasurement.endMeasurement({\n                                success: true,\n                                fromCache: result.fromCache\n                            });\n\n                            return result;\n                        })\n                        .catch((error) => {\n                            atbrtMeasurement.endMeasurement({\n                                errorCode: error.errorCode,\n                                subErrorCode: error.subError,\n                                success: false\n                            });\n                            throw error;\n                        });\n                }\n                atbrtMeasurement.endMeasurement({\n                    success: false\n                });\n                throw e;\n            });\n    }\n\n    // #endregion\n\n    // #region Logout\n\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        this.logger.warning(\"logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.\", correlationId);\n        return this.logoutRedirect({\n            correlationId,\n            ...logoutRequest\n        });\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void> {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Redirect);\n\n        const redirectClient = this.createRedirectClient(correlationId);\n        return redirectClient.logout(logoutRequest);\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void> {\n        try{\n            const correlationId = this.getRequestCorrelationId(logoutRequest);\n            this.preflightBrowserEnvironmentCheck(InteractionType.Popup);\n            const popupClient = this.createPopupClient(correlationId);\n            return popupClient.logout(logoutRequest);\n        } catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n\n    // #endregion\n\n    // #region Account APIs\n\n    /**\n     * Returns all accounts that MSAL currently has data for.\n     * (the account object is created at the time of successful login)\n     * or empty array when no accounts are found\n     * @returns Array of account objects in cache\n     */\n    getAllAccounts(): AccountInfo[] {\n        this.logger.verbose(\"getAllAccounts called\");\n        return this.isBrowserEnvironment ? this.browserStorage.getAllAccounts() : [];\n    }\n\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param userName\n     * @returns The account object stored in MSAL\n     */\n    getAccountByUsername(userName: string): AccountInfo|null {\n        const allAccounts = this.getAllAccounts();\n        if (!StringUtils.isEmpty(userName) && allAccounts && allAccounts.length) {\n            this.logger.verbose(\"Account matching username found, returning\");\n            this.logger.verbosePii(`Returning signed-in accounts matching username: ${userName}`);\n            return allAccounts.filter(accountObj => accountObj.username.toLowerCase() === userName.toLowerCase())[0] || null;\n        } else {\n            this.logger.verbose(\"getAccountByUsername: No matching account found, returning null\");\n            return null;\n        }\n    }\n\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByHomeId(homeAccountId: string): AccountInfo|null {\n        const allAccounts = this.getAllAccounts();\n        if (!StringUtils.isEmpty(homeAccountId) && allAccounts && allAccounts.length) {\n            this.logger.verbose(\"Account matching homeAccountId found, returning\");\n            this.logger.verbosePii(`Returning signed-in accounts matching homeAccountId: ${homeAccountId}`);\n            return allAccounts.filter(accountObj => accountObj.homeAccountId === homeAccountId)[0] || null;\n        } else {\n            this.logger.verbose(\"getAccountByHomeId: No matching account found, returning null\");\n            return null;\n        }\n    }\n\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByLocalId(localAccountId: string): AccountInfo | null {\n        const allAccounts = this.getAllAccounts();\n        if (!StringUtils.isEmpty(localAccountId) && allAccounts && allAccounts.length) {\n            this.logger.verbose(\"Account matching localAccountId found, returning\");\n            this.logger.verbosePii(`Returning signed-in accounts matching localAccountId: ${localAccountId}`);\n            return allAccounts.filter(accountObj => accountObj.localAccountId === localAccountId)[0] || null;\n        } else {\n            this.logger.verbose(\"getAccountByLocalId: No matching account found, returning null\");\n            return null;\n        }\n    }\n\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        this.browserStorage.setActiveAccount(account);\n    }\n\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        return this.browserStorage.getActiveAccount();\n    }\n\n    // #endregion\n\n    // #region Helpers\n    \n    /**\n     * Helper to validate app environment before making an auth request\n     *\n     * @protected\n     * @param {InteractionType} interactionType What kind of interaction is being used\n     * @param {boolean} [setInteractionInProgress=true] Whether to set interaction in progress temp cache flag\n     */\n    protected preflightBrowserEnvironmentCheck(interactionType: InteractionType, setInteractionInProgress: boolean = true): void {\n        this.logger.verbose(\"preflightBrowserEnvironmentCheck started\");\n        // Block request if not in browser environment\n        BrowserUtils.blockNonBrowserEnvironment(this.isBrowserEnvironment);\n\n        // Block redirects if in an iframe\n        BrowserUtils.blockRedirectInIframe(interactionType, this.config.system.allowRedirectInIframe);\n\n        // Block auth requests inside a hidden iframe\n        BrowserUtils.blockReloadInHiddenIframes();\n\n        // Block redirectUri opened in a popup from calling MSAL APIs\n        BrowserUtils.blockAcquireTokenInPopups();\n\n        // Block token acquisition before initialize has been called if native brokering is enabled\n        BrowserUtils.blockNativeBrokerCalledBeforeInitialized(this.config.system.allowNativeBroker, this.initialized);\n\n        // Block redirects if memory storage is enabled but storeAuthStateInCookie is not\n        if (interactionType === InteractionType.Redirect &&\n            this.config.cache.cacheLocation === BrowserCacheLocation.MemoryStorage &&\n            !this.config.cache.storeAuthStateInCookie) {\n            throw BrowserConfigurationAuthError.createInMemoryRedirectUnavailableError();\n        }\n\n        if (interactionType === InteractionType.Redirect || interactionType === InteractionType.Popup) {\n            this.preflightInteractiveRequest(setInteractionInProgress);\n        }\n    }\n    \n    /**\n     * Preflight check for interactive requests\n     *\n     * @protected\n     * @param {boolean} setInteractionInProgress Whether to set interaction in progress temp cache flag\n     */\n    protected preflightInteractiveRequest(setInteractionInProgress: boolean): void {\n        this.logger.verbose(\"preflightInteractiveRequest called, validating app environment\");\n        // block the reload if it occurred inside a hidden iframe\n        BrowserUtils.blockReloadInHiddenIframes();\n\n        // Set interaction in progress temporary cache or throw if alread set.\n        if (setInteractionInProgress) {\n            this.browserStorage.setInteractionInProgress(true);\n        }\n    }\n\n    /**\n     * Acquire a token from native device (e.g. WAM)\n     * @param request\n     */\n    protected async acquireTokenNative(request: PopupRequest|SilentRequest|SsoSilentRequest, apiId: ApiId, accountId?: string): Promise<AuthenticationResult> {\n        this.logger.trace(\"acquireTokenNative called\");\n        if (!this.nativeExtensionProvider) {\n            throw BrowserAuthError.createNativeConnectionNotEstablishedError();\n        }\n\n        const nativeClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, apiId, this.performanceClient, this.nativeExtensionProvider, accountId || this.getNativeAccountId(request), request.correlationId);\n\n        return nativeClient.acquireToken(request);\n    }\n\n    /**\n     * Returns boolean indicating if this request can use the native broker\n     * @param request\n     */\n    protected canUseNative(request: RedirectRequest|PopupRequest|SsoSilentRequest, accountId?: string): boolean {\n        this.logger.trace(\"canUseNative called\");\n        if (!NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider, request.authenticationScheme)) {\n            this.logger.trace(\"canUseNative: isNativeAvailable returned false, returning false\");\n            return false;\n        }\n\n        if (request.prompt) {\n            switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                    this.logger.trace(\"canUseNative: prompt is compatible with native flow\");\n                    break;\n                default:\n                    this.logger.trace(`canUseNative: prompt = ${request.prompt} is not compatible with native flow, returning false`);\n                    return false;\n            }\n        }\n\n        if (!accountId && !this.getNativeAccountId(request)) {\n            this.logger.trace(\"canUseNative: nativeAccountId is not available, returning false\");\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Get the native accountId from the account\n     * @param request\n     * @returns\n     */\n    protected getNativeAccountId(request: RedirectRequest|PopupRequest|SsoSilentRequest): string {\n        const account = request.account || this.browserStorage.getAccountInfoByHints(request.loginHint, request.sid) || this.getActiveAccount();\n\n        return account && account.nativeAccountId || \"\";\n    }\n\n    /**\n     * Returns new instance of the Popup Interaction Client\n     * @param correlationId\n     */\n    protected createPopupClient(correlationId?: string): PopupClient {\n        return new PopupClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n\n    /**\n     * Returns new instance of the Redirect Interaction Client\n     * @param correlationId\n     */\n    protected createRedirectClient(correlationId?: string): RedirectClient {\n        return new RedirectClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n\n    /**\n     * Returns new instance of the Silent Iframe Interaction Client\n     * @param correlationId\n     */\n    protected createSilentIframeClient(correlationId?: string): SilentIframeClient {\n        return new SilentIframeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.ssoSilent, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n\n    /**\n     * Returns new instance of the Silent Cache Interaction Client\n     */\n    protected createSilentCacheClient(correlationId?: string): SilentCacheClient {\n        return new SilentCacheClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n\n    /**\n     * Returns new instance of the Silent Refresh Interaction Client\n     */\n    protected createSilentRefreshClient(correlationId?: string): SilentRefreshClient {\n        return new SilentRefreshClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n\n    /**\n     * Returns new instance of the Silent AuthCode Interaction Client\n     */\n    protected createSilentAuthCodeClient(correlationId?: string): SilentAuthCodeClient {\n        return new SilentAuthCodeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenByCode, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback: EventCallbackFunction): string | null {\n        return this.eventHandler.addEventCallback(callback);\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        this.eventHandler.removeEventCallback(callbackId);\n    }\n\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string {\n        return this.performanceClient.addPerformanceCallback(callback);\n    }\n\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId: string): boolean {\n        return this.performanceClient.removePerformanceCallback(callbackId);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents(): void {\n        this.eventHandler.enableAccountStorageEvents();\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents(): void {\n        this.eventHandler.disableAccountStorageEvents();\n    }\n\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache(): ITokenCache {\n        return this.tokenCache;\n    }\n\n    /**\n     * Returns the logger instance\n     */\n    getLogger(): Logger {\n        return this.logger;\n    }\n\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger: Logger): void {\n        this.logger = logger;\n    }\n\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void {\n        // Validate the SKU passed in is one we expect\n        this.browserStorage.setWrapperMetadata(sku, version);\n    }\n\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient: INavigationClient): void {\n        this.navigationClient = navigationClient;\n    }\n\n    /**\n     * Returns the configuration object\n     */\n    getConfiguration(): BrowserConfiguration {\n        return this.config;\n    }\n\n    /**\n     * Generates a correlation id for a request if none is provided.\n     *\n     * @protected\n     * @param {?Partial<BaseAuthRequest>} [request]\n     * @returns {string}\n     */\n    protected getRequestCorrelationId(request?: Partial<BaseAuthRequest>): string {\n        if (request?.correlationId) {\n            return request.correlationId;\n        }\n\n        if (this.isBrowserEnvironment) {\n            return this.browserCrypto.createNewGuid();\n        }\n\n        /*\n         * Included for fallback for non-browser environments,\n         * and to ensure this method always returns a string.\n         */\n        return Constants.EMPTY_STRING;\n    }\n\n    // #endregion\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccountInfo, AuthenticationResult, Constants, RequestThumbprint, AuthError, PerformanceEvents } from \"@azure/msal-common\";\nimport { Configuration } from \"../config/Configuration\";\nimport { DEFAULT_REQUEST, InteractionType, ApiId } from \"../utils/BrowserConstants\";\nimport { IPublicClientApplication } from \"./IPublicClientApplication\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { ClientApplication } from \"./ClientApplication\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { EventType } from \"../event/EventType\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { NativeAuthError } from \"../error/NativeAuthError\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\n\n/**\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\n */\nexport class PublicClientApplication extends ClientApplication implements IPublicClientApplication {\n\n    // Active requests\n    private activeSilentTokenRequests: Map<string, Promise<AuthenticationResult>>;\n\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration object for the MSAL PublicClientApplication instance\n     */\n    constructor(configuration: Configuration) {\n        super(configuration);\n\n        this.activeSilentTokenRequests = new Map();\n    }\n\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async loginRedirect(request?: RedirectRequest): Promise<void> {\n        const correlationId: string = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginRedirect called\", correlationId);\n        return this.acquireTokenRedirect({\n            correlationId,\n            ...(request || DEFAULT_REQUEST)\n        });\n    }\n\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult> {\n        const correlationId: string = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginPopup called\", correlationId);\n        return this.acquireTokenPopup({\n            correlationId,\n            ...(request || DEFAULT_REQUEST)\n        });\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n     */\n    async acquireTokenSilent(request: SilentRequest): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atsMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenSilent, correlationId);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.logger.verbose(\"acquireTokenSilent called\", correlationId);\n        const account = request.account || this.getActiveAccount();\n        if (!account) {\n            throw BrowserAuthError.createNoAccountError();\n        }\n        const thumbprint: RequestThumbprint = {\n            clientId: this.config.auth.clientId,\n            authority: request.authority || Constants.EMPTY_STRING,\n            scopes: request.scopes,\n            homeAccountIdentifier: account.homeAccountId,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid\n        };\n        const silentRequestKey = JSON.stringify(thumbprint);\n        const cachedResponse = this.activeSilentTokenRequests.get(silentRequestKey);\n        if (typeof cachedResponse === \"undefined\") {\n            this.logger.verbose(\"acquireTokenSilent called for the first time, storing active request\", correlationId);\n            const response = this.acquireTokenSilentAsync({\n                ...request,\n                correlationId\n            }, account)\n                .then((result) => {\n                    this.activeSilentTokenRequests.delete(silentRequestKey);\n                    atsMeasurement.endMeasurement({\n                        success: true,\n                        fromCache: result.fromCache,\n                        isNativeBroker: result.fromNativeBroker\n                    });\n                    atsMeasurement.flushMeasurement();\n                    return result;\n                })\n                .catch((error: AuthError) => {\n                    this.activeSilentTokenRequests.delete(silentRequestKey);\n                    atsMeasurement.endMeasurement({\n                        errorCode: error.errorCode,\n                        subErrorCode: error.subError,\n                        success: false\n                    });\n                    atsMeasurement.flushMeasurement();\n                    throw error;\n                });\n            this.activeSilentTokenRequests.set(silentRequestKey, response);\n            return response;\n        } else {\n            this.logger.verbose(\"acquireTokenSilent has been called previously, returning the result from the first call\", correlationId);\n            atsMeasurement.endMeasurement({\n                success: true\n            });\n            // Discard measurements for memoized calls, as they are usually only a couple of ms and will artificially deflate metrics\n            atsMeasurement.discardMeasurement();\n            return cachedResponse;\n        }\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Will use cached token if available, otherwise will attempt to acquire a new token from the network via refresh token.\n     * @param {@link (SilentRequest:type)}\n     * @param {@link (AccountInfo:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} \n     */\n    protected async acquireTokenSilentAsync(request: SilentRequest, account: AccountInfo): Promise<AuthenticationResult>{\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Silent, request);\n        const astsAsyncMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenSilentAsync, request.correlationId);\n\n        let result: Promise<AuthenticationResult>;\n        if (NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider, request.authenticationScheme) && account.nativeAccountId) {\n            this.logger.verbose(\"acquireTokenSilent - attempting to acquire token from native platform\");\n            const silentRequest: SilentRequest = {\n                ...request,\n                account\n            };\n            result = this.acquireTokenNative(silentRequest, ApiId.acquireTokenSilent_silentFlow).catch(async (e: AuthError) => {\n                // If native token acquisition fails for availability reasons fallback to web flow\n                if (e instanceof NativeAuthError && e.isFatal()) {\n                    this.logger.verbose(\"acquireTokenSilent - native platform unavailable, falling back to web flow\");\n                    this.nativeExtensionProvider = undefined; // Prevent future requests from continuing to attempt \n\n                    // Cache will not contain tokens, given that previous WAM requests succeeded. Skip cache and RT renewal and go straight to iframe renewal\n                    const silentIframeClient = this.createSilentIframeClient(request.correlationId);\n                    return silentIframeClient.acquireToken(request);\n                }\n                throw e;\n            });     \n        } else {\n            this.logger.verbose(\"acquireTokenSilent - attempting to acquire token from web flow\");\n            const silentCacheClient = this.createSilentCacheClient(request.correlationId);\n            const silentRequest = await silentCacheClient.initializeSilentRequest(request, account);\n            result = silentCacheClient.acquireToken(silentRequest).catch(async () => {\n                return this.acquireTokenByRefreshToken(silentRequest);\n            });\n        }\n\n        return result.then((response) => {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Silent, response);\n            astsAsyncMeasurement.endMeasurement({\n                success: true,\n                fromCache: response.fromCache,\n                isNativeBroker: response.fromNativeBroker\n            });\n            return response;\n        }).catch((tokenRenewalError: AuthError) => {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Silent, null, tokenRenewalError);\n            astsAsyncMeasurement.endMeasurement({\n                errorCode: tokenRenewalError.errorCode,\n                subErrorCode: tokenRenewalError.subError,\n                success: false\n            });\n            throw tokenRenewalError;\n        });\n    }\n}\n","import React from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; \r\n \r\nimport './assets/css/index.css';\r\nimport reportWebVitals from './authentication/reportWebVitals'; \r\nimport { PublicClientApplication } from \"@azure/msal-browser\";\r\nimport { MsalProvider } from \"@azure/msal-react\";\r\nimport { msalConfig } from \"./authentication/authConfig\";  \r\nimport { createRoot } from 'react-dom/client';\r\n\r\nconst msalInstance = new PublicClientApplication(msalConfig); \r\nconst container = document.getElementById(\"root\");\r\nconst root = createRoot(container);\r\nroot.render( \r\n    <React.StrictMode> \r\n        <MsalProvider instance={msalInstance}>\r\n            <App />\r\n        </MsalProvider>\r\n    </React.StrictMode>  \r\n);\r\n\r\nreportWebVitals();\r\n\r\n// ReactDOM.render(\r\n// <App/>\r\n\r\n// ,document.getElementById(\"root\"));\r\n \r\n"],"names":["module","exports","utils","require","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","transitionalDefaults","AxiosError","CanceledError","parseProtocol","config","Promise","resolve","reject","onCanceled","requestData","data","requestHeaders","headers","responseType","done","cancelToken","unsubscribe","signal","removeEventListener","isFormData","isStandardBrowserEnv","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","onloadend","responseHeaders","getAllResponseHeaders","response","responseText","status","statusText","value","err","open","method","toUpperCase","params","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","indexOf","setTimeout","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","ETIMEDOUT","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","val","key","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","type","abort","subscribe","aborted","protocol","ERR_BAD_REQUEST","send","bind","Axios","mergeConfig","axios","createInstance","defaultConfig","context","instance","prototype","extend","create","instanceConfig","CancelToken","isCancel","VERSION","toFormData","Cancel","all","promises","spread","isAxiosError","executor","TypeError","resolvePromise","this","promise","token","then","_listeners","i","l","length","onfulfilled","_resolve","message","reason","throwIfRequested","listener","push","index","splice","source","c","call","ERR_CANCELED","name","inherits","__CANCEL__","InterceptorManager","dispatchRequest","validator","validators","defaults","interceptors","configOrUrl","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","Array","apply","concat","shift","newConfig","onFulfilled","onRejected","error","getUri","generateHTTPMethod","isForm","code","Error","toJSON","description","number","fileName","lineNumber","columnNumber","stack","descriptors","Object","defineProperties","defineProperty","from","customProps","axiosError","toFlatObject","obj","assign","handlers","use","options","eject","id","fn","h","isAbsoluteURL","combineURLs","requestedURL","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","config1","config2","getMergedValue","target","isPlainObject","isArray","slice","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","keys","configValue","validateStatus","ERR_BAD_RESPONSE","Math","floor","fns","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","toString","getDefaultAdapter","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isFileList","isObjectPayload","isObject","contentType","_FormData","env","FormData","rawValue","parser","encoder","isString","JSON","parse","trim","e","stringify","stringifySafely","strictJSONParsing","maxContentLength","maxBodyLength","thisArg","args","arguments","encode","replace","serializedParams","parts","v","isDate","toISOString","join","hashmarkIndex","relativeURL","write","expires","path","domain","secure","cookie","isNumber","Date","toGMTString","document","match","RegExp","decodeURIComponent","remove","now","test","payload","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","host","search","hash","hostname","port","pathname","charAt","window","location","requestURL","parsed","normalizedName","ignoreDuplicateOf","split","line","substr","exec","callback","arr","formData","convertValue","isTypedArray","Blob","Buffer","build","parentKey","fullKey","endsWith","toArray","el","append","pop","thing","deprecatedWarnings","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","console","warn","schema","allowUnknown","ERR_BAD_OPTION_VALUE","result","ERR_BAD_OPTION","cache","kindOf","str","kindOfTest","getPrototypeOf","isFunction","hasOwnProperty","TypedArray","Uint8Array","constructor","pattern","ArrayBuffer","isView","pipe","product","assignValue","a","b","stripBOM","content","charCodeAt","superConstructor","props","sourceObj","destObj","filter","merged","getOwnPropertyNames","searchString","position","String","lastIndex","hasOwn","classNames","classes","arg","argType","inner","default","condition","format","d","f","argIndex","framesToPop","_len","_key","allPropTypes","_len2","_key2","_createChainableTypeChecker2","_createChainableTypeChecker","__esModule","validate","checkType","isRequired","propName","componentName","propFullName","componentNameSafe","propFullNameSafe","chainedCheckType","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","secret","getShim","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_createClass","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react","_react2","_core","_metaProps","CSVDownload","_React$Component","_classCallCheck","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","state","subClass","superClass","setPrototypeOf","_inherits","buildURI","_props","separator","enclosingCharacter","uFEFF","specs","page","Component","defaultProps","propTypes","_extends","CSVLink","event","isAsync","msSaveOrOpenBlob","preventDefault","filename","csvData","blob","toCSV","msSaveBlob","_this2","onClick","proceed","handleLegacy","_this3","asyncOnClick","handleAsyncClick","handleSyncClick","_this4","_props2","children","rest","_objectWithoutProperties","download","ref","link","handleClick","_typeof","Symbol","iterator","_toConsumableArray","arr2","isSafari","isJsons","every","row","isArrays","jsonsHeaders","map","json","reduce","Set","jsons2arrays","jsons","headerLabels","headerKeys","header","label","getHeaderValue","property","foundValue","o","p","elementOrEmpty","joiner","column","arrays2csv","jsons2csv","string2csv","csv","dataURI","URL","webkitURL","createObjectURL","_Download2","_interopRequireDefault","_Link2","PropsNotForwarded","_propTypes","aa","ca","da","ea","fa","ha","add","ia","ja","ka","la","ma","g","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","z","ra","sa","ta","pa","isNaN","qa","oa","removeAttribute","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","A","Ma","Na","Oa","prepareStackTrace","set","Reflect","construct","k","displayName","includes","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","get","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","setProperty","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","meta","param","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","m","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","fromCharCode","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","range","tel","text","time","week","me","ne","oe","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","D","of","has","pf","qf","rf","random","sf","capture","passive","n","t","J","x","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","clearTimeout","Hf","Jf","queueMicrotask","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","memoizedValue","next","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","eventTime","lane","dh","K","eh","fh","gh","q","r","y","hh","ih","jh","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","contextType","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","_owner","_stringRef","th","uh","vh","wh","xh","yh","implementation","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","N","O","P","Sh","Th","Uh","Vh","Q","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","hi","ii","ji","ki","getSnapshot","li","mi","R","ni","lastEffect","stores","oi","pi","qi","ri","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","digest","Li","Mi","Ni","WeakMap","Oi","Pi","Qi","Ri","getDerivedStateFromError","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","compare","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onclick","size","createElementNS","autoFocus","createTextNode","T","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","X","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","src","Wk","mk","ceil","nk","ok","pk","Y","Z","qk","rk","sk","tk","uk","Infinity","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","pendingSuspenseBoundaries","dl","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","querySelectorAll","form","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","createPortal","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","__self","__source","Fragment","jsx","jsxs","setState","forceUpdate","escape","_status","_result","Children","count","only","Profiler","PureComponent","StrictMode","Suspense","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","warning","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","chunkId","miniCssF","globalThis","Function","inProgress","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","onScriptComplete","prev","onload","doneFns","head","toStringTag","installedChunks","j","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","_defineProperty","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","_objectSpread2","getOwnPropertyDescriptors","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","DEFAULT_BREAKPOINTS","ThemeContext","React","prefixes","breakpoints","useBootstrapPrefix","prefix","defaultPrefix","Container","bsPrefix","fluid","as","className","suffix","_jsx","_regeneratorRuntime","Op","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","awrap","async","iter","reverse","skipTempReset","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_arrayLikeToArray","len","_unsupportedIterableToArray","minLen","_i","_s","_e","_arr","_n","_d","Version","Purl","ProductsContext","ProductsContextProvider","products","setProducts","addProduct","setId","setDescription","handleSubmit","ProductFinder","post","onChange","placeholder","makeEventKey","eventKey","defaultKey","_toPropertyKey","hint","prim","toPrimitive","res","Number","_toPrimitive","useUncontrolled","fieldName","_extends2","_ref","Utils","propsValue","_objectWithoutPropertiesLoose","handlerName","_useUncontrolledProp","propValue","handler","wasPropRef","_useState","stateValue","isProp","wasProp","useUncontrolledProp","nextProps","prevState","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","__suppressDeprecationWarning","rHyphen","pascalCase","_","chr","createWithBsPrefix","BsComponent","Tag","resolvedPrefix","NavbarBrand","getComputedStyle","psuedoElement","doc","ownerWindow","rUpper","msPattern","hyphenateStyleName","hyphenate","supportedTransforms","css","transforms","getPropertyValue","isTransform","removeProperty","cssText","_setPrototypeOf","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","nextCallback","_proto","updateStatus","nextStatus","cancelNextCallback","getTimeouts","exit","mounting","performEnter","performExit","appearing","_ref2","nodeRef","ReactDOM","maybeNode","maybeAppearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","onExit","onExiting","onExited","setNextCallback","active","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","_this$props","childProps","TransitionGroupContext","noop","optionsSupported","onceSupported","once","canUseDOM","eventName","wrappedHandler","__once","onceHandler","emulateTransitionEnd","duration","padding","called","createEvent","initEvent","triggerEvent","listen","transitionEnd","mult","parseFloat","parseDuration","removeEmulate","transitionEndListener","funcs","acc","triggerBrowserReflow","offsetHeight","toFnRef","refA","refB","mergeRefs","childRef","mergedRef","useMergedRefs","attachRef","componentOrElement","normalize","handleEnter","handleEntering","handleEntered","handleExit","handleExiting","handleExited","handleAddEndListener","innerProps","MARGINS","getDefaultDimensionValue","dimension","elem","margins","parseInt","collapseStyles","getDimensionValue","Collapse","computedDimension","createChainedFunction","scroll","TransitionWrapper","role","NavbarCollapse","NavbarContext","expanded","useEventCallback","useCommittedRef","NavbarToggle","onToggle","isReactNative","global","matchersByWindow","getMatcher","query","targetWindow","matchers","mql","matchMedia","refCount","media","useMediaQuery","matches","setMatches","handleChange","addListener","removeListener","breakpointValues","names","and","getMaxQuery","breakpoint","getNext","breakpointOrMap","direction","breakpointMap","_breakpointMap","entries","getMinQuery","createBreakpointHook","xs","sm","xl","xxl","useWillUnmount","onUnmount","valueRef","useUpdatedRef","_defineProperties","dataAttr","OPEN_DATA_ATTRIBUTE","ModalManager","handleContainerOverflow","isRTL","modals","abs","innerWidth","clientWidth","getBodyScrollbarWidth","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","modal","modalIdx","setModalAttributes","getScrollbarWidth","setContainerStyle","removeContainerStyle","removeModalAttributes","useWindow","resolveContainerRef","manager","_excluded","useModalManager","provided","modalManager","getManager","dialog","backdrop","isTopModal","setDialogRef","setBackdropRef","Modal","show","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","mounted","useMounted","prevShow","usePrevious","exited","setExited","lastFocusRef","handleShow","removeKeydownListenerRef","handleDocumentKeyDown","removeFocusListenerRef","handleEnforceFocus","currentActiveElement","handleHide","_lastFocusRef$current","handleBackdropClick","dialogProps","tabIndex","backdropElement","BackdropTransition","_Fragment","_jsxs","Manager","fadeStyles","Fade","transitionClasses","isAppearing","transitionStyles","OffcanvasToggling","variant","CloseButton","AbstractModalHeader","closeLabel","closeVariant","closeButton","ModalContext","OffcanvasHeader","divWithClassName","_getPrototypeOf","_superPropBase","_get","receiver","_assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","sham","Proxy","Boolean","Super","NewTarget","qsa","selector","replaceClassName","origClass","classToRemove","sharedManager","Selector","BootstrapModalManager","adjust","actual","classList","baseVal","hasClass","marginProp","adjustAndStore","restore","getSharedManager","DialogTransition","Offcanvas","ariaLabelledby","placement","backdropClassName","propsManager","modalContext","backdropProps","BaseModal","visibility","Body","OffcanvasBody","Header","Title","OffcanvasTitle","NavbarOffcanvas","hasExpandProp","expand","shouldExpand","useBreakpoint","NavbarText","Navbar","initialBsPrefix","fixed","sticky","onSelect","collapseOnSelect","controlledProps","handleCollapse","expandClass","navbarContext","SelectableContext","Brand","Text","Toggle","NavContext","useButtonProps","rel","isTrivialHref","onKeyDown","Button","asProp","buttonProps","useNavItem","parentOnSelect","navContext","tabContext","TabContext","isActive","contextControllerId","getControllerId","contextControlledId","getControlledId","activeKey","NavItem","EVENT_KEY_ATTR","Nav","needsRefocusRef","listNode","getNextActiveTab","currentListNode","items","activeChild","querySelector","nextIndex","handleSelect","nextActiveChild","Item","Anchor","handleKeyDown","NavLink","navItemProps","uncontrolledProps","navbarBsPrefix","cardHeaderBsPrefix","fill","justify","navbar","navbarScroll","isNavbar","cardHeaderContext","CardHeaderContext","BaseNav","Link","HeaderNames","PersistentCacheKeys","AADAuthorityConstants","AADServerParamKeys","ClaimsRequestKeys","Constants","LIBRARY_NAME","SKU","CACHE_PREFIX","DEFAULT_AUTHORITY","DEFAULT_AUTHORITY_HOST","DEFAULT_COMMON_TENANT","ADFS","AAD_INSTANCE_DISCOVERY_ENDPT","RESOURCE_DELIM","NO_ACCOUNT","CLAIMS","CONSUMER_UTID","OPENID_SCOPE","PROFILE_SCOPE","OFFLINE_ACCESS_SCOPE","EMAIL_SCOPE","CODE_RESPONSE_TYPE","CODE_GRANT_TYPE","RT_GRANT_TYPE","FRAGMENT_RESPONSE_MODE","S256_CODE_CHALLENGE_METHOD","URL_FORM_CONTENT_TYPE","AUTHORIZATION_PENDING","NOT_DEFINED","EMPTY_STRING","FORWARD_SLASH","IMDS_ENDPOINT","IMDS_VERSION","IMDS_TIMEOUT","AZURE_REGION_AUTO_DISCOVER_FLAG","REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX","KNOWN_PUBLIC_CLOUDS","TOKEN_RESPONSE_TYPE","ID_TOKEN_RESPONSE_TYPE","OIDC_DEFAULT_SCOPES","OIDC_SCOPES","SSOTypes","PromptValue","LOGIN","SELECT_ACCOUNT","CONSENT","NONE","CREATE","ResponseMode","GrantType","CacheAccountType","Separators","CredentialType","CacheSchemaType","CacheType","CodeChallengeMethodValues","PLAIN","S256","AuthorityMetadataSource","APP_METADATA","THE_FAMILY_ID","AUTHORITY_METADATA_CONSTANTS","AuthenticationScheme","SERVER_TELEM_CONSTANTS","SCHEMA_VERSION","MAX_CUR_HEADER_BYTES","MAX_LAST_HEADER_BYTES","MAX_CACHED_ERRORS","CACHE_KEY","CATEGORY_SEPARATOR","VALUE_SEPARATOR","OVERFLOW_TRUE","OVERFLOW_FALSE","UNKNOWN_ERROR","PasswordGrantConstants","ResponseCodes","RegionDiscoverySources","RegionDiscoveryOutcomes","CacheOutcome","JsonTypes","ThrottlingConstants","Errors","NativeExtensionMethod","BrowserCacheLocation","HTTP_REQUEST_TYPE","TemporaryCacheKeys","InMemoryCacheKeys","ApiId","InteractionType","InteractionStatus","AuthErrorMessage","errorCode","errorMessage","suberror","errorString","AuthError","subError","__extends","correlationId","errDesc","BrowserConfigurationAuthErrorMessage","_super","BrowserConfigurationAuthError","givenStorageLocation","stubbedPublicClientApplication","initialize","createStubPcaInstanceCalledError","acquireTokenPopup","acquireTokenRedirect","acquireTokenSilent","acquireTokenByCode","getAllAccounts","getAccountByHomeId","getAccountByUsername","getAccountByLocalId","handleRedirectPromise","loginPopup","loginRedirect","logout","logoutRedirect","logoutPopup","ssoSilent","addEventCallback","removeEventCallback","addPerformanceCallback","removePerformanceCallback","enableAccountStorageEvents","disableAccountStorageEvents","getTokenCache","getLogger","setLogger","setActiveAccount","getActiveAccount","initializeWrapperLibrary","setNavigationClient","getConfiguration","BrowserConstants","NativeConstants","WrapperSKU","DEFAULT_REQUEST","scopes","KEY_FORMAT_JWK","LogLevel","DB_NAME","ClientAuthErrorMessage","ClientAuthError","caughtError","caughtExtractionError","invalidRawTokenString","errDetail","endpoint","hashParamObj","invalidState","missingState","missingNonce","givenScope","appendError","operationName","StringUtils","authToken","isEmpty","createTokenNullOrEmptyError","createTokenParsingError","JWSPayload","JWSSig","strObj","lastIndexOf","decode","pair","EventType","loggerOptions","packageName","packageVersion","level","Info","localCallback","loggerCallback","piiLoggingEnabled","logLevel","Logger","logMessage","containsPii","timestamp","toUTCString","executeCallback","Warning","Verbose","Trace","AuthorityType","EventMessageUtils","currentStatus","eventType","LOGIN_START","Login","SSO_SILENT_START","SsoSilent","ACQUIRE_TOKEN_START","interactionType","Redirect","Popup","AcquireToken","HANDLE_REDIRECT_START","HandleRedirect","LOGOUT_START","Logout","SSO_SILENT_SUCCESS","SSO_SILENT_FAILURE","None","LOGOUT_END","HANDLE_REDIRECT_END","LOGIN_SUCCESS","LOGIN_FAILURE","ACQUIRE_TOKEN_SUCCESS","ACQUIRE_TOKEN_FAILURE","buildClientInfo","rawClientInfo","crypto","createClientInfoEmptyError","decodedClientInfo","base64Decode","createClientInfoDecodingError","buildClientInfoFromHomeAccountId","homeAccountId","clientInfoParts","CLIENT_INFO_SEPARATOR","uid","utid","AccountEntity","environment","CACHE_KEY_SEPARATOR","generateAccountCacheKey","tenantId","realm","localAccountId","authorityType","ADFS_ACCOUNT_TYPE","MSAV1_ACCOUNT_TYPE","MSA","MSSTS_ACCOUNT_TYPE","MSSTS","GENERIC_ACCOUNT_TYPE","GENERIC","createUnexpectedAccountTypeError","idTokenClaims","nativeAccountId","accountInterface","clientInfo","idToken","authority","cloudGraphHostName","msGraphHost","account","getPreferredCache","createInvalidCacheEnvironmentError","claims","_a","tid","_b","oid","_c","sub","preferred_username","emails","_f","Adfs","upn","serverClientInfo","authType","logger","cryptoObj","accountId","verbose","entity","accountA","accountB","compareClaims","claimsMatch","accountAClaims","accountBClaims","iat","nonce","InteractionRequiredServerErrorMessage","InteractionRequiredAuthSubErrorMessage","InteractionRequiredAuthErrorMessage","InteractionRequiredAuthError","isInteractionRequiredErrorCode","isInteractionRequiredSubError","isInteractionRequiredErrorDesc","irErrorCode","defaultMsalContext","accounts","MsalContext","getChildrenOrFunction","accountArraysAreEqual","arrayA","arrayB","comparisonArray","elementA","elementB","getAccountByIdentifiers","allAccounts","accountIdentifiers","accountObj","MsalProviderActionType","reducer","previousState","newInProgress","UNBLOCK_INPROGRESS","Startup","EVENT","getInteractionStatusFromEvent","currentAccounts","MsalProvider","clone","updateState","callbackId","finally","contextValue","useMsal","isAuthenticated","matchAccount","useIsAuthenticated","hasAuthenticated","setHasAuthenticated","AuthenticatedTemplate","UnauthenticatedTemplate","getAccount","useAccount","setAccount","currentAccount","nextAccount","accountInfoIsEqual","ReactAuthErrorMessage","ReactAuthError","MsalAuthenticationTemplate","authenticationRequest","LoadingComponent","loadingComponent","ErrorComponent","errorComponent","accountIdentifier","msalAuthResult","setResponse","interactionInProgress","shouldAcquireToken","login","callbackInteractionType","callbackRequest","loginType","loginRequest","Silent","createInvalidInteractionTypeError","acquireToken","fallbackInteractionType","trace","tokenRequest","getToken","createUnableToFallbackToInteractionError","useMsalAuthentication","msalConfig","clientId","redirectUri","cacheLocation","storeAuthStateInCookie","protectedResources","graphMe","apiHello","SignInButton","handleLogin","SignOutButton","handleLogout","DevTitle","marginLeft","NavigationContext","LocationContext","RouteContext","outlet","invariant","cond","matchRoutes","routes","locationArg","basename","stripBasename","parsePath","branches","flattenRoutes","sort","score","siblings","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matchRouteBranch","parentsMeta","parentPath","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","paramRe","isSplat","segments","initialScore","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","pathnameBase","normalizePathname","paramNames","regexpSource","paramName","compilePath","matcher","captureGroups","splatValue","safelyDecodeURIComponent","resolveTo","toArg","routePathnames","locationPathname","to","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","nextChar","paths","useInRouterContext","useLocation","useNavigate","routePathnamesJson","activeRef","navigate","go","useParams","routeMatch","_renderMatches","parentMatches","reduceRight","React.createElement","Route","Router","basenameProp","locationProp","navigationType","NavigationType","static","staticProp","navigationContext","trailingPathname","Routes","_ref4","parentParams","parentPathnameBase","locationFromContext","parsedLocationArg","_parsedLocationArg$pa","useRoutes","createRoutesFromChildren","fetchData","handleDelete","scope","ids","setID","put","marginRight","htmlFor","BrowserRouter","historyRef","createBrowserHistory","history","Shopurl","OrdersContext","OrdersContextProvider","orders","setOrders","addOrder","callApiWithToken","accessToken","apiEndpoint","Headers","bearer","fetch","ShopifyRequest","created_at","current_subtotal_price","current_total_tax","current_total_price","financial_status","DivStyledAsH4","AlertHeading","AlertLink","Alert","onClose","dismissible","handleClose","alert","Heading","running","setRunning","setDone","setAlert","file","setFile","setData","fileReader","FileReader","csvFileToArray","csvHeader","sendData","handleOnSubmit","readAsText","prevArray","Name","Status","newArray","csvReport","textAlign","files","accept","marginTop","item","VariantsContext","VariantsContextProvider","variants","setVariants","logo","alt","Table","striped","bordered","borderless","hover","responsive","decoratedBsPrefix","table","responsiveClass","first","nodes","featuredImage","scrollbarSize","recalc","scrollDiv","offsetWidth","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalHeader","dialogAs","dialogClassName","Dialog","ariaDescribedby","ariaLabel","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","dir","getModalManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","handleStaticBackdropClick","baseModalStyle","onMouseUp","onMouseDown","ModalBody","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","tooltip","Feedback","FormCheckInput","isValid","isInvalid","controlId","FormContext","FormCheckLabel","FormCheck","bsSwitchPrefix","inline","feedbackTooltip","feedback","feedbackType","title","innerFormContext","hasLabel","hasChildOfType","Input","Label","FormControl","htmlSize","plaintext","readOnly","FormGroup","useCol","spans","brkPoint","span","infix","Col","colProps","FormLabel","visuallyHidden","columnClass","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","validated","Form","Group","Floating","FormFloating","Check","Range","Select","setShow","setImageHover","setUrl","image","setImage","setProduct","setTitle","price","setPrice","sku","setSku","pic","sendImage","imageData","sendPrice","sendSku","sendPic","preview","rows","option","cursor","onMouseEnter","onMouseLeave","encType","handleImageChange","handleTitleChange","iden","handlePriceChange","handleSkuChange","PerformanceEvents","PerformanceEventStatus","valtra_logo","background","ValtraImg","Photo","testZip","zip","inforInvoices","inforInvoicesZip","inforOrders","ApiValtraImg","goToDocum","fontSize","marginTCSop","inforDoc","invoiceDoc","HelloData","tableRows","helloData","HelloContent","setHelloData","Hello","authRequest","SignOut","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","CryptoKeyStoreNames","JoseHeaderErrorMessage","JoseHeaderError","typ","alg","kid","JoseHeader","shrHeaderOptions","createMissingKidError","createMissingAlgError","shrHeader","Jwt","MathUtils","num","hex","GuidGenerator","getRandomValues","decimalToHex","guidHolder","guidResponse","guid","BrowserStringUtils","sDOMStr","nChr","nArrLen","nStrLen","nMapIdx","aBytes","nIdx","nChrIdx","dataString","dataView","sView","nPart","nLen","Base64Encode","inputArr","base64EncArr","inputUtf8Arr","stringToUtf8Arr","eqLen","sB64Enc","nMod3","nUint24","uint6ToB64","nUint6","Base64Decode","encodedString","base64DecToArr","utf8ArrToString","base64String","nBlockSize","nInLen","nOutLen","nMod4","nOutIdx","nInIdx","b64ToUint6","charNum","BrowserAuthErrorMessage","BrowserAuthError","hashValue","windowParentCheck","givenPrompt","errorDesc","errorDetail","keyId","base64Encode","PkceGenerator","codeVerifier","generateCodeVerifier","generateCodeChallengeFromVerifier","codeChallenge","verifier","challenge","urlEncodeArr","createPkceNotGeneratedError","pkceCodeVerifier","sha256Digest","pkceHashedCodeVerifier","e_1","S256_HASH_ALG","PUBLIC_EXPONENT","hasCryptoAPI","createCryptoNotAvailableError","_keygenAlgorithmOptions","modulusLength","publicExponent","BrowserCrypto","hasIECrypto","getMSCryptoDigest","getSubtleCryptoDigest","dataBuffer","extractable","usages","msCryptoGenerateKey","subtle","generateKey","msCryptoExportJwk","exportKey","keyString","getJwkString","keyBuffer","stringToArrayBuffer","msCryptoImportKey","importKey","msCryptoSign","sign","hasBrowserCrypto","algorithm","digestOperation","msGenerateKey","msExportKey","resultBuffer","resultString","msImportKey","msSign","jwk","dbName","tableName","dbOpen","DatabaseStorage","openDB","indexedDB","createObjectStore","createDatabaseUnavailableError","close","validateDbIsOpen","createDatabaseNotOpenError","dbGet","transaction","objectStore","closeConnection","dbPut","dbDelete","dbGetKeys","getAllKeys","dbContainsKey","databases","existingDatabases","find","database","deleteDbRequest","deleteDatabase","MemoryStorage","cacheKeys","clear","storeName","inMemoryCache","indexedDBCache","AsyncMemoryStorage","getItem","handleDatabaseAccessError","setItem","e_2","removeItem","e_3","getKeys","e_4","containsKey","e_5","dbDeleted","e_6","CcsCredentialType","performanceClient","browserCrypto","b64Encode","b64Decode","guidGenerator","pkceGenerator","asymmetricKeys","symmetricKeys","CryptoOps","generateGuid","generateCodes","publicKeyThumbMeasurement","startMeasurement","CryptoOptsGetPublicKeyThumbprint","generateKeyPair","EXTRACTABLE","POP_KEY_USAGES","keyPair","exportJwk","publicKey","publicKeyJwk","pubKeyThumprintObj","kty","publicJwkString","hashString","publicJwkHash","privateKey","privateKeyJwk","importJwk","unextractablePrivateKey","requestMethod","resourceRequestMethod","requestUri","resourceRequestUri","endMeasurement","success","signJwtMeasurement","CryptoOptsSignJwt","cachedKeyPair","createSigningKeyNotFoundInStorageError","publicKeyJwkString","encodedKeyIdThumbprint","urlEncode","getShrHeaderString","encodedShrHeader","cnf","encodedPayload","tokenString","tokenBuffer","signatureBuffer","encodedSignature","signedJwt","plainText","hashBuffer","hashBytes","libraryName","libraryVersion","applicationTelemetry","callbacks","eventsByCorrelationId","measurementsById","PerformanceClient","measureName","eventCorrelationId","generateId","performanceMeasurement","startPerformanceMeasuremeant","inProgressEvent","eventId","InProgress","appName","appVersion","startTimeMs","cacheEventByCorrelationId","cacheMeasurement","completedEvent","__assign","flushMeasurement","flushMeasurements","discardMeasurement","discardMeasurements","measurement","durationMs","round","Completed","existingEvents","eventsForCorrelationId","completedEvents_1","sortedCompletedEvents","eventA","eventB","topLevelEvents","topLevelEvent","eventToEmit","previous","subMeasurementName","emitEvents","events","StubPerformanceMeasurement","StubPerformanceClient","DEFAULT_CRYPTO_IMPLEMENTATION","createNewGuid","createUnexpectedError","generatePkceCodes","getPublicKeyThumbprint","removeTokenBindingKey","clearKeystore","signJwt","ServerError","CredentialEntity","generateAccountIdForCacheKey","generateCredentialIdForCacheKey","credentialType","familyId","generateTargetForCacheKey","generateCredentialCacheKey","tokenType","requestedClaimsHash","ID_TOKEN","ACCESS_TOKEN","ACCESS_TOKEN_WITH_AUTH_SCHEME","REFRESH_TOKEN","createUnexpectedCredentialTypeError","generateClaimsHashForCacheKey","generateSchemeForCacheKey","BEARER","ClientConfigurationErrorMessage","ClientConfigurationError","claimsRequestParseError","urlString","urlParseError","inputScopes","promptValue","invalidHeaderName","details","scopeArr","trimArrayEntries","__spreadArrays","filteredInput","removeEmptyStringsFromArray","validateInputScopes","ScopeSet","inputScopeString","createEmptyScopesArrayError","lowerCaseScopesSet","printScopesLowerCase","scopeSet","asArray","containsScope","defaultScopeCount","defaultScope","newScope","newScopes","appendScope","createAppendScopeSetError","createRemoveEmptyScopeFromSetError","otherScopes","createEmptyInputScopeSetError","unionScopes","containsOnlyOIDCScopes","removeOIDCScopes","unionScopeSets","sizeOtherScopes","getScopeCount","sizeThisScopes","printScopes","rawToken","AuthToken","extractTokenClaims","encodedToken","decodedToken","decodeAuthToken","base64TokenPayload","base64Decoded","cryptoImpl","CacheManager","getAccountsFilteredBy","accountValues","accountKey","accountInfo","toObject","getAccountInfo","readIdTokenFromCache","cacheRecord","createNullOrUndefinedCacheRecord","setIdTokenCredential","saveAccessToken","refreshToken","setRefreshTokenCredential","appMetadata","setAppMetadata","credential","currentTokenCache","getCredentialsFilteredBy","currentScopes","fromString","currentAccessTokens","accessTokens","removedAccessTokens_1","tokenEntity","intersectingScopeSets","removeCredential","setAccessTokenCredential","accountFilter","getAccountsFilteredByInternal","allCacheKeys","matchingAccounts","cacheKey","matchHomeAccountId","matchEnvironment","matchRealm","getCredentialsFilteredByInternal","userAssertionHash","matchingCredentials","idTokens","refreshTokens","credType","getCredentialType","getSpecificCredential","matchUserAssertionHash","matchCredentialType","matchClientId","matchFamilyId","matchTarget","matchTokenType","SSH","matchKeyId","updatedCacheKey","updateCredentialCacheKey","getAppMetadataFilteredByInternal","matchingAppMetadata","isAppMetadata","getAppMetadata","getAuthorityMetadataKeys","matchedEntity","isAuthorityMetadata","getAuthorityMetadata","aliases","removedAccounts","removeAccount","createNoAccountFoundError","removeAccountContext","ACCOUNT","generateAccountId","removedCredentials","cacheEntity","generateCredentialKey","POP","createBindingKeyNotRemovedError","CREDENTIAL","cachedAccount","readAccountFromCache","cachedIdToken","cachedAccessToken","readAccessTokenFromCache","cachedRefreshToken","readRefreshTokenFromCache","cachedAppMetadata","readAppMetadataFromCache","idTokenFilter","credentialCache","numIdTokens","createMultipleMatchingTokensInCacheError","authScheme","authenticationScheme","accessTokenFilter","sshKid","numAccessTokens","familyRT","refreshTokenFilter","appMetadataFilter","getAppMetadataFilteredBy","appMetadataEntries","numAppMetadata","createMultipleMatchingAppMetadataInCacheError","cloudMetadata","getAuthorityMetadataByAlias","entityScopeSet","requestTargetScopeSet","removeScope","containsScopeSet","getIdTokenCredential","getAccessTokenCredential","getRefreshTokenCredential","DefaultStorageClass","IdTokenEntity","idTokenEntity","TimeUtils","getTime","expiresOn","expirationSec","nowSeconds","cachedAt","AccessTokenEntity","extExpiresOn","cryptoUtils","refreshOn","requestedClaims","atEntity","currentTime","extendedExpiresOn","tokenClaims","createTokenClaimsRequiredError","RefreshTokenEntity","rtEntity","AppMetadataEntity","generateAppMetadataCacheKey","failedRequests","errors","cacheHits","ServerTelemetryEntity","validateKey","validateEntity","expiresAt","AuthorityMetadataEntity","metadata","fromNetwork","preferred_cache","preferred_network","aliasesFromNetwork","authorization_endpoint","token_endpoint","end_session_endpoint","issuer","endpointsFromNetwork","jwks_uri","canonical_authority","ThrottlingEntity","ProtocolUtils","userState","libraryState","generateLibraryState","createNoCryptoObjectError","stateObj","stateString","createInvalidStateError","splitState","libraryStateString","libraryStateObj","userRequestState","ProtocolMode","AzureCloudInstance","validateWindowStorage","windowStorage","BrowserStorage","LocalStorage","SessionStorage","createStorageNotSupportedError","_urlString","createUrlEmptyError","getHash","UrlString","canonicalizeUri","lowerCaseUrl","components","getUrlComponents","createUrlParseError","HostNameAndPort","PathSegments","Protocol","createInsecureAuthorityUriError","queryString","urlObject","pathArray","COMMON","ORGANIZATIONS","constructAuthorityUriFromObject","parseHash","regEx","urlComponents","AbsolutePath","QueryString","pathSegments","relativeUrl","baseUrl","baseComponents","hashIndex1","hashIndex2","parsedHash","deserializedHash","queryStringToObject","createHashNotDeserializedError","parameters","getDeserializedHash","error_description","BrowserProtocolUtils","parseRequestState","locationHash","hashUrlString","cacheConfig","internalStorage","browserStorage","setupBrowserStorage","temporaryCacheStorage","setupTemporaryCacheStorage","migrateCacheEntries","BrowserCacheManager","idTokenKey","clientInfoKey","CLIENT_INFO","errorKey","ERROR","errorDescKey","ERROR_DESC","migrateCacheEntry","newKey","setTemporaryCache","jsonValue","parsedJson","parsedAccount","validateAndParseJson","isAccountEntity","generateAccountKey","parsedIdToken","isIdTokenEntity","accessTokenKey","parsedAccessToken","isAccessTokenEntity","refreshTokenKey","parsedRefreshToken","isRefreshTokenEntity","appMetadataKey","parsedMetadata","isAppMetadataEntity","generateAppMetadataKey","serverTelemetryKey","isServerTelemetryEntity","serverTelemetry","isAuthorityMetadataEntity","wrapperSKU","wrapperVersion","WRAPPER_SKU","WRAPPER_VER","activeAccountIdKey","generateCacheKey","ACTIVE_ACCOUNT","activeAccountId","getAccountInfoByFilter","loginHint","sid","accountSid","createMultipleMatchingAccountsInCacheError","throttlingCacheKey","parsedThrottlingCache","isThrottlingEntity","throttlingCache","itemCookie","getItemCookie","setItemCookie","clearItemCookie","removeAllAccounts","removeAppMetadata","cookieName","cookieValue","cookieStr","getCookieExpirationTime","secureCookies","cookieList","cookiePrefix","cookieKey","cookieLifeDays","today","COOKIE_LIFE_MULTIPLIER","ADAL_ID_TOKEN","stateId","AUTHORITY","NONCE_IDTOKEN","REQUEST_STATE","cachedState","stateCacheKey","generateStateKey","getTemporaryCache","authorityCacheKey","generateAuthorityKey","authorityInstance","nonceCacheKey","generateNonceKey","ccsCredential","HOME_ACCOUNT_ID","CCS_CREDENTIAL","UPN","REQUEST_PARAMS","ORIGIN_URI","URL_HASH","CORRELATION_ID","NATIVE_REQUEST","setInteractionInProgress","stateKey","infoPii","resetRequestCache","clearMsalCookies","parsedState","extractBrowserRequestState","authCodeRequest","encodedValue","encodedTokenRequest","createNoTokenRequestCacheError","parsedRequest","createUnableToParseTokenRequestCacheError","cachedAuthority","createNoCachedAuthorityError","cachedRequest","getInteractionInProgress","INTERACTION_STATUS_KEY","createInteractionInProgressError","adalIdTokenString","msalIdTokenString","cachedIdTokenString","IdToken","currentCacheKey","cacheItem","DEFAULT_SYSTEM_OPTIONS","tokenRenewalOffsetSeconds","preventCorsPreflight","proxyUrl","DEFAULT_LOGGER_IMPLEMENTATION","DEFAULT_NETWORK_IMPLEMENTATION","sendGetRequestAsync","sendPostRequestAsync","DEFAULT_LIBRARY_INFO","cpu","os","DEFAULT_CLIENT_CREDENTIALS","clientSecret","clientAssertion","DEFAULT_AZURE_CLOUD_OPTIONS","azureCloudInstance","tenant","DEFAULT_TELEMETRY_OPTIONS","application","StubbedNetworkModule","FetchClient","GET","getFetchHeaders","onLine","createGetRequestFailedError","createNoNetworkConnectivityError","getHeaderDict","createFailedToParseNetworkResponseError","reqBody","POST","createPostRequestFailedError","optionsHeaders","headerDict","XhrClient","sendRequestAsync","xhr","setXhrHeaders","jsonResponse","networkResponse","createHttpMethodNotImplementedError","headers_1","headerArr","headerName","headerVal","BrowserUtils","replaceState","origin","urlParts","parent","opener","hashContainsKnownProperties","isInIframe","createBlockReloadInHiddenIframeError","allowRedirectInIframe","isIframedApp","createRedirectInIframeError","isInPopup","createBlockAcquireTokenInPopupsError","isBrowserEnvironment","createNonBrowserEnvironmentError","allowNativeBroker","initialized","createNativeBrokerCalledBeforeInitialize","msie11","msedge","NavigationClient","defaultNavigateWindow","noHistory","DEFAULT_IFRAME_TIMEOUT_MS","KeyLocation","eventCallbacks","listeningToStorageEvents","handleAccountCacheChange","EventHandler","message_1","cacheValue","newValue","oldValue","parsedValue","emitEvent","ACCOUNT_ADDED","ACCOUNT_REMOVED","ThrottlingUtils","thumbprint","cacheManager","generateThrottlingStorageKey","getThrottlingCache","throttleTime","THROTTLING","errorCodes","checkResponseStatus","checkResponseForRetryAfter","thumbprintValue","calculateThrottleTime","RETRY_AFTER","error_codes","setThrottlingCache","currentSeconds","homeAccountIdentifier","shrClaims","networkClient","NetworkManager","tokenEndpoint","preProcess","createNetworkError","postProcess","configuration","authOptions","userAuthOptions","userSystemOptions","userLoggerOption","storageImplementation","networkImplementation","cryptoImplementation","clientCredentials","libraryInfo","telemetry","serverTelemetryManager","persistencePlugin","serializableCache","clientCapabilities","azureCloudOptions","skipAuthorityMetadataCache","systemOptions","storageInterface","networkInterface","cryptoInterface","buildClientConfiguration","networkManager","BaseClient","ccsCred","CONTENT_TYPE","CCS_HEADER","sendPostRequest","clearTelemetryCache","updatedAuthority","discoveryComplete","createEndpointDiscoveryIncompleteError","RequestValidator","createRedirectUriEmptyError","prompt","promptValues","createInvalidPromptError","createInvalidClaimsRequestError","codeChallengeMethod","createInvalidCodeChallengeParamsError","validateCodeChallengeMethod","createInvalidCodeChallengeMethodError","eQParams","queryParams","RequestParameterBuilder","RESPONSE_TYPE","responseMode","RESPONSE_MODE","QUERY","NATIVE_BROKER","addOidcScopes","requestScopes","SCOPE","CLIENT_ID","validateRedirectUri","REDIRECT_URI","POST_LOGOUT_URI","idTokenHint","ID_TOKEN_HINT","domainHint","DOMAIN_HINT","LOGIN_HINT","SID","mergedClaims","addClientCapabilitiesToClaims","validateClaims","CLIENT_REQUEST_ID","X_CLIENT_SKU","X_CLIENT_VER","X_CLIENT_OS","X_CLIENT_CPU","appTelemetry","X_APP_NAME","X_APP_VER","validatePrompt","PROMPT","STATE","NONCE","validateCodeChallengeParams","CODE_CHALLENGE","CODE_CHALLENGE_METHOD","CODE","DEVICE_CODE","CODE_VERIFIER","CLIENT_SECRET","CLIENT_ASSERTION","clientAssertionType","CLIENT_ASSERTION_TYPE","oboAssertion","OBO_ASSERTION","tokenUse","REQUESTED_TOKEN_USE","grantType","GRANT_TYPE","eQparams","sanitizeEQParams","XMS_CC","cnfString","TOKEN_TYPE","REQ_CNF","sshJwkString","X_CLIENT_CURR_TELEM","generateCurrentRequestHeaderValue","X_CLIENT_LAST_TELEM","generateLastRequestHeaderValue","X_MS_LIB_CAPABILITY","logoutHint","LOGOUT_HINT","queryParameterArray","accountEntity","accessTokenEntity","refreshTokenEntity","appMetadataEntity","PopTokenGenerator","generateKid","reqCnf","reqCnfString","xms_ksl","SW","signPayload","shrNonce","resourceUrlString","resourceUrlComponents","at","ts","client_claims","tokenCache","hasChanged","TokenCacheContext","cacheStorage","ResponseHandler","serverResponseHash","createStateNotFoundError","createStateMismatchError","isInteractionRequiredError","client_info","serverResponse","errString","correlation_id","trace_id","serverTokenResponse","reqTimestamp","authCodePayload","handlingRefreshTokenResponse","id_token","idTokenObj","createNonceMismatchError","generateHomeAccountId","requestStateObj","key_id","generateCacheRecord","cacheContext","beforeCacheAccess","saveCacheRecord","generateAuthenticationResult","afterCacheAccess","spa_code","createIdTokenEntity","generateAccountEntity","access_token","responseScopes","expiresIn","expires_in","extExpiresIn","ext_expires_in","refreshIn","refresh_in","tokenExpirationSeconds","extendedTokenExpirationSeconds","refreshOnSeconds","createAccessTokenEntity","token_type","refresh_token","createRefreshTokenEntity","foci","createAppMetadataEntity","CacheRecord","cloud_graph_host_name","msGraphhost","msgraph_host","createGenericAccount","protocolMode","createAccount","fromTokenCache","requestState","popTokenGenerator","createKeyIdMissingError","signPopToken","canonicalAuthority","uniqueId","fromCache","fromNativeBroker","AuthorizationCodeClient","createAuthCodeUrlQueryString","appendQueryString","authorizationEndpoint","createTokenRequestCannotBeMadeError","executeTokenRequest","responseHandler","validateTokenResponse","handleServerTokenResponse","hashFragment","serverParams","validateServerAuthorizationCodeResponse","createNoAuthCodeInServerResponseError","logoutRequest","createEmptyLogoutRequestError","createLogoutUrlQueryString","endSessionEndpoint","createTokenRequestBody","requestBody","queryParameters","createTokenQueryParameters","createTokenRequestHeaders","executePostToTokenEndpoint","parameterBuilder","tokenQueryParameters","addExtraQueryParameters","createQueryString","addClientId","includeRedirectUri","addRedirectUri","addScopes","addAuthorizationCode","addLibraryInfo","addApplicationTelemetry","addThrottling","addServerTelemetry","addCodeVerifier","addClientSecret","addClientAssertion","assertion","addClientAssertionType","assertionType","addGrantType","AUTHORIZATION_CODE_GRANT","addClientInfo","generateCnf","reqCnfData","addPopToken","sshJwk","createMissingSshJwkError","addSshJwk","addCorrelationId","isEmptyObj","addClaims","addCcsOid","addCcsUpn","tokenBodyParameters","enableSpaAuthorizationCode","RETURN_SPA_CODE","extraScopesToConsent","addResponseMode","addResponseTypeCode","addCodeChallengeParams","addPrompt","addDomainHint","addSid","extractAccountSid","addLoginHint","addNonce","addState","extraQueryParameters","nativeBroker","addNativeBroker","reqCnfHash","postLogoutRedirectUri","addPostLogoutRedirectUri","addIdTokenHint","addLogoutHint","isOpenIdConfigResponse","EndpointMetadata","InstanceDiscoveryMetadata","NativeStatusCode","RegionDiscovery","environmentRegion","regionDiscoveryMetadata","autodetectedRegionName","IMDS_OPTIONS","getRegionFromIMDS","localIMDSVersionResponse","httpSuccess","region_source","IMDS","httpBadRequest","getCurrentVersion","currentIMDSVersion","FAILED_AUTO_DETECTION","currentIMDSVersionResponse","ENVIRONMENT_VARIABLE","Metadata","authorityOptions","_canonicalAuthority","validateAsUri","regionDiscovery","region_used","region_outcome","Authority","canonicalAuthorityUrlComponents","Default","_canonicalAuthorityUrlComponents","replacePath","replaceTenant","createLogoutNotSupportedError","cachedAuthorityParts","currentPart","cachedPart","OIDC","metadataEntity","hostnameAndPort","updateCanonicalAuthority","updateCloudDiscoveryMetadata","cloudDiscoverySource","updateEndpointMetadata","endpointSource","CACHE","resetExpiresAt","generateAuthorityMetadataCacheKey","setAuthorityMetadata","getEndpointMetadataFromConfig","CONFIG","isAuthoritySameType","isExpired","harcodedMetadata","getEndpointMetadataFromHardcodedValues","getEndpointMetadataFromNetwork","azureRegionConfiguration","azureRegion","updateMetadataWithRegionalInformation","NETWORK","HARDCODED_VALUES","createUnableToGetOpenidConfigError","defaultOpenIdConfigurationEndpoint","authorityMetadata","createInvalidAuthorityMetadataError","detectRegion","AUTO_DETECTION_REQUESTED_SUCCESSFUL","AUTO_DETECTION_REQUESTED_FAILED","CONFIGURED_MATCHES_DETECTED","CONFIGURED_NOT_DETECTED","CONFIGURED_NO_AUTO_DETECTION","replaceWithRegionalInformation","getCloudDiscoveryMetadataFromConfig","getCloudDiscoveryMetadataFromHarcodedValues","getCloudDiscoveryMetadataFromNetwork","createUntrustedAuthorityError","cloudDiscoveryMetadata","parsedResponse","getCloudDiscoveryMetadataFromNetworkResponse","createInvalidCloudDiscoveryMetadataError","isInKnownAuthorities","createCloudDiscoveryMetadataFromHost","instanceDiscoveryEndpoint","isCloudInstanceDiscoveryResponse","knownAuthorities","getDomainFromUrl","authorityString","authorityAzureCloudInstance","region","authorityUrlInstance","authorityUrlParts","hostNameAndPort","isPublicCloudAuthority","buildRegionalAuthorityString","AuthorityFactory","authorityUri","acquireTokenAuthority","resolveEndpointsAsync","authorityUrl","telemetryRequest","cacheOutcome","NO_CACHE_HIT","apiId","wrapperVer","telemetryCacheKey","ServerTelemetryManager","platformFields","requestWithRegionDiscoveryFields","getRegionDiscoveryFields","lastRequests","getLastRequests","maxErrors","maxErrorsToSend","errorCount","setServerTelemetry","getServerTelemetry","numErrorsFlushed","serverTelemEntity","serverTelemetryEntity","dataSize","regionDiscoveryFields","regionUsed","regionSource","regionOutcome","storageImpl","eventHandler","navigationClient","nativeMessageHandler","system","BaseInteractionClient","validatedRequest","createMissingSshKidError","requestRedirectUri","getCurrentUri","getAbsoluteUrl","forceRefresh","telemetryPayload","getWrapperMetadata","requestAuthority","createDiscoveredInstance","StandardInteractionClient","generatedPkceParams","validLogoutRequest","getLogoutHintFromIdTokenClaims","login_hint","requestAzureCloudOptions","getClientConfiguration","clientConfig","getDiscoveredAuthority","discoveredAuthority","requestCorrelationId","createHashDoesNotContainStateError","platformStateObj","createUnableToParseStateError","createStateInteractionTypeMismatchError","getAuthorityMeasurement","StandardInteractionClientGetDiscoveredAuthority","userAuthority","builtAuthority","generateAuthority","subErrorCode","getRedirectUri","browserState","setRequestState","initializeBaseRequest","FRAGMENT","verbosePii","legacyLoginHint","getLegacyLoginHint","NativeAuthErrorMessage","ext","NativeAuthError","PERSISTENT_ERROR","DISABLED","ACCOUNT_UNAVAILABLE","createNativeAccountUnavailableError","USER_INTERACTION_REQUIRED","USER_CANCEL","createUserCancelledError","NO_NETWORK","provider","NativeInteractionClient","nativeATMeasurement","NativeInteractionClientAcquireToken","initializeNativeRequest","nativeRequest","messageBody","GetToken","sendMessage","validatedResponse","validateNativeResponse","handleNativeResponse","isNativeBroker","isFatal","navigationOptions","redirectNavigationTimeout","navigateToLoginRequestUrl","navigateExternal","isInteractionInProgress","getCachedNativeRequest","createUserSwitchError","authorityPreferredCache","accountProperties","properties","responseTokenType","shr","responseAccessToken","shrParameters","mats","getMATSFromResponse","isResponseFromCache","MATS","is_cached","appendScopes","getPrompt","acquireTokenSilent_silentFlow","createNativePromptParameterNotSupportedError","windowTitleSubstring","extraParameters","extendedExpiryToken","handshakeTimeoutMs","extensionId","resolvers","handshakeResolvers","responseId","messageChannel","windowListener","onWindowMessage","NativeMessageHandler","req","channel","tracePii","preferredProvider","sendHandshakeRequest","backupProvider","HandshakeRequest","onChannelMessage","timeoutId","createNativeHandshakeTimeoutError","handshakeResolver","createNativeExtensionNotInstalledError","resolver","Response","createError","HandshakeResponse","errorPii","nativeExtensionProvider","authCodeModule","authModule","InteractionHandler","networkModule","createEmptyHashError","authCodeResponse","handleFragmentResponse","handleCodeResponseFromServer","validateNonce","nonceKey","cachedNonce","cloud_instance_host_name","updateTokenEndpointAuthority","cachedCcsCred","checkCcsCredentials","tokenResponse","cleanRequestByState","cloudInstanceHostname","cloudInstanceAuthorityUri","cloudInstanceAuthority","updateAuthority","unloadWindow","PopupClient","popupName","generatePopupName","popupWindowAttributes","asyncPopups","acquireTokenPopupAsync","popup","openSizedPopup","initializeLogoutRequest","generateLogoutPopupName","mainWindowRedirectUri","logoutPopupAsync","initializeServerTelemetryManager","initializeAuthorizationRequest","validRequest","updateCacheEntries","initializeAuthorizationCodeRequest","createAuthCodeClient","authClient","isNativeAvailable","fetchNativeAccountIdMeasurement","FetchAccountIdWithNativeBroker","getAuthCodeUrl","navigateUrl","interactionHandler","popupParameters","popupWindow","initiateAuthRequest","POPUP_OPENED","monitorPopupForHash","state_1","validateAndExtractStateFromHash","removeThrottle","createNativeConnectionNotEstablishedError","nativeInteractionClient","handleCodeResponseFromHash","setCorrelationId","cacheFailedRequest","clearCacheOnLogout","logoutUri","getLogoutUri","LOGOUT_SUCCESS","openPopup","waitForLogoutPopup","absoluteUrl","navigateInternal","LOGOUT_FAILURE","requestUrl","createEmptyNavigationUriError","maxTicks","windowHashTimeout","ticks","intervalId","setInterval","closed","cleanPopup","clearInterval","createHashDoesNotContainKnownPropertiesError","createMonitorPopupTimeoutError","urlNavigate","popupParams","createEmptyWindowCreatedError","currentWindow","createPopupWindowError","winLeft","screenLeft","winTop","screenTop","winWidth","winHeight","innerHeight","popupSize","popupPosition","max","cleanRequestByInteractionType","RedirectHandler","redirectStartPage","cacheCodeRequest","redirectTimeout","onRedirectNavigate","RedirectClient","handleBackButton","persisted","getRedirectStartPage","responseHash","getRedirectResponseHash","loginRequestUrl","loginRequestUrlNormalized","removeHashFromUrl","currentUrlNormalized","handleHash","handleHashResult","replaceHash","processHashOnRedirect","homepage","getHomepage","clearHash","cachedHash","getCachedRequest","currentAuthority","getCachedAuthority","requestStartPage","navigateFrameWait","SilentHandler","loadFrame","loadFrameSync","iframe","timeoutMark","removeHiddenIframe","createMonitorIframeTimeoutError","contentHash","frameHandle","createHiddenIframe","authFrame","border","SilentIframeClient","acquireTokenMeasurement","SilentIframeClientAcquireToken","createSilentPromptValueError","silentRequest","silentTokenHelper","createSilentLogoutUnsupportedError","silentHandler","msalFrame","monitorIframeForHash","iframeHashTimeout","RefreshTokenClient","createEmptyTokenRequestError","createNoAccountInSilentRequestError","isAppMetadataFOCI","acquireTokenWithCachedRefreshToken","noFamilyRTInCache","clientMismatchErrorWithFamilyRT","createNoTokensFoundError","refreshTokenRequest","REFRESH_TOKEN_GRANT","addRefreshToken","SilentRefreshClient","SilentRefreshClientAcquireToken","createRefreshTokenClient","refreshTokenClient","acquireTokenByRefreshToken","storage","TokenCache","createUnableToLoadTokenError","loadIdToken","loadAccessToken","idAuthToken","SilentFlowClient","acquireCachedToken","setCacheOutcome","FORCE_REFRESH","createRefreshRequiredError","readCacheRecord","NO_CACHED_ACCESS_TOKEN","wasClockTurnedBack","isTokenExpired","CACHED_ACCESS_TOKEN_EXPIRED","REFRESH_CACHED_ACCESS_TOKEN","incrementCacheHits","generateResultFromCacheRecord","SilentCacheClient","SilentCacheClientAcquireToken","createSilentFlowClient","silentAuthClient","cachedToken","error_1","SilentAuthCodeClient","createAuthCodeRequiredError","HybridSpaAuthorizationCodeClient","cloudInstanceHostName","startMark","endMark","BrowserPerformanceMeasurement","measure","clearMarks","clearMeasures","getEntriesByName","supportsBrowserPerformance","entriesForMeasurement","BrowserPerformanceClient","visibilityState","startPageVisibility","getPageVisibility","endPageVisibility","userInputAuth","userInputCache","userInputSystem","userInputTelemetry","DEFAULT_AUTH_OPTIONS","AAD","DEFAULT_CACHE_OPTIONS","DEFAULT_LOGGER_OPTIONS","DEFAULT_BROWSER_SYSTEM_OPTIONS","getBrowserNetworkClient","loadFrameTimeout","detectIEOrEdge","nativeBrokerHandshakeTimeout","buildConfiguration","redirectResponse","hybridAuthCodeResponses","cacheOptions","DEFAULT_BROWSER_CACHE_MANAGER","ClientApplication","INITIALIZE_START","createProvider","INITIALIZE_END","blockNativeBrokerCalledBeforeInitialized","loggedInAccounts","redirectResponseKey","nativeClient","redirectClient","createRedirectClient","getRequestCorrelationId","preflightBrowserEnvironmentCheck","isLoggedIn","canUseNative","getNativeAccountId","atPopupMeasurement","AcquireTokenPopup","acquireTokenNative","createPopupClient","ssoSilentMeasurement","createSilentIframeClient","silentIframeClient","ACQUIRE_TOKEN_BY_CODE_START","atbcMeasurement","AcquireTokenByCode","hybridAuthCode_1","acquireTokenByCodeAsync","ACQUIRE_TOKEN_BY_CODE_SUCCESS","ACQUIRE_TOKEN_BY_CODE_FAILURE","createUnableToAcquireTokenFromNativePlatformError","createAuthCodeOrNativeAccountIdRequiredError","createSilentAuthCodeClient","blockReloadInHiddenIframes","atbrtMeasurement","AcquireTokenByRefreshToken","ACQUIRE_TOKEN_NETWORK_START","createSilentRefreshClient","isServerError","isInvalidGrantError","userName","blockNonBrowserEnvironment","blockRedirectInIframe","blockAcquireTokenInPopups","createInMemoryRedirectUnavailableError","preflightInteractiveRequest","getAccountInfoByHints","setWrapperMetadata","activeSilentTokenRequests","PublicClientApplication","atsMeasurement","AcquireTokenSilent","createNoAccountError","silentRequestKey","cachedResponse","acquireTokenSilentAsync","astsAsyncMeasurement","AcquireTokenSilentAsync","silentCacheClient","createSilentCacheClient","initializeSilentRequest","silentRequest_1","tokenRenewalError","msalInstance","getElementById","reportWebVitals"],"sourceRoot":""}